diff --git a/.idea/workspace.xml b/.idea/workspace.xml
index 3feb9d61..1aa67bf0 100644
--- a/.idea/workspace.xml
+++ b/.idea/workspace.xml
@@ -3,6 +3,699 @@
   <component name="ChangeListManager">
     <list default="true" id="544f0985-e9b0-4606-bfd0-98a4196a9eae" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/composer.json" beforeDir="false" afterPath="$PROJECT_DIR$/composer.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/composer.json" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/composer.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/composer.libraries.json" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/composer.libraries.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/config/install/webform.settings.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/config/install/webform.settings.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/config/install/webform.webform.contact.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/config/install/webform.webform.contact.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/config/schema/webform.entity.webform.schema.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/config/schema/webform.entity.webform.schema.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/config/schema/webform.plugin.handler.schema.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/config/schema/webform.plugin.handler.schema.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.horizontal_rule.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.horizontal_rule.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.multiple.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.multiple.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.options.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.options.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.states.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/css/webform.element.states.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/css/webform.theme.seven.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/css/webform.theme.seven.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/docs/DEVELOPMENT-CHEATSHEET.md" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/docs/DEVELOPMENT-CHEATSHEET.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/docs/UPDATE-LIBRARIES.md" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/docs/UPDATE-LIBRARIES.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/drush.services.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/drush.services.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/drush/webform.drush.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/drush/webform.drush.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/images/contribute/contribute.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/images/contribute/icons/cccccc/account.svg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/images/contribute/icons/cccccc/contribution.svg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/images/contribute/icons/cccccc/membership.svg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/images/contribute/icons/drupal.svg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.install.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.install.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.install.requirements.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.install.requirements.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.install.update.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.install.update.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.libraries.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.libraries.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.theme.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.theme.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.theme.template.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.theme.template.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.translation.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/includes/webform.translation.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.ajax.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.ajax.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.checkboxes.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.checkboxes.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.choices.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.choices.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.codemirror.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.codemirror.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.date.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.date.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.other.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.other.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.radios.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.radios.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.range.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.range.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.states.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.states.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.telephone.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.element.telephone.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.form.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.form.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/js/webform.form.submit_once.js" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/js/webform.form.submit_once.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessSubmissionViewsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTestBase.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTokensTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/webform_access.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/webform_access.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/webform_access.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/webform_access.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/webform_access.tokens.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_access/webform_access.tokens.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Controller/WebformAttachmentController.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Controller/WebformAttachmentController.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Element/WebformAttachmentUrl.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Element/WebformAttachmentUrl.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentUrl.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentUrl.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/src/Tests/WebformAttachmentTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_access.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_access.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_email.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_email.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_sanitize.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_sanitize.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_states.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_states.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_token.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_token.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_twig.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_twig.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_url.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_url.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/webform_attachment.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_attachment/webform_attachment.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/css/webform_bootstrap.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/css/webform_bootstrap.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/tests/modules/webform_bootstrap_test_module/webform_bootstrap_test_module.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/tests/modules/webform_bootstrap_test_module/webform_bootstrap_test_module.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/tests/themes/webform_bootstrap_test_theme/webform_bootstrap_test_theme.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/tests/themes/webform_bootstrap_test_theme/webform_bootstrap_test_theme.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application_evaluation.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application_evaluation.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/config/install/webform.webform.demo_event_registration.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/config/install/webform.webform.demo_event_registration.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/config/install/webform.webform.demo_region_contact.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/config/install/webform.webform.demo_region_contact.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.install" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.install" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_devel/webform_devel.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_devel/webform_devel.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_editorial/webform_editorial.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_editorial/webform_editorial.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print_custom.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print_custom.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/webform_entity_print.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print/webform_entity_print.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/src/Element/WebformEntityPrintAttachment.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/src/Element/WebformEntityPrintAttachment.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/src/Plugin/WebformElement/WebformEntityPrintAttachment.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/src/Plugin/WebformElement/WebformEntityPrintAttachment.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/config/install/webform.webform.test_entity_print_attachment.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/config/install/webform.webform.test_entity_print_attachment.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/webform_entity_print_attachment_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/webform_entity_print_attachment_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/webform_entity_print_attachment.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_entity_print_attachment/webform_entity_print_attachment.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/config/install/webform.webform.webform_example_composite.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/config/install/webform.webform.webform_example_composite.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/src/Element/WebformExampleComposite.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/src/Element/WebformExampleComposite.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/src/Tests/WebformExampleCompositeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/webform_example_composite.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_composite/webform_example_composite.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_element/config/install/webform.webform.webform_example_element.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_element/config/install/webform.webform.webform_example_element.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_element/src/Tests/WebformExampleElementTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_element/webform_example_element.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_element/webform_example_element.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_handler/config/install/webform.webform.webform_example_handler.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_handler/config/install/webform.webform.webform_example_handler.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_handler/templates/webform-handler-example-summary.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_handler/templates/webform-handler-example-summary.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_handler/webform_example_handler.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_handler/webform_example_handler.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_remote_post/config/install/webform.webform.example_remote_post.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_remote_post/config/install/webform.webform.example_remote_post.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_remote_post/webform_example_remote_post.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_example_remote_post/webform_example_remote_post.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements_ajax.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements_ajax.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_element_states.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_element_states.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_flexbox_layout.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_flexbox_layout.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_input_masks.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_input_masks.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_style_guide.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_style_guide.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_wizard.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_wizard.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/webform_examples.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples/webform_examples.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_advanced.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_advanced.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_basic.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_basic.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_containers.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_containers.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_labels.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_labels.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_wizard.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_wizard.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/webform_examples_accessibility.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_examples_accessibility/webform_examples_accessibility.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/Controller/WebformImageSelectImagesController.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/Controller/WebformImageSelectImagesController.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementImagesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectImagesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesDeleteForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesDeleteForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_image_select.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_image_select.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_images.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_images.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/webform_image_select.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/webform_image_select.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/webform_image_select.links.task.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/webform_image_select.links.task.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/webform_image_select.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_image_select/webform_image_select.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Controller/WebformNodeReferencesListController.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Controller/WebformNodeReferencesListController.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessPermissionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessRulesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeEntityReferenceTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeReferencesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeResultsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTestBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTestBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTranslationTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_a.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_a.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_b.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_b.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/config/install/webform.webform.webform_node_test_translation.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/config/install/webform.webform.webform_node_test_translation.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/src/Functional/WebformNodeBrowserTestBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/src/Functional/WebformNodeBrowserTestBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/webform_node.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/webform_node.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/webform_node.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/webform_node.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/webform_node.routing.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_node/webform_node.routing.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/config/schema/webform_scheduled_email.plugin.handler.schema.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/config/schema/webform_scheduled_email.plugin.handler.schema.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTranslationTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/config/install/webform.webform.test_handler_scheduled_email.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/config/install/webform.webform.test_handler_scheduled_email.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/config/install/webform.webform.test_handler_scheduled_translate.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/config/install/webform.webform.test_handler_scheduled_translate.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/webform_scheduled_email_test_translation.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/webform_scheduled_email_test_translation.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/webform_scheduled_email.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_scheduled_email/webform_scheduled_email.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_shortcuts/webform_shortcuts.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_shortcuts/webform_shortcuts.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/config/install/webform.webform.test_submission_export_import.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/config/install/webform.webform.test_submission_export_import.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogNodeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTrait.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_log/webform_submission_log.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_submission_log/webform_submission_log.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_contact.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_contact.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_employee_evaluation.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_employee_evaluation.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_feedback.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_feedback.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_issue.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_issue.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_seeker_profile.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_seeker_profile.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_medical_appointment.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_medical_appointment.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_registration.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_registration.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_session_evaluation.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_session_evaluation.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_subscribe.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_subscribe.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_user_profile.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_user_profile.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/src/Tests/WebformTemplatesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/webform_templates.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_templates/webform_templates.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/css/webform_ui.module.css" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/css/webform_ui.module.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/src/Form/WebformUiElementFormBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/src/Form/WebformUiElementFormBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementDefaultValueTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementPropertiesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/webform_ui.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/webform_ui.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/webform_ui.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/modules/webform_ui/webform_ui.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/reports/accessiblity/text/example_accessibility_advanced.txt" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/reports/accessiblity/text/example_accessibility_advanced.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Breadcrumb/WebformBreadcrumbBuilder.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Breadcrumb/WebformBreadcrumbBuilder.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Commands/WebformCliService.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Commands/WebformCliService.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Controller/WebformAddonsController.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Controller/WebformAddonsController.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/Webform.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/Webform.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformCompositeFormElementTrait.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformCompositeFormElementTrait.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformComputedBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformComputedBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformEmailConfirm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformEmailConfirm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformEmailMultiple.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformEmailMultiple.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformLikert.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformLikert.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformMultiple.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformMultiple.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOptions.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOptions.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOtherBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOtherBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Entity/Webform.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Entity/Webform.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Entity/WebformSubmission.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Entity/WebformSubmission.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsAccessForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsAccessForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsConfirmationForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsConfirmationForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsFormForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsFormForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsGeneralForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsGeneralForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsSubmissionsForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsSubmissionsForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Form/AdminConfig/WebformAdminConfigHandlersForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Form/AdminConfig/WebformAdminConfigHandlersForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformAjaxFormTrait.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformAjaxFormTrait.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformResultsCustomForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformResultsCustomForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformSubmissionDeleteMultiple.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformSubmissionDeleteMultiple.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformSubmissionsPurgeForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Form/WebformSubmissionsPurgeForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/Block/WebformSubmissionLimitBlock.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/Block/WebformSubmissionLimitBlock.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/Field/FieldWidget/WebformEntityReferenceWidgetTrait.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/Field/FieldWidget/WebformEntityReferenceWidgetTrait.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Captcha.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Captcha.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Checkboxes.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Checkboxes.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/EntityAutocomplete.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/EntityAutocomplete.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Hidden.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Hidden.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/OptionsBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/OptionsBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Radios.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Radios.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Select.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Select.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Telephone.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/Telephone.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/TextBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/TextBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/TextFormat.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/TextFormat.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEmailConfirm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEmailConfirm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityCheckboxes.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityCheckboxes.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityRadios.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityRadios.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityReferenceTrait.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityReferenceTrait.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntitySelect.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformEntitySelect.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformImageFile.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformImageFile.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformManagedFileBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformManagedFileBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformSame.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElement/WebformSame.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementManager.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementManager.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementManagerInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformElementManagerInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandler/ActionWebformHandler.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandler/ActionWebformHandler.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandler/EmailWebformHandler.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandler/EmailWebformHandler.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandler/RemotePostWebformHandler.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandler/RemotePostWebformHandler.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandlerBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandlerBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandlerInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Plugin/WebformHandlerInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Access/WebformAccessEntityJsonApiTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Access/WebformAccessEntityPermissionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRestTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRulesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Access/WebformAccessSubmissionPermissionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Block/WebformBlockContextTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Block/WebformBlockTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomFileTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Composite/WebformCompositeFormatTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginFileTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Composite/WebformCompositeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementAccessTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementActionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementAddressTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementAllowsTagsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementAttributesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementAutocompleteTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCaptchaTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxValueTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCodeMirrorTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCompositeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementComputedTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementComputedTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCounterTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementCustomPropertiesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementDateListTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementDateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementDateTimeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementDetailsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementEmailConfirmTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementEmailMultipleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementEntityReferenceTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementFieldsetTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementFormatCustomTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementFormatTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementHelpTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementHorizontalRuleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementHtmlEditorTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementIcheckTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementIgnoredPropertiesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementImageResolutionTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementInputMaskTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementLikertTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementLocationPlacesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileImageTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileLimitTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePreviewTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePrivateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePublicTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTestBase.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementMappingTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementMarkupTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementMediaFileTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementMessageTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementMoreTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementMultipleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementOptionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementOtherTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementPatternTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementPluginTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementPrepopulateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementPrivateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementRadiosTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementRangeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementRatingTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementReadonlyTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSameTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSectionTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSelectTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSignatureTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementStatesSelectorsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementStatesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsReplaceTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementSubmittedValueTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTableTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTelephoneTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTermReferenceTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTermsOfServiceTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTextFormatTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementTimeTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementToggleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementValidateMinlengthTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementValidateMultipleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Element/WebformElementValidateUniqueTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Exporter/WebformExporterExcludedTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Exporter/WebformExporterOptionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Form/WebformFormPropertiesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Form/WebformFormValidateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerActionTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerConditionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailAdvancedTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailBasicTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailMappingTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRenderingTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRolesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailStatesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailTwigTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerExcludedTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerInvokeAlterHookTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerPluginTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerRemotePostTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerSettingsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Handler/WebformHandlerTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsAccessDeniedTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsAdminTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsAjaxTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsArchivedTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsAssetsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsAutofillTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsBehaviorsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfidentialTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfirmationTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsDraftTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsFormTitleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitUniqueTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsPathTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsPrepopulateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviewTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviousTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsRemoteAddrTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsScheduleTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsSerialTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Settings/WebformSettingsStatusTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/States/WebformStatesHiddenTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/States/WebformStatesPreviewTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/States/WebformStatesServerTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/States/WebformStatesWizardTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Token/WebformTokenSubmissionValueTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Token/WebformTokenSuffixesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Token/WebformTokenValidateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Views/WebformViewsBulkFormTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformAlterHooksTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformEditorTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformEmailProviderTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformEntityReferenceItemNormalizerTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformEntityStorageTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformEntityTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformEntityTranslationTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformHelpTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformLibrariesTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformOptionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformRenderingTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformResultsDisabledTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformResultsExportDownloadTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformResultsExportOptionsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionApiTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionGenerateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionListBuilderTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionStorageTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionTokenUpdateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionViewTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformSubmissionViewsTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformTestBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformTestBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformThirdPartySettingsTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/WebformThirdPartySettingsTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardAccessTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardAdvancedTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardBasicTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardConditionalTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardCustomTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardLinksTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardTestBase.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Tests/Wizard/WebformWizardValidateTest.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Twig/WebformTwigExtension.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Twig/WebformTwigExtension.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Utility/WebformElementHelper.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Utility/WebformElementHelper.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/Utility/WebformOptionsHelper.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/Utility/WebformOptionsHelper.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformAddonsManager.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformAddonsManager.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformEntityAddForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformEntityAddForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformEntityElementsForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformEntityElementsForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformEntityListBuilder.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformEntityListBuilder.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformHelpManager.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformHelpManager.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformLibrariesManager.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformLibrariesManager.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformOptionsForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformOptionsForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformOptionsListBuilder.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformOptionsListBuilder.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformOptionsStorageInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformOptionsStorageInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionAccessControlHandler.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionAccessControlHandler.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionConditionsValidator.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionConditionsValidator.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionConditionsValidatorInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionConditionsValidatorInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionForm.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionForm.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionListBuilder.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionListBuilder.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionStorage.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionStorage.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionStorageInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionStorageInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionViewBuilder.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformSubmissionViewBuilder.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformThemeManager.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformThemeManager.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/src/WebformThemeManagerInterface.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/src/WebformThemeManagerInterface.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/templates/webform-handler-action-summary.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/templates/webform-handler-action-summary.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/templates/webform-section.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/templates/webform-section.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/templates/webform-submission-information.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/templates/webform-submission-information.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_inline.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_inline.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_message.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_message.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_modal.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_modal.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_page.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_page.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url_msg.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url_msg.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom_file.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom_file.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_inline.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_inline.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_message.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_message.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_modal.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_modal.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_none.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_none.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page_custom.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page_custom.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url_message.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url_message.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_access.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_access.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions_buttons.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions_buttons.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_address.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_address.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_allowed_tags.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_allowed_tags.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_attributes.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_attributes.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_autocomplete.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_autocomplete.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_buttons.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_buttons.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_captcha.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_captcha.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkbox_value.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkbox_value.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkboxes.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkboxes.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_codemirror.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_codemirror.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite_wrapper.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite_wrapper.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_ajax.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_ajax.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_token.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_token.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_twig.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_twig.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_container.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_container.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_counter.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_counter.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_date.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_date.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datelist.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datelist.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datetime.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datetime.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_description_tooltip.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_description_tooltip.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_details.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_details.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_disabled.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_disabled.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_confirm.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_confirm.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_entity_reference.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_entity_reference.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_fieldset.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_fieldset.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox_flex.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox_flex.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_custom.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_custom.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_token.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_token.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help_display.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help_display.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_horizontal_rule.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_horizontal_rule.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_editor.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_editor.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_escape.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_escape.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_markup.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_markup.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck_styles.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck_styles.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_ignored_properties.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_ignored_properties.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_file.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_file.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_resolution.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_resolution.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_input_mask.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_input_mask.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_invalid.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_invalid.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_likert.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_likert.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_geocomplete.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_geocomplete.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_places.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_places.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_dis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_dis.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_help.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_help.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_limit.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_limit.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_name.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_name.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_prev.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_prev.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_mapping.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_mapping.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_markup.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_markup.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_media_file.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_media_file.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_message.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_message.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_more.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_more.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_date.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_date.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_property.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_property.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_text.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_text.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_options.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_options.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_other.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_other.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_pattern.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_pattern.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_prepopulate.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_prepopulate.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_private.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_private.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_radios.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_radios.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_range.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_range.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_rating.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_rating.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_readonly.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_readonly.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_same.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_same.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_section.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_section.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_select.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_select.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_signature.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_signature.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_states.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_states.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views_r.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views_r.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submitted_value.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submitted_value.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_table.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_table.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_telephone.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_telephone.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_term_reference.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_term_reference.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_terms_of_service.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_terms_of_service.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_text_format.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_text_format.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_time.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_time.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_title_display.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_title_display.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_toggle.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_toggle.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_users_roles.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_users_roles.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_minlength.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_minlength.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_required.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_required.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_unique.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_unique.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements_composite.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements_composite.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_entity_reference.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_entity_reference.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_options.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_options.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_access_denied.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_access_denied.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_api.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_api.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_archived.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_archived.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_assets.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_assets.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofill.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofill.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofocus.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofocus.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_closed.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_closed.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_confidential.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_confidential.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_details_toggle.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_details_toggle.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_autocomplete.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_autocomplete.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_back.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_back.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_inline_errors.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_inline_errors.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_anonymous.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_anonymous.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_authenticated.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_authenticated.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_inline_errors.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_inline_errors.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_total_unique.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_total_unique.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_user_unique.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_user_unique.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_wait.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_wait.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_100.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_100.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_200.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_200.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_300.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_300.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_novalidate.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_novalidate.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_opening.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_opening.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_prepopulate.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_prepopulate.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_preview.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_preview.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_properties.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_properties.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_remote_addr.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_remote_addr.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_required.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_required.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_reset.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_reset.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_results_disabled.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_results_disabled.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_back.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_back.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_once.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_once.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_text.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_text.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_template.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_template.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved_wizard.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved_wizard.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_validate.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_validate.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_access.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_access.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_advanced.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_advanced.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_basic.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_basic.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_conditional.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_conditional.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_custom.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_custom.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_links.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_links.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_100.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_100.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_200.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_200.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_300.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_300.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate_comp.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate_comp.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_action.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_action.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_advanced.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_advanced.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_mapping.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_mapping.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_roles.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_roles.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_states.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_states.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_twig.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_twig.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_settings.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_settings.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_libraries_optional.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_libraries_optional.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_rendering.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_rendering.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_autocomplete.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_autocomplete.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_crosspage.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_crosspage.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_clear.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_clear.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_comp.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_comp.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_containers.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_containers.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_custom.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_custom.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_hidden.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_hidden.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_multiple.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_multiple.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_nested.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_nested.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_preview.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_preview.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_required.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_required.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_save.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_save.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_wizard.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_wizard.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_triggers.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_triggers.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_label.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_label.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_log.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_log.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_views.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_views.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_submission_value.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_submission_value.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_update.yml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_element_title_display.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_element_title_display.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_form_long.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_form_long.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/webform_test.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test/webform_test.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_ajax/webform_test_ajax.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_ajax/webform_test_ajax.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_alter_hooks/webform_test_alter_hooks.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_alter_hooks/webform_test_alter_hooks.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_block_context/webform_test_block_context.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_block_context/webform_test_block_context.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_block_custom/webform_test_block_custom.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_block_custom/webform_test_block_custom.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_block_submission_limit/webform_test_block_submission_limit.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_block_submission_limit/webform_test_block_submission_limit.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_config_performance/webform_test_config_performance.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_config_performance/webform_test_config_performance.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_custom_properties/webform_test_custom_properties.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_custom_properties/webform_test_custom_properties.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_comp_file_plugin.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_comp_file_plugin.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_composite_plugin.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_composite_plugin.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_plugin.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_plugin.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/webform_test_element.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_element/webform_test_element.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_entity_reference/config/install/webform.webform.test_element_entity_reference_vs.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_entity_reference/config/install/webform.webform.test_element_entity_reference_vs.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_entity_reference/webform_test_entity_reference_views.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_entity_reference/webform_test_entity_reference_views.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_exporter/webform_test_exporter.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_exporter/webform_test_exporter.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_conditions.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_conditions.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_test.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_test.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/src/Plugin/WebformHandler/TestWebformHandler.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/src/Plugin/WebformHandler/TestWebformHandler.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/webform_test_handler.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler/webform_test_handler.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_invoke_alter/webform_test_handler_invoke_alter.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_invoke_alter/webform_test_handler_invoke_alter.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_get.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_get.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post_file.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post_file.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_put.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_put.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/webform_test_handler_remote_post.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/webform_test_handler_remote_post.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_markup/webform_test_markup.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_markup/webform_test_markup.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_message_custom/webform_test_message_custom.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_message_custom/webform_test_message_custom.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_options/config/install/webform.webform.test_options.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_options/config/install/webform.webform.test_options.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_options/webform_test_options.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_options/webform_test_options.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_paragraphs/webform_test_paragraphs.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_paragraphs/webform_test_paragraphs.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_rest/webform_test_rest.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_rest/webform_test_rest.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_submissions/config/install/webform.webform.test_submissions.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_submissions/config/install/webform.webform.test_submissions.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_submissions/webform_test_submissions.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_submissions/webform_test_submissions.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_third_party_settings/webform_test_third_party_settings.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_third_party_settings/webform_test_third_party_settings.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_translation/config/install/webform.webform.test_translation.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_translation/config/install/webform.webform.test_translation.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_translation/webform_test_translation.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_translation/webform_test_translation.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_translation_lingotek/webform_test_translation_lingotek.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_translation_lingotek/webform_test_translation_lingotek.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_validate/webform_test_validate.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_validate/webform_test_validate.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_views/webform_test_views.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_views/webform_test_views.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_wizard_custom/webform_test_wizard_custom.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/modules/webform_test_wizard_custom/webform_test_wizard_custom.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Functional/WebformAssertLegacyTrait.php" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Functional/WebformBrowserTestBase.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Functional/WebformBrowserTestBase.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Functional/WebformSubmissionViewsAccessTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Functional/WebformSubmissionViewsAccessTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/FunctionalJavascript/WebformSubmissionToggleFlagsTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/src/FunctionalJavascript/WebformSubmissionToggleFlagsTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Kernel/Entity/WebformEntityTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Kernel/Entity/WebformEntityTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Kernel/WebformSubmissionStorageTest.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/src/Kernel/WebformSubmissionStorageTest.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/tests/themes/webform_test_bartik/webform_test_bartik.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/tests/themes/webform_test_bartik/webform_test_bartik.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.api.php" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.api.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.info.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.info.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.libraries.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.libraries.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.links.task.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.links.task.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.module" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.module" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.routing.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.routing.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.services.yml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.services.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/modules/contrib/webform/webform.tokens.inc" beforeDir="false" afterPath="$PROJECT_DIR$/modules/contrib/webform/webform.tokens.inc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/drupal/coder" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/drupal/coder" afterDir="false" />
     </list>
     <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
     <option name="SHOW_DIALOG" value="false" />
@@ -18,12 +711,37 @@
       <file pinned="false" current-in-tab="true">
         <entry file="file://$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOptions.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="450">
+            <state relative-caret-position="314">
               <caret line="37" column="38" selection-start-line="37" selection-start-column="38" selection-end-line="37" selection-end-column="38" />
             </state>
           </provider>
         </entry>
       </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/composer.json">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="283">
+              <caret line="46" column="35" selection-start-line="46" selection-start-column="35" selection-end-line="46" selection-end-column="35" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/increase_webform_element_lenght.patch">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="225">
+              <caret line="15" selection-start-line="15" selection-end-line="15" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/increase_webform_element_length.patch">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="-876" />
+          </provider>
+        </entry>
+      </file>
     </leaf>
   </component>
   <component name="FindInProjectRecents">
@@ -38,6 +756,7 @@
   <component name="IdeDocumentHistory">
     <option name="CHANGED_PATHS">
       <list>
+        <option value="$PROJECT_DIR$/increase_webform_element_lenght.patch" />
         <option value="$PROJECT_DIR$/composer.json" />
         <option value="$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOptions.php" />
       </list>
@@ -85,10 +804,7 @@
             </path>
             <path>
               <item name="testing-patch" type="b2602c69:ProjectViewProjectNode" />
-              <item name="testing-patch" type="462c0819:PsiDirectoryNode" />
-              <item name="modules" type="462c0819:PsiDirectoryNode" />
-              <item name="contrib" type="462c0819:PsiDirectoryNode" />
-              <item name="webform" type="462c0819:PsiDirectoryNode" />
+              <item name="External Libraries" type="bcb0276e:PhpExternalLibrariesNodePatcher$PatchedExternalLibrariesNode" />
             </path>
           </expand>
           <select />
@@ -129,18 +845,18 @@
       <updated>1559687396398</updated>
       <workItem from="1559687397544" duration="555000" />
       <workItem from="1570205714321" duration="1607000" />
-      <workItem from="1578291146643" duration="91000" />
+      <workItem from="1578291146643" duration="215000" />
     </task>
     <servers />
   </component>
   <component name="TimeTrackingManager">
-    <option name="totallyTimeSpent" value="2253000" />
+    <option name="totallyTimeSpent" value="4208000" />
   </component>
   <component name="ToolWindowManager">
     <frame x="0" y="23" width="1680" height="955" extended-state="0" />
     <editor active="true" />
     <layout>
-      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.25579977" />
+      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.25579977" />
       <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
       <window_info id="Favorites" order="2" side_tool="true" />
       <window_info anchor="bottom" id="Message" order="0" />
@@ -153,7 +869,7 @@
       <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
       <window_info anchor="bottom" id="Database Changes" order="8" />
       <window_info anchor="bottom" id="Version Control" order="9" />
-      <window_info anchor="bottom" id="Terminal" order="10" weight="0.32908458" />
+      <window_info active="true" anchor="bottom" id="Terminal" order="10" visible="true" weight="0.42178446" />
       <window_info anchor="bottom" id="Event Log" order="11" side_tool="true" />
       <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
       <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
@@ -184,16 +900,28 @@
         </state>
       </provider>
     </entry>
+    <entry file="file://$PROJECT_DIR$/increase_webform_element_length.patch">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="-876" />
+      </provider>
+    </entry>
     <entry file="file://$PROJECT_DIR$/composer.json">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="105">
-          <caret line="19" column="14" selection-start-line="19" selection-start-column="14" selection-end-line="19" selection-end-column="14" />
+        <state relative-caret-position="283">
+          <caret line="46" column="35" selection-start-line="46" selection-start-column="35" selection-end-line="46" selection-end-column="35" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/increase_webform_element_lenght.patch">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="225">
+          <caret line="15" selection-start-line="15" selection-end-line="15" />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/modules/contrib/webform/src/Element/WebformOptions.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="450">
+        <state relative-caret-position="314">
           <caret line="37" column="38" selection-start-line="37" selection-start-column="38" selection-end-line="37" selection-end-column="38" />
         </state>
       </provider>
diff --git a/composer.json b/composer.json
index c608755d..66f66c02 100644
--- a/composer.json
+++ b/composer.json
@@ -43,8 +43,8 @@
             "themes/custom/{$name}": ["type:drupal-custom-theme"]
         },
         "patches": {
-          "drupal/redirect": {
-            "Issue 2879648 (56): Does not work for path alias": "https://www.drupal.org/files/issues/2019-09-05/redirect-does_not_work_for_path_alias-2879648-56.patch"
+          "drupal/webform": {
+            "Increase maxlength": "increase_webform_element_length.patch"
           }
         }
     },
diff --git a/modules/contrib/webform/composer.json b/modules/contrib/webform/composer.json
index 9a75703a..f93103bc 100644
--- a/modules/contrib/webform/composer.json
+++ b/modules/contrib/webform/composer.json
@@ -36,8 +36,9 @@
     "drupal/captcha": "~1.0",
     "drupal/chosen": "~2.6",
     "drupal/entity_print": "^2.1",
+    "drupal/group": "~1.0",
     "drupal/jsonapi": "~2.0 || ~8.7",
-    "drupal/mailsystem": "~4.0",
+    "drupal/mailsystem": "4.1",
     "drupal/select2": "~1.1",
     "drupal/smtp": "~1.0",
     "drupal/telephone_validation": "^2.2",
diff --git a/modules/contrib/webform/composer.libraries.json b/modules/contrib/webform/composer.libraries.json
index ec02a397..1848cd50 100644
--- a/modules/contrib/webform/composer.libraries.json
+++ b/modules/contrib/webform/composer.libraries.json
@@ -28,13 +28,13 @@
             "type": "package",
             "package": {
                 "name": "algolia/places",
-                "version": "1.16.4",
+                "version": "1.17.0",
                 "type": "drupal-library",
                 "extra": {
                     "installer-name": "algolia.places"
                 },
                 "dist": {
-                    "url": "https://registry.npmjs.org/places.js/-/places.js-1.16.4.tgz",
+                    "url": "https://registry.npmjs.org/places.js/-/places.js-1.17.0.tgz",
                     "type": "tar"
                 },
                 "require": {
@@ -46,13 +46,13 @@
             "type": "package",
             "package": {
                 "name": "choices/choices",
-                "version": "7.0.0",
+                "version": "9.0.1",
                 "type": "drupal-library",
                 "extra": {
                     "installer-name": "choices"
                 },
                 "dist": {
-                    "url": "https://github.com/jshjohnson/Choices/archive/v7.0.0.zip",
+                    "url": "https://github.com/jshjohnson/Choices/archive/v9.0.1.zip",
                     "type": "zip"
                 },
                 "require": {
@@ -244,13 +244,13 @@
             "type": "package",
             "package": {
                 "name": "jquery/inputmask",
-                "version": "4.0.8",
+                "version": "4.0.9",
                 "type": "drupal-library",
                 "extra": {
                     "installer-name": "jquery.inputmask"
                 },
                 "dist": {
-                    "url": "https://github.com/RobinHerbots/jquery.inputmask/archive/4.0.8.zip",
+                    "url": "https://github.com/RobinHerbots/jquery.inputmask/archive/4.0.9.zip",
                     "type": "zip"
                 },
                 "require": {
@@ -262,13 +262,13 @@
             "type": "package",
             "package": {
                 "name": "jquery/intl-tel-input",
-                "version": "15.1.0",
+                "version": "16.0.0",
                 "type": "drupal-library",
                 "extra": {
                     "installer-name": "jquery.intl-tel-input"
                 },
                 "dist": {
-                    "url": "https://github.com/jackocnr/intl-tel-input/archive/v15.1.0.zip",
+                    "url": "https://github.com/jackocnr/intl-tel-input/archive/v16.0.0.zip",
                     "type": "zip"
                 },
                 "require": {
@@ -298,13 +298,13 @@
             "type": "package",
             "package": {
                 "name": "jquery/select2",
-                "version": "4.0.8",
+                "version": "4.0.12",
                 "type": "drupal-library",
                 "extra": {
                     "installer-name": "jquery.select2"
                 },
                 "dist": {
-                    "url": "https://github.com/select2/select2/archive/4.0.8.zip",
+                    "url": "https://github.com/select2/select2/archive/4.0.12.zip",
                     "type": "zip"
                 },
                 "require": {
@@ -401,6 +401,24 @@
                     "composer/installers": "~1.0"
                 }
             }
+        },
+        "svg-pan-zoom": {
+            "type": "package",
+            "package": {
+                "name": "svg-pan-zoom/svg-pan-zoom",
+                "version": "3.6.1",
+                "type": "drupal-library",
+                "extra": {
+                    "installer-name": "svg-pan-zoom"
+                },
+                "dist": {
+                    "url": "https://github.com/ariutta/svg-pan-zoom/archive/3.6.1.zip",
+                    "type": "zip"
+                },
+                "require": {
+                    "composer/installers": "~1.0"
+                }
+            }
         }
     },
     "require": {
@@ -424,6 +442,7 @@
         "jquery/timepicker": "*",
         "jquery/toggles": "*",
         "progress-tracker/progress-tracker": "*",
-        "signature_pad/signature_pad": "*"
+        "signature_pad/signature_pad": "*",
+        "svg-pan-zoom/svg-pan-zoom": "*"
     }
 }
diff --git a/modules/contrib/webform/config/install/webform.settings.yml b/modules/contrib/webform/config/install/webform.settings.yml
index 440cf49d..0c7237f9 100644
--- a/modules/contrib/webform/config/install/webform.settings.yml
+++ b/modules/contrib/webform/config/install/webform.settings.yml
@@ -181,10 +181,10 @@ file:
   file_private_redirect: true
   file_private_redirect_message: 'Please login to access the uploaded file.'
   default_max_filesize: ''
-  default_managed_file_extensions: 'gif jpg png bmp eps tif pict psd txt rtf html odf pdf doc docx ppt pptx xls xlsx xml avi mov mp3 ogg wav bz2 dmg gz jar rar sit svg tar zip'
+  default_managed_file_extensions: 'gif jpg jpeg png bmp eps tif pict psd txt rtf html odf pdf doc docx ppt pptx xls xlsx xml avi mov mp3 ogg wav bz2 dmg gz jar rar sit svg tar zip'
   default_audio_file_extensions: 'mp3 ogg wav'
   default_document_file_extensions: 'txt rtf pdf doc docx odt ppt pptx odp xls xlsx ods'
-  default_image_file_extensions: 'gif jpg png'
+  default_image_file_extensions: 'gif jpg jpeg png'
   default_video_file_extensions: 'avi mov mp4 ogg wav webm'
   make_unused_managed_files_temporary: true
   delete_temporary_managed_files: true
@@ -197,7 +197,7 @@ mail:
   default_return_path: ''
   default_sender_mail: ''
   default_sender_name: ''
-  default_subject: 'Webform submission from: [webform_submission:source-entity]'
+  default_subject: 'Webform submission from: [webform_submission:source-title]'
   default_body_text: |
     Submitted on [webform_submission:created]
     Submitted by: [webform_submission:user]
diff --git a/modules/contrib/webform/config/install/webform.webform.contact.yml b/modules/contrib/webform/config/install/webform.webform.contact.yml
index 86474e66..4537b2b5 100644
--- a/modules/contrib/webform/config/install/webform.webform.contact.yml
+++ b/modules/contrib/webform/config/install/webform.webform.contact.yml
@@ -105,6 +105,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -152,6 +153,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -230,6 +232,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
@@ -264,6 +267,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/config/schema/webform.entity.webform.schema.yml b/modules/contrib/webform/config/schema/webform.entity.webform.schema.yml
index 965ceb89..a174c22e 100644
--- a/modules/contrib/webform/config/schema/webform.entity.webform.schema.yml
+++ b/modules/contrib/webform/config/schema/webform.entity.webform.schema.yml
@@ -284,6 +284,9 @@
         wizard_progress_link:
           type: boolean
           label: 'Link to previous pages in progress bar'
+        wizard_progress_states:
+          type: boolean
+          label: 'Update wizard progress bar''s pages based on conditions'
         wizard_start_label:
           type: label
           label: 'Wizard start label'
@@ -431,9 +434,12 @@
         results_disabled_ignore:
           type: boolean
           label: 'Ignore disabled results warning'
+        token_view:
+          type: boolean
+          label: 'Allow viewing a submission using token'
         token_update:
           type: boolean
-          label: 'Allow updates using token'
+          label: 'Allow updating a submission using token'
     access:
       type: sequence
       label: 'Access Rules'
diff --git a/modules/contrib/webform/config/schema/webform.plugin.handler.schema.yml b/modules/contrib/webform/config/schema/webform.plugin.handler.schema.yml
index 143d4dae..e19e72b7 100644
--- a/modules/contrib/webform/config/schema/webform.plugin.handler.schema.yml
+++ b/modules/contrib/webform/config/schema/webform.plugin.handler.schema.yml
@@ -118,6 +118,9 @@ webform.handler.email:
     theme_name:
       type: string
       label: 'Theme name'
+    parameters:
+      label: 'Parameters'
+      type: ignore
     debug:
       type: boolean
       label: 'Enable debugging'
diff --git a/modules/contrib/webform/css/webform.element.horizontal_rule.css b/modules/contrib/webform/css/webform.element.horizontal_rule.css
index d11dbdd3..a5d4b8ad 100644
--- a/modules/contrib/webform/css/webform.element.horizontal_rule.css
+++ b/modules/contrib/webform/css/webform.element.horizontal_rule.css
@@ -46,6 +46,7 @@ hr.webform-horizontal-rule--dotted.webform-horizontal-rule--thick {
 hr.webform-horizontal-rule--flaired {
   overflow: visible; /* For IE */
   height: 30px;
+  background-color: transparent;
   border-style: solid;
   border-color: #666;
   border-width: 1px 0 0 0;
diff --git a/modules/contrib/webform/css/webform.element.multiple.css b/modules/contrib/webform/css/webform.element.multiple.css
index 32b98ec7..023c985f 100644
--- a/modules/contrib/webform/css/webform.element.multiple.css
+++ b/modules/contrib/webform/css/webform.element.multiple.css
@@ -96,6 +96,10 @@
   padding: 2px;
 }
 
+.webform-multiple-table td input[type="image"] + input[type="image"] {
+  margin-left: 2px;
+}
+
 .webform-multiple-table .container-inline input[type="submit"] {
   width: inherit;
 }
diff --git a/modules/contrib/webform/css/webform.element.options.css b/modules/contrib/webform/css/webform.element.options.css
index a798e13c..abe9445f 100644
--- a/modules/contrib/webform/css/webform.element.options.css
+++ b/modules/contrib/webform/css/webform.element.options.css
@@ -94,6 +94,14 @@
   font-weight: normal;
 }
 
+.webform-options-display-buttons input:disabled + label.webform-options-display-buttons-label,
+.webform-options-display-buttons input:disabled:hover + label.webform-options-display-buttons-label,
+.webform-options-display-buttons input:disabled:focus + label.webform-options-display-buttons-label {
+  cursor: not-allowed;
+  border-color: #ccc;
+  color: #999;
+}
+
 /**
  * Mobile support to webform options buttons on mobile devices.
  */
diff --git a/modules/contrib/webform/css/webform.element.states.css b/modules/contrib/webform/css/webform.element.states.css
index aad4f6ef..b19ef7e8 100644
--- a/modules/contrib/webform/css/webform.element.states.css
+++ b/modules/contrib/webform/css/webform.element.states.css
@@ -49,12 +49,15 @@ tr.webform-states-table--state td select {
   width: 20px;
   min-width: initial;
   max-width: initial;
-  margin: 0;
   border: 2px solid #333;
   border-radius: 50%;
   padding: 2px;
 }
 
+.webform-states-table td.webform-states-table--operations input[type="image"] + input[type="image"] {
+  margin-left: 2px;
+}
+
 .webform-states-table td.webform-states-table--operations input[type="image"]:hover,
 .webform-states-table td.webform-states-table--operations input[type="image"]:focus,
 .webform-states-table td.webform-states-table--operations input[type="image"]:active {
diff --git a/modules/contrib/webform/css/webform.theme.seven.css b/modules/contrib/webform/css/webform.theme.seven.css
index 45af849f..53e44670 100644
--- a/modules/contrib/webform/css/webform.theme.seven.css
+++ b/modules/contrib/webform/css/webform.theme.seven.css
@@ -34,11 +34,6 @@ details details details {
   background-color: #fff;
 }
 
-/* Reduce the width of number inputs */
-input.form-number {
-  width: 6em;
-}
-
 code {
   font-weight: bold;
   border: 1px solid #333;
diff --git a/modules/contrib/webform/docs/DEVELOPMENT-CHEATSHEET.md b/modules/contrib/webform/docs/DEVELOPMENT-CHEATSHEET.md
index 17f2c8c0..78ac1fcf 100644
--- a/modules/contrib/webform/docs/DEVELOPMENT-CHEATSHEET.md
+++ b/modules/contrib/webform/docs/DEVELOPMENT-CHEATSHEET.md
@@ -69,6 +69,7 @@ echo 'true' > webform.features.yml
 
 echo 'true' > modules/webform_attachment/webform_attachment.features.yml
 echo 'true' > modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.features.yml
+
 echo 'true' > modules/webform_entity_print/webform_entity_print.features.yml
 echo 'true' > modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.features.yml
 echo 'true' > modules/webform_entity_print_attachment/webform_entity_print_attachment.features.yml
@@ -81,7 +82,8 @@ echo 'true' > modules/webform_example_composite/webform_example_composite.featur
 echo 'true' > modules/webform_example_handler/webform_example_handler.features.yml
 echo 'true' > modules/webform_example_element/webform_example_remote_post.features.yml
 
-echo 'true' > modules/webform_templates/webform_templates.features.yml
+echo 'true' > modules/webform_group/tests/modules/webform_group_test/webform_group_test.features.yml
+
 echo 'true' > modules/webform_templates/webform_templates.features.yml
 
 echo 'true' > modules/webform_image_select/webform_image_select.features.yml
@@ -91,12 +93,19 @@ echo 'true' > modules/webform_node/webform_node.features.yml
 echo 'true' > modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.features.yml
 echo 'true' > modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.features.yml
 
+echo 'true' > modules/webform_options_custom/tests/modules/webform_options_custom/webform_options_custom.features.yml
+echo 'true' > modules/webform_options_custom/tests/modules/webform_options_custom_test/webform_options_custom_test.features.yml
+echo 'true' > modules/webform_options_custom/tests/modules/webform_options_custom_entity_test/webform_options_custom_entity_test.features.yml
+
+echo 'true' > modules/webform_options_limit/tests/modules/webform_options_limit_test/webform_options_limit_test.features.yml
+
 echo 'true' > modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.features.yml
 
 echo 'true' > modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.features.yml
 
 echo 'true' > modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.features.yml
 echo 'true' > modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.features.yml
+echo 'true' > modules/webform_demo/webform_demo_group/webform_demo_group.features.yml
 echo 'true' > modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.features.yml
 
 echo 'true' > tests/modules/webform_test/webform_test.features.yml
@@ -129,12 +138,14 @@ drush en -y webform\
   webform_entity_print_attachment\
   webform_demo_application_evaluation\
   webform_demo_event_registration\
+  webform_demo_group\
   webform_demo_region_contact\
   webform_examples\
   webform_examples_accessibility\
   webform_example_element\
   webform_example_handler\
   webform_example_remote_post\
+  webform_group_test\
   webform_image_select\
   webform_node\
   webform_submission_export_import\
@@ -156,6 +167,10 @@ drush en -y webform\
   webform_image_select_test\
   webform_node_test_multiple\
   webform_node_test_translation\
+  webform_options_custom\
+  webform_options_custom_test\
+  webform_options_custom_entity_test\
+  webform_options_limit_test\
   webform_scheduled_email_test\
   webform_submission_export_import_test;
 
@@ -170,6 +185,7 @@ drush features-export -y webform_entity_print
 drush features-export -y webform_entity_print_attachment
 drush features-export -y webform_demo_application_evaluation
 drush features-export -y webform_demo_event_registration
+drush features-export -y webform_demo_group
 drush features-export -y webform_demo_region_contact
 drush features-export -y webform_examples
 drush features-export -y webform_examples_accessibility
@@ -177,6 +193,7 @@ drush features-export -y webform_example_element
 drush features-export -y webform_example_composite
 drush features-export -y webform_example_handler
 drush features-export -y webform_example_remote_post
+drush features-export -y webform_group_test
 drush features-export -y webform_node
 drush features-export -y webform_image_select
 drush features-export -y webform_submission_export_import
@@ -199,6 +216,10 @@ drush features-export -y webform_entity_print_attachment_test
 drush features-export -y webform_image_select_test
 drush features-export -y webform_node_test_multiple
 drush features-export -y webform_node_test_translation
+drush features-export -y webform_options_custom
+drush features-export -y webform_options_custom_test
+drush features-export -y webform_options_custom_entity_test
+drush features-export -y webform_options_limit_test
 drush features-export -y webform_scheduled_email_test
 drush features-export -y webform_submission_export_import_test
 
@@ -212,6 +233,7 @@ drush webform:tidy -y --dependencies webform_entity_print
 drush webform:tidy -y --dependencies webform_entity_print_attachment
 drush webform:tidy -y --dependencies webform_demo_application_evaluation
 drush webform:tidy -y --dependencies webform_demo_event_registration
+drush webform:tidy -y --dependencies webform_demo_group
 drush webform:tidy -y --dependencies webform_demo_region_contact
 drush webform:tidy -y --dependencies webform_examples
 drush webform:tidy -y --dependencies webform_examples_accessibility
@@ -219,6 +241,7 @@ drush webform:tidy -y --dependencies webform_example_element
 drush webform:tidy -y --dependencies webform_example_composite
 drush webform:tidy -y --dependencies webform_example_handler
 drush webform:tidy -y --dependencies webform_example_remote_post
+drush webform:tidy -y --dependencies webform_group_test
 drush webform:tidy -y --dependencies webform_image_select
 drush webform:tidy -y --dependencies webform_node
 drush webform:tidy -y --dependencies webform_submission_export_import
@@ -241,6 +264,10 @@ drush webform:tidy -y --dependencies webform_entity_print_attachment_test
 drush webform:tidy -y --dependencies webform_image_select_test
 drush webform:tidy -y --dependencies webform_node_test_multiple
 drush webform:tidy -y --dependencies webform_node_test_translation
+drush webform:tidy -y --dependencies webform_options_custom
+drush webform:tidy -y --dependencies webform_options_custom_test
+drush webform:tidy -y --dependencies webform_options_custom_entity_test
+drush webform:tidy -y --dependencies webform_options_limit_test
 drush webform:tidy -y --dependencies webform_scheduled_email_test
 drush webform:tidy -y --dependencies webform_submission_export_import_test
 
@@ -251,6 +278,7 @@ drush features-import -y webform_entity_print
 drush features-import -y webform_entity_print_attachment
 drush features-import -y webform_demo_application_evaluation
 drush features-import -y webform_demo_event_registration
+drush features-import -y webform_demo_group
 drush features-import -y webform_demo_region_contact
 drush features-import -y webform_examples
 drush features-import -y webform_examples_accessibility
@@ -259,6 +287,7 @@ drush features-import -y webform_example_composite
 drush features-import -y webform_example_handler
 drush features-import -y webform_example_remote_post
 drush features-import -y webform_entity_print
+drush features-import -y webform_group_test
 drush features-import -y webform_node
 drush features-import -y webform_image_select
 drush features-import -y webform_submission_export_import
@@ -281,7 +310,10 @@ drush features-import -y webform_entity_print_attachment_test
 drush features-import -y webform_image_select_test
 drush features-import -y webform_node_test_multiple
 drush features-import -y webform_node_test_translation
+drush features-import -y webform_options_custom
+drush features-import -y webform_options_custom_test
+drush features-import -y webform_options_custom_entity_test
+drush features-import -y webform_options_limit_test
 drush features-import -y webform_scheduled_email_test
 drush features-import -y webform_submission_export_import_test
-
 ```
diff --git a/modules/contrib/webform/docs/UPDATE-LIBRARIES.md b/modules/contrib/webform/docs/UPDATE-LIBRARIES.md
index b84c5b89..0a5201b9 100644
--- a/modules/contrib/webform/docs/UPDATE-LIBRARIES.md
+++ b/modules/contrib/webform/docs/UPDATE-LIBRARIES.md
@@ -57,7 +57,7 @@ Enable and download all libraries
 
     cd /var/www/sites/d8_webform
     drush php-eval "\Drupal::configFactory()->getEditable('webform.settings')->set('libraries.excluded_libraries', [])->save();"
-    drush en -y webform_image_select
+    drush en -y webform_image_select webform_options_custom
     drush webform:libraries:download
 
 Update libraries.zip
diff --git a/modules/contrib/webform/drush.services.yml b/modules/contrib/webform/drush.services.yml
index a379e25e..3e31158e 100644
--- a/modules/contrib/webform/drush.services.yml
+++ b/modules/contrib/webform/drush.services.yml
@@ -4,3 +4,8 @@ services:
     arguments: ['@webform.cli_service']
     tags:
       - { name: drush.command }
+  webform.sanitize.submissions.commands:
+    class: \Drupal\webform\Commands\WebformSanitizeSubmissionsCommands
+    arguments: ['@database', '@module_handler', '@entity_type.manager']
+    tags:
+      - { name: drush.command }
diff --git a/modules/contrib/webform/drush/webform.drush.inc b/modules/contrib/webform/drush/webform.drush.inc
index e43ede5f..87dd7b11 100644
--- a/modules/contrib/webform/drush/webform.drush.inc
+++ b/modules/contrib/webform/drush/webform.drush.inc
@@ -3,12 +3,14 @@
 // @codingStandardsIgnoreFile
 
 /**
- * This is file was generated using Drush. DO NOT EDIT. 
+ * This is file was generated using Drush. DO NOT EDIT.
  *
  * @see drush webform-generate-commands
  * @see \Drupal\webform\Commands\DrushCliServiceBase::generate_commands_drush8
  */
 
+require_once __DIR__ . '/webform.drush.hooks.inc';
+
 /**
  * Implements hook_drush_command().
  */
diff --git a/modules/contrib/webform/images/contribute/contribute.png b/modules/contrib/webform/images/contribute/contribute.png
deleted file mode 100644
index 8bf64d27..00000000
Binary files a/modules/contrib/webform/images/contribute/contribute.png and /dev/null differ
diff --git a/modules/contrib/webform/images/contribute/icons/cccccc/account.svg b/modules/contrib/webform/images/contribute/icons/cccccc/account.svg
deleted file mode 100644
index 113a486f..00000000
--- a/modules/contrib/webform/images/contribute/icons/cccccc/account.svg
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Generator: Adobe Illustrator 18.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
-	 viewBox="287.5 37.5 225 225" enable-background="new 287.5 37.5 225 225" xml:space="preserve">
-<path fill="#cccccc" d="M400,37.5c-62.104,0-112.5,50.396-112.5,112.5S337.896,262.5,400,262.5S512.5,212.104,512.5,150
-	S462.104,37.5,400,37.5z M400,50.104c55.198,0,99.896,44.698,99.896,99.896S455.198,249.896,400,249.896
-	S300.104,205.198,300.104,150S344.802,50.104,400,50.104"/>
-<path fill="#cccccc" d="M430.24,191.25c-2.385-4.771-4.604-9.073-5.333-10.052c-0.771-1.24-2.51-2.875-6.531-4.177
-	c-0.312-1.427-0.562-2.937-0.667-4.521c-0.125-1.448-0.198-2.719-0.24-3.833c11.906-9.5,20.031-28.375,20.031-49.865
-	C437.5,87.906,420.698,75,400,75s-37.5,12.896-37.5,43.802c0,21.667,8.26,40.677,20.333,50.104c-0.042,1.062-0.115,2.26-0.229,3.594
-	c-0.104,1.594-0.333,3.104-0.646,4.49c-4.083,1.302-5.917,2.958-6.854,4.208c-0.74,0.865-3,5.229-5.406,10.073
-	c-13.948,3.323-26.208,8.875-35.688,16.031c15.885,18.594,39.594,30.302,65.99,30.302s50.104-11.698,66-30.302
-	C456.5,200.135,444.219,194.573,430.24,191.25z"/>
-</svg>
diff --git a/modules/contrib/webform/images/contribute/icons/cccccc/contribution.svg b/modules/contrib/webform/images/contribute/icons/cccccc/contribution.svg
deleted file mode 100644
index 9e158d5b..00000000
--- a/modules/contrib/webform/images/contribute/icons/cccccc/contribution.svg
+++ /dev/null
@@ -1,53 +0,0 @@
-<?xml version="1.0" encoding="iso-8859-1"?>
-<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
-	 width="430.114px" height="430.114px" viewBox="0 0 430.114 430.114" style="enable-background:new 0 0 430.114 430.114;"
-	 xml:space="preserve">
-<g>
-	<path id="Drupal" fill="#cccccc" d="M309.033,79.982c-22.028-13.69-42.854-19.062-63.631-32.756C232.521,38.529,214.651,17.812,199.658,0
-		c-2.886,28.593-11.625,40.221-21.62,48.512c-21.165,16.547-34.485,21.51-52.799,31.47c-15.385,7.88-98.956,57.585-98.956,164.513
-		c0,106.899,90.238,185.619,190.424,185.619c100.223,0,187.124-72.508,187.124-182.319
-		C403.831,137.982,322.334,88.264,309.033,79.982z M310.723,388.315c-2.091,2.059-21.217,15.322-43.656,17.413
-		c-22.458,2.054-52.821,3.3-71.103-13.278c-2.9-2.912-2.098-7.023,0-8.676c2.074-1.685,3.733-2.931,6.242-2.931s2.056,0,3.33,0.83
-		c8.312,6.642,20.777,12.004,47.371,12.004c26.625,0,45.354-7.416,53.652-13.665c3.743-2.894,5.404-0.401,5.834,1.261
-		C312.795,382.919,313.63,385.426,310.723,388.315z M238.663,353.433c4.573-4.158,12.078-10.79,19.153-13.679
-		c7.066-2.913,10.771-2.492,17.446-2.492c6.646,0,13.739,0.415,18.715,3.752c4.975,3.318,7.901,10.753,9.529,14.869
-		c1.681,4.173,0,6.646-3.295,8.321c-2.893,1.639-3.322,0.817-6.234-4.555c-2.89-5.381-5.396-10.79-19.957-10.79
-		c-14.542,0-19.125,4.989-26.191,10.79c-7.066,5.787-9.567,7.864-12.074,4.555C233.268,360.896,234.099,357.564,238.663,353.433z
-		 M388.737,274.443c0,12.835-4.145,36.035-14.15,50.535c-9.945,14.524-16.176,19.919-27.862,19.079
-		c-14.981-1.26-44.897-47.66-64.023-48.51c-24.082-0.816-76.495,50.181-117.671,50.181c-24.957,0-32.413-3.725-40.723-9.139
-		c-12.494-8.699-18.736-21.953-18.325-40.192c0.446-32.343,30.759-62.558,69.036-62.959c48.617-0.43,82.341,48.024,106.843,47.632
-		c20.802-0.392,60.737-41.023,80.274-41.023C382.918,240.046,388.737,261.562,388.737,274.443z"/>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-<g>
-</g>
-</svg>
diff --git a/modules/contrib/webform/images/contribute/icons/cccccc/membership.svg b/modules/contrib/webform/images/contribute/icons/cccccc/membership.svg
deleted file mode 100644
index ef928645..00000000
--- a/modules/contrib/webform/images/contribute/icons/cccccc/membership.svg
+++ /dev/null
@@ -1 +0,0 @@
-<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="#cccccc" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M13.65 2.35C12.14.837 10.134 0 8 0 3.593 0 0 3.593 0 8s3.593 8 8 8 8-3.593 8-8c0-2.133-.838-4.14-2.35-5.65zM8 13.192c-2.413 0-4.38-1.968-4.38-4.38 0-2.045 1.37-3.416 2.577-4.623.8-.8 1.575-1.58 1.803-2.44.23.86.99 1.63 1.803 2.43C11.01 5.39 12.38 6.76 12.38 8.8c0 2.41-1.966 4.38-4.38 4.38z" fill-rule="nonzero"/></svg>
diff --git a/modules/contrib/webform/images/contribute/icons/drupal.svg b/modules/contrib/webform/images/contribute/icons/drupal.svg
deleted file mode 100644
index 7da67bde..00000000
--- a/modules/contrib/webform/images/contribute/icons/drupal.svg
+++ /dev/null
@@ -1 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" [<!ENTITY st0 "fill:#93C5E4;"><!ENTITY st1 "fill:#FFF;"><!ENTITY st2 "fill:none;"><!ENTITY st3 "fill:#004975;"><!ENTITY st4 "fill:#00598E;"><!ENTITY st5 "fill:#0073BA;">]><svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="681.167px" height="778.583px" viewBox="0 0 681.167 778.583"><title>Druplicon</title><path style="&st4;" d="M510.167,144.833c-39.75-24.75-77.25-34.5-114.75-59.25c-23.25-15.75-55.5-53.25-82.5-85.5c-5.25,51.75-21,72.75-39,87.75c-38.25,30-62.25,39-95.25,57c-27.75,14.25-178.5,104.25-178.5,297.75s162.75,336,343.5,336s337.5-131.25,337.5-330S534.167,159.833,510.167,144.833z"/><path style="&st1;" d="M449.25,610.5c12,0,24.75,0.75,33.75,6.75s14.25,19.5,17.25,27s0,12-6,15c-5.25,3-6,1.5-11.25-8.25s-9.75-19.5-36-19.5s-34.5,9-47.25,19.5s-17.25,14.25-21.75,8.25s-3-12,5.25-19.5s21.75-19.5,34.5-24.75S437.25,610.5,449.25,610.5L449.25,610.5z"/><path style="&st1;" d="M324.75,696c15,12,37.5,21.75,85.5,21.75S492,704.25,507,693c6.75-5.25,9.75-0.75,10.5,2.25s2.25,7.5-3,12.75c-3.75,3.75-38.25,27.75-78.75,31.5s-95.25,6-128.25-24c-5.25-5.25-3.75-12.75,0-15.75s6.75-5.25,11.25-5.25S322.5,694.5,324.75,696L324.75,696z"/><path style="&st5;" d="M141,639c57-0.75,67.5-10.5,117.75-33c271.5-121.5,321.75-232.5,331.5-258s24-66.75,9-112.5c-2.896-8.832-5.006-15.924-6.53-21.63c-36.079-40.343-71.898-62.357-82.72-69.12c-39-24.75-77.25-34.5-114.75-59.25c-23.25-15-55.5-53.25-82.5-85.5c-5.25,51.75-20.25,73.5-39,87.75c-38.25,30-62.25,39-95.25,57C150.75,159.75,0,249,0,442.5c0,61.78,16.593,118.361,45.063,166.766L52.5,609C68.25,623.25,93,639.75,141,639z"/><path style="&st3;" d="M510,144.75c-39-24.75-77.25-34.5-114.75-59.25c-23.25-15-55.5-53.25-82.5-85.5c-5.25,51.75-20.25,73.5-39,87.75c-38.25,30-62.25,39-95.25,57C150.75,159.75,0,249,0,442.5c0,61.78,16.593,118.361,45.063,166.766C105.763,712.467,220.46,778.5,343.5,778.5c180.75,0,337.5-131.25,337.5-330c0-109.146-44.332-185.488-88.28-234.63C556.641,173.527,520.82,151.513,510,144.75z M601.164,232.547c49.242,61.564,74.211,134.221,74.211,215.953c0,47.428-9.033,92.23-26.849,133.165c-16.9,38.831-41.236,73.233-72.333,102.254c-61.47,57.364-144.107,88.956-232.693,88.956c-43.826,0-86.832-8.371-127.824-24.882c-40.263-16.217-76.547-39.438-107.843-69.02C41.923,616.678,5.625,532.696,5.625,442.5c0-80.336,26.076-151.72,77.503-212.167c39.289-46.18,81.655-71.774,98.047-80.634c7.958-4.341,15.423-8.172,22.643-11.877c22.63-11.615,44.005-22.586,73.404-45.645c15.677-11.914,32.377-30.785,39.489-78.702c24.774,29.466,53.522,62.579,75.49,76.752c19.5,12.87,39.501,21.888,58.844,30.61c18.298,8.25,37.219,16.781,55.942,28.663c0.031,0.021,0.702,0.438,0.702,0.438C562.421,184.11,591.581,220.566,601.164,232.547z"/><path style="&st0;" d="M316.5,15c10.5,30.75,9,46.5,9,53.25S321.75,93,309.75,102c-5.25,3.75-6.75,6.75-6.75,7.5c0,3,6.75,5.25,6.75,12c0,8.25-3.75,24.75-43.5,64.5s-96.75,75-141,96.75S60,303,54,292.5s2.25-33.75,30-64.5s115.5-75,115.5-75L309,76.5l6-29.25"/><path style="&st1;" d="M316.5,14.25c-6.75,49.5-21.75,64.5-42,80.25c-33.75,25.5-66.75,41.25-74.25,45c-19.5,9.75-90,48.75-126.75,105c-11.25,17.25,0,24,2.25,25.5s27.75,4.5,82.5-28.5S237,189,267.75,156.75c16.5-17.25,18.75-27,18.75-31.5c0-5.25-3.75-7.5-9.75-9c-3-0.75-3.75-2.25,0-4.5S296.25,102,300,99s21.75-15,22.5-34.5S321.75,31.5,316.5,14.25L316.5,14.25z"/><path style="&st1;" d="M147.75,559.5c0.75-58.5,55.5-113.25,124.5-114c87.75-0.75,148.5,87,192.75,86.25c37.5-0.75,109.5-74.25,144.75-74.25c37.5,0,48,39,48,62.25s-7.5,65.25-25.5,91.5s-29.25,36-50.25,34.5c-27-2.25-81-86.25-115.5-87.75c-43.5-1.5-138,90.75-212.25,90.75c-45,0-58.5-6.75-73.5-16.5C158.25,616.5,147,592.5,147.75,559.5L147.75,559.5z"/><path style="&st2;" d="M599.25,235.5c15,45.75,0.75,87-9,112.5s-60,136.5-331.5,258C208.5,628.5,198,638.25,141,639c-48,0.75-72.75-15.75-88.5-30l-7.437,0.266C105.763,712.467,220.46,778.5,343.5,778.5c180.75,0,337.5-131.25,337.5-330c0-109.146-44.332-185.488-88.28-234.63C594.244,219.576,596.354,226.668,599.25,235.5z"/></svg>
\ No newline at end of file
diff --git a/modules/contrib/webform/includes/webform.install.inc b/modules/contrib/webform/includes/webform.install.inc
index 28052e2c..20a7c2e2 100644
--- a/modules/contrib/webform/includes/webform.install.inc
+++ b/modules/contrib/webform/includes/webform.install.inc
@@ -176,24 +176,26 @@ function _webform_update_webform_handler_settings() {
 
     // Apply the default handler settings.
     $has_handler = FALSE;
-    foreach ($data['handlers'] as &$handler) {
-      if (!isset($default_handler_settings[$handler['id']])) {
-        continue;
-      }
+    if (!empty($data['handlers'])) {
+      foreach ($data['handlers'] as &$handler) {
+        if (!isset($default_handler_settings[$handler['id']])) {
+          continue;
+        }
 
-      $settings = $default_handler_settings[$handler['id']];
-      foreach ($handler['settings'] as $settings_key => $setting_value) {
-        $settings[$settings_key] = $setting_value;
-      }
+        $settings = $default_handler_settings[$handler['id']];
+        foreach ($handler['settings'] as $settings_key => $setting_value) {
+          $settings[$settings_key] = $setting_value;
+        }
 
-      if ($handler['settings'] != $settings) {
-        $has_handler = TRUE;
-        $handler['settings'] = $settings;
+        if ($handler['settings'] != $settings) {
+          $has_handler = TRUE;
+          $handler['settings'] = $settings;
+        }
       }
-    }
 
-    if ($has_handler) {
-      $webform_config->setData($data)->save();
+      if ($has_handler) {
+        $webform_config->setData($data)->save();
+      }
     }
   }
 }
diff --git a/modules/contrib/webform/includes/webform.install.requirements.inc b/modules/contrib/webform/includes/webform.install.requirements.inc
index c8ce1398..f5b87eb6 100644
--- a/modules/contrib/webform/includes/webform.install.requirements.inc
+++ b/modules/contrib/webform/includes/webform.install.requirements.inc
@@ -19,6 +19,31 @@ function webform_requirements($phase) {
 
   $requirements = [];
 
+  /****************************************************************************/
+  // Experimental modules.
+  /****************************************************************************/
+
+  // Warn if any experimental webform modules are installed.
+  // @see system_requirements()
+  $experimental = [];
+  $enabled_modules = \Drupal::moduleHandler()->getModuleList();
+  foreach ($enabled_modules as $module => $data) {
+    $info = system_get_info('module', $module);
+    if (isset($info['package']) && $info['package'] === 'Webform' && !empty($info['experimental'])) {
+      $experimental[$module] = str_replace(' [EXPERIMENTAL]', '', $info['name']);
+    }
+  }
+  if (!empty($experimental)) {
+    $requirements['webform_experimental'] = [
+      'title' => t('Webform: Experimental modules enabled'),
+      'value' => t('Experimental webform modules found: %module_list. <a href=":url">Experimental modules</a> are provided for testing purposes only. Use at your own risk.', [
+        '%module_list' => implode(', ', $experimental),
+        ':url' => 'https://www.drupal.org/core/experimental',
+      ]),
+      'severity' => REQUIREMENT_WARNING,
+    ];
+  }
+
   /****************************************************************************/
   // Check HTML email handling.
   /****************************************************************************/
diff --git a/modules/contrib/webform/includes/webform.install.update.inc b/modules/contrib/webform/includes/webform.install.update.inc
index 18da6a7a..490a11db 100644
--- a/modules/contrib/webform/includes/webform.install.update.inc
+++ b/modules/contrib/webform/includes/webform.install.update.inc
@@ -5,6 +5,7 @@
  * Archived Webform update hooks.
  */
 
+use Drupal\Core\Path\Entity\PathAlias;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Component\Uuid\Php as Uuid;
 use Drupal\Core\Cache\Cache;
@@ -2821,20 +2822,39 @@ function webform_update_8153() {
   // Load all webforms to improve performance.
   $webform = Webform::loadMultiple();
 
-  $database = \Drupal::database();
-  $select = $database->select('url_alias', 'u');
-  $select->fields('u', ['pid', 'source', 'alias', 'langcode']);
-  $select->condition('source', '/webform/%', 'LIKE');
-  $result = $select->execute();
-  while ($record = $result->fetchAssoc()) {
-    if (preg_match('#^/webform/([^/]+)/(?:drafts|submissions)$#', $record['source'], $match)) {
-      // Check if the webform still exists.
-      $webform_id = $match[1];
-      if (!isset($webform[$webform_id])) {
-        // Delete the broken URL alias.
-        $database->delete('url_alias')
-          ->condition('pid', $record['pid'])
-          ->execute();
+  if (\Drupal::entityTypeManager()->hasDefinition('path_alias')) {
+    $storage = \Drupal::entityTypeManager()->getStorage('path_alias');
+    $ids = $storage->getQuery()
+      ->condition('path', '/webform/', 'STARTS_WITH')
+      ->execute();
+
+    /** @var \Drupal\path_alias\PathAliasInterface $path_alias */
+    foreach ($storage->loadMultiple($ids) as $path_alias) {
+      if (preg_match('#^/webform/([^/]+)/(?:drafts|submissions)$#', $path_alias->getPath(), $match)) {
+        // Check if the webform still exists.
+        $webform_id = $match[1];
+        if (!isset($webform[$webform_id])) {
+          $path_alias->delete();
+        }
+      }
+    }
+  }
+  else {
+    $database = \Drupal::database();
+    $select = $database->select('url_alias', 'u');
+    $select->fields('u', ['pid', 'source', 'alias', 'langcode']);
+    $select->condition('source', '/webform/%', 'LIKE');
+    $result = $select->execute();
+    while ($record = $result->fetchAssoc()) {
+      if (preg_match('#^/webform/([^/]+)/(?:drafts|submissions)$#', $record['source'], $match)) {
+        // Check if the webform still exists.
+        $webform_id = $match[1];
+        if (!isset($webform[$webform_id])) {
+          // Delete the broken URL alias.
+          $database->delete('url_alias')
+            ->condition('pid', $record['pid'])
+            ->execute();
+        }
       }
     }
   }
@@ -2975,7 +2995,7 @@ function webform_update_8157() {
  * Issue #3023863: Typo in State/Province codes options.
  */
 function webform_update_8158() {
-  /** \Drupal\webform\WebformOptionsInterface */
+  /** @var \Drupal\webform\WebformOptionsInterface $webform_options */
   $webform_options = WebformOptions::load('state_province_codes');
   if (!$webform_options) {
     return;
@@ -3152,7 +3172,7 @@ function webform_update_8170() {
         // Prepend new 'draft_created' and 'draft_updated' states.
         $settings['states'] = array_merge([
           'draft_created',
-          'draft_updated'
+          'draft_updated',
         ], $settings['states']);
       }
 
@@ -3185,10 +3205,93 @@ function webform_update_8171() {
   _webform_update_admin_settings();
 }
 
-
 /**
  * Issue #3073995: Setting to enable ajax on all webforms.
  */
 function webform_update_8172() {
   _webform_update_admin_settings();
 }
+
+/**
+ * Issue #3076086: Allow confirm email to use flexbox.
+ */
+function webform_update_8173() {
+  $config_factory = \Drupal::configFactory();
+  foreach ($config_factory->listAll('webform.webform.') as $webform_config_name) {
+    $webform_config = $config_factory->getEditable($webform_config_name);
+    $data = $webform_config->getRawData();
+    if (strpos($data['elements'], 'webform_flexbox') !== FALSE
+      && strpos($data['elements'], 'webform_email_confirm') !== FALSE
+    ) {
+      $elements = WebformYaml::decode($data['elements']);
+      _webform_update_8173($elements);
+      $data['elements'] = WebformYaml::encode($elements);
+      $webform_config->setData($data)->save();
+    }
+  }
+}
+
+/**
+ * Recursively add flexbox: '0' to email confirm elements.
+ *
+ * @param array $element
+ *   An element.
+ */
+function _webform_update_8173(array &$element) {
+  if (isset($element['#type'])
+    && $element['#type'] === 'webform_email_confirm'
+    && !isset($element['#flexbox'])) {
+    $element['#flexbox'] = '0';
+  }
+  foreach (Element::children($element) as $key) {
+    if (is_array($element[$key])) {
+      _webform_update_8173($element[$key]);
+    }
+  }
+}
+
+/**
+ * Issue #3084531: Allow Email handler add additional parameters.
+ */
+function webform_update_8174() {
+  _webform_update_webform_handler_settings();
+}
+
+/**
+ * Issue #3087865: Webform email handler default subject is missing title.
+ */
+function webform_update_8175() {
+  // Update translated webform.settings configuration.
+  foreach (['config', 'config_snapshot'] as $table_name) {
+    if (!\Drupal::database()->schema()->tableExists($table_name)) {
+      continue;
+    }
+    $query = \Drupal::database()->select($table_name, 'c')
+      ->fields('c', ['name', 'collection', 'data'])
+      ->condition('name', 'webform.settings');
+    $result = $query->execute();
+    while ($record = $result->fetchAssoc()) {
+      $data = unserialize($record['data']);
+      $data['mail']['default_subject'] = str_replace('[webform_submission:source-entity]', '[webform_submission:source-title]', $data['mail']['default_subject']);
+      \Drupal::database()->update($table_name)
+        ->fields(['data' => serialize($data)])
+        ->condition('collection', $record['collection'])
+        ->condition('name', $record['name'])
+        ->execute();
+    }
+  }
+}
+
+/**
+ * Issue #3086507: Allow wizard pages / bar to be updated based on states API.
+ */
+function webform_update_8176() {
+  _webform_update_webform_settings();
+}
+
+/**
+ * Issue #3082822: Anonymous role view submission via secure token.
+ */
+function webform_update_8177() {
+  _webform_update_webform_settings();
+}
diff --git a/modules/contrib/webform/includes/webform.libraries.inc b/modules/contrib/webform/includes/webform.libraries.inc
index 60b034be..becba5c1 100644
--- a/modules/contrib/webform/includes/webform.libraries.inc
+++ b/modules/contrib/webform/includes/webform.libraries.inc
@@ -5,6 +5,44 @@
  * Webform libraries.
  */
 
+use Drupal\Core\Asset\AttachedAssetsInterface;
+use Drupal\webform\Entity\Webform;
+use Drupal\webform\Utility\WebformDialogHelper;
+
+/**
+ * Implements hook_library_info_build().
+ */
+function webform_library_info_build() {
+  $base_path = base_path();
+  $default_query_string = \Drupal::state()->get('system.css_js_query_string') ?: '0';
+
+  /** @var \Drupal\webform\WebformInterface[] $webforms */
+  $webforms = Webform::loadMultiple();
+  $libraries = [];
+  foreach ($webforms as $webform_id => $webform) {
+    $assets = array_filter($webform->getAssets());
+    foreach ($assets as $type => $value) {
+      // Note:
+      // Set 'type' to 'external' and manually build the CSS/JS file path
+      // to prevent JS from being parsed by locale_js_alter()
+      // @see locale_js_alter()
+      // @see https://www.drupal.org/node/1803330
+      $settings = ['type' => 'external', 'preprocess' => FALSE, 'minified' => FALSE];
+      if ($type === 'css') {
+        $libraries["webform.css.$webform_id"] = [
+          'css' => ['theme' => ["{$base_path}webform/css/{$webform_id}?{$default_query_string}" => $settings]],
+        ];
+      }
+      else {
+        $libraries["webform.javascript.$webform_id"] = [
+          'js' => ["{$base_path}webform/javascript/{$webform_id}?{$default_query_string}" => $settings],
+        ];
+      }
+    }
+  }
+  return $libraries;
+}
+
 /**
  * Implements hook_library_info_alter().
  */
@@ -44,6 +82,19 @@ function webform_library_info_alter(&$libraries, $extension) {
     }
   }
 
+  // Remove dependency issue fixed in Drupal 8.8.x for webform.element.buttons.
+  //
+  // @see https://www.drupal.org/project/drupal/issues/2933980
+  // @see https://www.drupal.org/project/drupal/issues/2926155
+  if (isset($libraries['webform.element.buttons'])
+    && (floatval(\Drupal::VERSION) >= 8.8)) {
+    unset(
+      $libraries['webform.element.buttons']['js']['/core/assets/vendor/jquery.ui/ui/form-reset-mixin-min.js'],
+      $libraries['webform.element.buttons']['js']['/core/assets/vendor/jquery.ui/ui/escape-selector-min.js'],
+      $libraries['webform.element.buttons']['js']['/core/assets/vendor/jquery.ui/ui/widgets/checkboxradio-min.js']
+    );
+  }
+
   /** @var \Drupal\webform\WebformLibrariesManagerInterface $libraries_manager */
   $libraries_manager = \Drupal::service('webform.libraries_manager');
 
@@ -122,3 +173,71 @@ function _webform_library_info_alter_recursive(array &$library, array $cdn) {
     _webform_library_info_alter_recursive($value, $cdn);
   }
 }
+
+/**
+ * Implements hook_css_alter().
+ */
+function webform_css_alter(&$css, AttachedAssetsInterface $assets) {
+  // Remove the stable.theme's off-canvas CSS reset for webform admin routes.
+  // @see https://www.drupal.org/project/drupal/issues/2826722
+  //
+  // NOTE: Most admin themes correctly style jQuery UI dialogs because Drupal's
+  // admin UI, especially Views, relies on them.
+  $use_off_canvas = WebformDialogHelper::useOffCanvas();
+  // @todo Remove once Claro theme support offcanvas tray.
+  $is_claro_theme = \Drupal::service('webform.theme_manager')->isActiveTheme('claro');
+  $is_admin_route = \Drupal::service('router.admin_context')->isAdminRoute();
+  $is_webform_route = preg_match('/(^webform|^entity\.webform|^entity\.node\.webform)/', \Drupal::routeMatch()->getRouteName());
+  if ($is_claro_theme || ($use_off_canvas && $is_admin_route && $is_webform_route)) {
+    foreach ($css as $key => $item) {
+      // @see 'core/misc/dialog/off-canvas
+      // @see core/themes/stable/css/core/dialog/off-canvas
+      if (strpos($key, '/off-canvas.') !== FALSE) {
+        unset($css[$key]);
+      }
+    }
+  }
+
+  _webform_asset_alter($css, 'css');
+}
+
+/**
+ * Implements hook_js_alter().
+ */
+function webform_js_alter(&$javascript, AttachedAssetsInterface $assets) {
+  // Add Google API key required by webform/libraries.jquery.geocomplete
+  // which is dependency for webform/webform.element.location.geocomplete.
+  //
+  // @see \Drupal\webform\Element\WebformLocationGeocomplete::processWebformComposite
+  // @see webform.libraries.yml
+  // @see webform/webform.element.location.geocomplete
+  // @see webform/libraries.jquery.geocomplete
+  $settings = $assets->getSettings();
+  if (!empty($settings['webform']['location']['geocomplete']['api_key']) && isset($javascript['https://maps.googleapis.com/maps/api/js?key=API_KEY&libraries=places'])) {
+    $api_key = $settings['webform']['location']['geocomplete']['api_key'];
+    $javascript['https://maps.googleapis.com/maps/api/js?key=API_KEY&libraries=places']['data'] = "https://maps.googleapis.com/maps/api/js?key=$api_key&libraries=places";
+    unset($settings['webform']['location']['geocomplete']['api_key']);
+    $assets->setSettings($settings);
+  }
+
+  _webform_asset_alter($javascript, 'javascript');
+}
+
+/**
+ * Alter Webform CSS or JavaScript assets and make sure they appear last.
+ *
+ * @param array $items
+ *   An array of all CSS or JavaScript being presented on the page.
+ * @param string $type
+ *   The type of asset being attached.
+ *
+ * @see hook_library_info_build()
+ */
+function _webform_asset_alter(array &$items, $type) {
+  foreach ($items as $key => &$item) {
+    if (strpos($key, "webform/$type/") === 0) {
+      $item['weight'] = 1000;
+      $item['group'] = 1000;
+    }
+  }
+}
diff --git a/modules/contrib/webform/includes/webform.theme.inc b/modules/contrib/webform/includes/webform.theme.inc
index 192d9264..7e915660 100644
--- a/modules/contrib/webform/includes/webform.theme.inc
+++ b/modules/contrib/webform/includes/webform.theme.inc
@@ -163,6 +163,7 @@ function webform_theme() {
     'webform_progress' => [
       'variables' => [
         'webform' => NULL,
+        'webform_submission' => NULL,
         'current_page' => NULL,
         'operation' => NULL,
       ],
@@ -171,6 +172,7 @@ function webform_theme() {
     'webform_progress_bar' => [
       'variables' => [
         'webform' => NULL,
+        'webform_submission' => NULL,
         'current_page' => NULL,
         'operation' => NULL,
         'max_pages' => 10,
@@ -180,6 +182,7 @@ function webform_theme() {
     'webform_progress_tracker' => [
       'variables' => [
         'webform' => NULL,
+        'webform_submission' => NULL,
         'current_page' => NULL,
         'operation' => NULL,
         'max_pages' => 10,
@@ -272,6 +275,15 @@ function webform_preprocess_radios(&$variables) {
   _webform_preprocess_options($variables);
 }
 
+/**
+ * Prepares variable for status_messages.
+ */
+function webform_preprocess_status_messages(&$variables) {
+  if (!isset($variables['status_headings']['info'])) {
+    $variables['status_headings']['info'] = t('Information message');
+  }
+}
+
 /******************************************************************************/
 // Preprocess tables.
 /******************************************************************************/
@@ -306,7 +318,7 @@ function webform_preprocess_table(&$variables) {
       $langcode = (isset($route_parameters['langcode'])) ? $route_parameters['langcode'] : NULL;
       $language = \Drupal::languageManager()->getLanguage($langcode);
 
-      // Convert first to link.
+      // Convert the first cell in the row to a link.
       $row['cells'][0]['content'] = [
         '#type' => 'link',
         '#url' => $webform->toUrl('canonical', ['language' => $language]),
@@ -400,6 +412,12 @@ function webform_preprocess_fieldset(&$variables) {
     $variables['attributes']['class'][] = 'webform-fieldset--title-inline';
   }
 
+  // If the title display is none remove the legend.title and set
+  // display to none.
+  if (isset($element['#title_display']) && $element['#title_display'] === 'none') {
+    $variables['legend'] = ['attributes' => new Attribute(['style' => 'display:none'])];
+  }
+
   // Add .js-webform-form-type-* class to be used JavaScript and #states API.
   // @see js/webform.element.location.geocomplete.js
   // @see js/webform.states.js
@@ -431,6 +449,28 @@ function webform_preprocess_form_element(&$variables) {
 
   // Setup description, help, and more.
   _webform_preprocess_element($variables, ['label', '#title']);
+
+  // Add missing classes to the Claro theme's form elements.
+  // @see core/modules/system/templates/form-element.html.twig
+  // @see claro/templates/form-element.html.twig
+  // @todo Once Claro is stable determine if this code should removed.
+  static $is_claro_theme;
+  if (!isset($is_claro_theme)) {
+    /** @var \Drupal\webform\WebformThemeManagerInterface $theme_manager */
+    $theme_manager = \Drupal::service('webform.theme_manager');
+    $is_claro_theme = $theme_manager->isActiveTheme('claro');
+  }
+  if ($is_claro_theme) {
+    // Add system .form-type-TYPE class.
+    if (!empty($variables['type'])) {
+      $variables['attributes']['class'][] = 'form-type-' . Html::getClass($variables['type']);
+    }
+
+    // Add system .description class.
+    if (isset($variables['description'])) {
+      $variables['description']['attributes']->addClass('description');
+    }
+  }
 }
 
 /**
@@ -667,6 +707,11 @@ function _webform_preprocess_element(array &$variables, $title_parents = ['title
 
   // Add help to title (aka label).
   _webform_preprocess_help($variables, $title_parents);
+
+  // Hide 'item' label[for].
+  if ($type === 'item') {
+    $variables['label']['#attributes']['webform-remove-for-attribute'] = TRUE;
+  }
 }
 
 /**
@@ -1058,9 +1103,8 @@ function webform_theme_suggestions_webform_progress_tracker(array $variables) {
 /******************************************************************************/
 
 /**
- * Add webform options display suggession to radios and checkboxes.
- */
-/**
+ * Add webform options display suggestions to radios and checkboxes.
+ *
  * @param array $variables
  *   Template variables.
  * @param string $type
@@ -1069,7 +1113,6 @@ function webform_theme_suggestions_webform_progress_tracker(array $variables) {
  * @return array
  *   If element include #options_display a template suggestion for
  *   TYPE-OPTIONS-DISPLAY
- *
  */
 function _webform_theme_suggestions_options(array $variables, $type) {
   if (!WebformElementHelper::isWebformElement($variables['element'])) {
@@ -1098,7 +1141,6 @@ function webform_theme_suggestions_checkboxes(array $variables) {
   return _webform_theme_suggestions_options($variables, 'checkboxes');
 }
 
-
 /**
  * Implements hook_theme_suggestions_HOOK().
  */
diff --git a/modules/contrib/webform/includes/webform.theme.template.inc b/modules/contrib/webform/includes/webform.theme.template.inc
index c9b8ce9a..805fe9d5 100644
--- a/modules/contrib/webform/includes/webform.theme.template.inc
+++ b/modules/contrib/webform/includes/webform.theme.template.inc
@@ -140,6 +140,7 @@ function template_preprocess_webform_confirmation(array &$variables) {
     $variables['progress'] = [
       '#theme' => 'webform_progress',
       '#webform' => $webform,
+      '#webform_submission' => $webform_submission,
       '#current_page' => 'webform_confirmation',
     ];
   }
@@ -325,9 +326,14 @@ function template_preprocess_webform_submission_information(array &$variables) {
     $variables['uri'] = Link::fromTextAndUrl($source_url->setAbsolute(FALSE)->toString(), $source_url);
   }
 
+  if ($webform->getSetting('token_view')) {
+    $token_view_url = $webform_submission->getTokenUrl('view');
+    $variables['token_view'] = Link::fromTextAndUrl($token_view_url->setAbsolute(FALSE)->toString(), $token_view_url);
+  }
+
   if ($webform->getSetting('token_update')) {
-    $token_url = $webform_submission->getTokenUrl();
-    $variables['token_update'] = Link::fromTextAndUrl($token_url->setAbsolute(FALSE)->toString(), $token_url);
+    $token_update_url = $webform_submission->getTokenUrl('update');
+    $variables['token_update'] = Link::fromTextAndUrl($token_update_url->setAbsolute(FALSE)->toString(), $token_update_url);
   }
 
   if (($source_entity = $webform_submission->getSourceEntity()) && $source_entity->hasLinkTemplate('canonical')) {
@@ -501,10 +507,11 @@ function template_preprocess_webform_progress(array &$variables) {
 
   /** @var \Drupal\webform\WebformInterface $webform */
   $webform = $variables['webform'];
+  $webform_submission = $variables['webform_submission'];
   $current_page = $variables['current_page'];
   $operation = $variables['operation'];
 
-  $pages = $webform->getPages($operation);
+  $pages = $webform->getPages($operation, $webform_submission);
 
   $page_keys = array_keys($pages);
   $page_indexes = array_flip($page_keys);
@@ -516,6 +523,7 @@ function template_preprocess_webform_progress(array &$variables) {
     $variables['bar'] = [
       '#theme' => ($libraries_manager->isIncluded('progress-tracker')) ? 'webform_progress_tracker' : 'webform_progress_bar',
       '#webform' => $webform,
+      '#webform_submission' => $webform_submission,
       '#current_page' => $current_page,
       '#operation' => $operation,
     ];
@@ -569,10 +577,11 @@ function template_preprocess_webform_progress_tracker(array &$variables) {
 function _template_preprocess_webform_progress(array &$variables) {
   /** @var \Drupal\webform\WebformInterface $webform */
   $webform = $variables['webform'];
+  $webform_submission = $variables['webform_submission'];
   $current_page = $variables['current_page'];
   $operation = $variables['operation'];
 
-  $pages = $webform->getPages($operation);
+  $pages = $webform->getPages($operation, $webform_submission);
 
   $page_keys = array_keys($pages);
   $page_indexes = array_flip($page_keys);
diff --git a/modules/contrib/webform/includes/webform.translation.inc b/modules/contrib/webform/includes/webform.translation.inc
index f9c9c7ef..81b5c82c 100644
--- a/modules/contrib/webform/includes/webform.translation.inc
+++ b/modules/contrib/webform/includes/webform.translation.inc
@@ -65,7 +65,8 @@ function webform_form_config_translation_add_form_alter(&$form, FormStateInterfa
       _webform_form_config_translate_add_form_alter_yaml_element($config_element['test']['types']);
       _webform_form_config_translate_add_form_alter_yaml_element($config_element['test']['names']);
     }
-    elseif (strpos($config_name, 'webform.webform_options.') === 0) {
+    elseif (strpos($config_name, 'webform.webform_options.') === 0
+      || strpos($config_name, 'webform_options_custom.webform_options_custom.') === 0) {
       _webform_form_config_translate_add_form_alter_yaml_element($config_element['options']);
     }
     elseif (strpos($config_name, 'webform.webform.') === 0) {
@@ -86,8 +87,11 @@ function webform_form_config_translation_add_form_alter(&$form, FormStateInterfa
       $form_state->set('webform_config_name', $config_name);
       $form_state->set('webform_source_elements', $source_elements);
 
-      $form['#validate'][] = '_webform_form_config_translate_add_form_validate';
+      // Tweak default 128 max length for certain settings.
+      $config_element['title']['translation']['#maxlength'] = 255;
+      $config_element['settings']['submission_label']['translation']['#maxlength'] = NULL;
 
+      $form['#validate'][] = '_webform_form_config_translate_add_form_validate';
     }
   }
 }
@@ -163,11 +167,15 @@ function webform_form_config_translation_edit_form_alter(&$form, FormStateInterf
  */
 function _webform_form_config_translate_add_form_alter_yaml_element(array &$element, $source_value = NULL, $translation_value = NULL) {
   // Source.
+  $source_value = $source_value ?: trim(strip_tags($element['source']['#markup']));
+  if ($source_value === ((string) t('(Empty)'))) {
+    $source_value = '';
+  }
   $element['source']['#wrapper_attributes']['class'][] = 'webform-translation-source';
   $element['source']['value'] = [
     '#type' => 'webform_codemirror',
     '#mode' => 'yaml',
-    '#value' => WebformYaml::tidy($source_value ?: trim(strip_tags($element['source']['#markup']))),
+    '#value' => ($source_value) ? WebformYaml::tidy($source_value) : '',
     '#disabled' => TRUE,
     '#attributes' => ['readonly' => TRUE],
   ];
@@ -221,8 +229,24 @@ function webform_lingotek_config_entity_document_upload(array &$source_data, Con
       break;
 
     case 'webform_options';
+    case 'webform_options_custom';
       // Convert options YAML string to an associative array.
-      $source_data['options'] = Yaml::decode($source_data['options']);
+      $options = Yaml::decode($source_data['options']);;
+
+      // Extract optgroups from the options and append them as '_optgroups_'
+      // to the options so that the optgroups can be translated.
+      $optgroups = [];
+      foreach ($options as $option_value => $option_text) {
+        if (is_array($option_text)) {
+          $optgroups[$option_value] = $option_value;
+        }
+      }
+      if ($optgroups) {
+        $options['_optgroups_'] = $optgroups;
+      }
+
+      // Update source data's options.
+      $source_data['options'] = $options;
       break;
   }
 }
@@ -256,10 +280,32 @@ function webform_lingotek_config_entity_translation_presave(ConfigEntityInterfac
       break;
 
     case 'webform_options';
+    case 'webform_options_custom';
+      $options = $data['options'];
+      // If '_optgroups_' are defined we need to translate the optgroups.
+      if (isset($options['_optgroups_'])) {
+        // Get optgroup from options.
+        $optgroups = $options['_optgroups_'];
+        unset($options['_optgroups_']);
+
+        // Build translated optgroup options.
+        $optgroup_options = [];
+        foreach ($options as $option_value => $option_text) {
+          if (is_array($option_text)) {
+            $optgroups_options[$optgroups[$option_value]] = $option_text;
+          }
+          else {
+            $optgroup_options[$option_value] = $option_text;
+          }
+        }
+        // Replace options with optgroup options.
+        $options = $optgroups_options;
+      }
+
       /** @var \Drupal\webform\WebformOptionsInterface $translation */
       // Convert options associative array back to YAML string.
-      $translation->setOptions($data['options']);
-      $data['options'] = Yaml::encode($data['options']);
+      $translation->setOptions($options);
+      $data['options'] = Yaml::encode($options);
       break;
   }
 }
diff --git a/modules/contrib/webform/js/webform.ajax.js b/modules/contrib/webform/js/webform.ajax.js
index 682a6117..4ba4ac27 100644
--- a/modules/contrib/webform/js/webform.ajax.js
+++ b/modules/contrib/webform/js/webform.ajax.js
@@ -354,7 +354,7 @@
    * @param {object} response
    *   Ajax response.
    * @param {string} response.message
-   *   A message to be displayed in the confirm dialog..
+   *   A message to be displayed in the confirm dialog.
    */
   Drupal.AjaxCommands.prototype.webformConfirmReload = function (ajax, response) {
     if (window.confirm(response.message)) {
diff --git a/modules/contrib/webform/js/webform.element.checkboxes.js b/modules/contrib/webform/js/webform.element.checkboxes.js
index 08e0bfa0..35ca690a 100644
--- a/modules/contrib/webform/js/webform.element.checkboxes.js
+++ b/modules/contrib/webform/js/webform.element.checkboxes.js
@@ -24,6 +24,11 @@
             .find('input[type="checkbox"]')
             .first();
 
+          // Copy clientside_validation.module's message to the checkboxes.
+          if ($element.attr('data-msg-required')) {
+            $firstCheckbox.attr('data-msg-required', $element.attr('data-msg-required'));
+          }
+
           $element.find('input[type="checkbox"]').on('click', required);
           required();
 
diff --git a/modules/contrib/webform/js/webform.element.choices.js b/modules/contrib/webform/js/webform.element.choices.js
index b489cf51..be29b560 100644
--- a/modules/contrib/webform/js/webform.element.choices.js
+++ b/modules/contrib/webform/js/webform.element.choices.js
@@ -11,6 +11,7 @@
   Drupal.webform = Drupal.webform || {};
   Drupal.webform.choices = Drupal.webform.choices || {};
   Drupal.webform.choices.options = Drupal.webform.choices.options || {};
+  Drupal.webform.choices.options.selectSearchMinItems = 10;
 
   /**
    * Initialize Choices support.
@@ -29,6 +30,8 @@
         .each(function () {
           var $select = $(this);
           var options = {
+            // Disable sorting.
+            shouldSort: false,
             // Translate all default strings.
             loadingText: Drupal.t('Loading...'),
             noResultsText: Drupal.t('No results found'),
@@ -48,11 +51,12 @@
             }
           };
 
-          // Remove item buttons addresses accessibility issue when
-          // deleting multiple options.
+          // Enabling the 'remove item buttons' options addresses accessibility
+          // issue when deleting multiple options.
           if ($select.attr('multiple')) {
             options.removeItemButton = true;
           }
+
           options = $.extend(options, Drupal.webform.choices.options);
 
           if ($select.data('placeholder')) {
@@ -82,7 +86,9 @@
     }
     $choices.each(function () {
       var choices = $(this).data('choices');
-      choices[(e.value) ? 'disable' : 'enable']();
+      if (choices) {
+        choices[(e.value) ? 'disable' : 'enable']();
+      }
     });
   });
 
diff --git a/modules/contrib/webform/js/webform.element.codemirror.js b/modules/contrib/webform/js/webform.element.codemirror.js
index 56d0ff7c..0e3f1ed9 100644
--- a/modules/contrib/webform/js/webform.element.codemirror.js
+++ b/modules/contrib/webform/js/webform.element.codemirror.js
@@ -70,6 +70,22 @@
         // Now, close details.
         $details.removeAttr('open');
 
+        // Apply the textarea's min/max-height to the CodeMirror editor.
+        if ($input.css('min-height')) {
+          var minHeight = $input.css('min-height');
+          $(editor.getWrapperElement())
+            .css('min-height', minHeight)
+            .find('.CodeMirror-scroll')
+            .css('min-height', minHeight);
+        }
+        if ($input.css('max-height')) {
+          var maxHeight = $input.css('max-height');
+          $(editor.getWrapperElement())
+            .css('max-height', maxHeight)
+            .find('.CodeMirror-scroll')
+            .css('max-height', maxHeight);
+        }
+
         // Issue #2764443: CodeMirror is not setting submitted value when
         // rendered within a webform UI dialog.
         editor.on('blur', function (event) {
@@ -112,10 +128,13 @@
       });
 
       // Webform CodeMirror syntax coloring.
-      $(context).find('.js-webform-codemirror-runmode').once('webform-codemirror-runmode').each(function () {
-        // Mode Runner - http://codemirror.net/demo/runmode.html
-        CodeMirror.runMode($(this).addClass('cm-s-default').text(), $(this).attr('data-webform-codemirror-mode'), this);
-      });
+      if (window.CodeMirror.runMode) {
+        $(context).find('.js-webform-codemirror-runmode').once('webform-codemirror-runmode').each(function () {
+          // Mode Runner - http://codemirror.net/demo/runmode.html
+          CodeMirror.runMode($(this).addClass('cm-s-default').text(), $(this).attr('data-webform-codemirror-mode'), this);
+        });
+      }
+
     }
   };
 
diff --git a/modules/contrib/webform/js/webform.element.date.js b/modules/contrib/webform/js/webform.element.date.js
index 5ee0d6e3..fb75281f 100644
--- a/modules/contrib/webform/js/webform.element.date.js
+++ b/modules/contrib/webform/js/webform.element.date.js
@@ -90,8 +90,8 @@
 
         // Days of the week.
         // @see https://stackoverflow.com/questions/2968414/disable-specific-days-of-the-week-on-jquery-ui-datepicker
-        if ($input.data('days')) {
-          var days = $input.data('days').split(',');
+        if ($input.attr('data-days')) {
+          var days = $input.attr('data-days').split(',');
           options.beforeShowDay = function (date) {
             var day = date.getDay().toString();
             return [(days.indexOf(day) !== -1) ? true : false];
diff --git a/modules/contrib/webform/js/webform.element.other.js b/modules/contrib/webform/js/webform.element.other.js
index 88f46438..124aaab4 100644
--- a/modules/contrib/webform/js/webform.element.other.js
+++ b/modules/contrib/webform/js/webform.element.other.js
@@ -76,14 +76,19 @@
         var $element = $(this);
 
         var $select = $element.find('select');
-        var $otherOption = $element.find('option[value="_other_"]');
         var $input = $element.find('.js-webform-select-other-input');
 
         $select.on('change', function () {
-          toggleOther($otherOption.is(':selected'), $input);
+          var isOtherSelected = $select
+            .find('option[value="_other_"]')
+            .is(':selected');
+          toggleOther(isOtherSelected, $input);
         });
 
-        toggleOther($otherOption.is(':selected'), $input, false);
+        var isOtherSelected = $select
+          .find('option[value="_other_"]')
+          .is(':selected');
+        toggleOther(isOtherSelected, $input, false);
       });
     }
   };
diff --git a/modules/contrib/webform/js/webform.element.radios.js b/modules/contrib/webform/js/webform.element.radios.js
index bcf014ee..dcb8b5ad 100644
--- a/modules/contrib/webform/js/webform.element.radios.js
+++ b/modules/contrib/webform/js/webform.element.radios.js
@@ -17,7 +17,14 @@
   Drupal.behaviors.webformRadiosRequired = {
     attach: function (context) {
       $('.js-webform-type-radios.required, .js-webform-type-webform-radios-other.required', context).each(function () {
-        $(this).find('input[type="radio"]').attr({'required': 'required', 'aria-required': 'true'});
+        var $element = $(this);
+        var $radios = $element.find('input[type="radio"]');
+        $radios.attr({'required': 'required', 'aria-required': 'true'});
+
+        // Copy clientside_validation.module's message to the radio buttons.
+        if ($element.attr('data-msg-required')) {
+          $radios.attr({'data-msg-required': $element.attr('data-msg-required')});
+        }
       });
     }
   };
diff --git a/modules/contrib/webform/js/webform.element.range.js b/modules/contrib/webform/js/webform.element.range.js
index 5c1a8d7a..c10ef3bd 100644
--- a/modules/contrib/webform/js/webform.element.range.js
+++ b/modules/contrib/webform/js/webform.element.range.js
@@ -31,10 +31,10 @@
         $output.val($input.val());
 
         // Sync input and output values.
-        $input.on('input', function () {
+        $input.on('change input', function () {
           $output.val($input.val());
         });
-        $output.on('input', function () {
+        $output.on('change input', function () {
           $input.val($output.val());
         });
       });
@@ -68,7 +68,7 @@
 
         $element.css('position', 'relative');
 
-        $input.on('input', function () {
+        $input.on('change input', function () {
           var inputValue = $input.val();
 
           // Set output text with prefix and suffix.
diff --git a/modules/contrib/webform/js/webform.element.states.js b/modules/contrib/webform/js/webform.element.states.js
index 1f59bfb5..2159ca93 100644
--- a/modules/contrib/webform/js/webform.element.states.js
+++ b/modules/contrib/webform/js/webform.element.states.js
@@ -7,6 +7,8 @@
 
   'use strict';
 
+  var isChrome = (/chrom(e|ium)/.test(window.navigator.userAgent.toLowerCase()));
+
   /**
    * Element #states builder.
    *
@@ -45,6 +47,8 @@
               .autocomplete('option', 'source', [])
               .removeClass('form-autocomplete');
           }
+          // Always disable browser auto completion.
+          $value.attr('autocomplete', (isChrome ? 'chrome-off' : 'off'));
         }).change();
       });
 
diff --git a/modules/contrib/webform/js/webform.element.telephone.js b/modules/contrib/webform/js/webform.element.telephone.js
index c8e0ecfb..ef7819f9 100644
--- a/modules/contrib/webform/js/webform.element.telephone.js
+++ b/modules/contrib/webform/js/webform.element.telephone.js
@@ -30,14 +30,23 @@
         var $error = $('<div class="form-item--error-message">' + Drupal.t('Invalid phone number') + '</div>').hide();
         $telephone.closest('.js-form-item').append($error);
 
-        var options = $.extend({
+        var options = {
           // The utilsScript is fetched when the page has finished.
           // @see \Drupal\webform\Plugin\WebformElement\Telephone::prepare
           // @see https://github.com/jackocnr/intl-tel-input
           utilsScript: drupalSettings.webform.intlTelInput.utilsScript,
-          nationalMode: false,
-          initialCountry: $telephone.attr('data-webform-telephone-international-initial-country') || ''
-        }, Drupal.webform.intlTelInput.options);
+          nationalMode: false
+        };
+
+        // Parse data attributes.
+        if ($telephone.attr('data-webform-telephone-international-initial-country')) {
+          options.initialCountry = $telephone.attr('data-webform-telephone-international-initial-country');
+        }
+        if ($telephone.attr('data-webform-telephone-international-preferred-countries')) {
+          options.preferredCountries = JSON.parse($telephone.attr('data-webform-telephone-international-preferred-countries'));
+        }
+
+        options = $.extend(options, Drupal.webform.intlTelInput.options);
         $telephone.intlTelInput(options);
 
         var reset = function () {
diff --git a/modules/contrib/webform/js/webform.form.js b/modules/contrib/webform/js/webform.form.js
index 7ed24a5f..900f1879 100644
--- a/modules/contrib/webform/js/webform.form.js
+++ b/modules/contrib/webform/js/webform.form.js
@@ -151,7 +151,7 @@
             this.setCustomValidity($(this).attr('data-webform-required-error'));
           }
         })
-        .on('input, change', function () {
+        .on('input change', function () {
           // Find all related elements by name and reset custom validity.
           // This specifically applies to required radios and checkboxes.
           var name = $(this).attr('name');
@@ -169,11 +169,4 @@
       .each(function () {this.setCustomValidity('');});
   });
 
-  if (window.imceInput) {
-    window.imceInput.processUrlInput = function (i, el) {
-      var button = imceInput.createUrlButton(el.id, el.getAttribute('data-imce-type'));
-      el.parentNode.insertAfter(button, el);
-    };
-  }
-
 })(jQuery, Drupal);
diff --git a/modules/contrib/webform/js/webform.form.submit_once.js b/modules/contrib/webform/js/webform.form.submit_once.js
index ab8414b9..cd0a2ccc 100644
--- a/modules/contrib/webform/js/webform.form.submit_once.js
+++ b/modules/contrib/webform/js/webform.form.submit_once.js
@@ -22,20 +22,23 @@
         // Remove data-webform-submitted.
         $form.removeData('webform-submitted');
         // Remove .js-webform-submit-clicked.
-        $form.find('.form-actions :submit').removeClass('js-webform-submit-clicked');
+        $form.find('.js-webform-wizard-pages-links :submit, .form-actions :submit').removeClass('js-webform-submit-clicked');
 
         // Track which submit button was clicked.
         // @see http://stackoverflow.com/questions/5721724/jquery-how-to-get-which-button-was-clicked-upon-form-submission
-        $form.find('.form-actions :submit').click(function () {
-          $form.find('.form-actions :submit')
+        $form.find('.js-webform-wizard-pages-links :submit, .form-actions :submit').click(function () {
+          $form.find('.js-webform-wizard-pages-links :submit, .form-actions :submit')
             .removeClass('js-webform-submit-clicked');
           $(this)
             .addClass('js-webform-submit-clicked');
         });
 
         $(this).submit(function () {
+          // Find clicked button
+          var $clickedButton = $form.find('.js-webform-wizard-pages-links :submit.js-webform-submit-clicked, .form-actions :submit.js-webform-submit-clicked');
+
           // Don't submit if client-side validation has failed.
-          if ($.isFunction(jQuery.fn.valid) && !($form.valid())) {
+          if (!$clickedButton.attr('formnovalidate') && $.isFunction(jQuery.fn.valid) && !($form.valid())) {
             return false;
           }
 
@@ -47,11 +50,10 @@
 
           // Visually disable all submit buttons.
           // Submit buttons can't disabled because their op(eration) must to be posted back to the server.
-          $form.find('.form-actions :submit').addClass('is-disabled');
+          $form.find('.js-webform-wizard-pages-links :submit, .form-actions :submit').addClass('is-disabled');
 
           // Set the throbber progress indicator.
           // @see Drupal.Ajax.prototype.setProgressIndicatorThrobber
-          var $clickedButton = $form.find('.form-actions :submit.js-webform-submit-clicked');
           var $progress = $('<div class="ajax-progress ajax-progress-throbber"><div class="throbber">&nbsp;</div></div>');
           $clickedButton.after($progress);
         });
diff --git a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessSubmissionViewsTest.php b/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessSubmissionViewsTest.php
deleted file mode 100644
index 065447c7..00000000
--- a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessSubmissionViewsTest.php
+++ /dev/null
@@ -1,99 +0,0 @@
-<?php
-
-namespace Drupal\webform_access\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform access submission views.
- *
- * @group WebformAccess
- */
-class WebformAccessSubmissionViewsTest extends WebformAccessTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['views', 'webform_test_views'];
-
-  /**
-   * Tests webform access submission views.
-   */
-  public function testWebformAccessSubmissionViewsTest() {
-    // Create a test submission for each node and user account.
-    $webform = Webform::load('contact');
-    /** @var \Drupal\webform\WebformSubmissionGenerateInterface $submission_generate */
-    $submission_generate = \Drupal::service('webform_submission.generate');
-    foreach ($this->nodes as $node) {
-      foreach ($this->users as $user) {
-        WebformSubmission::create([
-          'webform_id' => 'contact',
-          'entity_type' => 'node',
-          'entity_id' => $node->id(),
-          'uid' => $user->id(),
-          'data' => $submission_generate->getData($webform),
-        ])->save();
-      }
-    }
-
-    $this->checkUserSubmissionAccess($webform, $this->users);
-  }
-
-  /**
-   * Check user submission access.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   The webform.
-   * @param array $accounts
-   *   An associative array of test users.
-   *
-   * @see \Drupal\Tests\webform\Functional\WebformSubmissionViewsAccessTest::checkUserSubmissionAccess
-   */
-  protected function checkUserSubmissionAccess(WebformInterface $webform, array $accounts) {
-    /** @var \Drupal\webform\WebformSubmissionStorageInterface $webform_submission_storage */
-    $webform_submission_storage = \Drupal::entityTypeManager()->getStorage('webform_submission');
-
-    // Reset the static cache to make sure we are hitting actual fresh access
-    // results.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    \Drupal::entityTypeManager()->getAccessControlHandler('webform_submission')->resetCache();
-
-    foreach ($accounts as $account_type => $account) {
-      // Login the current user.
-      $this->drupalLogin($account);
-
-      // Get the webform_test_views_access view and the sid for each
-      // displayed record.  Submission access is controlled via the query.
-      // @see webform_query_webform_submission_access_alter()
-      $this->drupalGet('/admin/structure/webform/test/views_access');
-
-      $views_sids = [];
-      foreach ($this->cssSelect('.view .view-content tbody .views-field-sid') as $node) {
-        $views_sids[] = $node->getText();
-      }
-      sort($views_sids);
-
-      $expected_sids = [];
-
-      // Load all webform submissions and check access using the access method.
-      // @see \Drupal\webform\WebformSubmissionAccessControlHandler::checkAccess
-      $webform_submissions = $webform_submission_storage->loadByEntities($webform);
-
-      foreach ($webform_submissions as $webform_submission) {
-        if ($webform_submission->access('view', $account)) {
-          $expected_sids[] = $webform_submission->id();
-        }
-      }
-
-      sort($expected_sids);
-
-      // Check that the views sids is equal to the expected sids.
-      $this->assertEqual($expected_sids, $views_sids, "User '" . $account_type . "' access has correct access through view on webform submission entity type.");
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTest.php b/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTest.php
deleted file mode 100644
index bfa4ae31..00000000
--- a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTest.php
+++ /dev/null
@@ -1,245 +0,0 @@
-<?php
-
-namespace Drupal\webform_access\Tests;
-
-use Drupal\field\Entity\FieldConfig;
-
-/**
- * Tests for webform access.
- *
- * @group WebformAccess
- */
-class WebformAccessTest extends WebformAccessTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['field_ui'];
-
-  /**
-   * Tests webform access.
-   */
-  public function testWebformAccess() {
-    $nid = $this->nodes['contact_01']->id();
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check that employee and manager groups exist.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertLink('employee_group');
-    $this->assertLink('manager_group');
-
-    // Check that webform node is assigned to groups.
-    $this->assertLink($this->nodes['contact_01']->label());
-
-    // Check that employee and manager users can't access webform results.
-    foreach ($this->users as $account) {
-      $this->drupalLogin($account);
-      $this->drupalGet("/node/$nid/webform/results/submissions");
-      $this->assertResponse(403);
-    }
-
-    $this->drupalLogin($this->rootUser);
-
-    // Assign users to groups via the UI.
-    foreach ($this->groups as $name => $group) {
-      $this->drupalPostForm(
-        "/admin/structure/webform/access/group/manage/$name",
-        ['users[]' => $this->users[$name]->id()],
-        t('Save')
-      );
-    }
-
-    // Check that manager and employee users can access webform results.
-    foreach (['manager', 'employee'] as $name) {
-      $account = $this->users[$name];
-      $this->drupalLogin($account);
-      $this->drupalGet("/node/$nid/webform/results/submissions");
-      $this->assertResponse(200);
-    }
-
-    // Check that employee can't delete results.
-    $this->drupalLogin($this->users['employee']);
-    $this->drupalGet("/node/$nid/webform/results/clear");
-    $this->assertResponse(403);
-
-    // Check that manager can delete results.
-    $this->drupalLogin($this->users['manager']);
-    $this->drupalGet("/node/$nid/webform/results/clear");
-    $this->assertResponse(200);
-
-    // Unassign employee user from employee group via the UI.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm(
-      '/admin/structure/webform/access/group/manage/employee',
-      ['users[]' => 1],
-      t('Save')
-    );
-
-    // Assign employee user to manager group via the UI.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm(
-      '/user/' . $this->users['employee']->id() . '/edit',
-      ['webform_access_group[]' => 'manager'],
-      t('Save')
-    );
-
-    // Check defining webform field's access groups default value.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/admin/structure/types');
-    $this->drupalGet('/admin/structure/types/manage/webform/fields');
-    $this->drupalPostForm(
-      '/admin/structure/types/manage/webform/fields/node.webform.webform',
-      [
-        'default_value_input[webform][0][target_id]' => 'contact',
-        'default_value_input[webform][0][settings][default_data]' => 'test: test',
-        'default_value_input[webform][0][settings][webform_access_group][]' => 'manager',
-      ],
-      t('Save settings')
-    );
-    $this->drupalGet('/node/add/webform');
-    $this->assertFieldByName('webform[0][settings][webform_access_group][]', 'manager');
-
-    // Check that employee can now delete results.
-    $this->drupalLogin($this->users['employee']);
-    $this->drupalGet("/node/$nid/webform/results/clear");
-    $this->assertResponse(200);
-
-    // Unassign node from groups.
-    $this->drupalLogin($this->rootUser);
-    foreach ($this->groups as $name => $group) {
-      $this->drupalPostForm(
-        "/admin/structure/webform/access/group/manage/$name",
-        ['entities[]' => 'node:' . $this->nodes['contact_02']->id() . ':webform:contact'],
-        t('Save')
-      );
-    }
-
-    // Check that employee can't access results.
-    $this->drupalLogin($this->users['employee']);
-    $this->drupalGet("/node/$nid/webform/results/clear");
-    $this->assertResponse(403);
-
-    // Assign webform node to group via the UI.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm(
-      "/node/$nid/edit",
-      ['webform[0][settings][webform_access_group][]' => 'manager'],
-      t('Save')
-    );
-
-    // Check that employee can now access results.
-    $this->drupalLogin($this->users['employee']);
-    $this->drupalGet("/node/$nid/webform/results/clear");
-    $this->assertResponse(200);
-
-    // Delete employee group.
-    $this->groups['employee']->delete();
-
-    // Check that employee group is configured.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertRaw('manager_type');
-    $this->assertLink('manager_group');
-    $this->assertLink('manager_user');
-    $this->assertLink('employee_user');
-    $this->assertLink('contact_01');
-    $this->assertLink('contact_02');
-
-    // Reset caches.
-    \Drupal::entityTypeManager()->getStorage('webform_access_group')->resetCache();
-    \Drupal::entityTypeManager()->getStorage('webform_access_type')->resetCache();
-
-    // Delete types.
-    foreach ($this->types as $type) {
-      $type->delete();
-    }
-
-    // Check that manager type has been removed.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertNoRaw('manager_type');
-
-    // Delete users.
-    foreach ($this->users as $user) {
-      $user->delete();
-    }
-
-    // Check that manager type has been removed.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertNoLink('manager_user');
-    $this->assertNoLink('employee_user');
-
-    // Delete contact 2.
-    $this->nodes['contact_02']->delete();
-
-    // Check that contact_02 has been removed.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertNoLink('contact_02');
-
-    // Delete webform field config.
-    FieldConfig::loadByName('node', 'webform', 'webform')->delete();
-
-    // Check that contact_02 has been removed.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertNoLink('contact_02');
-  }
-
-  /**
-   * Tests webform administrator access.
-   */
-  public function testWebformAdministratorAccess() {
-    // Check root user access to group edit form.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/admin/structure/webform/access/group/manage/manager');
-    $this->assertFieldByName('label');
-    $this->assertFieldByName('description[value]');
-    $this->assertFieldByName('type');
-    $this->assertFieldByName('admins[]');
-    $this->assertFieldByName('users[]');
-    $this->assertFieldByName('entities[]');
-    $this->assertFieldByName('permissions[administer]');
-
-    // Logout.
-    $this->drupalLogout();
-
-    // Check access denied to 'Access' tab for anonymous user.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertResponse(403);
-
-    // Login as administrator.
-    $administrator = $this->drupalCreateUser();
-    $this->drupalLogin($administrator);
-
-    // Check access denied to 'Access' tab for administrator.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertResponse(403);
-
-    // Assign administrator to the 'manager' access group.
-    $this->groups['manager']->addAdminId($administrator->id());
-    $this->groups['manager']->save();
-
-    // Check access allowed to 'Access' tab for administrator.
-    $this->drupalGet('/admin/structure/webform/access/group/manage');
-    $this->assertResponse(200);
-    $this->assertLink('Manage');
-    $this->assertNoLink('Edit');
-
-    // Click 'manager_group' link and move to the group edit form.
-    $this->clickLink('manager_group');
-
-    // Check that details information exists.
-    $this->assertRaw('<details data-drupal-selector="edit-information" id="edit-information" class="js-form-wrapper form-wrapper">');
-
-    // Check that users element exists.
-    $this->assertNoFieldByName('label');
-    $this->assertNoFieldByName('description[value]');
-    $this->assertNoFieldByName('type');
-    $this->assertNoFieldByName('admins[]');
-    $this->assertFieldByName('users[]');
-    $this->assertNoFieldByName('entities[]');
-    $this->assertNoFieldByName('permissions[administer]');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTestBase.php b/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTestBase.php
deleted file mode 100644
index a1069fe8..00000000
--- a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTestBase.php
+++ /dev/null
@@ -1,97 +0,0 @@
-<?php
-
-namespace Drupal\webform_access\Tests;
-
-use Drupal\webform_access\Entity\WebformAccessGroup;
-use Drupal\webform_access\Entity\WebformAccessType;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Test base for webform access.
- */
-abstract class WebformAccessTestBase extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_access'];
-
-  /**
-   * Webform node[].
-   *
-   * @var \Drupal\node\NodeInterface
-   */
-  protected $nodes = [];
-
-  /**
-   * Users.
-   *
-   * @var \Drupal\user\UserInterface[]
-   */
-  protected $users = [];
-
-  /**
-   * Access types (manager, employee, and customer).
-   *
-   * @var \Drupal\webform_access\WebformAccessTypeInterface[]
-   */
-  protected $types = [];
-
-  /**
-   * Access groups (manager, employee, and customer).
-   *
-   * @var \Drupal\webform_access\WebformAccessGroupInterface[]
-   */
-  protected $groups = [];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create webform nodes.
-    $this->nodes['contact_01'] = $this->createWebformNode('contact', ['title' => 'contact_01']);
-    $this->nodes['contact_02'] = $this->createWebformNode('contact', ['title' => 'contact_02']);
-
-    // Create webform access types and groups.
-    $types = [
-      'manager' => [
-        'administer',
-      ],
-      'employee' => [
-        'view_any',
-        'update_any',
-      ],
-      'customer' => [
-        'view_own',
-        'update_own',
-      ],
-    ];
-    foreach ($types as $type => $permissions) {
-      $this->users[$type] = $this->drupalCreateUser([], $type . '_user');
-
-      $values = [
-        'id' => $type,
-        'label' => $type . '_type',
-      ];
-      $webform_access_type = WebformAccessType::create($values);
-      $webform_access_type->save();
-      $this->types[$type] = $webform_access_type;
-
-      $values = [
-        'id' => $type,
-        'type' => $type,
-        'label' => $type . '_group',
-        'permissions' => $permissions,
-      ];
-      $webform_access_group = WebformAccessGroup::create($values);
-      $webform_access_group->addEntityId('node', $this->nodes['contact_01']->id(), 'webform', 'contact');
-      $webform_access_group->save();
-      $this->groups[$type] = $webform_access_group;
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTokensTest.php b/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTokensTest.php
deleted file mode 100644
index 3d5095d5..00000000
--- a/modules/contrib/webform/modules/webform_access/src/Tests/WebformAccessTokensTest.php
+++ /dev/null
@@ -1,102 +0,0 @@
-<?php
-
-namespace Drupal\webform_access\Tests;
-
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform tokens access.
- *
- * @group WebformAccess
- */
-class WebformAccessTokensTest extends WebformAccessTestBase {
-
-  /**
-   * Tests webform access tokens.
-   */
-  public function testWebformAccessTokens() {
-    // Add both users to employee group.
-    foreach ($this->users as $account) {
-      $this->groups['employee']->addUserId($account->id());
-    }
-    $employee_admin_user = $this->drupalCreateUser([], 'employee_admin_user');
-    $this->groups['employee']->addAdminId($employee_admin_user->id());
-    $this->groups['employee']->addEmail('employee_admin_custom@test.com');
-    $this->groups['employee']->save();
-
-    // Add other user to manager group.
-    $other_user = $this->drupalCreateUser([], 'other_user');
-    $this->groups['manager']->addUserId($other_user->id());
-    $manager_admin_user = $this->drupalCreateUser([], 'manager_admin_user');
-    $this->groups['manager']->addAdminId($manager_admin_user->id());
-    $this->groups['manager']->addEmail('manager_admin_custom@test.com');
-    $this->groups['manager']->save();
-
-    // Create a submission.
-    $edit = [
-      'name' => 'name',
-      'email' => 'name@example.com',
-      'subject' => 'subject',
-      'message' => 'message',
-    ];
-    $sid = $this->postNodeSubmission($this->nodes['contact_01'], $edit);
-    $webform_submission = WebformSubmission::load($sid);
-
-    /** @var \Drupal\webform\WebformTokenManagerInterface $token_manager */
-    $token_manager = \Drupal::service('webform.token_manager');
-    $token_data['webform_access'] = $webform_submission;
-
-    /**************************************************************************/
-    // [webform_access:type:TYPE] tokens.
-    /**************************************************************************/
-
-    // Check [webform_access:type:employee] token.
-    $result = $token_manager->replace('[webform_access:type:employee]', $webform_submission, $token_data);
-    $this->assertEqual('customer_user@example.com,employee_user@example.com,manager_user@example.com,employee_admin_custom@test.com', $result);
-
-    // Check [webform_access:type:employee:users] token.
-    $result = $token_manager->replace('[webform_access:type:employee:users]', $webform_submission, $token_data);
-    $this->assertEqual('customer_user@example.com,employee_user@example.com,manager_user@example.com', $result);
-
-    // Check [webform_access:type:employee:emails] token.
-    $result = $token_manager->replace('[webform_access:type:employee:emails]', $webform_submission, $token_data);
-    $this->assertEqual('employee_admin_custom@test.com', $result);
-
-    // Check [webform_access:type:employee:admins] token.
-    $result = $token_manager->replace('[webform_access:type:employee:admins]', $webform_submission, $token_data);
-    $this->assertEqual('employee_admin_user@example.com', $result);
-
-    // Check [webform_access:type:employee:all] token.
-    $result = $token_manager->replace('[webform_access:type:employee:all]', $webform_submission, $token_data);
-    $this->assertEqual('employee_admin_user@example.com,customer_user@example.com,employee_user@example.com,manager_user@example.com,employee_admin_custom@test.com', $result);
-
-    // Check [webform_access:type:manager] token.
-    $result = $token_manager->replace('[webform_access:type:manager]', $webform_submission, $token_data);
-    $this->assertEqual('other_user@example.com,manager_admin_custom@test.com', $result);
-
-    /**************************************************************************/
-    // [webform_access:type] tokens.
-    /**************************************************************************/
-
-    // Check [webform_access:type] token.
-    $result = $token_manager->replace('[webform_access:type]', $webform_submission, $token_data);
-    $this->assertEqual('customer_user@example.com,employee_user@example.com,manager_user@example.com,other_user@example.com,employee_admin_custom@test.com,manager_admin_custom@test.com', $result);
-
-    // Check [webform_access:type:admins] token.
-    $result = $token_manager->replace('[webform_access:admins]', $webform_submission, $token_data);
-    $this->assertEqual('employee_admin_user@example.com,manager_admin_user@example.com', $result);
-
-    // Check [webform_access:type:users] token.
-    $result = $token_manager->replace('[webform_access:users]', $webform_submission, $token_data);
-    $this->assertEqual('customer_user@example.com,employee_user@example.com,manager_user@example.com,other_user@example.com', $result);
-
-    // Check [webform_access:type:emails] token.
-    $result = $token_manager->replace('[webform_access:emails]', $webform_submission, $token_data);
-    $this->assertEqual('employee_admin_custom@test.com,manager_admin_custom@test.com', $result);
-
-    // Check [webform_access:type:all] token.
-    $result = $token_manager->replace('[webform_access:all]', $webform_submission, $token_data);
-    $this->assertEqual('employee_admin_user@example.com,manager_admin_user@example.com,customer_user@example.com,employee_user@example.com,manager_user@example.com,other_user@example.com,employee_admin_custom@test.com,manager_admin_custom@test.com', $result);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_access/webform_access.info.yml b/modules/contrib/webform/modules/webform_access/webform_access.info.yml
index b6cb69eb..62e9a8e5 100644
--- a/modules/contrib/webform/modules/webform_access/webform_access.info.yml
+++ b/modules/contrib/webform/modules/webform_access/webform_access.info.yml
@@ -1,14 +1,13 @@
 name: 'Webform Access'
 description: 'Provides webform access controls for webform nodes.'
-# core: 8.x
+core: 8.x
 package: Webform
 type: module
 dependencies:
   - 'webform:webform'
   - 'webform:webform_node'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_access/webform_access.module b/modules/contrib/webform/modules/webform_access/webform_access.module
index bdcd96aa..3ae03d0d 100644
--- a/modules/contrib/webform/modules/webform_access/webform_access.module
+++ b/modules/contrib/webform/modules/webform_access/webform_access.module
@@ -7,6 +7,7 @@
 
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Cache\Cache;
+use Drupal\Core\Database\Query\AlterableInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -238,6 +239,66 @@ function webform_access_webform_submission_access(WebformSubmissionInterface $we
   return AccessResult::neutral();
 }
 
+/**
+ * Implements hook_webform_submission_query_access_alter().
+ */
+function webform_access_webform_submission_query_access_alter(AlterableInterface $query, array $webform_submission_tables) {
+  $account = $query->getMetaData('account') ?: \Drupal::currentUser();
+
+  // Collect access group ids with 'view_any' or 'administer' permissions.
+  /** @var \Drupal\webform_access\WebformAccessGroupStorageInterface $access_group_storage */
+  $access_group_storage = \Drupal::entityTypeManager()->getStorage('webform_access_group');
+  /** @var \Drupal\webform_access\WebformAccessGroupInterface $access_group */
+  $access_groups = $access_group_storage->loadByEntities(NULL, NULL, $account);
+  $access_any_group_ids = [];
+  $access_own_group_ids = [];
+  foreach ($access_groups as $access_group) {
+    $access_group_permissions = $access_group->get('permissions');
+    $access_group_permissions = array_combine($access_group_permissions, $access_group_permissions);
+    if (isset($access_group_permissions['view_any']) || isset($access_group_permissions['administer'])) {
+      $access_any_group_ids[] = $access_group->id();
+    }
+    elseif (isset($access_group_permissions['view_own'])) {
+      $access_own_group_ids[] = $access_group->id();
+    }
+  }
+  if ($access_any_group_ids) {
+    // Add access group entity type, entity id, and webform id to the query.
+    $result = \Drupal::database()->select('webform_access_group_entity', 'ge')
+      ->fields('ge', ['entity_type', 'entity_id', 'webform_id'])
+      ->condition('group_id', $access_any_group_ids, 'IN')
+      ->execute();
+    while ($record = $result->fetchAssoc()) {
+      foreach ($webform_submission_tables as $table) {
+        /** @var \Drupal\Core\Database\Query\SelectInterface $query */
+        $condition = $query->andConditionGroup();
+        $condition->condition($table['alias'] . '.entity_type', $record['entity_type']);
+        $condition->condition($table['alias'] . '.entity_id', (string) $record['entity_id']);
+        $condition->condition($table['alias'] . '.webform_id', $record['webform_id']);
+        $table['condition']->condition($condition);
+      }
+    }
+  }
+  if ($access_own_group_ids) {
+    // Add access group entity type, entity id, and webform id to the query.
+    $result = \Drupal::database()->select('webform_access_group_entity', 'ge')
+      ->fields('ge', ['entity_type', 'entity_id', 'webform_id'])
+      ->condition('group_id', $access_own_group_ids, 'IN')
+      ->execute();
+    while ($record = $result->fetchAssoc()) {
+      foreach ($webform_submission_tables as $table) {
+        /** @var \Drupal\Core\Database\Query\SelectInterface $query */
+        $condition = $query->andConditionGroup();
+        $condition->condition($table['alias'] . '.uid', $account->id());
+        $condition->condition($table['alias'] . '.entity_type', $record['entity_type']);
+        $condition->condition($table['alias'] . '.entity_id', (string) $record['entity_id']);
+        $condition->condition($table['alias'] . '.webform_id', $record['webform_id']);
+        $table['condition']->condition($condition);
+      }
+    }
+  }
+}
+
 /******************************************************************************/
 // Webform access groups (node) entity.
 /******************************************************************************/
diff --git a/modules/contrib/webform/modules/webform_access/webform_access.tokens.inc b/modules/contrib/webform/modules/webform_access/webform_access.tokens.inc
index 7d9ad29e..02a5124e 100644
--- a/modules/contrib/webform/modules/webform_access/webform_access.tokens.inc
+++ b/modules/contrib/webform/modules/webform_access/webform_access.tokens.inc
@@ -39,7 +39,7 @@ function webform_access_token_info() {
     'description' => t('The email addresses of all <strong>administrators</strong> assigned to the current webform.'),
   ];
   $webform_access['all'] = [
-    'name' => t('All users, custom email addresses, and adminstrators'),
+    'name' => t('All users, custom email addresses, and administrators'),
     'description' => t('The email addresses of all <strong>users</strong>, <strong>custom email addresses</strong>, and <strong>administrators</strong> assigned to the current webform.'),
   ];
   foreach ($webform_access_types as $webform_access_type_name => $webform_access_type) {
diff --git a/modules/contrib/webform/modules/webform_attachment/src/Controller/WebformAttachmentController.php b/modules/contrib/webform/modules/webform_attachment/src/Controller/WebformAttachmentController.php
index 5b032506..ae128f3d 100644
--- a/modules/contrib/webform/modules/webform_attachment/src/Controller/WebformAttachmentController.php
+++ b/modules/contrib/webform/modules/webform_attachment/src/Controller/WebformAttachmentController.php
@@ -79,7 +79,7 @@ class WebformAttachmentController extends ControllerBase implements ContainerInj
 
     // Get the webform element and plugin.
     $element = $webform_submission->getWebform()->getElement($element) ?: [];
-    $element_plugin = $this->elementManager->getElementInstance($element);
+    $element_plugin = $this->elementManager->getElementInstance($element, $webform_submission);
 
     // Make sure the element is a webform attachment.
     if (!$element_plugin instanceof WebformAttachmentBase) {
diff --git a/modules/contrib/webform/modules/webform_attachment/src/Element/WebformAttachmentUrl.php b/modules/contrib/webform/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
index 635cdcc5..3ac01397 100644
--- a/modules/contrib/webform/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
+++ b/modules/contrib/webform/modules/webform_attachment/src/Element/WebformAttachmentUrl.php
@@ -48,7 +48,11 @@ class WebformAttachmentUrl extends WebformAttachmentBase {
    */
   public static function getFileName(array $element, WebformSubmissionInterface $webform_submission) {
     if (!isset($element['#filename']) && !empty($element['#url'])) {
-      return basename($element['#url']);
+      $filename = basename($element['#url']);
+      /** @var \Drupal\webform\WebformTokenManagerInterface $token_manager */
+      $token_manager = \Drupal::service('webform.token_manager');
+      $filename = $token_manager->replace($filename, $webform_submission);
+      return $filename;
     }
     else {
       return parent::getFileName($element, $webform_submission);
diff --git a/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentBase.php b/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentBase.php
index cbaaf898..42e58b64 100644
--- a/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentBase.php
+++ b/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentBase.php
@@ -51,6 +51,13 @@ abstract class WebformAttachmentBase extends WebformElementBase implements Webfo
     return $properties;
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function getTranslatableProperties() {
+    return array_merge(parent::getTranslatableProperties(), ['filename', 'link_title']);
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -244,7 +251,7 @@ abstract class WebformAttachmentBase extends WebformElementBase implements Webfo
         'filemime' => $file_mime,
         // URI is used when debugging or resending messages.
         // @see \Drupal\webform\Plugin\WebformHandler\EmailWebformHandler::buildAttachments
-        '_uri' => ($file_url) ? $file_url->toString() : NULL,
+        '_fileurl' => ($file_url) ? $file_url->toString() : NULL,
       ];
     }
     return $attachments;
diff --git a/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentUrl.php b/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentUrl.php
index 4b393813..31a5f260 100644
--- a/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentUrl.php
+++ b/modules/contrib/webform/modules/webform_attachment/src/Plugin/WebformElement/WebformAttachmentUrl.php
@@ -27,6 +27,13 @@ class WebformAttachmentUrl extends WebformAttachmentBase {
     ] + parent::getDefaultProperties();
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function getTranslatableProperties() {
+    return array_merge(parent::getTranslatableProperties(), ['url']);
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -66,6 +73,11 @@ class WebformAttachmentUrl extends WebformAttachmentBase {
       $form_state->setError($element, t('The URL %url is not valid.', ['%url' => $value]));
     }
 
+    // Skip validating [webform_submission] tokens which can't be replaced.
+    if (strpos($value, '[webform_submission:') !== FALSE) {
+      return;
+    }
+
     // Validate URL access.
     try {
       \Drupal::httpClient()->head($value);
diff --git a/modules/contrib/webform/modules/webform_attachment/src/Tests/WebformAttachmentTest.php b/modules/contrib/webform/modules/webform_attachment/src/Tests/WebformAttachmentTest.php
deleted file mode 100644
index 63216834..00000000
--- a/modules/contrib/webform/modules/webform_attachment/src/Tests/WebformAttachmentTest.php
+++ /dev/null
@@ -1,247 +0,0 @@
-<?php
-
-namespace Drupal\webform_attachment\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform_attachment\Element\WebformAttachmentToken;
-
-/**
- * Tests for webform example element.
- *
- * @group Webform
- */
-class WebformAttachmentTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['token', 'webform_attachment', 'webform_attachment_test'];
-
-  /**
-   * Tests webform attachment.
-   */
-  public function testWebformAttachment() {
-    global $base_url;
-
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    // Email.
-    /**************************************************************************/
-
-    $webform_id = 'test_attachment_email';
-    $webform_attachment_email = Webform::load($webform_id);
-    $attachment_date = date('Y-m-d');
-
-    // Check that the attachment is added to the sent email.
-    $sid = $this->postSubmission($webform_attachment_email);
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['params']['attachments'][0]['filename'], "attachment_token-$attachment_date.xml", "The attachment's file name");
-    $this->assertEqual($sent_email['params']['attachments'][0]['filemime'], 'application/xml', "The attachment's file mime type");
-    $this->assertEqual($sent_email['params']['attachments'][0]['filecontent'], "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
-<asx:abap xmlns:asx=\"http://www.sap.com/abapxml\" version=\"1.0\">
-   <asx:values>
-      <VERSION>1.0</VERSION>
-      <SENDER>johnsmith@example.com</SENDER>
-      <WEBFORM_ID>test_attachment_email</WEBFORM_ID>
-      <SOURCE>
-         <o2PARAVALU>
-            <NAME>Lastname</NAME>
-            <VALUE>Smith</VALUE>
-         </o2PARAVALU>
-         <o2PARAVALU>
-            <NAME>Firstname</NAME>
-            <VALUE>John</VALUE>
-         </o2PARAVALU>
-         <o2PARAVALU>
-            <NAME>Emailaddress</NAME>
-            <VALUE>johnsmith@example.com</VALUE>
-         </o2PARAVALU>
-      </SOURCE>
-   </asx:values>
-</asx:abap>", "The attachment's file content");
-
-    // Check access to the attachment.
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/attachment_token/attachment_token-$attachment_date.xml");
-    $this->assertResponse(200, 'Access allowed to the attachment');
-
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/attachment_token/any-file-name.text");
-    $this->assertResponse(200, 'Access allowed to the attachment with any file name,');
-
-    $this->drupalGet("/webform/not_a_webform/submissions/$sid/attachment/attachment/any-file-name.text");
-    $this->assertResponse(404, 'Page not found to not a webform');
-
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/email/attachment-$attachment_date.xml");
-    $this->assertResponse(404, 'Page not found when not an attachment element is specified');
-
-    /**************************************************************************/
-    // Token.
-    /**************************************************************************/
-
-    $webform_id = 'test_attachment_token';
-    $webform_attachment_token = Webform::load('test_attachment_token');
-
-    $sid = $this->postSubmissionTest($webform_attachment_token, ['textfield' => 'Some text']);
-
-    // Check that both attachments are displayed on the results page.
-    $this->drupalGet('/admin/structure/webform/manage/test_attachment_token/results/submissions');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_token/test_token.txt">test_token.txt</a></td>');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_token_download/test_token.txt">Download</a></td>');
-
-    // Check that only the download attachment is displayed on
-    // the submission page.
-    $this->drupalGet("/admin/structure/webform/manage/test_attachment_token/submission/$sid");
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_token/test_token.txt">test_token.txt</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_token_download/test_token.txt">Download</a>');
-
-    // Check the attachment's content.
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/webform_attachment_token_download/test_token.txt");
-    $this->assertRaw('textfield: Some text');
-
-    /**************************************************************************/
-    // Twig.
-    /**************************************************************************/
-
-    $webform_id = 'test_attachment_twig';
-    $webform_attachment_twig = Webform::load('test_attachment_twig');
-
-    $sid = $this->postSubmissionTest($webform_attachment_twig, ['textfield' => 'Some text']);
-
-    // Check that both attachments are displayed on the results page.
-    $this->drupalGet('/admin/structure/webform/manage/test_attachment_twig/results/submissions');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_twig/test_twig.xml">test_twig.xml</a></td>');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_twig_download/test_twig.xml">Download</a></td>');
-
-    // Check that only the download attachment is displayed on
-    // the submission page.
-    $this->drupalGet("/admin/structure/webform/manage/test_attachment_twig/submission/$sid");
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_twig/test_twig.txt">test_twig.xml</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_twig_download/test_twig.xml">Download</a>');
-
-    // Check the attachment's content.
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/webform_attachment_twig_download/test_twig.xml");
-    $this->assertRaw('<?xml version="1.0"?>
-<textfield>Some text</textfield>');
-
-    /**************************************************************************/
-    // URL.
-    /**************************************************************************/
-
-    $webform_id = 'test_attachment_url';
-    $webform_attachment_url = Webform::load('test_attachment_url');
-
-    $sid = $this->postSubmissionTest($webform_attachment_url);
-
-    // Check that both attachments are displayed on the results page.
-    $this->drupalGet('/admin/structure/webform/manage/test_attachment_url/results/submissions');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_url/MAINTAINERS.txt">MAINTAINERS.txt</a></td>');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_path/durpalicon.png">durpalicon.png</a></td>');
-    $this->assertRaw('<td><a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_url_download/MAINTAINERS.txt">Download</a></td>');
-
-    // Check that only the download attachment is displayed on
-    // the submission page.
-    $this->drupalGet("/admin/structure/webform/manage/test_attachment_url/submission/$sid");
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_url/MAINTAINERS.txt">MAINTAINERS.txt</a>');
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_path/durpalicon.png">durpalicon.png</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_url_download/MAINTAINERS.txt">Download</a>');
-
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_url/MAINTAINERS.txt">MAINTAINERS.txt</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/webform_attachment_url_download/MAINTAINERS.txt">Download</a>');
-
-    // Check the attachment's content.
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/webform_attachment_url_download/MAINTAINERS.txt");
-    $this->assertRaw('https://www.drupal.org/contribute');
-
-    /**************************************************************************/
-    // Access.
-    /**************************************************************************/
-
-    // Switch to anonymous user.
-    $this->drupalLogout();
-
-    $webform_id = 'test_attachment_access';
-    $webform_attachment_access = Webform::load('test_attachment_access');
-    $sid = $this->postSubmission($webform_attachment_access);
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check access to anonymous attachment allowed via $element access rules.
-    $this->drupalGet("/admin/structure/webform/manage/test_attachment_url/submission/$sid");
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/anonymous/anonymous.txt">anonymous.txt</a>');
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/authenticated/authenticated.txt">authenticated.txt</a>');
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/private/private.txt">private.txt</a>');
-
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/anonymous/anonymous.txt");
-    $this->assertResponse(200, 'Access allowed to anonymous.txt');
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/authenticated/authenticated.txt");
-    $this->assertResponse(403, 'Access denied to authenticated.txt');
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/private/private.txt");
-    $this->assertResponse(403, 'Access denied to private.txt');
-
-    // Switch to authenticated user and set user as the submission's owner.
-    $account = $this->createUser();
-    $webform_submission->setOwnerId($account->id())->save();
-    $this->drupalLogin($account);
-
-    // Check access to authenticated attachment allowed via $element access rules.
-    $this->drupalGet("/admin/structure/webform/manage/test_attachment_url/submission/$sid");
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/anonymous/anonymous.txt">anonymous.txt</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/authenticated/authenticated.txt">authenticated.txt</a>');
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/private/private.txt">private.txt</a>');
-
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/anonymous/anonymous.txt");
-    $this->assertResponse(403, 'Access denied to anonymous.txt');
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/authenticated/authenticated.txt");
-    $this->assertResponse(200, 'Access allow to authenticated.txt');
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/private/private.txt");
-    $this->assertResponse(403, 'Access denied to private.txt');
-
-    // Switch to admin user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check access to all attachment allowed for admin.
-    $this->drupalGet("/admin/structure/webform/manage/test_attachment_url/submission/$sid");
-    $this->assertNoRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/anonymous/anonymous.txt">anonymous.txt</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/authenticated/authenticated.txt">authenticated.txt</a>');
-    $this->assertRaw('<a href="' . $base_url . '/webform/' . $webform_id . '/submissions/' . $sid . '/attachment/private/private.txt">private.txt</a>');
-
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/anonymous/anonymous.txt");
-    $this->assertResponse(403, 'Access denied to anonymous.txt');
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/authenticated/authenticated.txt");
-    $this->assertResponse(200, 'Access allowed to authenticated.txt');
-    $this->drupalGet("/webform/$webform_id/submissions/$sid/attachment/private/private.txt");
-    $this->assertResponse(200, 'Access allowed to private.txt');
-
-    /**************************************************************************/
-    // Sanitize.
-    /**************************************************************************/
-
-    $webform_attachment_santize = Webform::load('test_attachment_sanitize');
-
-    $sid = $this->postSubmissionTest($webform_attachment_santize, ['textfield' => 'Some text!@#$%^&*)']);
-    $webform_submission = WebformSubmission::load($sid);
-    $element = $webform_attachment_santize->getElement('webform_attachment_token');
-    $this->assertEqual(WebformAttachmentToken::getFileName($element, $webform_submission), 'some-text.txt');
-
-    /**************************************************************************/
-    // States (enabled/disabled).
-    /**************************************************************************/
-
-    $webform_id = 'test_attachment_states';
-    $webform_attachment_states = Webform::load($webform_id);
-
-    // Check that attachment is enabled.
-    $this->postSubmission($webform_attachment_states, ['attach' => TRUE]);
-    $sent_email = $this->getLastEmail();
-    $this->assert(isset($sent_email['params']['attachments'][0]), 'Attachment enabled via #states');
-
-    // Check that attachment is disabled.
-    $this->postSubmission($webform_attachment_states, ['attach' => FALSE]);
-    $sent_email = $this->getLastEmail();
-    $this->assert(!isset($sent_email['params']['attachments'][0]), 'Attachment disabled via #states');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_access.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_access.yml
index e6ec52f7..b2524ea0 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_access.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_access.yml
@@ -112,6 +112,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -159,6 +160,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_email.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_email.yml
index 4a6c2a83..39046058 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_email.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_email.yml
@@ -61,7 +61,7 @@ elements: |
             </SOURCE>
          </asx:values>
       </asx:abap>
-      
+  
   attachment_twig:
     '#type': webform_attachment_twig
     '#title': attachment_twig
@@ -133,6 +133,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -180,6 +181,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -265,3 +267,4 @@ handlers:
       sender_mail: ''
       sender_name: ''
       theme_name: ''
+      parameters: {  }
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_sanitize.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_sanitize.yml
index e8ee3863..4dc071de 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_sanitize.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_sanitize.yml
@@ -92,6 +92,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -139,6 +140,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_states.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_states.yml
index 9780b445..25c0f1ce 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_states.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_states.yml
@@ -1,12 +1,9 @@
-uuid: 08971b54-57be-4bc9-956a-8cfa57c7cadd
 langcode: en
 status: open
 dependencies:
   enforced:
     module:
       - webform_attachment_test
-_core:
-  default_config_hash: XUf67HS7kvhJPn6INGzCeH3OdEnQNm9Kb_H5o-HfYlQ
 open: null
 close: null
 weight: 0
@@ -30,7 +27,7 @@ elements: |
       'enabled':
         ':input[name="attach"]':
           checked: true
-
+  
 css: ''
 javascript: ''
 settings:
@@ -96,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -143,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -226,3 +225,7 @@ handlers:
       sender_mail: ''
       sender_name: ''
       theme_name: ''
+      parameters: {  }
+uuid: 08971b54-57be-4bc9-956a-8cfa57c7cadd
+_core:
+  default_config_hash: XUf67HS7kvhJPn6INGzCeH3OdEnQNm9Kb_H5o-HfYlQ
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_token.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_token.yml
index e6fd0b68..cb04db05 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_token.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_token.yml
@@ -100,6 +100,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -147,6 +148,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_twig.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_twig.yml
index ccf63734..7e28e236 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_twig.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_twig.yml
@@ -102,6 +102,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -149,6 +150,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_url.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_url.yml
index a5c627a1..9c149759 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_url.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/config/install/webform.webform.test_attachment_url.yml
@@ -103,6 +103,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -150,6 +151,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.info.yml b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.info.yml
index 84534aa8..600839aa 100644
--- a/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.info.yml
+++ b/modules/contrib/webform/modules/webform_attachment/tests/modules/webform_attachment_test/webform_attachment_test.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Attachment Test'
 type: module
 description: 'Support module for webform attachment element that provides test webforms.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform_attachment'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_attachment/webform_attachment.info.yml b/modules/contrib/webform/modules/webform_attachment/webform_attachment.info.yml
index 7fbb5324..551cf8a6 100644
--- a/modules/contrib/webform/modules/webform_attachment/webform_attachment.info.yml
+++ b/modules/contrib/webform/modules/webform_attachment/webform_attachment.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Attachment'
 type: module
 description: 'Provides an element generates or loads a file that can be attached to a submission or email.'
 package: 'Webform'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_bootstrap/css/webform_bootstrap.css b/modules/contrib/webform/modules/webform_bootstrap/css/webform_bootstrap.css
index 82a42902..ae66ffaa 100644
--- a/modules/contrib/webform/modules/webform_bootstrap/css/webform_bootstrap.css
+++ b/modules/contrib/webform/modules/webform_bootstrap/css/webform_bootstrap.css
@@ -69,5 +69,5 @@ html.js .form-type-webform-image-select .select-wrapper:after {
 .alert a.btn:hover,
 .alert a.btn:focus,
 .ui-widget-content a.btn {
-    color: #fff;
+  color: #fff;
 }
diff --git a/modules/contrib/webform/modules/webform_bootstrap/tests/modules/webform_bootstrap_test_module/webform_bootstrap_test_module.info.yml b/modules/contrib/webform/modules/webform_bootstrap/tests/modules/webform_bootstrap_test_module/webform_bootstrap_test_module.info.yml
index b9ece112..7df8a742 100644
--- a/modules/contrib/webform/modules/webform_bootstrap/tests/modules/webform_bootstrap_test_module/webform_bootstrap_test_module.info.yml
+++ b/modules/contrib/webform/modules/webform_bootstrap/tests/modules/webform_bootstrap_test_module/webform_bootstrap_test_module.info.yml
@@ -2,14 +2,13 @@ name: 'Webform Test Bootstrap Helper'
 type: module
 description: 'Installs and integrates the Webform Test Bootstrap theme.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'styleguide:styleguide'
   - 'webform:webform'
   - 'webform:webform_bootstrap'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_bootstrap/tests/themes/webform_bootstrap_test_theme/webform_bootstrap_test_theme.info.yml b/modules/contrib/webform/modules/webform_bootstrap/tests/themes/webform_bootstrap_test_theme/webform_bootstrap_test_theme.info.yml
index 3b35f005..f546ae65 100644
--- a/modules/contrib/webform/modules/webform_bootstrap/tests/themes/webform_bootstrap_test_theme/webform_bootstrap_test_theme.info.yml
+++ b/modules/contrib/webform/modules/webform_bootstrap/tests/themes/webform_bootstrap_test_theme/webform_bootstrap_test_theme.info.yml
@@ -1,4 +1,4 @@
-# core: 8.x
+core: 8.x
 type: theme
 base theme: bootstrap
 
@@ -22,8 +22,7 @@ regions:
 libraries:
   - 'webform_bootstrap_test_theme/global-styling'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.info.yml b/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.info.yml
index 0edc5e7c..32bd3a14 100644
--- a/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.info.yml
+++ b/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Bootstrap'
 type: module
 description: 'Helps support Webform to Bootstrap integration.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.module b/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.module
index 7426fba7..9d0ac567 100644
--- a/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.module
+++ b/modules/contrib/webform/modules/webform_bootstrap/webform_bootstrap.module
@@ -109,8 +109,9 @@ function webform_bootstrap_js_alter(&$javascript, AttachedAssetsInterface $asset
     $javascript['core/assets/vendor/jquery.ui/ui/widgets/tooltip-min.js']
   );
 
-  if (isset($javascript['modules/sandbox/webform/js/webform.element.help.js'])) {
-    $javascript['modules/sandbox/webform/js/webform.element.help.js']['data'] = $path . '/js/webform.element.help.js';
+  $webform_help_path = drupal_get_path('module', 'webform') . '/js/webform.element.help.js';
+  if (isset($javascript[$webform_help_path])) {
+    $javascript[$webform_help_path]['data'] = $path . '/js/webform.element.help.js';
   }
 }
 
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application.yml
index 2df49a86..9608914a 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application.yml
@@ -137,6 +137,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -184,6 +185,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application_evaluation.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application_evaluation.yml
index 85f7b4db..ec0077c9 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application_evaluation.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/config/install/webform.webform.demo_application_evaluation.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.info.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.info.yml
index 478b8706..e34e94fd 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.info.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_application_evaluation/webform_demo_application_evaluation.info.yml
@@ -2,14 +2,13 @@ name: 'Webform Demo: Application/Evaluation System'
 type: module
 description: 'Demonstrate how to use the Webform module to build an application/evaluation system.'
 package: 'Webform Demo'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:block'
   - 'webform:webform'
   - 'webform:webform_node'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/config/install/webform.webform.demo_event_registration.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/config/install/webform.webform.demo_event_registration.yml
index b39058fd..dc865028 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/config/install/webform.webform.demo_event_registration.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/config/install/webform.webform.demo_event_registration.yml
@@ -5,6 +5,7 @@ dependencies:
     module:
       - webform_demo_event_registration
   module:
+    - webform_options_limit
     - webform_scheduled_email
 open: null
 close: null
@@ -43,6 +44,18 @@ elements: |
       '#type': email
       '#title': Email
       '#required': true
+  other:
+    '#title': 'Other Information'
+    '#type': fieldset
+    teeshirt:
+      '#type': select
+      '#title': 'Tee shirt size'
+      '#options':
+        XS: 'XS - Extra Small'
+        S: 'S - Small'
+        M: 'M - Medium'
+        L: 'L - Large'
+        XL: 'XL - Extra Large'
   actions:
     '#type': webform_actions
     '#title': 'Submit button(s)'
@@ -113,6 +126,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -160,6 +174,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -230,6 +245,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
@@ -264,6 +280,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
@@ -272,6 +289,8 @@ handlers:
       send: '[webform_submission:node:field_webform_demo_event_date:value]'
       days: -1
       unschedule: false
+      ignore_past: false
+      test_send: false
   submission_limit:
     id: settings
     label: 'Submission limit'
@@ -287,3 +306,27 @@ handlers:
       confirmation_message: ''
       debug: ''
       entity_limit_total: '[webform_submission:node:field_webform_entity_limit_total]'
+  teeshirt_options_limits:
+    id: options_limit
+    label: 'Tee shirt limits'
+    handler_id: teeshirt_options_limits
+    status: true
+    conditions: {  }
+    weight: 0
+    settings:
+      element_key: teeshirt
+      limits:
+        XS: 2
+        S: 4
+        M: 6
+        L: 8
+        XL: 6
+      limit_reached_message: 'No more tee shirts are available.'
+      limit_source_entity: true
+      option_none_action: disable
+      option_message_display: label
+      option_multiple_message: '[@remaining shirts remaining]'
+      option_single_message: '[@remaining shirt remaining]'
+      option_unlimited_message: '[Unlimited]'
+      option_none_message: ''
+      option_error_message: 'Tee shirts in @label are no longer available.'
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.info.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.info.yml
index 55a1e92a..a0c9ba91 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.info.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_event_registration/webform_demo_event_registration.info.yml
@@ -2,16 +2,16 @@ name: 'Webform Demo: Event Registration System'
 type: module
 description: 'Demonstrate how to use the Webform module to build an event registration system with email reminders.'
 package: 'Webform Demo'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:datetime'
   - 'token:token'
   - 'webform:webform'
   - 'webform:webform_node'
   - 'webform:webform_scheduled_email'
+  - 'webform:webform_options_limit'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/config/install/webform.webform.demo_region_contact.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/config/install/webform.webform.demo_region_contact.yml
index 405e61a2..5a820bf7 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/config/install/webform.webform.demo_region_contact.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/config/install/webform.webform.demo_region_contact.yml
@@ -105,6 +105,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -152,6 +153,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -230,6 +232,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -264,6 +267,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -298,6 +302,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -332,6 +337,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -366,6 +372,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -400,6 +407,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.info.yml b/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.info.yml
index 7e559c13..c14fd190 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.info.yml
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.info.yml
@@ -2,7 +2,7 @@ name: 'Webform Demo: Region Contact System'
 type: module
 description: 'Demonstrate how to use the Webform module to build a region based contact system.'
 package: 'Webform Demo'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:datetime'
   - 'token:token'
@@ -10,8 +10,7 @@ dependencies:
   - 'webform:webform_node'
   - 'webform:webform_access'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.install b/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.install
index 78918702..eceed94e 100644
--- a/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.install
+++ b/modules/contrib/webform/modules/webform_demo/webform_demo_region_contact/webform_demo_region_contact.install
@@ -89,10 +89,10 @@ function webform_demo_region_contact_install() {
     $webform_access_group_admin_id = 'demo_region_' . $region_name . '_admin';
     $admin = User::create([
       'name' => $webform_access_group_admin_id,
-      'password' => $webform_access_group_admin_id,
       'mail' => "$webform_access_group_admin_id@test.com",
       'status' => 1,
     ]);
+    $admin->setPassword($webform_access_group_admin_id);
     $admin->addRole('demo_region_admin');
     $admin->save();
 
@@ -116,10 +116,10 @@ function webform_demo_region_contact_install() {
       // Create region type user.
       $user = User::create([
         'name' => $webform_access_group_id,
-        'password' => $webform_access_group_id,
         'mail' => "$webform_access_group_id@test.com",
         'status' => 1,
       ]);
+      $user->setPassword($webform_access_group_id);
       $user->addRole('demo_region_user');
       $user->save();
 
diff --git a/modules/contrib/webform/modules/webform_devel/webform_devel.info.yml b/modules/contrib/webform/modules/webform_devel/webform_devel.info.yml
index 452cbe55..fdd0e154 100644
--- a/modules/contrib/webform/modules/webform_devel/webform_devel.info.yml
+++ b/modules/contrib/webform/modules/webform_devel/webform_devel.info.yml
@@ -2,13 +2,12 @@ name: 'Webform Devel'
 type: module
 description: 'Provides development tools for the Webform module.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'devel:devel'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_editorial/webform_editorial.info.yml b/modules/contrib/webform/modules/webform_editorial/webform_editorial.info.yml
index 90333c3e..71f2c35d 100644
--- a/modules/contrib/webform/modules/webform_editorial/webform_editorial.info.yml
+++ b/modules/contrib/webform/modules/webform_editorial/webform_editorial.info.yml
@@ -2,13 +2,12 @@ name: 'Webform Editorial'
 type: module
 description: 'Provides editorial management tools for the Webform module.'
 package: Webform
-# core: 8.x
+core: 8.x
 hidden: true
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print.yml b/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print.yml
index 89a79a19..5dda4f78 100644
--- a/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print.yml
+++ b/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print_custom.yml b/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print_custom.yml
index 9f5a8631..8f9be3a8 100644
--- a/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print_custom.yml
+++ b/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/config/install/webform.webform.test_entity_print_custom.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.info.yml b/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.info.yml
index edaebc76..e0f70a8c 100644
--- a/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.info.yml
+++ b/modules/contrib/webform/modules/webform_entity_print/tests/modules/webform_entity_print_test/webform_entity_print_test.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Entity Print (PDF) Test'
 type: module
 description: 'Support module for webform entity print (PDF) testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform_entity_print'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php b/modules/contrib/webform/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
index f4b6bccc..af7e5075 100644
--- a/modules/contrib/webform/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
+++ b/modules/contrib/webform/modules/webform_entity_print/tests/src/Functional/WebformEntityPrintFunctionalTest.php
@@ -99,7 +99,7 @@ body {
     $edit = [
       'exporter' => 'webform_entity_print:pdf',
     ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_entity_print/results/download', $edit, t('Download'));
+    $this->drupalPostForm('/admin/structure/webform/manage/test_entity_print/results/download', $edit, t('Download'));
 
     // Load the tar and get a list of files.
     $tar = new ArchiveTar($submission_exporter->getArchiveFilePath(), 'gz');
diff --git a/modules/contrib/webform/modules/webform_entity_print/webform_entity_print.info.yml b/modules/contrib/webform/modules/webform_entity_print/webform_entity_print.info.yml
index 2ed42183..bd2071e2 100644
--- a/modules/contrib/webform/modules/webform_entity_print/webform_entity_print.info.yml
+++ b/modules/contrib/webform/modules/webform_entity_print/webform_entity_print.info.yml
@@ -1,14 +1,13 @@
-name: 'Webform Entity Print (PDF) [EXPERIMENTAL]'
+name: 'Webform Entity Print (PDF)'
 type: module
 description: 'Provides Entity Print (PDF) integration and allows site builders to download, export, and email PDF copies of webform submissions.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
   - 'entity_print:entity_print'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_entity_print_attachment/src/Element/WebformEntityPrintAttachment.php b/modules/contrib/webform/modules/webform_entity_print_attachment/src/Element/WebformEntityPrintAttachment.php
index 1ef9129e..0a543ca7 100644
--- a/modules/contrib/webform/modules/webform_entity_print_attachment/src/Element/WebformEntityPrintAttachment.php
+++ b/modules/contrib/webform/modules/webform_entity_print_attachment/src/Element/WebformEntityPrintAttachment.php
@@ -3,7 +3,6 @@
 namespace Drupal\webform_entity_print_attachment\Element;
 
 use Drupal\webform\WebformSubmissionInterface;
-use Drupal\webform\WebformSubmissionViewBuilderInterface;
 use Drupal\webform_attachment\Element\WebformAttachmentBase;
 
 /**
diff --git a/modules/contrib/webform/modules/webform_entity_print_attachment/src/Plugin/WebformElement/WebformEntityPrintAttachment.php b/modules/contrib/webform/modules/webform_entity_print_attachment/src/Plugin/WebformElement/WebformEntityPrintAttachment.php
index 151cfe45..48f73a7f 100644
--- a/modules/contrib/webform/modules/webform_entity_print_attachment/src/Plugin/WebformElement/WebformEntityPrintAttachment.php
+++ b/modules/contrib/webform/modules/webform_entity_print_attachment/src/Plugin/WebformElement/WebformEntityPrintAttachment.php
@@ -70,7 +70,7 @@ class WebformEntityPrintAttachment extends WebformAttachmentBase {
         'twig' => $this->t('Twig template…'),
       ],
     ];
-    $form['attachment']['template']  = [
+    $form['attachment']['template'] = [
       '#type' => 'webform_codemirror',
       '#title' => $this->t('Twig template'),
       '#title_display' => 'invisible',
diff --git a/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/config/install/webform.webform.test_entity_print_attachment.yml b/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/config/install/webform.webform.test_entity_print_attachment.yml
index edd01778..c0caab58 100644
--- a/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/config/install/webform.webform.test_entity_print_attachment.yml
+++ b/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/config/install/webform.webform.test_entity_print_attachment.yml
@@ -33,6 +33,7 @@ elements: |
     '#display_on': both
     '#view_mode': twig
     '#template': '{This is a custom template}'
+  
 css: ''
 javascript: ''
 settings:
@@ -98,6 +99,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -145,6 +147,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -228,3 +231,4 @@ handlers:
       sender_mail: ''
       sender_name: ''
       theme_name: ''
+      parameters: {  }
diff --git a/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/webform_entity_print_attachment_test.info.yml b/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/webform_entity_print_attachment_test.info.yml
index e38da5a9..384dc407 100644
--- a/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/webform_entity_print_attachment_test.info.yml
+++ b/modules/contrib/webform/modules/webform_entity_print_attachment/tests/modules/webform_entity_print_attachment_test/webform_entity_print_attachment_test.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Entity Print (PDF) Attachment Test'
 type: module
 description: 'Support module for webform entity print (PDF) attachment testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform_entity_print_attachment'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_entity_print_attachment/webform_entity_print_attachment.info.yml b/modules/contrib/webform/modules/webform_entity_print_attachment/webform_entity_print_attachment.info.yml
index 0fb4943b..528ed045 100644
--- a/modules/contrib/webform/modules/webform_entity_print_attachment/webform_entity_print_attachment.info.yml
+++ b/modules/contrib/webform/modules/webform_entity_print_attachment/webform_entity_print_attachment.info.yml
@@ -1,14 +1,13 @@
-name: 'Webform Entity Print (PDF) Attachment [EXPERIMENTAL]'
+name: 'Webform Entity Print (PDF) Attachment'
 type: module
 description: 'Provides Webform Entity Print (PDF) Attachment integration.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform_attachment'
   - 'webform:webform_entity_print'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_example_composite/config/install/webform.webform.webform_example_composite.yml b/modules/contrib/webform/modules/webform_example_composite/config/install/webform.webform.webform_example_composite.yml
index f756044f..2b4626bc 100644
--- a/modules/contrib/webform/modules/webform_example_composite/config/install/webform.webform.webform_example_composite.yml
+++ b/modules/contrib/webform/modules/webform_example_composite/config/install/webform.webform.webform_example_composite.yml
@@ -89,6 +89,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -136,6 +137,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_example_composite/src/Element/WebformExampleComposite.php b/modules/contrib/webform/modules/webform_example_composite/src/Element/WebformExampleComposite.php
index d2344d08..ad2b709e 100644
--- a/modules/contrib/webform/modules/webform_example_composite/src/Element/WebformExampleComposite.php
+++ b/modules/contrib/webform/modules/webform_example_composite/src/Element/WebformExampleComposite.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\webform_example_composite\Element;
 
-use Drupal\Component\Utility\Html;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\webform\Element\WebformCompositeBase;
 
 /**
@@ -33,48 +33,47 @@ class WebformExampleComposite extends WebformCompositeBase {
    * {@inheritdoc}
    */
   public static function getCompositeElements(array $element) {
-    // Generate an unique ID that can be used by #states.
-    $html_id = Html::getUniqueId('webform_example_composite');
-
     $elements = [];
     $elements['first_name'] = [
       '#type' => 'textfield',
       '#title' => t('First name'),
-      '#attributes' => ['data-webform-composite-id' => $html_id . '--first_name'],
     ];
     $elements['last_name'] = [
       '#type' => 'textfield',
       '#title' => t('Last name'),
-      '#attributes' => ['data-webform-composite-id' => $html_id . '--last_name'],
     ];
     $elements['date_of_birth'] = [
       '#type' => 'date',
       '#title' => t('Date of birth'),
-      // Add .js-form-wrapper to wrapper (ie td) to prevent #states API from
-      // disabling the entire table row when this element is disabled.
-      '#wrapper_attributes' => ['class' => ['js-form-wrapper']],
-      '#states' => [
-        'enabled' => [
-          '[data-webform-composite-id="' . $html_id . '--first_name"]' => ['filled' => TRUE],
-          '[data-webform-composite-id="' . $html_id . '--last_name"]' => ['filled' => TRUE],
-        ],
-      ],
+      // Use #after_build to add #states.
+      '#after_build' => [[get_called_class(), 'afterBuild']],
     ];
     $elements['gender'] = [
       '#type' => 'select',
       '#title' => t('Gender'),
       '#options' => 'gender',
-      // Add .js-form-wrapper to wrapper (ie td) to prevent #states API from
-      // disabling the entire table row when this element is disabled.
-      '#wrapper_attributes' => ['class' => ['js-form-wrapper']],
-      '#states' => [
-        'enabled' => [
-          '[data-webform-composite-id="' . $html_id . '--first_name"]' => ['filled' => TRUE],
-          '[data-webform-composite-id="' . $html_id . '--last_name"]' => ['filled' => TRUE],
-        ],
-      ],
+      // Use #after_build to add #states.
+      '#after_build' => [[get_called_class(), 'afterBuild']],
     ];
+
     return $elements;
   }
 
+  /**
+   * Performs the after_build callback.
+   */
+  public static function afterBuild(array $element, FormStateInterface $form_state) {
+    // Add #states targeting the specific element and table row.
+    preg_match('/^(.+)\[[^]]+]$/', $element['#name'], $match);
+    $composite_name = $match[1];
+    $element['#states']['disabled'] = [
+      [':input[name="' . $composite_name . '[first_name]"]' => ['empty' => TRUE]],
+      [':input[name="' . $composite_name . '[last_name]"]' => ['empty' => TRUE]],
+    ];
+    // Add .js-form-wrapper to wrapper (ie td) to prevent #states API from
+    // disabling the entire table row when this element is disabled.
+    $element['#wrapper_attributes']['class'][] = 'js-form-wrapper';
+    return $element;
+  }
+
 }
diff --git a/modules/contrib/webform/modules/webform_example_composite/src/Tests/WebformExampleCompositeTest.php b/modules/contrib/webform/modules/webform_example_composite/src/Tests/WebformExampleCompositeTest.php
deleted file mode 100644
index 0504d973..00000000
--- a/modules/contrib/webform/modules/webform_example_composite/src/Tests/WebformExampleCompositeTest.php
+++ /dev/null
@@ -1,72 +0,0 @@
-<?php
-
-namespace Drupal\webform_example_composite\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform example composite.
- *
- * @group Webform
- */
-class WebformExampleCompositeTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_example_composite'];
-
-  /**
-   * Tests webform example element.
-   */
-  public function testWebformExampleComposite() {
-    $webform = Webform::load('webform_example_composite');
-
-    // Check form element rendering.
-    $this->drupalGet('/webform/webform_example_composite');
-    // NOTE:
-    // This is a very lazy but easy way to check that the element is rendering
-    // as expected.
-    $this->assertRaw('<label for="edit-webform-example-composite-first-name">First name</label>');
-    $this->assertFieldById('edit-webform-example-composite-first-name');
-    $this->assertRaw('<label for="edit-webform-example-composite-last-name">Last name</label>');
-    $this->assertFieldById('edit-webform-example-composite-last-name');
-    $this->assertRaw('<label for="edit-webform-example-composite-date-of-birth">Date of birth</label>');
-    $this->assertFieldById('edit-webform-example-composite-date-of-birth');
-    $this->assertRaw('<label for="edit-webform-example-composite-gender">Gender</label>');
-    $this->assertFieldById('edit-webform-example-composite-gender');
-
-    // Check webform element submission.
-    $edit = [
-      'webform_example_composite[first_name]' => 'John',
-      'webform_example_composite[last_name]' => 'Smith',
-      'webform_example_composite[gender]' => 'Male',
-      'webform_example_composite[date_of_birth]' => '1910-01-01',
-      'webform_example_composite_multiple[items][0][first_name]' => 'Jane',
-      'webform_example_composite_multiple[items][0][last_name]' => 'Doe',
-      'webform_example_composite_multiple[items][0][gender]' => 'Female',
-      'webform_example_composite_multiple[items][0][date_of_birth]' => '1920-12-01',
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getElementData('webform_example_composite'), [
-      'first_name' => 'John',
-      'last_name' => 'Smith',
-      'gender' => 'Male',
-      'date_of_birth' => '1910-01-01',
-    ]);
-    $this->assertEqual($webform_submission->getElementData('webform_example_composite_multiple'), [
-      [
-        'first_name' => 'Jane',
-        'last_name' => 'Doe',
-        'gender' => 'Female',
-        'date_of_birth' => '1920-12-01',
-      ],
-    ]);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_example_composite/webform_example_composite.info.yml b/modules/contrib/webform/modules/webform_example_composite/webform_example_composite.info.yml
index 52bc6ec1..f216e72c 100644
--- a/modules/contrib/webform/modules/webform_example_composite/webform_example_composite.info.yml
+++ b/modules/contrib/webform/modules/webform_example_composite/webform_example_composite.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Example Composite'
 type: module
 description: 'Provides an example that shows how to create a Webform composite.'
 package: 'Webform example'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_example_element/config/install/webform.webform.webform_example_element.yml b/modules/contrib/webform/modules/webform_example_element/config/install/webform.webform.webform_example_element.yml
index 11c31131..02df99b8 100644
--- a/modules/contrib/webform/modules/webform_example_element/config/install/webform.webform.webform_example_element.yml
+++ b/modules/contrib/webform/modules/webform_example_element/config/install/webform.webform.webform_example_element.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_example_element/src/Tests/WebformExampleElementTest.php b/modules/contrib/webform/modules/webform_example_element/src/Tests/WebformExampleElementTest.php
deleted file mode 100644
index e2c23a71..00000000
--- a/modules/contrib/webform/modules/webform_example_element/src/Tests/WebformExampleElementTest.php
+++ /dev/null
@@ -1,49 +0,0 @@
-<?php
-
-namespace Drupal\webform_example_element\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform example element.
- *
- * @group Webform
- */
-class WebformExampleElementTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_example_element'];
-
-  /**
-   * Tests webform example element.
-   */
-  public function testWebformExampleElement() {
-    $webform = Webform::load('webform_example_element');
-
-    // Check form element rendering.
-    $this->drupalGet('/webform/webform_example_element');
-    // NOTE:
-    // This is a very lazy but easy way to check that the element is rendering
-    // as expected.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-webform-example-element form-type-webform-example-element js-form-item-webform-example-element form-item-webform-example-element">');
-    $this->assertRaw('<label for="edit-webform-example-element">Webform Example Element</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-example-element" type="text" id="edit-webform-example-element" name="webform_example_element" value="" size="60" class="form-text webform-example-element" />');
-
-    // Check webform element submission.
-    $edit = [
-      'webform_example_element' => '{Test}',
-      'webform_example_element_multiple[items][0][_item_]' => '{Test 01}',
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getElementData('webform_example_element'), '{Test}');
-    $this->assertEqual($webform_submission->getElementData('webform_example_element_multiple'), ['{Test 01}']);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_example_element/webform_example_element.info.yml b/modules/contrib/webform/modules/webform_example_element/webform_example_element.info.yml
index 94c4427e..8a0fc45f 100644
--- a/modules/contrib/webform/modules/webform_example_element/webform_example_element.info.yml
+++ b/modules/contrib/webform/modules/webform_example_element/webform_example_element.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Element Example'
 type: module
 description: 'Provides an example that shows how to create a Webform element.'
 package: 'Webform example'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_example_handler/config/install/webform.webform.webform_example_handler.yml b/modules/contrib/webform/modules/webform_example_handler/config/install/webform.webform.webform_example_handler.yml
index 033ca285..51b16270 100644
--- a/modules/contrib/webform/modules/webform_example_handler/config/install/webform.webform.webform_example_handler.yml
+++ b/modules/contrib/webform/modules/webform_example_handler/config/install/webform.webform.webform_example_handler.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_example_handler/templates/webform-handler-example-summary.html.twig b/modules/contrib/webform/modules/webform_example_handler/templates/webform-handler-example-summary.html.twig
index aada6293..abfd9413 100644
--- a/modules/contrib/webform/modules/webform_example_handler/templates/webform-handler-example-summary.html.twig
+++ b/modules/contrib/webform/modules/webform_example_handler/templates/webform-handler-example-summary.html.twig
@@ -4,7 +4,7 @@
  * Default theme implementation for a summary of an example webform handler.
  *
  * Available variables:
- * - settings: The current configuration for this email handler:
+ * - settings: The current configuration for this handler:
  *   - message: The message.
  *   - debug: Debugging flag.
  * - handler: The handler information, including:
diff --git a/modules/contrib/webform/modules/webform_example_handler/webform_example_handler.info.yml b/modules/contrib/webform/modules/webform_example_handler/webform_example_handler.info.yml
index b1633414..176d8695 100644
--- a/modules/contrib/webform/modules/webform_example_handler/webform_example_handler.info.yml
+++ b/modules/contrib/webform/modules/webform_example_handler/webform_example_handler.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Handler Example'
 type: module
 description: 'Provides an example of a webform handler.'
 package: 'Webform example'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_example_remote_post/config/install/webform.webform.example_remote_post.yml b/modules/contrib/webform/modules/webform_example_remote_post/config/install/webform.webform.example_remote_post.yml
index b9dfcb39..823e160e 100644
--- a/modules/contrib/webform/modules/webform_example_remote_post/config/install/webform.webform.example_remote_post.yml
+++ b/modules/contrib/webform/modules/webform_example_remote_post/config/install/webform.webform.example_remote_post.yml
@@ -39,7 +39,7 @@ elements: |
     '#title': 'Confirmation number'
     '#type': value
     '#value': '[webform:handler:remote_post:completed:confirmation_number]'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -105,6 +105,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -129,7 +130,7 @@ settings:
   confirmation_title: ''
   confirmation_message: |
     <p>Your confirmation number is [webform_submission:values:confirmation_number].</p>
-
+    
   confirmation_url: ''
   confirmation_attributes: {  }
   confirmation_back: true
@@ -154,6 +155,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -235,21 +237,21 @@ handlers:
         confirmation_number: confirmation_number
       custom_data: |
         custom_all: true
-
+        
       custom_options: ''
       debug: true
       completed_url: '[site:url]webform_example_remote_post/completed'
       completed_custom_data: |
         custom_completed: true
-
+        
       updated_url: '[site:url]webform_example_remote_post/updated'
       updated_custom_data: |
         custom_updated: true
-
+        
       deleted_url: '[site:url]webform_example_remote_post/deleted'
       deleted_custom_data: |
         custom_deleted: true
-
+        
       draft_created_url: ''
       draft_created_custom_data: ''
       draft_updated_url: ''
diff --git a/modules/contrib/webform/modules/webform_example_remote_post/webform_example_remote_post.info.yml b/modules/contrib/webform/modules/webform_example_remote_post/webform_example_remote_post.info.yml
index 85d19aaf..a7de3f1c 100644
--- a/modules/contrib/webform/modules/webform_example_remote_post/webform_example_remote_post.info.yml
+++ b/modules/contrib/webform/modules/webform_example_remote_post/webform_example_remote_post.info.yml
@@ -2,13 +2,12 @@ name: 'Webform Remote Post Example'
 type: module
 description: 'Provides an example of a webform submission posted to a remote server.'
 package: 'Webform example'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'token:token'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements.yml
index d3fd19b8..eab22fee 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements.yml
@@ -161,6 +161,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -208,6 +209,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements_ajax.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements_ajax.yml
index 3afbe333..e37b33a7 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements_ajax.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_computed_elements_ajax.yml
@@ -179,6 +179,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -226,6 +227,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_element_states.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_element_states.yml
index 71893efe..edf134fd 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_element_states.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_element_states.yml
@@ -257,6 +257,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -304,6 +305,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_flexbox_layout.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_flexbox_layout.yml
index 2f6740a4..6f5422a7 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_flexbox_layout.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_flexbox_layout.yml
@@ -183,6 +183,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -230,6 +231,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_input_masks.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_input_masks.yml
index 9ac0c60a..034cb566 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_input_masks.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_input_masks.yml
@@ -151,6 +151,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -198,6 +199,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_style_guide.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_style_guide.yml
index 45dc5dac..3cd60c64 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_style_guide.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_style_guide.yml
@@ -375,7 +375,7 @@ elements: |
           '#type': textfield
           '#title': 'Last name'
         gender:
-          '#type': select_other
+          '#type': webform_select_other
           '#options': gender
           '#title': Gender
         martial_status:
@@ -574,7 +574,7 @@ elements: |
       '#type': address
       '#title': Address
       '#description': '@see <a href="https://www.drupal.org/project/address">https://www.drupal.org/project/address</a>'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -640,6 +640,7 @@ settings:
   wizard_progress_pages: true
   wizard_progress_percentage: true
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -687,6 +688,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_wizard.yml b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_wizard.yml
index 2ecb3b60..cb111be7 100644
--- a/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_wizard.yml
+++ b/modules/contrib/webform/modules/webform_examples/config/install/webform.webform.example_wizard.yml
@@ -121,6 +121,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: true
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: true
   wizard_confirmation: true
@@ -168,6 +169,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples/webform_examples.info.yml b/modules/contrib/webform/modules/webform_examples/webform_examples.info.yml
index fbb4b815..b238157a 100644
--- a/modules/contrib/webform/modules/webform_examples/webform_examples.info.yml
+++ b/modules/contrib/webform/modules/webform_examples/webform_examples.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Examples'
 type: module
 description: 'Provides examples of all webform elements and functionality which can used for demonstrating and testing advanced functionality or used as cut-n-paste code snippets for creating new webforms.'
 package: 'Webform example'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_advanced.yml b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_advanced.yml
index fe9e28bd..66d8b1c3 100644
--- a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_advanced.yml
+++ b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_advanced.yml
@@ -275,6 +275,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -322,6 +323,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_basic.yml b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_basic.yml
index 5c755179..b1867a9f 100644
--- a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_basic.yml
+++ b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_basic.yml
@@ -191,6 +191,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -238,6 +239,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_containers.yml b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_containers.yml
index 96210597..27579f22 100644
--- a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_containers.yml
+++ b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_containers.yml
@@ -116,6 +116,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -163,6 +164,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_labels.yml b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_labels.yml
index 64e54e66..52af9250 100644
--- a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_labels.yml
+++ b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_labels.yml
@@ -246,6 +246,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -293,6 +294,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_wizard.yml b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_wizard.yml
index 933c0912..0b73f1bb 100644
--- a/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_wizard.yml
+++ b/modules/contrib/webform/modules/webform_examples_accessibility/config/install/webform.webform.example_accessibility_wizard.yml
@@ -121,6 +121,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: true
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: true
   wizard_confirmation: true
@@ -168,6 +169,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_examples_accessibility/webform_examples_accessibility.info.yml b/modules/contrib/webform/modules/webform_examples_accessibility/webform_examples_accessibility.info.yml
index e2b08342..e8a47d4e 100644
--- a/modules/contrib/webform/modules/webform_examples_accessibility/webform_examples_accessibility.info.yml
+++ b/modules/contrib/webform/modules/webform_examples_accessibility/webform_examples_accessibility.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Examples Accessibility'
 type: module
 description: 'Provides example webforms for reviewing and testing accessibility.'
 package: 'Webform example'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_image_select/src/Controller/WebformImageSelectImagesController.php b/modules/contrib/webform/modules/webform_image_select/src/Controller/WebformImageSelectImagesController.php
index 09dd3bc3..c7ed1a89 100644
--- a/modules/contrib/webform/modules/webform_image_select/src/Controller/WebformImageSelectImagesController.php
+++ b/modules/contrib/webform/modules/webform_image_select/src/Controller/WebformImageSelectImagesController.php
@@ -13,7 +13,7 @@ use Symfony\Component\HttpFoundation\Request;
 class WebformImageSelectImagesController extends ControllerBase {
 
   /**
-   * Returns response for the webform options autocompletion.
+   * Returns response for the webform image select images autocompletion.
    *
    * @param \Symfony\Component\HttpFoundation\Request $request
    *   The current request object containing the search string.
diff --git a/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementImagesTest.php b/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementImagesTest.php
deleted file mode 100644
index 0e5d2b89..00000000
--- a/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementImagesTest.php
+++ /dev/null
@@ -1,65 +0,0 @@
-<?php
-
-namespace Drupal\webform_image_select\Tests;
-
-use Drupal\webform\Tests\Element\WebformElementTestBase;
-
-/**
- * Tests for webform image select images element.
- *
- * @group Webform
- */
-class WebformImageSelectElementImagesTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_image_select', 'webform_image_select_test'];
-
-  /**
-   * Tests webform images select images element.
-   */
-  public function testElementOptions() {
-    // Check default value handling.
-    $this->drupalPostForm('webform/test_element_images', [], t('Submit'));
-    $this->assertRaw("webform_image_select_images: {  }
-webform_image_select_images_default_value:
-  kitten_1:
-    text: 'Cute Kitten 1'
-    src: 'http://placekitten.com/220/200'
-  kitten_2:
-    text: 'Cute Kitten 2'
-    src: 'http://placekitten.com/180/200'
-  kitten_3:
-    text: 'Cute Kitten 3'
-    src: 'http://placekitten.com/130/200'
-  kitten_4:
-    text: 'Cute Kitten 4'
-    src: 'http://placekitten.com/270/200'
-webform_image_select_element_images_entity: kittens
-webform_image_select_element_images_custom:
-  kitten_1:
-    text: 'Cute Kitten 1'
-    src: 'http://placekitten.com/220/200'
-  kitten_2:
-    text: 'Cute Kitten 2'
-    src: 'http://placekitten.com/180/200'
-  kitten_3:
-    text: 'Cute Kitten 3'
-    src: 'http://placekitten.com/130/200'
-  kitten_4:
-    text: 'Cute Kitten 4'
-    src: 'http://placekitten.com/270/200'");
-
-    // Check unique key validation with image src.
-    $edit = [
-      'webform_image_select_images[images][items][0][src]' => 'src01',
-      'webform_image_select_images[images][items][1][src]' => 'src02',
-    ];
-    $this->drupalPostForm('webform/test_element_images', $edit, t('Submit'));
-    $this->assertRaw("The <em class=\"placeholder\">Image value</em> '' is already in use. It must be unique.");
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementTest.php b/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementTest.php
deleted file mode 100644
index a644a443..00000000
--- a/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectElementTest.php
+++ /dev/null
@@ -1,53 +0,0 @@
-<?php
-
-namespace Drupal\webform_image_select\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\Element\WebformElementTestBase;
-
-/**
- * Tests for webform image select element.
- *
- * @group Webform
- */
-class WebformImageSelectElementTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_image_select', 'webform_image_select_test'];
-
-  /**
-   * Test webform image select element.
-   */
-  public function testImageSelect() {
-    $this->drupalGet('/webform/test_element_image_select');
-
-    // Check rendering of image select with required.
-    $this->assertRaw('<select data-drupal-selector="edit-image-select-default" data-images="{&quot;kitten_1&quot;:{&quot;text&quot;:&quot;Cute Kitten 1&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/220\/200&quot;},&quot;kitten_2&quot;:{&quot;text&quot;:&quot;Cute Kitten 2&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/180\/200&quot;},&quot;kitten_3&quot;:{&quot;text&quot;:&quot;Cute Kitten 3&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/130\/200&quot;},&quot;kitten_4&quot;:{&quot;text&quot;:&quot;Cute Kitten 4&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/270\/200&quot;}}" class="webform-image-select js-webform-image-select form-select required" id="edit-image-select-default" name="image_select_default" required="required" aria-required="true">');
-
-    // Check rendering of image select with limit.
-    $this->assertRaw('<select data-limit="2" data-drupal-selector="edit-image-select-limit" data-images="{&quot;kitten_1&quot;:{&quot;text&quot;:&quot;Cute Kitten 1&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/220\/200&quot;},&quot;kitten_2&quot;:{&quot;text&quot;:&quot;Cute Kitten 2&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/180\/200&quot;},&quot;kitten_3&quot;:{&quot;text&quot;:&quot;Cute Kitten 3&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/130\/200&quot;},&quot;kitten_4&quot;:{&quot;text&quot;:&quot;Cute Kitten 4&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/270\/200&quot;}}" class="webform-image-select js-webform-image-select form-select" multiple="multiple" name="image_select_limit[]" id="edit-image-select-limit">');
-
-    // Check rendering of image select with HTML markup and XSS test.
-    $this->assertRaw('<select data-drupal-selector="edit-image-select-html" data-show-label="data-show-label" data-images="{&quot;\u003C1\u003E&quot;:{&quot;text&quot;:&quot;Cute Kitten 1&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/220\/200&quot;},&quot;\u00222\u0022&quot;:{&quot;text&quot;:&quot;Cute \u003Cem\u003EKitten\u003C\/em\u003E 2&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/180\/200&quot;},&quot;\u00263&quot;:{&quot;text&quot;:&quot;Cute Kitten 3&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/130\/200&quot;},&quot;4&quot;:{&quot;text&quot;:&quot;Cute Kitten 4 alert(\u0022XSS\u0022);&quot;,&quot;src&quot;:&quot;http:\/\/placekitten.com\/270\/200&quot;}}" class="webform-image-select js-webform-image-select form-select" id="edit-image-select-html" name="image_select_html"><option value="" selected="selected">- None -</option><option value="&lt;1&gt;">');
-
-    // Check rendering with filter.
-    $this->assertRaw('<input class="webform-form-filter-text form-search" data-focus="false" data-item-singlular="animal" data-item-plural="animals" data-summary=".js-image-select-filter-custom-filter .webform-image-select-summary" data-no-results=".js-image-select-filter-custom-filter .webform-image-select-no-results" data-element=".js-image-select-filter-custom-filter .thumbnails" data-source=".thumbnail p" data-parent="li" data-selected=".selected" title="Enter a keyword to filter by." type="search" id="edit-image-select-filter-custom-filter" name="image_select_filter_custom_filter" size="30" maxlength="128" placeholder="Find an animal" />');
-    $this->assertRaw('<span class="field-suffix"><span class="webform-image-select-summary">8 animals</span>');
-    $this->assertRaw('<div style="display:none" class="webform-image-select-no-results webform-message js-webform-message">');
-    $this->assertRaw('No animals found.');
-
-    // Check preview.
-    $webform = Webform::load('test_element_image_select');
-    $edit = [
-      'image_select_default' => 'kitten_1',
-    ];
-    $this->postSubmission($webform, $edit, t('Preview'));
-    $this->assertRaw('<figure style="display: inline-block; margin: 0 6px 6px 0; padding: 6px; border: 1px solid #ddd;width: 220px"><img src="http://placekitten.com/220/200" width="220" height="200" alt="Cute Kitten 1" title="Cute Kitten 1" />');
-
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectImagesTest.php b/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectImagesTest.php
deleted file mode 100644
index 39ffb5ea..00000000
--- a/modules/contrib/webform/modules/webform_image_select/src/Tests/WebformImageSelectImagesTest.php
+++ /dev/null
@@ -1,121 +0,0 @@
-<?php
-
-namespace Drupal\webform_image_select\Tests;
-
-use Drupal\Core\Serialization\Yaml;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-use Drupal\webform_image_select\Entity\WebformImageSelectImages;
-
-/**
- * Tests for webform image select image entity.
- *
- * @group Webform
- */
-class WebformImageSelectImagesTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_image_select', 'webform_image_select_test'];
-
-  /**
-   * Tests webform image select images entity.
-   */
-  public function testWebformImageSelectImages() {
-    $normal_user = $this->drupalCreateUser();
-
-    $admin_user = $this->drupalCreateUser([
-      'administer webform',
-    ]);
-
-    /**************************************************************************/
-
-    $this->drupalLogin($normal_user);
-
-    // Check get element images.
-    $kittens = Yaml::decode("kitten_1:
-  text: 'Cute Kitten 1'
-  src: 'http://placekitten.com/220/200'
-kitten_2:
-  text: 'Cute Kitten 2'
-  src: 'http://placekitten.com/180/200'
-kitten_3:
-  text: 'Cute Kitten 3'
-  src: 'http://placekitten.com/130/200'
-kitten_4:
-  text: 'Cute Kitten 4'
-  src: 'http://placekitten.com/270/200'");
-    $element = ['#images' => $kittens];
-    $this->assertEqual(WebformImageSelectImages::getElementImages($element), $kittens);
-    $element = ['#images' => 'kittens'];
-    $this->assertEqual(WebformImageSelectImages::getElementImages($element), $kittens);
-    $element = ['#images' => 'not-found'];
-    $this->assertEqual(WebformImageSelectImages::getElementImages($element), []);
-
-    $dogs = Yaml::decode("dog_1:
-  text: 'Cute Dog 1'
-  src: 'http://placedog.com/220/200'
-dog_2:
-  text: 'Cute Dog 2'
-  src: 'http://placedog.com/180/200'
-dog_3:
-  text: 'Cute Dog 3'
-  src: 'http://placedog.com/130/200'
-dog_4:
-  text: 'Cute Dog 4'
-  src: 'http://placedog.com/270/200'");
-
-    // Check get element images for manually defined images.
-    $element = ['#images' => $dogs];
-    $this->assertEqual(WebformImageSelectImages::getElementImages($element), $dogs);
-
-    /** @var \Drupal\webform_image_select\WebformImageSelectImagesInterface $webform_images */
-    $webform_images = WebformImageSelectImages::create([
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => 'dogs',
-      'title' => 'Dogs',
-      'images' => Yaml::encode($dogs),
-    ]);
-    $webform_images->save();
-
-    // Check get images.
-    $this->assertEqual($webform_images->getImages(), $dogs);
-
-    // Set invalid images.
-    $webform_images->set('images', "not\nvalid\nyaml")->save();
-
-    // Check invalid images.
-    $this->assertFalse($webform_images->getImages());
-
-    // Check admin user access denied.
-    $this->drupalGet('/admin/structure/webform/config/images/manage');
-    $this->assertResponse(403);
-    $this->drupalGet('/admin/structure/webform/config/images/manage/add');
-    $this->assertResponse(403);
-    $this->drupalGet('/admin/structure/webform/config/images/manage/animals/edit');
-    $this->assertResponse(403);
-
-    // Check admin user access.
-    $this->drupalLogin($admin_user);
-    $this->drupalGet('/admin/structure/webform/config/images/manage');
-    $this->assertResponse(200);
-    $this->drupalGet('/admin/structure/webform/config/images/manage/add');
-    $this->assertResponse(200);
-
-    // Check image altered message.
-    $this->drupalGet('/admin/structure/webform/config/images/manage/animals/edit');
-    $this->assertRaw('The <em class="placeholder">Cute Animals</em> images are being altered by the <em class="placeholder">Webform Image Select Test</em> module.');
-
-    // Check hook_webform_image_select_images_alter().
-    // Check hook_webform_image_select_images_WEBFORM_IMAGE_SELECT_IMAGES_ID_alter().
-    $element = ['#images' => 'animals'];
-    $images = WebformImageSelectImages::getElementImages($element);
-    $this->debug($images);
-    $this->assertEqual(array_keys($images), ['kitten_1', 'kitten_2', 'kitten_3', 'kitten_4', 'bear_1', 'bear_2', 'bear_3', 'bear_4']);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesDeleteForm.php b/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesDeleteForm.php
index b777008b..58c52cf6 100644
--- a/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesDeleteForm.php
+++ b/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesDeleteForm.php
@@ -31,8 +31,8 @@ class WebformImageSelectImagesDeleteForm extends WebformConfigEntityDeleteFormBa
    * {@inheritdoc}
    */
   public function getDetails() {
-    /** @var \Drupal\webform\WebformOptionsInterface $webform_options */
-    $webform_options = $this->entity;
+    /** @var \Drupal\webform_image_select\WebformImageSelectImagesInterface $webform_images */
+    $webform_images = $this->entity;
 
     /** @var \Drupal\webform_image_select\WebformImageSelectImagesStorageInterface $webform_images_storage */
     $webform_images_storage = $this->entityTypeManager->getStorage('webform_image_select_images');
@@ -43,7 +43,7 @@ class WebformImageSelectImagesDeleteForm extends WebformConfigEntityDeleteFormBa
     ];
 
     $details = [];
-    if ($used_by_webforms = $webform_images_storage->getUsedByWebforms($webform_options)) {
+    if ($used_by_webforms = $webform_images_storage->getUsedByWebforms($webform_images)) {
       $details['used_by_composite_elements'] = [
         'title' => [
           '#markup' => $this->t('%label is used by the below webform(s).', $t_args),
diff --git a/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesForm.php b/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesForm.php
index e5ac9607..13bbd20d 100644
--- a/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesForm.php
+++ b/modules/contrib/webform/modules/webform_image_select/src/WebformImageSelectImagesForm.php
@@ -91,6 +91,7 @@ class WebformImageSelectImagesForm extends EntityForm {
         '#type' => 'webform_codemirror',
         '#mode' => 'yaml',
         '#title' => $this->t('Images (YAML)'),
+        '#attributes' => ['style' => 'min-height: 200px'],
         '#default_value' => $this->getImages(),
       ];
     }
diff --git a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_image_select.yml b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_image_select.yml
index 8f262e70..c7969db2 100644
--- a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_image_select.yml
+++ b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_image_select.yml
@@ -229,6 +229,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -276,6 +277,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_images.yml b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_images.yml
index ccc8941a..bc048ff0 100644
--- a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_images.yml
+++ b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/config/install/webform.webform.test_element_images.yml
@@ -130,6 +130,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -177,6 +178,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.info.yml b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.info.yml
index 406497a3..55df4057 100644
--- a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.info.yml
+++ b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Image Select Test'
 type: module
 description: 'Support module for webform that provides image select element working examples.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform_image_select'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.module b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.module
index 249f1e83..c56bd5fb 100644
--- a/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.module
+++ b/modules/contrib/webform/modules/webform_image_select/tests/modules/webform_image_select_test/webform_image_select_test.module
@@ -2,7 +2,7 @@
 
 /**
  * @file
- * Support module for webform that provides image select element working examples..
+ * Support module for webform that provides image select element working examples.
  */
 
 use Drupal\webform_image_select\Entity\WebformImageSelectImages;
diff --git a/modules/contrib/webform/modules/webform_image_select/webform_image_select.info.yml b/modules/contrib/webform/modules/webform_image_select/webform_image_select.info.yml
index 99c84202..01c1ba98 100644
--- a/modules/contrib/webform/modules/webform_image_select/webform_image_select.info.yml
+++ b/modules/contrib/webform/modules/webform_image_select/webform_image_select.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Image Select'
 type: module
 description: 'Provides a webform element for a selecting an image.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_image_select/webform_image_select.links.task.yml b/modules/contrib/webform/modules/webform_image_select/webform_image_select.links.task.yml
index 34bf0530..c8a04ea2 100644
--- a/modules/contrib/webform/modules/webform_image_select/webform_image_select.links.task.yml
+++ b/modules/contrib/webform/modules/webform_image_select/webform_image_select.links.task.yml
@@ -1,8 +1,8 @@
 webform.config.webform_image_select_images:
   title: 'Images'
   route_name: entity.webform_image_select_images.collection
-  parent_id: webform.config
-  weight: 30
+  parent_id: webform.options
+  weight: 10
 
 entity.webform_image_select_images:
   title: 'Edit'
diff --git a/modules/contrib/webform/modules/webform_image_select/webform_image_select.module b/modules/contrib/webform/modules/webform_image_select/webform_image_select.module
index cdec386d..c38f5048 100644
--- a/modules/contrib/webform/modules/webform_image_select/webform_image_select.module
+++ b/modules/contrib/webform/modules/webform_image_select/webform_image_select.module
@@ -10,6 +10,23 @@ use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Serialization\Yaml;
 use Drupal\Core\Form\FormStateInterface;
 
+/**
+ * Implements hook_webform_help_info().
+ */
+function webform_image_select_webform_help_info() {
+  $help = [];
+  $help['config_image_select_images'] = [
+    'group' => 'configuration',
+    'title' => t('Configuration: Images'),
+    'content' => t('The <strong>Images configuration</strong> page lists reusable images for the image select element.'),
+    'routes' => [
+      // @see /admin/structure/webform/config/images
+      'entity.webform_image_select_images.collection',
+    ],
+  ];
+  return $help;
+}
+
 /**
  * Implements hook_webform_libraries_info().
  */
diff --git a/modules/contrib/webform/modules/webform_node/src/Controller/WebformNodeReferencesListController.php b/modules/contrib/webform/modules/webform_node/src/Controller/WebformNodeReferencesListController.php
index aa0ab77a..00222841 100644
--- a/modules/contrib/webform/modules/webform_node/src/Controller/WebformNodeReferencesListController.php
+++ b/modules/contrib/webform/modules/webform_node/src/Controller/WebformNodeReferencesListController.php
@@ -160,28 +160,6 @@ class WebformNodeReferencesListController extends EntityListBuilder implements C
     );
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  protected function getEntityIds() {
-    $query = $this->getStorage()->getQuery()
-      ->sort($this->entityType->getKey('id'));
-
-    // Add field names.
-    $or = $query->orConditionGroup();
-    foreach ($this->fieldNames as $field_name) {
-      $or->condition($field_name . '.target_id', $this->webform->id());
-    }
-    $query->condition($or);
-
-    // Only add the pager if a limit is specified.
-    if ($this->limit) {
-      $query->pager($this->limit);
-    }
-
-    return $query->execute();
-  }
-
   /**
    * {@inheritdoc}
    */
@@ -356,7 +334,11 @@ class WebformNodeReferencesListController extends EntityListBuilder implements C
    * {@inheritdoc}
    */
   public function render() {
-    $build = parent::render();
+    $build = [];
+
+    $build['info'] = $this->buildInfo();
+
+    $build += parent::render();
 
     $build['table']['#sticky'] = TRUE;
 
@@ -390,4 +372,61 @@ class WebformNodeReferencesListController extends EntityListBuilder implements C
     return $build;
   }
 
+  /**
+   * Build information summary.
+   *
+   * @return array
+   *   A render array representing the information summary.
+   */
+  protected function buildInfo() {
+    $total = $this->getTotal();
+    return [
+      '#markup' => $this->formatPlural($total, '@count reference', '@count references'),
+      '#prefix' => '<div>',
+      '#suffix' => '</div>',
+    ];
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  protected function getEntityIds() {
+    $query = $this->getStorage()->getQuery()
+      ->sort($this->entityType->getKey('id'));
+
+    // Add field names.
+    $or = $query->orConditionGroup();
+    foreach ($this->fieldNames as $field_name) {
+      $or->condition($field_name . '.target_id', $this->webform->id());
+    }
+    $query->condition($or);
+
+    // Only add the pager if a limit is specified.
+    if ($this->limit) {
+      $query->pager($this->limit);
+    }
+
+    return $query->execute();
+  }
+
+  /**
+   * Get the total number of references.
+   *
+   * @return int
+   *   The total number of references.
+   */
+  protected function getTotal() {
+    $query = $this->getStorage()->getQuery()
+      ->sort($this->entityType->getKey('id'));
+
+    // Add field names.
+    $or = $query->orConditionGroup();
+    foreach ($this->fieldNames as $field_name) {
+      $or->condition($field_name . '.target_id', $this->webform->id());
+    }
+    $query->condition($or);
+
+    return count($query->execute());
+  }
+
 }
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessPermissionsTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessPermissionsTest.php
deleted file mode 100644
index f0beb676..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessPermissionsTest.php
+++ /dev/null
@@ -1,187 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests\Access;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform node access permissions.
- *
- * @group WebformNode
- */
-class WebformNodeAccessPermissionsTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_node'];
-
-  /**
-   * Tests webform node access permissions.
-   *
-   * @see \Drupal\webform\Tests\Access\WebformAccessPermissionTest::testWebformSubmissionAccessPermissions
-   */
-  public function testAccessPermissions() {
-    global $base_path;
-
-    // Own webform submission user.
-    $submission_own_account = $this->drupalCreateUser([
-      'view own webform submission',
-      'edit own webform submission',
-      'delete own webform submission',
-      'access webform submission user',
-    ]);
-
-    // Any webform submission user.
-    $submission_any_account = $this->drupalCreateUser([
-      'view any webform submission',
-      'edit any webform submission',
-      'delete any webform submission',
-    ]);
-
-    // Own webform submission node user.
-    $submission_own_node_account = $this->drupalCreateUser([
-      'view webform submissions own node',
-      'edit webform submissions own node',
-      'delete webform submissions own node',
-    ]);
-
-    // Any webform submission node user.
-    $submission_any_node_account = $this->drupalCreateUser([
-      'view webform submissions any node',
-      'edit webform submissions any node',
-      'delete webform submissions any node',
-    ]);
-
-    // Create webform node that references the contact webform.
-    $webform = Webform::load('contact');
-    $node = $this->createWebformNode('contact', ['uid' => $submission_own_node_account->id()]);
-    $nid = $node->id();
-
-    /**************************************************************************/
-    // Own submission permissions (authenticated).
-    /**************************************************************************/
-
-    $this->drupalLogin($submission_own_account);
-
-    $edit = ['subject' => '{subject}', 'message' => '{message}'];
-    $sid_1 = $this->postNodeSubmission($node, $edit);
-
-    // Check view own previous submission message.
-    $this->drupalGet("node/{$nid}");
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}node/{$nid}/webform/submissions/{$sid_1}\">View your previous submission</a>.");
-
-    // Check 'view own submission' permission.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}");
-    $this->assertResponse(200);
-
-    // Check 'edit own submission' permission.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}/edit");
-    $this->assertResponse(200);
-
-    // Check 'delete own submission' permission.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}/delete");
-    $this->assertResponse(200);
-
-    $sid_2 = $this->postNodeSubmission($node, $edit);
-
-    // Check view own previous submissions message.
-    $this->drupalGet("node/{$nid}");
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}node/{$nid}/webform/submissions\">View your previous submissions</a>");
-
-    // Check view own previous submissions.
-    $this->drupalGet("node/{$nid}/webform/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submissions/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submissions/{$sid_2}");
-
-    // Check submission user duplicate returns access denied.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_2}/duplicate");
-    $this->assertResponse(403);
-
-    // Enable submission user duplicate.
-    $webform->setSetting('submission_user_duplicate', TRUE);
-    $webform->save();
-
-    // Check submission user duplicate returns access allows.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_2}/duplicate");
-    $this->assertResponse(200);
-
-    // Check webform results access denied.
-    $this->drupalGet("node/{$nid}/webform/results/submissions");
-    $this->assertResponse(403);
-
-    /**************************************************************************/
-    // Any submission permissions.
-    /**************************************************************************/
-
-    // Login as any user.
-    $this->drupalLogin($submission_any_account);
-
-    // Check webform results access allowed.
-    $this->drupalGet("node/{$nid}/webform/results/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$sid_2}");
-
-    // Check webform submission access allowed.
-    $this->drupalGet("node/{$nid}/webform/submission/{$sid_1}");
-    $this->assertResponse(200);
-
-    /**************************************************************************/
-    // Own submission node permissions.
-    /**************************************************************************/
-
-    // Login as own node user.
-    $this->drupalLogin($submission_own_node_account);
-
-    // Check webform results access allowed.
-    $this->drupalGet("node/{$nid}/webform/results/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$sid_2}");
-
-    // Check webform submission access allowed.
-    $this->drupalGet("node/{$nid}/webform/submission/{$sid_1}");
-    $this->assertResponse(200);
-
-    // Check webform submission edit allowed.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}/edit");
-    $this->assertResponse(200);
-
-    // Check webform submission delete allowed.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}/delete");
-    $this->assertResponse(200);
-
-    /**************************************************************************/
-    // Any submission node permissions.
-    /**************************************************************************/
-
-    // Login as any node user.
-    $this->drupalLogin($submission_any_node_account);
-
-    // Check webform results access allowed.
-    $this->drupalGet("node/{$nid}/webform/results/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$sid_2}");
-
-    // Check webform submission access allowed.
-    $this->drupalGet("node/{$nid}/webform/submission/{$sid_1}");
-    $this->assertResponse(200);
-
-    // Check webform submission edit allowed.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}/edit");
-    $this->assertResponse(200);
-
-    // Check webform submission delete allowed.
-    $this->drupalGet("node/{$nid}/webform/submissions/{$sid_1}/delete");
-    $this->assertResponse(200);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessRulesTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessRulesTest.php
deleted file mode 100644
index d9a18794..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/Access/WebformNodeAccessRulesTest.php
+++ /dev/null
@@ -1,123 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests\Access;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform node access rules.
- *
- * @group WebformNode
- */
-class WebformNodeAccessRulesTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_node'];
-
-  /**
-   * Tests webform node access rules.
-   *
-   * @see \Drupal\webform\Tests\WebformEntityAccessControlsTest::testAccessRules
-   */
-  public function testAccessRules() {
-    /** @var \Drupal\webform\WebformAccessRulesManagerInterface $access_rules_manager */
-    $access_rules_manager = \Drupal::service('webform.access_rules_manager');
-    $default_access_rules = $access_rules_manager->getDefaultAccessRules();
-
-    $webform = Webform::load('contact');
-
-    $node = $this->createWebformNode('contact');
-    $nid = $node->id();
-
-    $account = $this->drupalCreateUser(['access content']);
-    $rid = $account->getRoles(TRUE)[0];
-    $uid = $account->id();
-
-    /**************************************************************************/
-
-    // Log in normal user and get their rid.
-    $this->drupalLogin($account);
-
-    // Add one submission to the Webform node.
-    $edit = [
-      'name' => '{name}',
-      'email' => 'example@example.com',
-      'subject' => '{subject}',
-      'message' => '{message',
-    ];
-    $sid = $this->postNodeSubmission($node, $edit);
-
-    // Check create authenticated/anonymous access.
-    $webform->setAccessRules($default_access_rules)->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertFieldByName('name', $account->getAccountName());
-    $this->assertFieldByName('email', $account->getEmail());
-
-    $access_rules = [
-      'create' => [
-        'roles' => [],
-        'users' => [],
-      ],
-    ] + $default_access_rules;
-    $webform->setAccessRules($access_rules)->save();
-
-    // Check no access.
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertNoFieldByName('name', $account->getAccountName());
-    $this->assertNoFieldByName('email', $account->getEmail());
-
-    $any_tests = [
-      'node/{node}/webform/results/submissions' => 'view_any',
-      'node/{node}/webform/results/download' => 'view_any',
-      'node/{node}/webform/results/clear' => 'purge_any',
-      'node/{node}/webform/submission/{webform_submission}' => 'view_any',
-      'node/{node}/webform/submission/{webform_submission}/text' => 'view_any',
-      'node/{node}/webform/submission/{webform_submission}/yaml' => 'view_any',
-      'node/{node}/webform/submission/{webform_submission}/edit' => 'update_any',
-      'node/{node}/webform/submission/{webform_submission}/delete' => 'delete_any',
-    ];
-
-    // Check that all the test paths are access denied for authenticated.
-    foreach ($any_tests as $path => $permission) {
-      $path = str_replace('{node}', $nid, $path);
-      $path = str_replace('{webform_submission}', $sid, $path);
-
-      $this->drupalGet($path);
-      $this->assertResponse(403, 'Webform returns access denied');
-    }
-
-    // Check access rules by role and user id.
-    foreach ($any_tests as $path => $permission) {
-      $path = str_replace('{node}', $nid, $path);
-      $path = str_replace('{webform_submission}', $sid, $path);
-
-      // Check access rule via role.
-      $access_rules = [
-        $permission => [
-          'roles' => [$rid],
-          'users' => [],
-        ],
-      ] + $default_access_rules;
-      $webform->setAccessRules($access_rules)->save();
-      $this->drupalGet($path);
-      $this->assertResponse(200, 'Webform allows access via role access rules');
-
-      // Check access rule via role.
-      $access_rules = [
-        $permission => [
-          'roles' => [],
-          'users' => [$uid],
-        ],
-      ] + $default_access_rules;
-      $webform->setAccessRules($access_rules)->save();
-      $this->drupalGet($path);
-      $this->assertResponse(200, 'Webform allows access via user access rules');
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeEntityReferenceTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeEntityReferenceTest.php
deleted file mode 100644
index ee8cb512..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeEntityReferenceTest.php
+++ /dev/null
@@ -1,120 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests;
-
-use Drupal\node\Entity\Node;
-
-/**
- * Tests for webform node entity references.
- *
- * @group WebformNode
- */
-class WebformNodeEntityReferenceTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['user', 'webform', 'webform_node', 'webform_node_test_multiple'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['webform_node_test_multiple_a', 'webform_node_test_multiple_b'];
-
-  /**
-   * Tests webform node entity references.
-   */
-  public function testEntityReference() {
-    $user_data = \Drupal::service('user.data');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check that both webform A & B are being displayed.
-    $this->drupalGet('/node/1');
-    $this->assertRaw('webform_test_multiple_a');
-    $this->assertRaw('textfield_a');
-    $this->assertRaw('webform_test_multiple_b');
-    $this->assertRaw('textfield_a');
-
-    /**************************************************************************/
-
-    // Check test form B (B is the default because its weight is -1).
-    $this->drupalGet('/node/1/webform/test');
-    $this->assertNoRaw('textfield_a');
-    $this->assertRaw('textfield_b');
-
-    // Check result webform B.
-    $this->drupalGet('/node/1/webform/results/submissions');
-    $this->assertNoRaw('textfield_a');
-    $this->assertRaw('textfield_b');
-
-    // Check export webform B.
-    $this->drupalGet('/node/1/webform/results/download');
-    $this->assertNoRaw('textfield_a');
-    $this->assertRaw('textfield_b');
-
-    // Check user data is NULL.
-    $this->assertNull($user_data->get('webform_node', $this->rootUser->id(), 1));
-
-    /**************************************************************************/
-
-    // Select webform A.
-    $this->drupalGet('/node/1/webform/test');
-    $this->clickLink('Test: Webform Node Multiple A');
-
-    // Check user data is set to webform A.
-    $this->assertEqual(['target_id' => 'webform_node_test_multiple_a'], $user_data->get('webform_node', $this->rootUser->id(), 1));
-
-    // Check test webform A.
-    $this->drupalGet('/node/1/webform/test');
-    $this->assertRaw('textfield_a');
-    $this->assertNoRaw('textfield_b');
-
-    // Check result webform A.
-    $this->drupalGet('/node/1/webform/results/submissions');
-    $this->assertRaw('textfield_a');
-    $this->assertNoRaw('textfield_b');
-
-    // Check export webform A.
-    $this->drupalGet('/node/1/webform/results/download');
-    $this->assertRaw('textfield_a');
-    $this->assertNoRaw('textfield_b');
-
-    /**************************************************************************/
-
-    // Select webform A.
-    $this->drupalGet('/node/1/webform/test');
-    $this->clickLink('Test: Webform Node Multiple A');
-
-    // Check user data is set to webform A.
-    $this->assertEqual(['target_id' => 'webform_node_test_multiple_a'], $user_data->get('webform_node', $this->rootUser->id(), 1));
-
-    // Check test webform A.
-    $this->drupalGet('/node/1/webform/test');
-    $this->assertRaw('textfield_a');
-    $this->assertNoRaw('textfield_b');
-
-    // Check result webform A.
-    $this->drupalGet('/node/1/webform/results/submissions');
-    $this->assertRaw('textfield_a');
-    $this->assertNoRaw('textfield_b');
-
-    // Check export webform A.
-    $this->drupalGet('/node/1/webform/results/download');
-    $this->assertRaw('textfield_a');
-    $this->assertNoRaw('textfield_b');
-
-    /**************************************************************************/
-
-    // Delete the node.
-    Node::load(1)->delete();
-
-    // Check user data is NULL (aka deleted).
-    $this->assertNull($user_data->get('webform_node', $this->rootUser->id(), 1));
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeReferencesTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeReferencesTest.php
deleted file mode 100644
index 3d186f35..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeReferencesTest.php
+++ /dev/null
@@ -1,57 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests;
-
-/**
- * Tests for webform node references.
- *
- * @group WebformNode
- */
-class WebformNodeReferencesTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'help', 'webform', 'webform_node'];
-
-  /**
-   * Tests webform node references.
-   */
-  public function testReferences() {
-    global $base_path;
-
-    $this->drupalLogin($this->rootUser);
-    $this->drupalPlaceBlock('help_block');
-
-    // Check references tab's empty message.
-    $this->drupalGet('/admin/structure/webform/manage/contact/references');
-    $this->assertRaw('There are no webform node references.');
-
-    // Create webform node.
-    $node = $this->drupalCreateNode(['type' => 'webform']);
-    $node->webform->target_id = 'contact';
-    $node->save();
-
-    $this->drupalGet('/admin/structure/webform/manage/contact/references');
-
-    // Check references tab does not include empty message.
-    $this->assertNoRaw('There are no webform node references.');
-
-    // Check references tabs includes webform node.
-    $this->assertLink($node->label());
-
-    // Check references tab local actions.
-    $this->assertRaw('<li><a href="' . $base_path . 'node/add/webform?webform_id=contact" class="button button-action" data-drupal-link-query="{&quot;webform_id&quot;:&quot;contact&quot;}" data-drupal-link-system-path="node/add/webform">Add Webform</a></li>');
-
-    // Check node with prepopulated webform.
-    $this->drupalGet('/node/add/webform', ['query' => ['webform_id' => 'contact']]);
-    $this->assertFieldByName('webform[0][target_id]', 'contact');
-
-    // Check node without prepopulated webform warning.
-    $this->drupalGet('/node/add/webform');
-    $this->assertRaw('Webforms must first be <a href="' . $base_path . 'admin/structure/webform">created</a> before referencing them.');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeResultsTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeResultsTest.php
deleted file mode 100644
index e0192aac..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeResultsTest.php
+++ /dev/null
@@ -1,224 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests;
-
-use Drupal\Component\Utility\Html;
-use Drupal\Core\Url;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform node results.
- *
- * @group WebformNode
- */
-class WebformNodeResultsTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform', 'webform_node'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Place blocks.
-    $this->placeBlocks();
-  }
-
-  /**
-   * Tests webform node results.
-   */
-  public function testResults() {
-    global $base_path;
-
-    $normal_user = $this->drupalCreateUser();
-
-    $admin_user = $this->drupalCreateUser([
-      'administer webform',
-    ]);
-
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /** @var \Drupal\webform\WebformSubmissionStorageInterface $submission_storage */
-    $submission_storage = \Drupal::entityTypeManager()->getStorage('webform_submission');
-
-    /**************************************************************************/
-
-    $webform = Webform::load('contact');
-
-    // Create node.
-    $node = $this->drupalCreateNode(['type' => 'webform']);
-    $nid = $node->id();
-
-    /* Webform entity reference */
-
-    // Check access denied to webform results.
-    $this->drupalLogin($admin_submission_user);
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertResponse(403);
-
-    // Set Node webform to the contact webform.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_OPEN;
-    $node->save();
-
-    /* Submission management */
-
-    // Generate 3 node submissions and 3 webform submissions.
-    $this->drupalLogin($normal_user);
-    $node_sids = [];
-    $webform_sids = [];
-    for ($i = 1; $i <= 3; $i++) {
-      $edit = [
-        'name' => "node$i",
-        'email' => "node$i@example.com",
-        'subject' => "Node $i subject",
-        'message' => "Node $i message",
-      ];
-      $node_sids[$i] = $this->postNodeSubmission($node, $edit);
-      $edit = [
-        'name' => "webform$i",
-        'email' => "webform$i@example.com",
-        'subject' => "Webform $i subject",
-        'message' => "Webform $i message",
-      ];
-      $webform_sids[$i] = $this->postSubmission($webform, $edit);
-    }
-
-    // Check that 6 submission were created.
-    $this->assertEqual($submission_storage->getTotal($webform, $node), 3);
-    $this->assertEqual($submission_storage->getTotal($webform), 6);
-
-    // Check webform node results.
-    $this->drupalLogin($admin_submission_user);
-    $node_route_parameters = ['node' => $node->id(), 'webform_submission' => $node_sids[1]];
-    $node_submission_url = Url::fromRoute('entity.node.webform_submission.canonical', $node_route_parameters);
-    $node_submission_title = $node->label() . ': Submission #' . $node_sids[1];
-    $webform_submission_route_parameters = ['webform' => 'contact', 'webform_submission' => $node_sids[1]];
-    $webform_submission_url = Url::fromRoute('entity.webform_submission.canonical', $webform_submission_route_parameters);
-
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertResponse(200);
-    $this->assertRaw('<h1 class="page-title">' . $node->label() . '</h1>');
-    $this->assertNoRaw('<h1 class="page-title">' . $webform->label() . '</h1>');
-    $this->assertRaw(('<a href="' . $node_submission_url->toString() . '" title="' . Html::escape($node_submission_title) . '" aria-label="' . Html::escape($node_submission_title) . '">' . $node_sids[1] . '</a>'));
-    $this->assertNoRaw(('<a href="' . $webform_submission_url->toString() . '">' . $webform_sids[1] . '</a>'));
-
-    // Check webform node title.
-    $this->drupalGet('/node/' . $node->id() . '/webform/submission/' . $node_sids[1]);
-    $this->assertRaw($node->label() . ': Submission #' . $node_sids[1]);
-    $this->drupalGet('/node/' . $node->id() . '/webform/submission/' . $node_sids[2]);
-    $this->assertRaw($node->label() . ': Submission #' . $node_sids[2]);
-
-    // Check webform node navigation.
-    $this->drupalGet('/node/' . $node->id() . '/webform/submission/' . $node_sids[1]);
-    $node_route_parameters = ['node' => $node->id(), 'webform_submission' => $node_sids[2]];
-    $node_submission_url = Url::fromRoute('entity.node.webform_submission.canonical', $node_route_parameters);
-    $this->assertRaw('<a href="' . $node_submission_url->toString() . '" rel="next" title="Go to next page">Next submission <b>›</b></a>');
-
-    // Check webform node saved draft.
-    $webform->setSetting('draft', WebformInterface::DRAFT_AUTHENTICATED);
-    $webform->save();
-
-    // Check webform saved draft.
-    $this->drupalLogin($normal_user);
-    $edit = [
-      'name' => "nodeDraft",
-      'email' => "nodeDraft@example.com",
-      'subject' => "Node draft subject",
-      'message' => "Node draft message",
-    ];
-    $this->drupalPostForm('node/' . $node->id(), $edit, t('Save Draft'));
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('A partially-completed form was found. Please complete the remaining portions.');
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('A partially-completed form was found. Please complete the remaining portions.');
-
-    /* Table customization */
-
-    // Check that access is denied to custom results table.
-    $this->drupalLogin($admin_submission_user);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions/custom');
-    $this->assertResponse(403);
-
-    // Check that access is allowed to custom results table.
-    $this->drupalLogin($admin_user);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions/custom');
-    $this->assertResponse(200);
-
-    // Check default node results table.
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertRaw('<th specifier="created" class="priority-medium is-active" aria-sort="descending">');
-    $this->assertRaw('sort by Created');
-    $this->assertNoRaw('sort by Changed');
-
-    // Customize to main webform's results table.
-    $edit = [
-      'columns[created][checkbox]' => FALSE,
-      'columns[changed][checkbox]' => TRUE,
-      'direction' => 'asc',
-      'limit' => 20,
-      'default' => TRUE,
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/submissions/custom', $edit, t('Save'));
-    $this->assertRaw('The customized table has been saved.');
-
-    // Check that the webform node's results table is now customized.
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertRaw('<th specifier="serial" aria-sort="ascending" class="is-active">');
-    $this->assertNoRaw('sort by Created');
-    $this->assertRaw('sort by Changed');
-
-    $this->drupalLogout();
-
-    /* Access control */
-
-    // Create any and own user accounts.
-    $any_user = $this->drupalCreateUser([
-      'access content',
-      'view webform submissions any node',
-      'edit webform submissions any node',
-      'delete webform submissions any node',
-    ]);
-    $own_user = $this->drupalCreateUser([
-      'access content',
-      'view webform submissions own node',
-      'edit webform submissions own node',
-      'delete webform submissions own node',
-    ]);
-
-    // Check accessing results posted to any webform node.
-    $this->drupalLogin($any_user);
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertResponse(200);
-    foreach ($node_sids as $node_sid) {
-      $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$node_sid}");
-    }
-
-    // Check accessing results posted to own webform node.
-    $this->drupalLogin($own_user);
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertResponse(403);
-
-    $node->setOwnerId($own_user->id())->save();
-    $this->drupalGet('/node/' . $node->id() . '/webform/results/submissions');
-    $this->assertResponse(200);
-    foreach ($node_sids as $node_sid) {
-      $this->assertLinkByHref("{$base_path}node/{$nid}/webform/submission/{$node_sid}");
-    }
-
-    // Check deleting webform node results.
-    $this->drupalPostForm('node/' . $node->id() . '/webform/results/clear', ['confirm' => TRUE], t('Clear'));
-    $this->assertEqual($submission_storage->getTotal($webform, $node), 0);
-    $this->assertEqual($submission_storage->getTotal($webform), 3);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTest.php
deleted file mode 100644
index f9b0e6c2..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTest.php
+++ /dev/null
@@ -1,311 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests;
-
-use Drupal\Core\Entity\Entity\EntityViewDisplay;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform node.
- *
- * @group WebformNode
- */
-class WebformNodeTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform', 'webform_node'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_limit', 'test_confirmation_inline'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Place webform test blocks.
-    $this->placeWebformBlocks('webform_test_block_submission_limit');
-  }
-
-  /**
-   * Tests webform node.
-   */
-  public function testNode() {
-    $node = $this->createWebformNode('contact');
-
-    /** @var \Drupal\webform\WebformEntityReferenceManagerInterface $entity_reference_manager */
-    $entity_reference_manager = \Drupal::service('webform.entity_reference_manager');
-
-    $normal_user = $this->drupalCreateUser();
-
-    /**************************************************************************/
-
-    // Check table names.
-    $this->assertEqual($entity_reference_manager->getTableNames(), [
-      "node__webform" => 'webform',
-      "node_revision__webform" => 'webform',
-    ]);
-
-    /**************************************************************************/
-    // Webform node basic.
-    /**************************************************************************/
-
-    // Check contact webform.
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('id="webform-submission-contact-node-' . $node->id() . '-add-form"');
-    $this->assertNoFieldByName('name', 'John Smith');
-
-    // Check contact webform with default data.
-    $node->webform->default_data = "name: 'John Smith'";
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertFieldByName('name', 'John Smith');
-
-    /**************************************************************************/
-    // Webform node open and closed.
-    /**************************************************************************/
-
-    // Check contact webform closed.
-    $node->webform->status = WebformInterface::STATUS_CLOSED;
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertNoFieldByName('name', 'John Smith');
-    $this->assertRaw('Sorry… This form is closed to new submissions.');
-
-    /* Confirmation inline (test_confirmation_inline) */
-
-    // Check confirmation inline webform.
-    $node->webform->target_id = 'test_confirmation_inline';
-    $node->webform->default_data = '';
-    $node->webform->status = WebformInterface::STATUS_OPEN;
-    $node->webform->open = '';
-    $node->webform->close = '';
-    $node->save();
-    $this->postNodeSubmission($node);
-    $this->assertRaw('This is a custom inline confirmation message.');
-
-    /**************************************************************************/
-    // Webform node scheduleD.
-    /**************************************************************************/
-
-    // Check scheduled to open.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_SCHEDULED;
-    $node->webform->open = date('Y-m-d\TH:i:s', strtotime('today +1 day'));
-    $node->webform->close = '';
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('This form has not yet been opened to submissions.');
-    $this->assertNoFieldByName('name', 'John Smith');
-
-    // Check scheduled and opened.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_SCHEDULED;
-    $node->webform->open = date('Y-m-d\TH:i:s', strtotime('today -1 day'));
-    $node->webform->close = '';
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertNoRaw('This form has not yet been opened to submissions.');
-    $this->assertFieldByName('name');
-
-    // Check scheduled and closed.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_SCHEDULED;
-    $node->webform->open = '';
-    $node->webform->close = date('Y-m-d\TH:i:s', strtotime('today -1 day'));
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('Sorry… This form is closed to new submissions.');
-    $this->assertNoFieldByName('name');
-
-    // Check scheduled and is open because open or close data was not set.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_SCHEDULED;
-    $node->webform->open = '';
-    $node->webform->close = '';
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertNoRaw('Sorry… This form is closed to new submissions.');
-    $this->assertFieldByName('name');
-
-    // Check that changes to global message clear the cache.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_SCHEDULED;
-    $node->webform->open = '';
-    $node->webform->close = date('Y-m-d\TH:i:s', strtotime('today -1 day'));
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('settings.default_form_close_message', '{Custom closed message}')
-      ->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('{Custom closed message}');
-
-    /**************************************************************************/
-    // Submission limit (test_form_limit).
-    /**************************************************************************/
-
-    // Set per source entity total and user limit.
-    // @see \Drupal\webform\Tests\WebformSubmissionFormSettingsTest::testSettings
-    $node->webform->target_id = 'test_form_limit';
-    $node->webform->default_data = '';
-    $node->webform->open = '';
-    $node->webform->close = '';
-    $node->save();
-
-    $limit_form = Webform::load('test_form_limit');
-    $limit_form->setSettings([
-      'limit_total' => NULL,
-      'limit_user' => NULL,
-      'entity_limit_total' => 3,
-      'entity_limit_user' => 1,
-      'limit_total_message' => 'Only 3 submissions are allowed.',
-      'limit_user_message' => 'You are only allowed to have 1 submission for this webform.',
-    ]);
-    $limit_form->save();
-
-    $this->drupalGet('/node/' . $node->id());
-
-    // Check submission limit tokens.
-    $this->assertRaw('limit:webform:source_entity: 3');
-    $this->assertRaw('remaining:webform:source_entity: 3');
-    $this->assertRaw('limit:user:source_entity: 1');
-    $this->assertRaw('remaining:user:source_entity: 1');
-
-    // Check submission limit blocks.
-    $this->assertRaw('0 user + source entity submission(s)');
-    $this->assertRaw('1 user + source entity limit');
-    $this->assertRaw('0 webform + source entity submission(s)');
-    $this->assertRaw('3 webform + source entity limit');
-
-    // Login as normal user.
-    $this->drupalLogin($normal_user);
-
-    // Create submission as authenticated user.
-    $this->postNodeSubmission($node);
-
-    $this->drupalGet('/node/' . $node->id());
-
-    // Check per source entity user limit.
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Check submission limit blocks.
-    $this->assertRaw('1 user + source entity submission(s)');
-    $this->assertRaw('1 user + source entity limit');
-    $this->assertRaw('1 webform + source entity submission(s)');
-    $this->assertRaw('3 webform + source entity limit');
-
-    // Login as root user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check submission limit tokens.
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('remaining:webform:source_entity: 2');
-    $this->assertRaw('remaining:user:source_entity: 1');
-
-    // Create 2 submissions as root user, who can ignore submission limits.
-    $this->postNodeSubmission($node);
-    $this->postNodeSubmission($node);
-
-    // Check submission limit tokens.
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('remaining:webform:source_entity: 0');
-    $this->assertRaw('remaining:user:source_entity: 0');
-
-    // Login as normal user.
-    $this->drupalLogin($normal_user);
-
-    $this->drupalGet('/node/' . $node->id());
-
-    // Check per source entity total limit.
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertRaw('Only 3 submissions are allowed.');
-    $this->assertNoRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Check submission limit blocks.
-    $this->assertRaw('1 user + source entity submission(s)');
-    $this->assertRaw('1 user + source entity limit');
-    $this->assertRaw('3 webform + source entity submission(s)');
-    $this->assertRaw('3 webform + source entity limit');
-
-    /**************************************************************************/
-    // Prepopulate source entity.
-    /**************************************************************************/
-
-    $webform_contact = Webform::load('contact');
-
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_OPEN;
-    $node->webform->default_data = "name: '{name}'";
-    $node->webform->open = '';
-    $node->webform->close = '';
-    $node->save();
-
-    $source_entity_options = ['query' => ['source_entity_type' => 'node', 'source_entity_id' => $node->id()]];
-
-    // Check default data from source entity using query string.
-    $this->drupalGet('/webform/contact', $source_entity_options);
-    $this->assertFieldByName('name', '{name}');
-
-    // Check prepopulating source entity using query string.
-    $edit = [
-      'name' => 'name',
-      'email' => 'example@example.com',
-      'subject' => 'subject',
-      'message' => 'message',
-    ];
-    $this->drupalPostForm('webform/contact', $edit, t('Send message'), $source_entity_options);
-    $sid = $this->getLastSubmissionId($webform_contact);
-    $submission = WebformSubmission::load($sid);
-    $this->assertNotNull($submission->getSourceEntity());
-    if ($submission->getSourceEntity()) {
-      $this->assertEqual($submission->getSourceEntity()
-        ->getEntityTypeId(), 'node');
-      $this->assertEqual($submission->getSourceEntity()->id(), $node->id());
-    }
-
-    /**************************************************************************/
-    // Check displaying link to webform.
-    /**************************************************************************/
-
-    // Set webform reference to be displayed as a link.
-    $display_options = [
-      'type' => 'webform_entity_reference_link',
-      'settings' => [
-        'label' => 'Register',
-      ],
-    ];
-    $view_display = EntityViewDisplay::load('node.webform.default');
-    $view_display->setComponent('webform', $display_options)->save();
-
-    // Set default data.
-    $node->webform->target_id = 'contact';
-    $node->webform->status = WebformInterface::STATUS_OPEN;
-    $node->webform->default_data = "name: '{name}'";
-    $node->webform->open = '';
-    $node->webform->close = '';
-    $node->save();
-
-    // Check 'Register' link.
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertLink('Register');
-
-    // Check that link include source_entity_type and source_entity_id.
-    $this->assertLinkByHref($webform_contact->toUrl('canonical', $source_entity_options)->toString());
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTestBase.php b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTestBase.php
index 96fa5bbd..3125730d 100644
--- a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTestBase.php
+++ b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTestBase.php
@@ -39,7 +39,7 @@ abstract class WebformNodeTestBase extends WebformTestBase {
 
     $webform = $entity_reference_manager->getWebform($node);
     $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('node/' . $node->id(), $edit, $submit);
+    $this->drupalPostForm('/node/' . $node->id(), $edit, $submit);
     return $this->getLastSubmissionId($webform);
   }
 
diff --git a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTranslationTest.php b/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTranslationTest.php
deleted file mode 100644
index 1a7baea2..00000000
--- a/modules/contrib/webform/modules/webform_node/src/Tests/WebformNodeTranslationTest.php
+++ /dev/null
@@ -1,38 +0,0 @@
-<?php
-
-namespace Drupal\webform_node\Tests;
-
-/**
- * Tests for webform node translation.
- *
- * @group WebformNode
- */
-class WebformNodeTranslationTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_node', 'webform_node_test_translation'];
-
-  /**
-   * Tests webform node translation.
-   */
-  public function testNodeTranslation() {
-    $node = $this->createWebformNode('webform_node_test_translation', ['title' => 'English node']);
-
-    // Check computed token uses the English title.
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertFieldByName('computed_token', 'English node');
-
-    // Create spanish node.
-    $node->addTranslation('es', ['title' => 'Spanish node'])->save();
-
-    // Check computed token uses the Spanish title.
-    $this->drupalGet('/es/node/' . $node->id());
-    $this->assertNoFieldByName('computed_token', 'English node');
-    $this->assertFieldByName('computed_token', 'Spanish node');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_a.yml b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_a.yml
index c285d3eb..e84446be 100644
--- a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_a.yml
+++ b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_a.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_b.yml b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_b.yml
index 9bb09ff9..ad8a037a 100644
--- a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_b.yml
+++ b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/config/install/webform.webform.webform_node_test_multiple_b.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.info.yml b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.info.yml
index a356b927..48e8b15c 100644
--- a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.info.yml
+++ b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_multiple/webform_node_test_multiple.info.yml
@@ -2,7 +2,7 @@ name: 'Webform node module multiple tests'
 type: module
 description: 'Support module for webform node that provides working examples multiple webforms attached to a single node.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:field'
   - 'drupal:menu_ui'
@@ -13,8 +13,7 @@ dependencies:
   - 'webform:webform'
   - 'webform:webform_node'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/config/install/webform.webform.webform_node_test_translation.yml b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/config/install/webform.webform.webform_node_test_translation.yml
index 6460e156..55467eef 100644
--- a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/config/install/webform.webform.webform_node_test_translation.yml
+++ b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/config/install/webform.webform.webform_node_test_translation.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.info.yml b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.info.yml
index 6aab4f65..93806337 100644
--- a/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.info.yml
+++ b/modules/contrib/webform/modules/webform_node/tests/modules/webform_node_test_translation/webform_node_test_translation.info.yml
@@ -2,15 +2,14 @@ name: 'Webform node module translation test'
 type: module
 description: 'Support module for webform node that enabled translations for webform content type.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
   - 'webform:webform_node'
   - 'webform:webform_test_translation'
   - 'drupal:content_translation'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_node/tests/src/Functional/WebformNodeBrowserTestBase.php b/modules/contrib/webform/modules/webform_node/tests/src/Functional/WebformNodeBrowserTestBase.php
index c90d9e76..6d283fec 100644
--- a/modules/contrib/webform/modules/webform_node/tests/src/Functional/WebformNodeBrowserTestBase.php
+++ b/modules/contrib/webform/modules/webform_node/tests/src/Functional/WebformNodeBrowserTestBase.php
@@ -2,15 +2,16 @@
 
 namespace Drupal\Tests\webform_node\Functional;
 
-use Drupal\node\NodeInterface;
 use Drupal\Tests\webform\Functional\WebformBrowserTestBase;
-use Drupal\webform\WebformInterface;
+use Drupal\Tests\webform_node\Traits\WebformNodeBrowserTestTrait;
 
 /**
  * Defines an abstract test base for webform node tests.
  */
 abstract class WebformNodeBrowserTestBase extends WebformBrowserTestBase {
 
+  use WebformNodeBrowserTestTrait;
+
   /**
    * Modules to enable.
    *
@@ -18,81 +19,4 @@ abstract class WebformNodeBrowserTestBase extends WebformBrowserTestBase {
    */
   public static $modules = ['webform', 'webform_node'];
 
-  /**
-   * Post a new submission to a webform node.
-   *
-   * @param \Drupal\node\NodeInterface $node
-   *   A Webform node.
-   * @param array $edit
-   *   Submission values.
-   * @param string $submit
-   *   Value of the submit button whose click is to be emulated.
-   * @param array $options
-   *   Options to be forwarded to the url generator.
-   *
-   * @return int
-   *   The created submission's sid.
-   *
-   * @see \Drupal\webform\Tests\WebformTestBase::postSubmission
-   */
-  protected function postNodeSubmission(NodeInterface $node, array $edit = [], $submit = NULL, array $options = []) {
-    /** @var \Drupal\webform\WebformEntityReferenceManagerInterface $entity_reference_manager */
-    $entity_reference_manager = \Drupal::service('webform.entity_reference_manager');
-
-    $webform = $entity_reference_manager->getWebform($node);
-    $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('node/' . $node->id(), $edit, $submit, $options);
-    return $this->getLastSubmissionId($webform);
-  }
-
-  /**
-   * Post a new test submission to a webform node.
-   *
-   * @param \Drupal\node\NodeInterface $node
-   *   A Webform node.
-   * @param array $edit
-   *   Submission values.
-   * @param string $submit
-   *   Value of the submit button whose click is to be emulated.
-   * @param array $options
-   *   Options to be forwarded to the url generator.
-   *
-   * @return int
-   *   The created submission's sid.
-   *
-   * @see \Drupal\webform\Tests\WebformTestBase::postSubmission
-   */
-  protected function postNodeSubmissionTest(NodeInterface $node, array $edit = [], $submit = NULL, array $options = []) {
-    /** @var \Drupal\webform\WebformEntityReferenceManagerInterface $entity_reference_manager */
-    $entity_reference_manager = \Drupal::service('webform.entity_reference_manager');
-
-    $webform = $entity_reference_manager->getWebform($node);
-    $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('node/' . $node->id() . '/webform/test', $edit, $submit, $options);
-    return $this->getLastSubmissionId($webform);
-  }
-
-  /**
-   * Create a webform node.
-   *
-   * @param string $webform_id
-   *   A webform id.
-   * @param array $settings
-   *   (optional) An associative array of settings for the node, as used in
-   *   entity_create().
-   *
-   * @return \Drupal\node\NodeInterface
-   *   A webform node.
-   */
-  protected function createWebformNode($webform_id, array $settings = []) {
-    $settings += ['type' => 'webform'];
-    $node = $this->drupalCreateNode($settings);
-    $node->webform->target_id = $webform_id;
-    $node->webform->status = WebformInterface::STATUS_OPEN;
-    $node->webform->open = '';
-    $node->webform->close = '';
-    $node->save();
-    return $node;
-  }
-
 }
diff --git a/modules/contrib/webform/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php b/modules/contrib/webform/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php
index 58e94a98..1d6e781f 100644
--- a/modules/contrib/webform/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php
+++ b/modules/contrib/webform/modules/webform_node/tests/src/Unit/WebformNodeUninstallValidatorTest.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\Tests\webform_node\Unit;
 
-use Drupal\simpletest\AssertHelperTrait;
+use Drupal\Tests\AssertHelperTrait;
 use Drupal\Tests\UnitTestCase;
 
 /**
diff --git a/modules/contrib/webform/modules/webform_node/webform_node.info.yml b/modules/contrib/webform/modules/webform_node/webform_node.info.yml
index 8582d963..4121ed86 100644
--- a/modules/contrib/webform/modules/webform_node/webform_node.info.yml
+++ b/modules/contrib/webform/modules/webform_node/webform_node.info.yml
@@ -2,7 +2,7 @@ name: 'Webform Node'
 type: module
 description: 'Provides a Webform content type which allows webforms to be integrated into a website as nodes.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:field'
   - 'drupal:node'
@@ -11,8 +11,7 @@ dependencies:
   - 'drupal:user'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_node/webform_node.module b/modules/contrib/webform/modules/webform_node/webform_node.module
index 5cb99acc..1f99a655 100644
--- a/modules/contrib/webform/modules/webform_node/webform_node.module
+++ b/modules/contrib/webform/modules/webform_node/webform_node.module
@@ -6,6 +6,7 @@
  */
 
 use Drupal\Core\Access\AccessResult;
+use Drupal\Core\Database\Query\AlterableInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
@@ -64,6 +65,33 @@ function webform_node_node_access(NodeInterface $node, $operation, AccountInterf
   }
 }
 
+/**
+ * Implements hook_webform_submission_query_access_alter().
+ */
+function webform_node_webform_submission_query_access_alter(AlterableInterface $query, array $webform_submission_tables) {
+  $route_name = \Drupal::routeMatch()->getRouteName();
+  if (!preg_match('/entity\.([^.]+)\.webform\.results_submissions/', $route_name, $match)) {
+    return;
+  }
+  $entity_type = $match[1];
+  $account = $query->getMetaData('account') ?: \Drupal::currentUser();
+  if ($account->hasPermission('view webform submissions any node')) {
+    foreach ($webform_submission_tables as $table) {
+      $table['condition']->condition($table['alias'] . '.entity_type', $entity_type);
+    }
+  }
+  elseif ($account->hasPermission('view webform submissions own node')) {
+    $entity_id = \Drupal::routeMatch()->getRawParameter($entity_type);
+    foreach ($webform_submission_tables as $table) {
+      /** @var \Drupal\Core\Database\Query\SelectInterface $query */
+      $condition = $query->andConditionGroup();
+      $condition->condition($table['alias'] . '.entity_type', $entity_type);
+      $condition->condition($table['alias'] . '.entity_id', $entity_id);
+      $table['condition']->condition($condition);
+    }
+  }
+}
+
 /**
  * Implements hook_node_prepare_form().
  *
@@ -86,7 +114,7 @@ function webform_node_node_prepare_form(NodeInterface $node, $operation, FormSta
     return;
   }
 
-  // Populate the node's title, webform field id and default data..
+  // Populate the node's title, webform field id and default data.
   $webform_id = \Drupal::request()->query->get('webform_id');
   if ($webform_id && ($webform = Webform::load($webform_id))) {
     $node->title->value = $webform->label();
diff --git a/modules/contrib/webform/modules/webform_node/webform_node.routing.yml b/modules/contrib/webform/modules/webform_node/webform_node.routing.yml
index eb135eb4..661443c8 100644
--- a/modules/contrib/webform/modules/webform_node/webform_node.routing.yml
+++ b/modules/contrib/webform/modules/webform_node/webform_node.routing.yml
@@ -308,7 +308,7 @@ entity.node.webform_submission.resend_form:
     _form: 'Drupal\webform\Form\WebformSubmissionResendForm'
     _title_callback: '\Drupal\webform\Controller\WebformSubmissionViewController::title'
     operation: webform_submission_resend
-    entity_access: 'webform_submission.update_any'
+    entity_access: 'webform_submission.resend'
   options:
     _admin_route: TRUE
     parameters:
@@ -323,7 +323,7 @@ entity.node.webform_submission.duplicate_form:
     _entity_form: 'webform_submission.duplicate'
     _title_callback: '\Drupal\webform\Controller\WebformSubmissionViewController::title'
     operation: webform_submission_duplicate
-    entity_access: 'webform_submission.update_any'
+    entity_access: 'webform_submission.duplicate'
     duplicate: TRUE
   options:
     _admin_route: TRUE
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/config/schema/webform_scheduled_email.plugin.handler.schema.yml b/modules/contrib/webform/modules/webform_scheduled_email/config/schema/webform_scheduled_email.plugin.handler.schema.yml
index aa481b91..13464d93 100644
--- a/modules/contrib/webform/modules/webform_scheduled_email/config/schema/webform_scheduled_email.plugin.handler.schema.yml
+++ b/modules/contrib/webform/modules/webform_scheduled_email/config/schema/webform_scheduled_email.plugin.handler.schema.yml
@@ -81,6 +81,9 @@ webform.handler.scheduled_email:
     theme_name:
       type: string
       label: 'Theme name'
+    parameters:
+      label: 'Parameters'
+      type: ignore
     debug:
       type: boolean
       label: 'Enable debugging'
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTest.php b/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTest.php
deleted file mode 100644
index b20e5cc7..00000000
--- a/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTest.php
+++ /dev/null
@@ -1,362 +0,0 @@
-<?php
-
-namespace Drupal\webform_scheduled_email\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform scheduled email handler.
- *
- * @group WebformScheduledEmail
- */
-class WebformScheduledEmailTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_scheduled_email', 'webform_scheduled_email_test', 'webform_node'];
-
-  /**
-   * Tests webform schedule email handler.
-   */
-  public function testWebformScheduledEmail() {
-    $webform_schedule = Webform::load('test_handler_scheduled_email');
-
-    /** @var \Drupal\webform_scheduled_email\WebformScheduledEmailManagerInterface $scheduled_manager */
-    $scheduled_manager = \Drupal::service('webform_scheduled_email.manager');
-
-    $yesterday = date($scheduled_manager->getDateFormat(), strtotime('-1 days'));
-    $tomorrow = date($scheduled_manager->getDateFormat(), strtotime('+1 days'));
-
-    /**************************************************************************/
-    // Submission scheduling.
-    /**************************************************************************/
-
-    // Check scheduled email yesterday.
-    $sid = $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email scheduled by Yesterday handler to be sent on $yesterday.");
-
-    // Check scheduled email yesterday database send date.
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'yesterday');
-    $this->assertEqual($scheduled_email->send, strtotime($yesterday));
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_SEND);
-
-    // Check send yesterday email.
-    $scheduled_manager->cron();
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'yesterday');
-    $this->assertFalse($scheduled_email);
-
-    // Check schedule other +14 days.
-    $sid = $this->postSubmission($webform_schedule, ['send' => 'other', 'date[date]' => '2001-01-01'], 'Save Draft');
-    $webform_submission = WebformSubmission::load($sid);
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'other');
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email scheduled by Other handler to be sent on 2001-01-15.");
-    $this->assertEqual($scheduled_email->send, strtotime('2001-01-15'));
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_SEND);
-
-    // Check reschedule other +14 days.
-    $this->postSubmission($webform_schedule, ['send' => 'other', 'date[date]' => '2002-02-02'], 'Save Draft');
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'other');
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email rescheduled by Other handler to be sent on 2002-02-16.");
-    $this->assertEqual($scheduled_email->send, strtotime('2002-02-16'));
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_SEND);
-
-    // Check saving webform submission reschedules.
-    $webform_submission->save();
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'other');
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_SEND);
-
-    // Delete webform submission which deletes the scheduled email record.
-    $webform_submission->delete();
-
-    // Check delete removed scheduled email.
-    $this->assertEqual($scheduled_manager->total(), 0);
-
-    // Check schedule email for draft.
-    $draft_reminder = date($scheduled_manager->getDateFormat(), strtotime('+14 days'));
-    $sid = $this->postSubmission($webform_schedule, ['send' => 'draft_reminder'], 'Save Draft');
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email scheduled by Draft reminder handler to be sent on $draft_reminder.");
-    $this->assertEqual($scheduled_manager->total(), 1);
-
-    // Check unschedule email for draft.
-    $this->postSubmission($webform_schedule, []);
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email unscheduled for Draft reminder handler.");
-    $this->assertEqual($scheduled_manager->total(), 0);
-
-    // Check broken/invalid date.
-    $sid = $this->postSubmission($webform_schedule, ['send' => 'broken']);
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email not scheduled for Broken handler because [broken] is not a valid date/token.");
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 0);
-
-    /**************************************************************************/
-    // Submission scheduling with date/time.
-    /**************************************************************************/
-
-    // Change schedule type to 'datetime'.
-    \Drupal::configFactory()->getEditable('webform_scheduled_email.settings')
-      ->set('schedule_type', 'datetime')
-      ->save();
-
-    // Check other +14 days with time.
-    $sid = $this->postSubmission($webform_schedule, ['send' => 'other', 'date[date]' => '2001-01-01', 'date[time]' => '02:00:00'], 'Save Draft');
-    $webform_submission = WebformSubmission::load($sid);
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'other');
-    $this->assertText("Test: Handler: Test scheduled email: Submission #$sid: Email scheduled by Other handler to be sent on 2001-01-15 02:00:00.");
-    $this->assertEqual($scheduled_email->send, strtotime('2001-01-15 02:00:00'));
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_SEND);
-
-    // Change schedule type back to 'date'.
-    \Drupal::configFactory()->getEditable('webform_scheduled_email.settings')
-      ->set('schedule_type', 'date')
-      ->save();
-
-    /**************************************************************************/
-    // Check deleting handler removes scheduled emails.
-    // @todo Figure out why the below exception is occurring during tests only.
-    // "Drupal\Component\Plugin\Exception\PluginNotFoundException: Plugin ID 'tomorrow' was not found. "
-    // $handler = $webform->getHandler('yesterday');
-    // $webform->deleteWebformHandler($handler);
-    // $total = \Drupal::database()->select('webform_scheduled_email')->countQuery()->execute()->fetchField();
-    // $this->assertEqual($total, 3);
-    /**************************************************************************/
-
-    /**************************************************************************/
-    // Webform scheduling.
-    /**************************************************************************/
-
-    // Purge all submissions.
-    $this->purgeSubmissions();
-
-    // Create 3 tomorrow scheduled emails.
-    $this->postSubmission($webform_schedule, ['send' => 'tomorrow']);
-    $this->postSubmission($webform_schedule, ['send' => 'tomorrow']);
-    $this->postSubmission($webform_schedule, ['send' => 'tomorrow']);
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 3);
-
-    // Create 3 yesterday scheduled emails.
-    $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 6);
-
-    // Send the 3 yesterday scheduled emails.
-    $stats = $scheduled_manager->cron();
-    $this->assertEqual($stats['sent'], 3);
-
-    // Check on tomorrow scheduled emails remain.
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 3);
-
-    // Reschedule yesterday submissions which includes all submissions.
-    $scheduled_manager->schedule($webform_schedule, 'yesterday');
-    $this->assertEqual($scheduled_manager->stats($webform_schedule), [
-      'total' => 9,
-      'waiting' => 6,
-      'queued' => 3,
-      'ready' => 0,
-    ]);
-
-    // Runs Reschedule yesterday submissions which includes all submissions.
-    $stats = $scheduled_manager->cron();
-    $this->assertNotEqual($stats['sent'], 6);$this->assertEqual($stats['sent'], 3);
-    $this->assertEqual($scheduled_manager->stats($webform_schedule), [
-      'total' => 3,
-      'waiting' => 0,
-      'queued' => 3,
-      'ready' => 0,
-    ]);
-
-    // Reschedule tomorrow submissions.
-    $scheduled_manager->schedule($webform_schedule, 'tomorrow');
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 6);
-    $this->assertEqual($scheduled_manager->waiting($webform_schedule), 6);
-    $this->assertEqual($scheduled_manager->ready($webform_schedule), 0);
-
-    /**************************************************************************/
-    // Webform scheduling with conditions.
-    /**************************************************************************/
-
-    // Purge all submissions.
-    $this->purgeSubmissions();
-
-    // Create 3 yesterday scheduled emails.
-    $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $this->postSubmission($webform_schedule, ['send' => 'yesterday']);
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 3);
-    $this->assertEqual($scheduled_manager->stats(), [
-      'total' => 3,
-      'waiting' => 0,
-      'queued' => 0,
-      'ready' => 3,
-    ]);
-
-    // Add condition to only send yesterday email if 'value' is filled.
-    /** @var \Drupal\webform\Plugin\WebformHandlerInterface $yesterday_handler */
-    $yesterday_handler = $webform_schedule->getHandler('yesterday');
-    $conditions = ['enabled' => [':input[name="value"]' => ['filled' => TRUE]]];
-    $yesterday_handler->setConditions($conditions);
-    // NOTE: Executing $webform_schedule->save() throws the below
-    // unexplainable error.
-    //
-    // TypeError: Argument 1 passed to
-    // Drupal\webform\WebformSubmissionConditionsValidator::validateConditions()
-    // must be of the type array, null given
-    // $webform_schedule->save() ;
-    //
-    // Check that 3 yesterday scheduled emails are skipped and removed.
-    $stats = $scheduled_manager->cron();
-    $this->assertEqual($stats['skipped'], 3);
-    $this->assertEqual($scheduled_manager->stats(), [
-      'total' => 0,
-      'waiting' => 0,
-      'queued' => 0,
-      'ready' => 0,
-    ]);
-
-    // Clear yesterday conditions.
-    $yesterday_handler->setConditions([]);
-
-    /**************************************************************************/
-    // Ignore past scheduling.
-    /**************************************************************************/
-
-    // Purge all submissions.
-    $this->purgeSubmissions();
-
-    // Check last year email can't be scheduled.
-    $sid = $this->postSubmission($webform_schedule, ['send' => 'last_year']);
-    $this->assertEqual($scheduled_manager->total($webform_schedule), 0);
-    $this->assertRaw('<em class="placeholder">Test: Handler: Test scheduled email: Submission #' . $sid . '</em>: Email <b>ignored</b> by <em class="placeholder">Last year</em> handler to be sent on <em class="placeholder">2016-01-01</em>.');
-
-    /**************************************************************************/
-    // Source entity scheduling.
-    /**************************************************************************/
-
-    // Purge all submissions.
-    $this->purgeSubmissions();
-
-    // Create webform node.
-    $webform_node = $this->createWebformNode($webform_schedule->id());
-    $sids = [
-      $this->postNodeSubmission($webform_node, ['send' => 'tomorrow']),
-      $this->postNodeSubmission($webform_node, ['send' => 'tomorrow']),
-      $this->postNodeSubmission($webform_node, ['send' => 'tomorrow']),
-    ];
-    $this->assertEqual($scheduled_manager->total(), 3);
-    // Get first submission.
-    $sid = $sids[0];
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check first submission.
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'tomorrow');
-
-    // Check queued and total.
-    $this->assertEqual($scheduled_manager->stats(), [
-      'total' => 3,
-      'waiting' => 0,
-      'queued' => 3,
-      'ready' => 0,
-    ]);
-    $this->assertEqual($scheduled_manager->stats($webform_node), [
-      'total' => 3,
-      'waiting' => 0,
-      'queued' => 3,
-      'ready' => 0,
-    ]);
-
-    // Check first submission state is send.
-    $this->assertEqual($scheduled_email->send, strtotime($tomorrow));
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_SEND);
-
-    // Check updating node reschedules emails.
-    $webform_node->save();
-
-    // Check waiting and total.
-    $this->assertEqual($scheduled_manager->stats(), [
-      'total' => 3,
-      'waiting' => 3,
-      'queued' => 0,
-      'ready' => 0,
-    ]);
-    $this->assertEqual($scheduled_manager->stats($webform_node), [
-      'total' => 3,
-      'waiting' => 3,
-      'queued' => 0,
-      'ready' => 0,
-    ]);
-
-    // Check first submission state is reschedule.
-    $scheduled_email = $scheduled_manager->load($webform_submission, 'tomorrow');
-    $this->assertEqual($scheduled_email->state, $scheduled_manager::SUBMISSION_RESCHEDULE);
-
-    // Run cron to trigger scheduling.
-    $scheduled_manager->cron();
-
-    // Check queued and total.
-    $this->assertEqual($scheduled_manager->stats(), [
-      'total' => 3,
-      'waiting' => 0,
-      'queued' => 3,
-      'ready' => 0,
-    ]);
-    $this->assertEqual($scheduled_manager->stats($webform_node), [
-      'total' => 3,
-      'waiting' => 0,
-      'queued' => 3,
-      'ready' => 0,
-    ]);
-
-    // Check deleting node unscheduled emails.
-    $webform_node->delete();
-    $this->assertEqual($scheduled_manager->stats(), [
-      'total' => 3,
-      'waiting' => 3,
-      'queued' => 0,
-      'ready' => 0,
-    ]);
-
-    // Run cron to trigger unscheduling.
-    $scheduled_manager->cron();
-    $this->assertEqual($scheduled_manager->total(), 0);
-
-    // Purge all submissions.
-    $this->purgeSubmissions();
-
-    /**************************************************************************/
-    // Testing.
-    /**************************************************************************/
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check 'Other' email will be sent immediately message when testing.
-    $this->drupalGet('/webform/test_handler_scheduled_email/test');
-    $this->assertRaw('The <em class="placeholder">Other</em> email will be sent immediately upon submission.');
-
-    // Check 'Other' email is sent immediately via testing.
-    $this->drupalPostForm('webform/test_handler_scheduled_email/test', ['send' => 'other', 'date[date]' => '2101-01-01'], t('Submit'));
-    $this->assertEqual($scheduled_manager->total(), 0);
-    $this->assertRaw('Webform submission from: </em> sent to <em class="placeholder">simpletest@example.com</em> from <em class="placeholder">Drupal</em> [<em class="placeholder">simpletest@example.com</em>');
-    $this->assertRaw('Debug: Email: Other');
-  }
-
-  /**
-   * {@inheritdoc}
-   */
-  protected function purgeSubmissions() {
-    // Manually purge submissions to trigger deletion of scheduled emails.
-    $webform_submissions = WebformSubmission::loadMultiple();
-    foreach ($webform_submissions as $webform_submission) {
-      $webform_submission->delete();
-    }
-
-    /** @var \Drupal\webform_scheduled_email\WebformScheduledEmailManagerInterface $scheduled_manager */
-    $scheduled_manager = \Drupal::service('webform_scheduled_email.manager');
-    $this->assertEqual($scheduled_manager->total(), 0);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTranslationTest.php b/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTranslationTest.php
deleted file mode 100644
index 54a0e1ec..00000000
--- a/modules/contrib/webform/modules/webform_scheduled_email/src/Tests/WebformScheduledEmailTranslationTest.php
+++ /dev/null
@@ -1,56 +0,0 @@
-<?php
-
-namespace Drupal\webform_scheduled_email\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform scheduled email handler translation.
- *
- * @group WebformScheduledEmail
- */
-class WebformScheduledEmailTranslationTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_scheduled_email', 'webform_scheduled_email_test_translation'];
-
-  /**
-   * Tests webform schedule email handler translation.
-   */
-  public function testWebformScheduledEmailTranslation() {
-    $webform_schedule = Webform::load('test_handler_scheduled_translate');
-
-    /** @var \Drupal\webform_scheduled_email\WebformScheduledEmailManagerInterface $scheduled_manager */
-    $scheduled_manager = \Drupal::service('webform_scheduled_email.manager');
-
-    /**************************************************************************/
-
-    // Scheduled English email.
-    $this->drupalPostForm('webform/' . $webform_schedule->id(), [], t('Submit'));
-
-    // Send email.
-    $scheduled_manager->cron();
-
-    // Check that scheduled English email as sent in English.
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['subject'], 'English Subject');
-    $this->assertEqual($sent_email['body'], 'English Body' . PHP_EOL);
-
-    // Scheduled Spanish email.
-    $this->drupalPostForm('es/webform/' . $webform_schedule->id(), [], t('Submit'));
-
-    // Send email.
-    $scheduled_manager->cron();
-
-    // Check that scheduled Spanish email as sent in Spanish.
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['subject'], 'Spanish Subject');
-    $this->assertEqual($sent_email['body'], 'Spanish Body' . PHP_EOL);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/config/install/webform.webform.test_handler_scheduled_email.yml b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/config/install/webform.webform.test_handler_scheduled_email.yml
index 2b42e1e0..d6fd3fd3 100644
--- a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/config/install/webform.webform.test_handler_scheduled_email.yml
+++ b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/config/install/webform.webform.test_handler_scheduled_email.yml
@@ -39,7 +39,7 @@ elements: |
       visible:
         ':input[name="send"]':
           value: other
-
+  
 css: ''
 javascript: ''
 settings:
@@ -105,6 +105,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -152,6 +153,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -231,6 +233,7 @@ handlers:
       html: true
       attachments: false
       theme_name: ''
+      parameters: {  }
       twig: false
       debug: true
       reply_to: ''
@@ -273,6 +276,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -314,6 +318,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -355,6 +360,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -399,6 +405,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -441,6 +448,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.info.yml b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.info.yml
index 8bf32d7c..418c4008 100644
--- a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.info.yml
+++ b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test/webform_scheduled_email_test.info.yml
@@ -2,13 +2,12 @@ name: 'Webform scheduled email module tests'
 type: module
 description: 'Support module for webform schedule email that provides test forms.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
   - 'webform:webform_scheduled_email'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/config/install/webform.webform.test_handler_scheduled_translate.yml b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/config/install/webform.webform.test_handler_scheduled_translate.yml
index 1d6d92b1..8bbd107b 100644
--- a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/config/install/webform.webform.test_handler_scheduled_translate.yml
+++ b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/config/install/webform.webform.test_handler_scheduled_translate.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -211,6 +213,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/webform_scheduled_email_test_translation.info.yml b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/webform_scheduled_email_test_translation.info.yml
index 0a3b51c0..323212e5 100644
--- a/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/webform_scheduled_email_test_translation.info.yml
+++ b/modules/contrib/webform/modules/webform_scheduled_email/tests/modules/webform_scheduled_email_test_translation/webform_scheduled_email_test_translation.info.yml
@@ -2,7 +2,7 @@ name: 'Webform scheduled email module translation tests'
 type: module
 description: 'Support module for webform schedule email translation that provides test forms.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:config_translation'
   - 'drupal:language'
@@ -10,8 +10,7 @@ dependencies:
   - 'webform:webform'
   - 'webform:webform_scheduled_email'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_scheduled_email/webform_scheduled_email.info.yml b/modules/contrib/webform/modules/webform_scheduled_email/webform_scheduled_email.info.yml
index e7e5b9ee..ed1eefe9 100644
--- a/modules/contrib/webform/modules/webform_scheduled_email/webform_scheduled_email.info.yml
+++ b/modules/contrib/webform/modules/webform_scheduled_email/webform_scheduled_email.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Scheduled Email Handler'
 type: module
 description: 'Extends the Webform email handler to allow emails to be scheduled.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_shortcuts/webform_shortcuts.info.yml b/modules/contrib/webform/modules/webform_shortcuts/webform_shortcuts.info.yml
index c303bcdc..633e68f3 100644
--- a/modules/contrib/webform/modules/webform_shortcuts/webform_shortcuts.info.yml
+++ b/modules/contrib/webform/modules/webform_shortcuts/webform_shortcuts.info.yml
@@ -2,13 +2,12 @@ name: 'Webform Shortcuts'
 type: module
 description: 'Provides configurable keyboard shortcuts to create and save webform elements.'
 package: 'Webform'
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
   - 'webform:webform_ui'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php b/modules/contrib/webform/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php
index df432198..a3a3fe36 100644
--- a/modules/contrib/webform/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php
+++ b/modules/contrib/webform/modules/webform_submission_export_import/src/WebformSubmissionExportImportImporter.php
@@ -877,7 +877,7 @@ class WebformSubmissionExportImportImporter implements WebformSubmissionExportIm
    * Import multiple element.
    *
    * @param array $element
-   *   An element with multiple values..
+   *   An element with multiple values.
    * @param mixed $value
    *   File URI(s) from CSV record.
    * @param \Drupal\webform\WebformSubmissionInterface|null $webform_submission
diff --git a/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/config/install/webform.webform.test_submission_export_import.yml b/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/config/install/webform.webform.test_submission_export_import.yml
index 6f8e52f4..3ef38ff9 100644
--- a/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/config/install/webform.webform.test_submission_export_import.yml
+++ b/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/config/install/webform.webform.test_submission_export_import.yml
@@ -141,6 +141,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -188,6 +189,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.info.yml b/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.info.yml
index b1b140a3..b15753c5 100644
--- a/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.info.yml
+++ b/modules/contrib/webform/modules/webform_submission_export_import/tests/modules/webform_submission_export_import_test/webform_submission_export_import_test.info.yml
@@ -2,13 +2,12 @@ name: 'Webform Submission Export/Import Test'
 type: module
 description: 'Support module for webform submission export/import.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform_submission_export_import'
   - 'webform:webform_image_select'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.info.yml b/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.info.yml
index c5c38987..0dbee765 100644
--- a/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.info.yml
+++ b/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.info.yml
@@ -1,13 +1,13 @@
 name: 'Webform Submission Export/Import [EXPERIMENTAL]'
 type: module
 description: 'Provides the ability to export and import submissions.'
+experimental: true
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.module b/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.module
index b873f938..f42bf33c 100644
--- a/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.module
+++ b/modules/contrib/webform/modules/webform_submission_export_import/webform_submission_export_import.module
@@ -11,7 +11,7 @@ use Drupal\file\Entity\File;
  * Implements hook_webform_help_info().
  */
 function webform_submission_export_import_webform_help_info() {
-  $help['webform_webform_submission_export_import'] = [
+  $help['webform_submission_export_import'] = [
     'group' => 'forms',
     'title' => t('Upload'),
     'content' => t('The <strong>Upload</strong> page allows a CSV (comma separated values) file or URL to be uploaded, converted, and imported into webform submissions.'),
diff --git a/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogNodeTest.php b/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogNodeTest.php
deleted file mode 100644
index 9ad29003..00000000
--- a/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogNodeTest.php
+++ /dev/null
@@ -1,68 +0,0 @@
-<?php
-
-namespace Drupal\webform_submission_log\Tests;
-
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform node submission log.
- *
- * @group WebformSubmissionLog
- */
-class WebformSubmissionLogNodeTest extends WebformNodeTestBase {
-
-  use WebformSubmissionLogTrait;
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform', 'webform_node', 'webform_submission_log'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submission_log'];
-
-  /**
-   * Tests webform submission log.
-   */
-  public function testSubmissionLog() {
-    global $base_path;
-    $node = $this->createWebformNode('test_submission_log');
-    $nid = $node->id();
-
-    $sid = $this->postNodeSubmission($node);
-    $submission = WebformSubmission::load($sid);
-    $log = $this->getLastSubmissionLog();
-    $this->assertEqual($log->lid, 1);
-    $this->assertEqual($log->sid, 1);
-    $this->assertEqual($log->uid, 0);
-    $this->assertEqual($log->handler_id, '');
-    $this->assertEqual($log->operation, 'submission created');
-    $this->assertEqual($log->message, '@title created.');
-    $this->assertEqual($log->variables, ['@title' => $submission->label()]);
-    $this->assertEqual($log->webform_id, 'test_submission_log');
-    $this->assertEqual($log->entity_type, 'node');
-    $this->assertEqual($log->entity_id, $node->id());
-
-    // Login.
-    $this->drupalLogin($this->rootUser);
-
-    // Check webform node results log table has record.
-    $this->drupalGet("node/$nid/webform/results/log");
-    $this->assertResponse(200);
-    $this->assertNoRaw('No log messages available.');
-    $this->assertRaw('<a href="' . $base_path . 'node/' . $nid . '/webform/submission/' . $sid . '/log">' . $sid . '</a>');
-    $this->assertRaw(t('@title created.', ['@title' => $submission->label()]));
-
-    // Check webform node submission log tab.
-    $this->drupalGet("node/$nid/webform/submission/$sid/log");
-    $this->assertResponse(200);
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTest.php b/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTest.php
deleted file mode 100644
index e06c5e58..00000000
--- a/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTest.php
+++ /dev/null
@@ -1,173 +0,0 @@
-<?php
-
-namespace Drupal\webform_submission_log\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission log.
- *
- * @group WebformSubmissionLog
- */
-class WebformSubmissionLogTest extends WebformTestBase {
-
-  use WebformSubmissionLogTrait;
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_submission_log'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submission_log'];
-
-  /**
-   * Test webform submission log.
-   */
-  public function testSubmissionLog() {
-    global $base_path;
-
-    $admin_user = $this->drupalCreateUser([
-      'administer webform',
-      'access webform submission log',
-    ]);
-
-    $webform = Webform::load('test_submission_log');
-
-    /**************************************************************************/
-
-    // Check submission created.
-    $sid_1 = $this->postSubmission($webform);
-    $log = $this->getLastSubmissionLog();
-    $this->assertEqual($log->lid, 1);
-    $this->assertEqual($log->sid, 1);
-    $this->assertEqual($log->uid, 0);
-    $this->assertEqual($log->handler_id, '');
-    $this->assertEqual($log->operation, 'submission created');
-    $this->assertEqual($log->message, '@title created.');
-    $this->assertEqual($log->variables, ['@title' => 'Test: Submission: Logging: Submission #1']);
-    $this->assertEqual($log->webform_id, 'test_submission_log');
-    $this->assertNull($log->entity_type);
-    $this->assertNull($log->entity_id);
-
-    // Check submission draft created.
-    $sid_2 = $this->postSubmission($webform, ['value' => 'Test'], t('Save Draft'));
-    $log = $this->getLastSubmissionLog();
-    $this->assertEqual($log->lid, 2);
-    $this->assertEqual($log->sid, 2);
-    $this->assertEqual($log->uid, 0);
-    $this->assertEqual($log->handler_id, '');
-    $this->assertEqual($log->operation, 'draft created');
-    $this->assertEqual($log->message, '@title draft created.');
-    $this->assertEqual($log->variables, ['@title' => 'Test: Submission: Logging: Submission #2']);
-    $this->assertEqual($log->webform_id, 'test_submission_log');
-    $this->assertNull($log->entity_type);
-    $this->assertNull($log->entity_id);
-
-    // Check submission draft updated.
-    $this->postSubmission($webform, ['value' => 'Test'], t('Save Draft'));
-    $log = $this->getLastSubmissionLog();
-    $this->assertEqual($log->lid, 3);
-    $this->assertEqual($log->sid, 2);
-    $this->assertEqual($log->uid, 0);
-    $this->assertEqual($log->handler_id, '');
-    $this->assertEqual($log->operation, 'draft updated');
-    $this->assertEqual($log->message, '@title draft updated.');
-    $this->assertEqual($log->variables, ['@title' => 'Test: Submission: Logging: Submission #2']);
-    $this->assertEqual($log->webform_id, 'test_submission_log');
-    $this->assertNull($log->entity_type);
-    $this->assertNull($log->entity_id);
-
-    // Check submission completed.
-    $this->postSubmission($webform);
-    $log = $this->getLastSubmissionLog();
-    $this->assertEqual($log->lid, 4);
-    $this->assertEqual($log->sid, 2);
-    $this->assertEqual($log->uid, 0);
-    $this->assertEqual($log->handler_id, '');
-    $this->assertEqual($log->operation, 'submission completed');
-    $this->assertEqual($log->message, '@title completed using saved draft.');
-    $this->assertEqual($log->variables, ['@title' => 'Test: Submission: Logging: Submission #2']);
-    $this->assertEqual($log->webform_id, 'test_submission_log');
-    $this->assertNull($log->entity_type);
-    $this->assertNull($log->entity_id);
-
-    // Login admin user.
-    $this->drupalLogin($admin_user);
-
-    $submission_log = $this->getSubmissionLog();
-
-    // Check submission #2 converted.
-    $log = $submission_log[0];
-    $this->assertEqual($log->lid, 6);
-    $this->assertEqual($log->uid, $admin_user->id());
-    $this->assertEqual($log->sid, 2);
-    $this->assertEqual($log->operation, 'submission converted');
-    $this->assertEqual($log->message, '@title converted from anonymous to @user.');
-    $this->assertEqual($log->variables, ['@title' => 'Test: Submission: Logging: Submission #2', '@user' => $admin_user->label()]);
-
-    // Check submission #1 converted.
-    $log = $submission_log[1];
-    $this->assertEqual($log->lid, 5);
-    $this->assertEqual($log->uid, $admin_user->id());
-    $this->assertEqual($log->sid, 1);
-    $this->assertEqual($log->operation, 'submission converted');
-    $this->assertEqual($log->message, '@title converted from anonymous to @user.');
-    $this->assertEqual($log->variables, ['@title' => 'Test: Submission: Logging: Submission #1', '@user' => $admin_user->label()]);
-
-    // Check submission updated.
-    $this->drupalPostForm("admin/structure/webform/manage/test_submission_log/submission/$sid_2/edit", [], t('Save'));
-    $log = $this->getLastSubmissionLog();
-    $this->assertEqual($log->lid, 7);
-    $this->assertEqual($log->sid, 2);
-    $this->assertEqual($log->uid, $admin_user->id());
-    $this->assertEqual($log->handler_id, '');
-    /**************************************************************************/
-    // $this->assertEqual($log->operation, 'submission completed');
-    // $this->assertEqual($log->message, 'Test: Submission: Logging: Submission #2 completed using saved draft.');
-    /**************************************************************************/
-    $this->assertEqual($log->webform_id, 'test_submission_log');
-    $this->assertNull($log->entity_type);
-    $this->assertNull($log->entity_id);
-
-    // Check submission deleted removes all log entries for this sid.
-    $this->drupalPostForm("admin/structure/webform/manage/test_submission_log/submission/$sid_1/delete", [], t('Delete'));
-    $this->drupalPostForm("admin/structure/webform/manage/test_submission_log/submission/$sid_2/delete", [], t('Delete'));
-    $log = $this->getLastSubmissionLog();
-    $this->assertFalse($log);
-
-    // Check all results log table is empty.
-    $this->drupalGet('/admin/structure/webform/submissions/log');
-    $this->assertRaw('No log messages available.');
-
-    // Check webform results log table is empty.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_log/results/log');
-    $this->assertRaw('No log messages available.');
-
-    $sid_3 = $this->postSubmission($webform);
-    WebformSubmission::load($sid_3);
-
-    // Check all results log table has record.
-    $this->drupalGet('/admin/structure/webform/submissions/log');
-    $this->assertNoRaw('No log messages available.');
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/manage/test_submission_log/results/log">Test: Submission: Logging</a>');
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/manage/test_submission_log/submission/3/log">3</a></td>');
-    $this->assertRaw('Test: Submission: Logging: Submission #3 created.');
-
-    // Check webform results log table has record.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_log/results/log');
-    $this->assertNoRaw('No log messages available.');
-    $this->assertNoRaw('<a href="' . $base_path . 'admin/structure/webform/manage/test_submission_log/results/log">Test: Submission: Logging</a>');
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/manage/test_submission_log/submission/3/log">3</a></td>');
-    $this->assertRaw('Test: Submission: Logging: Submission #3 created.');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTrait.php b/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTrait.php
deleted file mode 100644
index d8678022..00000000
--- a/modules/contrib/webform/modules/webform_submission_log/src/Tests/WebformSubmissionLogTrait.php
+++ /dev/null
@@ -1,75 +0,0 @@
-<?php
-
-namespace Drupal\webform_submission_log\Tests;
-
-/**
- * Trait for webform submission log tests.
- */
-trait WebformSubmissionLogTrait {
-
-  /**
-   * Get the last submission id.
-   *
-   * @return int
-   *   The last submission id.
-   */
-  protected function getLastSubmissionLog() {
-    $query = \Drupal::database()->select('webform_submission_log', 'l');
-    $query->leftJoin('webform_submission', 'ws', 'l.sid = ws.sid');
-    $query->fields('l', [
-      'lid',
-      'uid',
-      'sid',
-      'handler_id',
-      'operation',
-      'message',
-      'variables',
-      'timestamp',
-    ]);
-    $query->fields('ws', [
-      'webform_id',
-      'entity_type',
-      'entity_id',
-    ]);
-    $query->orderBy('l.lid', 'DESC');
-    $query->range(0, 1);
-    $submission_log = $query->execute()->fetch();
-    if ($submission_log) {
-      $submission_log->variables = unserialize($submission_log->variables);
-    }
-    return $submission_log;
-  }
-
-  /**
-   * Get the entire submission log.
-   *
-   * @return int
-   *   The last submission id.
-   */
-  protected function getSubmissionLog() {
-    $query = \Drupal::database()->select('webform_submission_log', 'l');
-    $query->leftJoin('webform_submission', 'ws', 'l.sid = ws.sid');
-    $query->fields('l', [
-      'lid',
-      'uid',
-      'sid',
-      'handler_id',
-      'operation',
-      'message',
-      'variables',
-      'timestamp',
-    ]);
-    $query->fields('ws', [
-      'webform_id',
-      'entity_type',
-      'entity_id',
-    ]);
-    $query->orderBy('l.lid', 'DESC');
-    $submission_logs = $query->execute()->fetchAll();
-    foreach ($submission_logs as &$submission_log) {
-      $submission_log->variables = unserialize($submission_log->variables);
-    }
-    return $submission_logs;
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_submission_log/webform_submission_log.info.yml b/modules/contrib/webform/modules/webform_submission_log/webform_submission_log.info.yml
index 37e9a051..1478d6e4 100644
--- a/modules/contrib/webform/modules/webform_submission_log/webform_submission_log.info.yml
+++ b/modules/contrib/webform/modules/webform_submission_log/webform_submission_log.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Submission Log'
 type: module
 description: 'Dedicated logging and reporting for webform submissions.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_contact.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_contact.yml
index b42edd77..149c4675 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_contact.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_contact.yml
@@ -101,6 +101,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -148,6 +149,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -226,6 +228,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
@@ -260,6 +263,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_employee_evaluation.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_employee_evaluation.yml
index a2db5faa..72b4eb89 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_employee_evaluation.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_employee_evaluation.yml
@@ -148,6 +148,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -195,6 +196,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_feedback.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_feedback.yml
index 02e5eb0d..66c079bb 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_feedback.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_feedback.yml
@@ -106,6 +106,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -153,6 +154,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -231,6 +233,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
@@ -275,6 +278,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_issue.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_issue.yml
index 4e1f48e1..35d8f7d7 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_issue.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_issue.yml
@@ -189,6 +189,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -236,6 +237,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_application.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_application.yml
index 7d684f15..d72f36c1 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_application.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_application.yml
@@ -149,6 +149,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -196,6 +197,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -274,6 +276,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_seeker_profile.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_seeker_profile.yml
index 48e9f7c2..8d4671b3 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_seeker_profile.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_job_seeker_profile.yml
@@ -23,7 +23,7 @@ elements: |
       <li>Providing more information gives a better picture to employers</li>
       <li>Salary requirements, location preferences and skill level are all important factors in the hiring decision</li>
       </ul>
-      
+  
   information:
     '#title': 'Job Seeker Information'
     '#type': webform_section
@@ -149,6 +149,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -196,6 +197,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -274,6 +276,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_medical_appointment.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_medical_appointment.yml
index 27d7fba6..03165e7d 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_medical_appointment.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_medical_appointment.yml
@@ -205,7 +205,7 @@ elements: |
     '#type': webform_actions
     '#title': 'Submit button(s)'
     '#submit__label': 'Send Request'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -271,6 +271,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -318,6 +319,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -396,6 +398,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_registration.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_registration.yml
index d0eb80c4..2230a870 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_registration.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_registration.yml
@@ -118,6 +118,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -165,6 +166,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -243,6 +245,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_session_evaluation.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_session_evaluation.yml
index 75672f11..cdae7475 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_session_evaluation.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_session_evaluation.yml
@@ -110,6 +110,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -157,6 +158,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -235,6 +237,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_subscribe.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_subscribe.yml
index cb499d2a..f8ae4793 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_subscribe.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_subscribe.yml
@@ -97,6 +97,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -144,6 +145,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -222,6 +224,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_user_profile.yml b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_user_profile.yml
index f979f9a2..6b316ff1 100644
--- a/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_user_profile.yml
+++ b/modules/contrib/webform/modules/webform_templates/config/install/webform.webform.template_user_profile.yml
@@ -191,6 +191,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -238,6 +239,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -316,6 +318,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/modules/webform_templates/src/Tests/WebformTemplatesTest.php b/modules/contrib/webform/modules/webform_templates/src/Tests/WebformTemplatesTest.php
deleted file mode 100644
index 98021690..00000000
--- a/modules/contrib/webform/modules/webform_templates/src/Tests/WebformTemplatesTest.php
+++ /dev/null
@@ -1,85 +0,0 @@
-<?php
-
-namespace Drupal\webform_templates\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform submission webform settings.
- *
- * @group WebformTemplates
- */
-class WebformTemplatesTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_templates'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_template'];
-
-  /**
-   * Tests webform templates.
-   */
-  public function testTemplates() {
-    $user_account = $this->drupalCreateUser([
-      'access webform overview',
-      'administer webform',
-    ]);
-
-    $admin_account = $this->drupalCreateUser([
-      'access webform overview',
-      'administer webform',
-      'administer webform templates',
-    ]);
-
-    // Login the user.
-    $this->drupalLogin($user_account);
-
-    $template_webform = Webform::load('test_form_template');
-
-    // Check the templates always will remain closed.
-    $this->assertTrue($template_webform->isClosed());
-    $template_webform->setStatus(WebformInterface::STATUS_OPEN)->save();
-    $this->assertTrue($template_webform->isClosed());
-
-    // Check template is included in the 'Templates' list display.
-    $this->drupalGet('/admin/structure/webform/templates');
-    $this->assertRaw('Test: Webform: Template');
-    $this->assertRaw('Test using a webform as a template.');
-
-    // Check template is accessible to user with create webform access.
-    $this->drupalGet('/webform/test_form_template');
-    $this->assertResponse(200);
-    $this->assertRaw('You are previewing the below template,');
-
-    // Check select template clears the description.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_template/duplicate');
-    $this->assertFieldByName('description[value]', '');
-
-    // Check that admin can not access manage templates.
-    $this->drupalGet('/admin/structure/webform/templates/manage');
-    $this->assertResponse(403);
-
-    // Login the admin.
-    $this->drupalLogin($admin_account);
-
-    // Check that admin can access manage templates.
-    $this->drupalGet('/admin/structure/webform/templates/manage');
-    $this->assertResponse(200);
-
-    // Check select template clears the description.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_template/duplicate', ['query' => ['template' => 1]]);
-    $this->assertFieldByName('description[value]', 'Test using a webform as a template.');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_templates/webform_templates.info.yml b/modules/contrib/webform/modules/webform_templates/webform_templates.info.yml
index e1606112..a6461025 100644
--- a/modules/contrib/webform/modules/webform_templates/webform_templates.info.yml
+++ b/modules/contrib/webform/modules/webform_templates/webform_templates.info.yml
@@ -2,12 +2,11 @@ name: 'Webform Templates'
 type: module
 description: 'Provides starter templates that can be used to create new webforms.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_ui/css/webform_ui.module.css b/modules/contrib/webform/modules/webform_ui/css/webform_ui.module.css
index 4cb74f1f..cff99c14 100644
--- a/modules/contrib/webform/modules/webform_ui/css/webform_ui.module.css
+++ b/modules/contrib/webform/modules/webform_ui/css/webform_ui.module.css
@@ -83,7 +83,7 @@ thead th .dropbutton {
 }
 
 .webform-ui-elements-table tr.webform-ui-element-disabled {
-  background-color: #F5F5F5;
+  background-color: #f5f5f5;
   color: #666;
 }
 
diff --git a/modules/contrib/webform/modules/webform_ui/src/Form/WebformUiElementFormBase.php b/modules/contrib/webform/modules/webform_ui/src/Form/WebformUiElementFormBase.php
index 2831e1de..c6075685 100644
--- a/modules/contrib/webform/modules/webform_ui/src/Form/WebformUiElementFormBase.php
+++ b/modules/contrib/webform/modules/webform_ui/src/Form/WebformUiElementFormBase.php
@@ -220,6 +220,7 @@ abstract class WebformUiElementFormBase extends FormBase implements WebformUiEle
           '#title' => $this->t('Cancel'),
           '#url' => new Url('entity.webform_ui.element.edit_form', $route_parameters),
           '#attributes' => WebformDialogHelper::getOffCanvasDialogAttributes(WebformDialogHelper::DIALOG_NORMAL, ['button', 'button--small']),
+          '#prefix' => ' ',
         ];
         $form['properties']['element']['type']['#description'] = '(' . $this->t('Changing from %type', ['%type' => $original_webform_element->getPluginLabel()]) . ')';
       }
@@ -229,6 +230,7 @@ abstract class WebformUiElementFormBase extends FormBase implements WebformUiEle
           '#title' => $this->t('Change'),
           '#url' => new Url('entity.webform_ui.change_element', $route_parameters),
           '#attributes' => WebformDialogHelper::getModalDialogAttributes(WebformDialogHelper::DIALOG_NORMAL, ['button', 'button--small']),
+          '#prefix' => ' ',
         ];
       }
     }
diff --git a/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementDefaultValueTest.php b/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementDefaultValueTest.php
deleted file mode 100644
index 81b13d19..00000000
--- a/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementDefaultValueTest.php
+++ /dev/null
@@ -1,99 +0,0 @@
-<?php
-
-namespace Drupal\webform_ui\Tests;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform UI element.
- *
- * @group WebformUi
- */
-class WebformUiElementDefaultValueTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_ui'];
-
-  /**
-   * Tests element.
-   */
-  public function testElementDefaultValue() {
-
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    // Single text field.
-    /**************************************************************************/
-
-    // Check validation when trying to set default value.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/textfield', [], t('Set default value'));
-    $this->assertRaw('Key field is required.');
-    $this->assertRaw('Title field is required.');
-
-    // Check set default value generates a single textfield element.
-    $edit = [
-      'key' => 'textfield',
-      'properties[title]' => 'textfield',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/textfield', $edit, t('Set default value'));
-    $this->assertRaw('<label for="edit-default-value">textfield</label>');
-    $this->assertFieldByName('default_value', '');
-
-    // Check setting the text field's default value.
-    $this->drupalPostForm(NULL, ['default_value' => '{default value}'], t('Update default value'));
-    $this->assertFieldByName('properties[default_value]', '{default value}');
-
-    /**************************************************************************/
-    // Multiple text field.
-    /**************************************************************************/
-
-    // Check set default value generates a multiple textfield element.
-    $edit = [
-      'key' => 'textfield',
-      'properties[title]' => 'textfield',
-      'properties[multiple][container][cardinality]' => '-1',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/textfield', $edit, t('Set default value'));
-    $this->assertFieldByName('default_value[items][0][_item_]', '');
-
-    // Check setting the text field's default value.
-    $this->drupalPostForm(NULL, ['default_value[items][0][_item_]' => '{default value}'], t('Update default value'));
-    $this->assertFieldByName('properties[default_value]', '{default value}');
-
-    /**************************************************************************/
-    // Single address (composite) field.
-    /**************************************************************************/
-
-    // Check set default value generates a single address element.
-    $edit = [
-      'key' => 'address',
-      'properties[title]' => 'address',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/webform_address', $edit, t('Set default value'));
-    $this->assertFieldByName('default_value[address]', '');
-    $this->assertFieldByName('default_value[address_2]', '');
-
-    // Check setting the address' default value.
-    $edit = [
-      'default_value[address]' => '{address}',
-      'default_value[address_2]' => '{address_2}',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Update default value'));
-    $this->assertRaw('address: &#039;{address}&#039;
-address_2: &#039;{address_2}&#039;
-city: &#039;&#039;
-state_province: &#039;&#039;
-postal_code: &#039;&#039;
-country: &#039;&#039;');
-
-    // Check default value is passed set default value form.
-    $this->drupalPostForm(NULL, [], t('Set default value'));
-    $this->assertFieldByName('default_value[address]', '{address}');
-    $this->assertFieldByName('default_value[address_2]', '{address_2}');
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementPropertiesTest.php b/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementPropertiesTest.php
deleted file mode 100644
index 73e5886a..00000000
--- a/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementPropertiesTest.php
+++ /dev/null
@@ -1,77 +0,0 @@
-<?php
-
-namespace Drupal\webform_ui\Tests;
-
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform UI element properties.
- *
- * @group WebformUi
- */
-class WebformUiElementPropertiesTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'file', 'taxonomy', 'webform', 'webform_ui'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'example_style_guide',
-    'example_element_states',
-    'test_element',
-    'test_element_access',
-    'test_states_triggers',
-    'test_example_elements',
-    'test_example_elements_composite',
-  ];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filters.
-    $this->createFilters();
-  }
-
-  /**
-   * Tests element properties.
-   */
-  public function testElementProperties() {
-    $this->drupalLogin($this->rootUser);
-
-    // Loops through all the elements, edits them via the UI, and checks that
-    // the element's render array has not been altered.
-    // This verifies that the edit element (via UI) form is not unexpectedly
-    // altering an element's render array.
-    foreach (static::$testWebforms as $webform_id) {
-      /** @var \Drupal\webform\WebformInterface $webform_elements */
-      $webform_elements = Webform::load($webform_id);
-      $original_elements = $webform_elements->getElementsDecodedAndFlattened();
-      foreach ($original_elements as $key => $original_element) {
-        $this->drupalPostForm('admin/structure/webform/manage/' . $webform_elements->id() . '/element/' . $key . '/edit', [], t('Save'));
-
-        // Must reset the webform entity cache so that the update elements can
-        // be loaded.
-        \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-
-        /** @var \Drupal\webform\WebformInterface $webform_elements */
-        $webform_elements = Webform::load($webform_id);
-        $updated_element = $webform_elements->getElementsDecodedAndFlattened()[$key];
-
-        $this->assertEqual($original_element, $updated_element, "'$key'' properties is equal.");
-      }
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementTest.php b/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementTest.php
deleted file mode 100644
index 629bd9ea..00000000
--- a/modules/contrib/webform/modules/webform_ui/src/Tests/WebformUiElementTest.php
+++ /dev/null
@@ -1,298 +0,0 @@
-<?php
-
-namespace Drupal\webform_ui\Tests;
-
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform UI element.
- *
- * @group WebformUi
- */
-class WebformUiElementTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'webform', 'webform_ui'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_date'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    // Disable description help icon.
-    $this->config('webform.settings')->set('ui.description_help', FALSE)->save();
-  }
-
-  /**
-   * Tests element.
-   */
-  public function testElements() {
-    global $base_path;
-
-    $this->drupalLogin($this->rootUser);
-
-    $webform_contact = Webform::load('contact');
-
-    /**************************************************************************/
-    // Multiple.
-    /**************************************************************************/
-
-    // Check multiple enabled before submission.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/name/edit');
-    $this->assertRaw('<select data-drupal-selector="edit-properties-multiple-container-cardinality" id="edit-properties-multiple-container-cardinality" name="properties[multiple][container][cardinality]" class="form-select">');
-    $this->assertNoRaw('<em>There is data for this element in the database. This setting can no longer be changed.</em>');
-
-    // Check multiple disabled after submission.
-    $this->postSubmissionTest($webform_contact);
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/name/edit');
-    $this->assertNoRaw('<select data-drupal-selector="edit-properties-multiple-container-cardinality" id="edit-properties-multiple-container-cardinality" name="properties[multiple][container][cardinality]" class="form-select">');
-    $this->assertRaw('<select data-drupal-selector="edit-properties-multiple-container-cardinality" disabled="disabled" id="edit-properties-multiple-container-cardinality" name="properties[multiple][container][cardinality]" class="form-select">');
-    $this->assertRaw('<em>There is data for this element in the database. This setting can no longer be changed.</em>');
-
-    /**************************************************************************/
-    // Reordering.
-    /**************************************************************************/
-
-    // Check original contact element order.
-    $this->assertEqual(['name', 'email', 'subject', 'message', 'actions'], array_keys($webform_contact->getElementsDecodedAndFlattened()));
-
-    // Check updated (reverse) contact element order.
-    /** @var \Drupal\webform\WebformInterface $webform_contact */
-    $edit = [
-      'webform_ui_elements[message][weight]' => 0,
-      'webform_ui_elements[subject][weight]' => 1,
-      'webform_ui_elements[email][weight]' => 2,
-      'webform_ui_elements[name][weight]' => 3,
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact', $edit, t('Save elements'));
-
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    \Drupal::entityTypeManager()->getStorage('webform')->resetCache();
-    $webform_contact = Webform::load('contact');
-    $this->assertEqual(['message', 'subject', 'email', 'name', 'actions'], array_keys($webform_contact->getElementsDecodedAndFlattened()));
-
-    /**************************************************************************/
-    // Hierarchy.
-    /**************************************************************************/
-
-    // Create a simple test form.
-    $values = ['id' => 'test'];
-    $elements = [
-      'details_01' => [
-        '#type' => 'details',
-        '#title' => 'details_01',
-        'text_field_01' => [
-          '#type' => 'textfield',
-          '#title' => 'textfield_01',
-        ],
-      ],
-      'details_02' => [
-        '#type' => 'details',
-        '#title' => 'details_02',
-        'text_field_02' => [
-          '#type' => 'textfield',
-          '#title' => 'textfield_02',
-        ],
-      ],
-    ];
-    $this->createWebform($values, $elements);
-    $this->drupalGet('/admin/structure/webform/manage/test');
-
-    // Check setting container to itself displays an error.
-    $edit = [
-      'webform_ui_elements[details_01][parent_key]' => 'details_01',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test', $edit, t('Save elements'));
-    $this->assertRaw('Parent <em class="placeholder">details_01</em> key is not valid.');
-
-    // Check setting containers to one another displays an error.
-    $edit = [
-      'webform_ui_elements[details_01][parent_key]' => 'details_02',
-      'webform_ui_elements[details_02][parent_key]' => 'details_01',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test', $edit, t('Save elements'));
-    $this->assertRaw('Parent <em class="placeholder">details_01</em> key is not valid.');
-    $this->assertRaw('Parent <em class="placeholder">details_02</em> key is not valid.');
-
-    /**************************************************************************/
-    // Required.
-    /**************************************************************************/
-
-    // Check name is required.
-    $this->drupalGet('/admin/structure/webform/manage/contact');
-    $this->assertFieldChecked('edit-webform-ui-elements-name-required');
-
-    // Check name is not required.
-    $edit = [
-      'webform_ui_elements[name][required]' => FALSE,
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact', $edit, t('Save elements'));
-    $this->assertNoFieldChecked('edit-webform-ui-elements-name-required');
-
-    /**************************************************************************/
-    // CRUD
-    /**************************************************************************/
-
-    // Check that 'Save + Add element' is only visible in dialogs.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/add/textfield');
-    $this->assertNoRaw('Save + Add element');
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/add/textfield', ['query' => ['_wrapper_format' => 'drupal_dialog']]);
-    $this->assertRaw('Save + Add element');
-
-    // Create element.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/textfield', ['key' => 'test', 'properties[title]' => 'Test'], t('Save'));
-
-    // Check elements URL contains ?update query string parameter.
-    $this->assertUrl('admin/structure/webform/manage/contact', ['query' => ['update' => 'test']]);
-
-    // Check that save elements removes ?update query string parameter.
-    $this->drupalPostForm(NULL, [], t('Save elements'));
-
-    // Check that save elements removes ?update query string parameter.
-    $this->assertUrl('admin/structure/webform/manage/contact', ['query' => ['update' => 'test']]);
-
-    // Create validate unique element.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/textfield', ['key' => 'test', 'properties[title]' => 'Test'], t('Save'));
-    $this->assertRaw('The machine-readable name is already in use. It must be unique.');
-
-    // Check read element.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('<label for="edit-test">Test</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-test" type="text" id="edit-test" name="test" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Update element.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/test/edit', ['properties[title]' => 'Test 123', 'properties[default_value]' => 'This is a default value'], t('Save'));
-
-    // Check elements URL contains ?update query string parameter.
-    $this->assertUrl('admin/structure/webform/manage/contact', ['query' => ['update' => 'test']]);
-
-    // Check element updated.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('<label for="edit-test">Test 123</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-test" type="text" id="edit-test" name="test" value="This is a default value" size="60" maxlength="255" class="form-text" />');
-
-    // Check that 'test' element is being added to the webform_submission_data table.
-    $this->drupalPostForm('webform/contact/test', [], t('Send message'));
-    $this->assertEqual(1, \Drupal::database()->query("SELECT COUNT(sid) FROM {webform_submission_data} WHERE webform_id='contact' AND name='test'")->fetchField());
-
-    // Check delete element.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/test/delete', [], t('Delete'));
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('<label for="edit-test">Test 123</label>');
-    $this->assertNoRaw('<input data-drupal-selector="edit-test" type="text" id="edit-test" name="test" value="This is a default value" size="60" maxlength="255" class="form-text" />');
-
-    // Check that 'test' element values were deleted from the webform_submission_data table.
-    $this->assertEqual(0, \Drupal::database()->query("SELECT COUNT(sid) FROM {webform_submission_data} WHERE webform_id='contact' AND name='test'")->fetchField());
-
-    // Check access allowed to textfield element.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/add/textfield');
-    $this->assertResponse(200);
-
-    // Check access denied to password element, which is disabled by default.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/add/password');
-    $this->assertResponse(403);
-
-    /**************************************************************************/
-    // Change type
-    /**************************************************************************/
-
-    // Check create element.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/textfield', ['key' => 'test', 'properties[title]' => 'Test'], t('Save'));
-
-    // Check element type.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/test/edit');
-    // Check change element type link.
-    $this->assertRaw('Text field<a href="' . $base_path . 'admin/structure/webform/manage/contact/element/test/change" class="button button--small webform-ajax-link" data-dialog-type="modal" data-dialog-options="{&quot;width&quot;:800,&quot;dialogClass&quot;:&quot;webform-ui-dialog&quot;}" data-drupal-selector="edit-change-type" id="edit-change-type">Change</a>');
-    // Check text field has description.
-    $this->assertRaw(t('A short description of the element used as help for the user when he/she uses the webform.'));
-
-    // Check change element types.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/test/change');
-    $this->assertRaw(t('Hidden'));
-    $this->assertCssSelect('a[href$="admin/structure/webform/manage/contact/element/test/edit?type=hidden"][data-dialog-type][data-dialog-options][data-drupal-selector="edit-elements-hidden-operation"]');
-    $this->assertRaw(t('value'));
-    $this->assertCssSelect('a[href$="admin/structure/webform/manage/contact/element/test/edit?type=value"][data-dialog-type][data-dialog-options][data-drupal-selector="edit-elements-value-operation"]');
-    $this->assertRaw(t('Search'));
-    $this->assertCssSelect('a[href$="admin/structure/webform/manage/contact/element/test/edit?type=search"][data-dialog-type][data-dialog-options][data-drupal-selector="edit-elements-search-operation"]');
-    $this->assertRaw(t('Telephone'));
-    $this->assertCssSelect('a[href$="admin/structure/webform/manage/contact/element/test/edit?type=tel"][data-dialog-type][data-dialog-options][data-drupal-selector="edit-elements-tel-operation"]');
-    $this->assertRaw(t('URL'));
-    $this->assertCssSelect('a[href$="admin/structure/webform/manage/contact/element/test/edit?type=url"][data-dialog-type][data-dialog-options][data-drupal-selector="edit-elements-url-operation"]');
-
-    // Check change element type.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/test/edit', ['query' => ['type' => 'value']]);
-    // Check value has no description.
-    $this->assertNoRaw(t('A short description of the element used as help for the user when he/she uses the webform.'));
-    $this->assertRaw('Value<a href="' . $base_path . 'admin/structure/webform/manage/contact/element/test/edit" class="button button--small webform-ajax-link" data-dialog-type="dialog" data-dialog-renderer="off_canvas" data-dialog-options="{&quot;width&quot;:600,&quot;dialogClass&quot;:&quot;ui-dialog-off-canvas webform-off-canvas&quot;}" data-drupal-selector="edit-cancel" id="edit-cancel">Cancel</a>');
-    $this->assertRaw('(Changing from <em class="placeholder">Text field</em>)');
-
-    // Change the element type.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/test/edit', [], t('Save'), ['query' => ['type' => 'value']]);
-
-    // Change the element type from 'textfield' to 'value'.
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/test/edit');
-
-    // Check change element type link.
-    $this->assertRaw('Value<a href="' . $base_path . 'admin/structure/webform/manage/contact/element/test/change" class="button button--small webform-ajax-link" data-dialog-type="modal" data-dialog-options="{&quot;width&quot;:800,&quot;dialogClass&quot;:&quot;webform-ui-dialog&quot;}" data-drupal-selector="edit-change-type" id="edit-change-type">Change</a>');
-
-    // Check color element that does not have related type and return 404.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/add/color', ['key' => 'test_color', 'properties[title]' => 'Test color'], t('Save'));
-    $this->drupalGet('/admin/structure/webform/manage/contact/element/test_color/change');
-    $this->assertResponse(404);
-
-    /**************************************************************************/
-    // Date
-    /**************************************************************************/
-
-    // Check GNU Date Input Format validation.
-    $edit = [
-      'properties[default_value]' => 'not a valid date',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_element_date/element/date_min_max_dynamic/edit', $edit, t('Save'));
-    $this->assertRaw('The Default value could not be interpreted in <a href="https://www.gnu.org/software/tar/manual/html_chapter/tar_7.html#Date-input-formats">GNU Date Input Format</a>.');
-  }
-
-  /**
-   * Tests permissions.
-   */
-  public function testPermissions() {
-    $webform = Webform::load('contact');
-
-    // Check source page access not visible to user with 'administer webform'
-    // permission.
-    $account = $this->drupalCreateUser(['administer webform']);
-    $this->drupalLogin($account);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/source');
-    $this->assertResponse(403);
-    $this->drupalLogout();
-
-    // Check source page access not visible to user with 'edit webform source'
-    // without 'administer webform' permission.
-    $account = $this->drupalCreateUser(['edit webform source']);
-    $this->drupalLogin($account);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/source');
-    $this->assertResponse(403);
-    $this->drupalLogout();
-
-    // Check source page access visible to user with 'edit webform source'
-    // and 'administer webform' permission.
-    $account = $this->drupalCreateUser(['administer webform', 'edit webform source']);
-    $this->drupalLogin($account);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/source');
-    $this->assertResponse(200);
-    $this->drupalLogout();
-  }
-
-}
diff --git a/modules/contrib/webform/modules/webform_ui/webform_ui.info.yml b/modules/contrib/webform/modules/webform_ui/webform_ui.info.yml
index 020de4da..d67b3111 100644
--- a/modules/contrib/webform/modules/webform_ui/webform_ui.info.yml
+++ b/modules/contrib/webform/modules/webform_ui/webform_ui.info.yml
@@ -2,12 +2,11 @@ name: 'Webform UI'
 type: module
 description: 'Provides a user interface for building and maintaining webforms.'
 package: Webform
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/modules/webform_ui/webform_ui.module b/modules/contrib/webform/modules/webform_ui/webform_ui.module
index 820117d3..e87cac68 100644
--- a/modules/contrib/webform/modules/webform_ui/webform_ui.module
+++ b/modules/contrib/webform/modules/webform_ui/webform_ui.module
@@ -19,7 +19,6 @@ function webform_ui_entity_type_alter(array &$entity_types) {
     $handlers = $webform_entity_type->getHandlerClasses();
     $handlers['form']['source'] = $handlers['form']['edit'];
     $handlers['form']['edit'] = 'Drupal\webform_ui\WebformUiEntityElementsForm';
-    $handlers['form']['quick_edit'] = 'Drupal\webform_ui\WebformUiEntityElementsForm';
     $webform_entity_type->setHandlerClass('form', $handlers['form']);
 
     // Add 'source' to link template.
diff --git a/modules/contrib/webform/reports/accessiblity/text/example_accessibility_advanced.txt b/modules/contrib/webform/reports/accessiblity/text/example_accessibility_advanced.txt
index 7678b6d5..6fdd5145 100644
--- a/modules/contrib/webform/reports/accessiblity/text/example_accessibility_advanced.txt
+++ b/modules/contrib/webform/reports/accessiblity/text/example_accessibility_advanced.txt
@@ -28,12 +28,12 @@ Results for URL: http://localhost/wf/webform/example_accessibility_advanced
  • Error: Duplicate id attribute value "iti-item-gb" found on the web page.
    ├── WCAG2AA.Principle4.Guideline4_1.4_1_1.F77
    ├── #iti-item-gb
-   └── <li class="country standard" id="iti-item-gb" role="option" data-dial-code="44" data-country-code="gb"><div class="flag-box"><div clas...</li>
+   └── <li class="country standard" tabindex="-1" id="iti-item-gb" role="option" data-dial-code="44" data-country-code="gb"><div class="flag-box"><div clas...</li>
 
  • Error: Duplicate id attribute value "iti-item-us" found on the web page.
    ├── WCAG2AA.Principle4.Guideline4_1.4_1_1.F77
    ├── #iti-item-us
-   └── <li class="country standard" id="iti-item-us" role="option" data-dial-code="1" data-country-code="us"><div class="flag-box"><div clas...</li>
+   └── <li class="country standard" tabindex="-1" id="iti-item-us" role="option" data-dial-code="1" data-country-code="us"><div class="flag-box"><div clas...</li>
 
  • Error: This link points to a named anchor "terms" within the document, but no anchor exists with that name.
    ├── WCAG2AA.Principle2.Guideline2_4.2_4_1.G1,G123,G124.NoSuchID
diff --git a/modules/contrib/webform/src/Breadcrumb/WebformBreadcrumbBuilder.php b/modules/contrib/webform/src/Breadcrumb/WebformBreadcrumbBuilder.php
index 002060d4..203fef42 100644
--- a/modules/contrib/webform/src/Breadcrumb/WebformBreadcrumbBuilder.php
+++ b/modules/contrib/webform/src/Breadcrumb/WebformBreadcrumbBuilder.php
@@ -121,6 +121,9 @@ class WebformBreadcrumbBuilder implements BreadcrumbBuilderInterface {
     elseif (strpos($path, 'admin/structure/webform/test/') !== FALSE) {
       $this->type = 'webform_test';
     }
+    elseif (preg_match('#admin/structure/webform/config/(options|images|options_custom)/#', $path)) {
+      $this->type = 'webform_options';
+    }
     elseif (strpos($path, 'admin/structure/webform/config/') !== FALSE) {
       $this->type = 'webform_config';
     }
@@ -182,12 +185,23 @@ class WebformBreadcrumbBuilder implements BreadcrumbBuilderInterface {
           if (strpos($route_name, 'config_translation.item.') === 0 && $route_name != 'config_translation.item.overview.webform.config') {
             $breadcrumb->addLink(Link::createFromRoute($this->t('Translate'), 'config_translation.item.overview.webform.config'));
           }
-          elseif (strpos($route_name, 'entity.webform_options') === 0 && $route_name !== 'entity.webform_options.collection') {
+          break;
+
+        case 'webform_options':
+          if ($route_name !== 'entity.webform_options.collection') {
             $breadcrumb->addLink(Link::createFromRoute($this->t('Options'), 'entity.webform_options.collection'));
           }
-          elseif (strpos($route_name, 'entity.webform_image_select_images') === 0 && $route_name !== 'entity.webform_image_select_imagess.collection') {
+          if (strpos($route_name, 'entity.webform_image_select_images') === 0) {
             // @see webform_image_select.module.
-            $breadcrumb->addLink(Link::createFromRoute($this->t('Images'), 'entity.webform_image_select_images.collection'));
+            if ($route_name !== 'entity.webform_image_select_images.collection') {
+              $breadcrumb->addLink(Link::createFromRoute($this->t('Images'), 'entity.webform_image_select_images.collection'));
+            }
+          }
+          elseif (strpos($route_name, 'entity.webform_options_custom') === 0) {
+            // @see webform_custom_options.module.
+            if ($route_name !== 'entity.webform_options_custom.collection') {
+              $breadcrumb->addLink(Link::createFromRoute($this->t('Custom'), 'entity.webform_options_custom.collection'));
+            }
           }
           break;
 
@@ -235,7 +249,9 @@ class WebformBreadcrumbBuilder implements BreadcrumbBuilderInterface {
           $webform = $webform_submission->getWebform();
           $breadcrumb = new Breadcrumb();
           $breadcrumb->addLink(Link::createFromRoute($webform->label(), 'entity.webform.canonical', ['webform' => $webform->id()]));
-          $breadcrumb->addLink(Link::createFromRoute($this->t('Submissions'), 'entity.webform.user.submissions', ['webform' => $webform->id()]));
+          if ($webform_submission->access('view_own')) {
+            $breadcrumb->addLink(Link::createFromRoute($this->t('Submissions'), 'entity.webform.user.submissions', ['webform' => $webform->id()]));
+          }
           break;
       }
     }
diff --git a/modules/contrib/webform/src/Commands/WebformCliService.php b/modules/contrib/webform/src/Commands/WebformCliService.php
index d6f4c832..c6ad42a5 100644
--- a/modules/contrib/webform/src/Commands/WebformCliService.php
+++ b/modules/contrib/webform/src/Commands/WebformCliService.php
@@ -1270,6 +1270,8 @@ function $command_hook() {
  * @see \Drupal\webform\Commands\DrushCliServiceBase::generate_commands_drush8
  */
 
+require_once __DIR__ . '/webform.drush.hooks.inc';
+
 /**
  * Implements hook_drush_command().
  */
diff --git a/modules/contrib/webform/src/Controller/WebformAddonsController.php b/modules/contrib/webform/src/Controller/WebformAddonsController.php
index de397f62..b4087837 100644
--- a/modules/contrib/webform/src/Controller/WebformAddonsController.php
+++ b/modules/contrib/webform/src/Controller/WebformAddonsController.php
@@ -7,6 +7,7 @@ use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Render\Markup;
 use Drupal\webform\Element\WebformMessage;
 use Drupal\webform\WebformAddonsManagerInterface;
+use Drupal\webform\WebformThemeManagerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 
@@ -22,6 +23,13 @@ class WebformAddonsController extends ControllerBase implements ContainerInjecti
    */
   protected $request;
 
+  /**
+   * The webform theme manager.
+   *
+   * @var \Drupal\webform\WebformThemeManagerInterface
+   */
+  protected $themeManager;
+
   /**
    * The webform add-ons manager.
    *
@@ -34,11 +42,14 @@ class WebformAddonsController extends ControllerBase implements ContainerInjecti
    *
    * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
    *   The request stack.
+   * @param \Drupal\webform\Controller\WebformThemeManagerInterface $theme_manager
+   *   The webform theme manager.
    * @param \Drupal\webform\WebformAddonsManagerInterface $addons
    *   The webform add-ons manager.
    */
-  public function __construct(RequestStack $request_stack, WebformAddonsManagerInterface $addons) {
+  public function __construct(RequestStack $request_stack,  WebformThemeManagerInterface $theme_manager, WebformAddonsManagerInterface $addons) {
     $this->request = $request_stack->getCurrentRequest();
+    $this->themeManager = $theme_manager;
     $this->addons = $addons;
   }
 
@@ -48,6 +59,7 @@ class WebformAddonsController extends ControllerBase implements ContainerInjecti
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('request_stack'),
+      $container->get('webform.theme_manager'),
       $container->get('webform.addons_manager')
     );
   }
@@ -67,6 +79,10 @@ class WebformAddonsController extends ControllerBase implements ContainerInjecti
     ];
 
     // Filter.
+    $is_claro_theme = $this->themeManager->isActiveTheme('claro');
+    $data_source = $is_claro_theme ? '.admin-item' : 'li';
+    $data_parent = $is_claro_theme ? '.admin-item' : 'li';
+
     $build['filter'] = [
       '#type' => 'search',
       '#title' => $this->t('Filter'),
@@ -80,8 +96,8 @@ class WebformAddonsController extends ControllerBase implements ContainerInjecti
         'data-item-plural' => $this->t('add-ons'),
         'data-no-results' => '.webform-addons-no-results',
         'data-element' => '.admin-list',
-        'data-source' => 'li',
-        'data-parent' => 'li',
+        'data-source' => $data_source,
+        'data-parent' => $data_parent,
         'title' => $this->t('Enter a keyword to filter by.'),
         'autofocus' => 'autofocus',
       ],
@@ -117,6 +133,11 @@ class WebformAddonsController extends ControllerBase implements ContainerInjecti
       ];
       $projects = $this->addons->getProjects($category_name);
       foreach ($projects as $project_name => &$project) {
+        // Append (Experimental) to title.
+        if (!empty($project['experimental'])) {
+          $project['title'] .= ' [' . $this->t('EXPERIMENTAL') . ']';
+        }
+        // Prepend logo to title.
         if (isset($project['logo'])) {
           $project['title'] = Markup::create('<img src="' . $project['logo']->toString() . '" alt="' . $project['title'] . '"/>' . $project['title']);
         }
diff --git a/modules/contrib/webform/src/Element/Webform.php b/modules/contrib/webform/src/Element/Webform.php
index c8c0d7e2..0aac543d 100644
--- a/modules/contrib/webform/src/Element/Webform.php
+++ b/modules/contrib/webform/src/Element/Webform.php
@@ -145,7 +145,6 @@ class Webform extends RenderElement {
    *   A render array with webform.settings and webform as cache dependencies.
    */
   public static function addCacheableDependency(array &$elements, WebformInterface $webform) {
-    // .
     /** @var \Drupal\Core\Render\RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
 
diff --git a/modules/contrib/webform/src/Element/WebformCompositeFormElementTrait.php b/modules/contrib/webform/src/Element/WebformCompositeFormElementTrait.php
index 1c01516c..4da05e78 100644
--- a/modules/contrib/webform/src/Element/WebformCompositeFormElementTrait.php
+++ b/modules/contrib/webform/src/Element/WebformCompositeFormElementTrait.php
@@ -29,10 +29,10 @@ trait WebformCompositeFormElementTrait {
    */
   public static function preRenderWebformCompositeFormElement($element) {
     $has_content = (isset($element['#title']) || isset($element['#description']));
+
     if (!$has_content) {
       return $element;
     }
-
     // Set attributes.
     if (!isset($element['#attributes'])) {
       $element['#attributes'] = [];
diff --git a/modules/contrib/webform/src/Element/WebformComputedBase.php b/modules/contrib/webform/src/Element/WebformComputedBase.php
index 1296c716..61ce5be9 100644
--- a/modules/contrib/webform/src/Element/WebformComputedBase.php
+++ b/modules/contrib/webform/src/Element/WebformComputedBase.php
@@ -223,7 +223,16 @@ abstract class WebformComputedBase extends FormElement implements WebformCompute
    * Determine if the current request is using Ajax.
    */
   protected static function isAjax() {
-    return (\Drupal::request()->get(MainContentViewSubscriber::WRAPPER_FORMAT) === 'drupal_ajax');
+    // return (\Drupal::request()->get(MainContentViewSubscriber::WRAPPER_FORMAT) === 'drupal_ajax');
+    //
+    // ISSUE:
+    // For nodes with computed elements there is a duplicate
+    // _wrapper_format parameter.
+    // (i.e ?_wrapper_format=html&_wrapper_format=drupal_ajax)
+    // WORKAROUND:
+    // See if _wrapper_format=drupal_ajax is being appended to the query string.
+    $querystring = \Drupal::request()->getQueryString();
+    return (strpos($querystring, MainContentViewSubscriber::WRAPPER_FORMAT . '=drupal_ajax') !== FALSE);
   }
 
   /**
@@ -351,7 +360,7 @@ abstract class WebformComputedBase extends FormElement implements WebformCompute
       //
       // Therefore, we are creating a single clone of the webform submission
       // and only copying the submitted form values to the cached submission.
-      if ($form_state->isValidationComplete()) {
+      if ($form_state->isValidationComplete() && !$form_state->isRebuilding()) {
         if (!isset(static::$submissions[$webform_submission->uuid()])) {
           static::$submissions[$webform_submission->uuid()] = clone $form_object->getEntity();
         }
diff --git a/modules/contrib/webform/src/Element/WebformEmailConfirm.php b/modules/contrib/webform/src/Element/WebformEmailConfirm.php
index e59a259d..46ac874c 100644
--- a/modules/contrib/webform/src/Element/WebformEmailConfirm.php
+++ b/modules/contrib/webform/src/Element/WebformEmailConfirm.php
@@ -73,7 +73,20 @@ class WebformEmailConfirm extends FormElement {
       '#placeholder',
       '#attributes',
     ];
-    $element_shared_properties = ['#type' => 'email'] + array_intersect_key($element, array_combine($shared_properties, $shared_properties));
+    $element_shared_properties = [
+      '#type' => 'email',
+      '#webform_element' => TRUE,
+    ] + array_intersect_key($element, array_combine($shared_properties, $shared_properties));
+    // Copy wrapper attributes to shared element attributes.
+    if (isset($element['#wrapper_attributes'])
+      && isset($element['#wrapper_attributes']['class'])) {
+      foreach ($element['#wrapper_attributes']['class'] as $index => $class) {
+        if (in_array($class, ['js-webform-tooltip-element', 'webform-tooltip-element'])) {
+          $element_shared_properties['#wrapper_attributes']['class'][] = $class;
+          unset($element['#wrapper_attributes']['class'][$index]);
+        }
+      }
+    }
 
     // Get mail 1 email element.
     $mail_1_properties = [
@@ -97,6 +110,12 @@ class WebformEmailConfirm extends FormElement {
     $element['mail_2']['#value'] = empty($element['#value']) ? NULL : $element['#value']['mail_2'];
     $element['mail_2']['#error_no_message'] = TRUE;
 
+    // Initialize the mail elements to allow for webform enhancements.
+    /** @var \Drupal\webform\Plugin\WebformElementManagerInterface $element_manager */
+    $element_manager = \Drupal::service('plugin.manager.webform.element');
+    $element_manager->buildElement($element['mail_1'], $complete_form, $form_state);
+    $element_manager->buildElement($element['mail_2'], $complete_form, $form_state);
+
     // Don't require the main element.
     $element['#required'] = FALSE;
 
@@ -113,6 +132,24 @@ class WebformEmailConfirm extends FormElement {
     $element += ['#element_validate' => []];
     array_unshift($element['#element_validate'], [get_called_class(), 'validateWebformEmailConfirm']);
 
+    // Add flexbox support.
+    if (!empty($element['#flexbox'])) {
+      $flex_wrapper = [
+        '#prefix' => '<div class="webform-flex webform-flex--1"><div class="webform-flex--container">',
+        '#suffix' => '</div></div>',
+      ];
+      $element['flexbox'] = [
+        '#type' => 'webform_flexbox',
+        'mail_1' => $element['mail_1'] + $flex_wrapper + [
+          '#parents' => array_merge($element['#parents'], ['mail_1']),
+        ],
+        'mail_2' => $element['mail_2'] + $flex_wrapper + [
+          '#parents' => array_merge($element['#parents'], ['mail_2']),
+        ],
+      ];
+      unset($element['mail_1'], $element['mail_2']);
+    }
+
     return $element;
   }
 
@@ -120,42 +157,59 @@ class WebformEmailConfirm extends FormElement {
    * Validates an email confirm element.
    */
   public static function validateWebformEmailConfirm(&$element, FormStateInterface $form_state, &$complete_form) {
-    $mail_1 = trim($element['mail_1']['#value']);
-    $mail_2 = trim($element['mail_2']['#value']);
+    if (isset($element['flexbox'])) {
+      $mail_element =& $element['flexbox'];
+    }
+    else {
+      $mail_element =& $element;
+    }
+
+    $mail_1 = trim($mail_element['mail_1']['#value']);
+    $mail_2 = trim($mail_element['mail_2']['#value']);
     $has_access = (!isset($element['#access']) || $element['#access'] === TRUE);
     if ($has_access) {
+      // Compare email addresses.
       if ((!empty($mail_1) || !empty($mail_2)) && strcmp($mail_1, $mail_2)) {
         $form_state->setError($element, t('The specified email addresses do not match.'));
       }
       else {
         // NOTE: Only mail_1 needs to be validated since mail_2 is the same value.
         // Verify the required value.
-        if ($element['mail_1']['#required'] && empty($mail_1)) {
-          $required_error_title = (isset($element['mail_1']['#title'])) ? $element['mail_1']['#title'] : NULL;
+        if ($mail_element['mail_1']['#required'] && empty($mail_1)) {
+          $required_error_title = (isset($mail_element['mail_1']['#title'])) ? $mail_element['mail_1']['#title'] : NULL;
           WebformElementHelper::setRequiredError($element, $form_state, $required_error_title);
         }
         // Verify that the value is not longer than #maxlength.
-        if (isset($element['mail_1']['#maxlength']) && mb_strlen($mail_1) > $element['mail_1']['#maxlength']) {
+        if (isset($mail_element['mail_1']['#maxlength']) && mb_strlen($mail_1) > $mail_element['mail_1']['#maxlength']) {
           $t_args = [
-            '@name' => $element['mail_1']['#title'],
-            '%max' => $element['mail_1']['#maxlength'],
+            '@name' => $mail_element['mail_1']['#title'],
+            '%max' => $mail_element['mail_1']['#maxlength'],
             '%length' => mb_strlen($mail_1),
           ];
           $form_state->setError($element, t('@name cannot be longer than %max characters but is currently %length characters long.', $t_args));
         }
       }
+
+      // Add email validation errors for inline form errors.
+      // @see \Drupal\Core\Render\Element\Email::validateEmail
+      $inline_errors = empty($complete_form['#disable_inline_form_errors'])
+        && \Drupal::moduleHandler()->moduleExists('inline_form_errors');
+      $mail_error = $form_state->getError($mail_element['mail_1']);
+      if ($inline_errors && $mail_error) {
+        $form_state->setError($element, $mail_error);
+      }
     }
 
     // Set #title for other validation callbacks.
     // @see \Drupal\webform\Plugin\WebformElementBase::validateUnique
-    if (isset($element['mail_1']['#title'])) {
-      $element['#title'] = $element['mail_1']['#title'];
+    if (isset($mail_element['mail_1']['#title'])) {
+      $element['#title'] = $mail_element['mail_1']['#title'];
     }
 
     // Email field must be converted from a two-element array into a single
     // string regardless of validation results.
-    $form_state->setValueForElement($element['mail_1'], NULL);
-    $form_state->setValueForElement($element['mail_2'], NULL);
+    $form_state->setValueForElement($mail_element['mail_1'], NULL);
+    $form_state->setValueForElement($mail_element['mail_2'], NULL);
 
     $element['#value'] = $mail_1;
     $form_state->setValueForElement($element, $mail_1);
diff --git a/modules/contrib/webform/src/Element/WebformEmailMultiple.php b/modules/contrib/webform/src/Element/WebformEmailMultiple.php
index 33d9bdbe..a128f765 100644
--- a/modules/contrib/webform/src/Element/WebformEmailMultiple.php
+++ b/modules/contrib/webform/src/Element/WebformEmailMultiple.php
@@ -61,8 +61,9 @@ class WebformEmailMultiple extends FormElement {
       $values = preg_split('/\s*,\s*/', $value);
       // Validate email.
       foreach ($values as $value) {
-        // Allow tokens to be be include in multiple email list.
-        if (!empty($element['#allow_tokens'] && preg_match('/^\[.*\]$/', $value))) {
+        // Allow tokens to be be included in multiple email list by skipping
+        // validation if a token is present.
+        if (!empty($element['#allow_tokens'] && preg_match('/\[.+\]/', $value))) {
           continue;
         }
 
diff --git a/modules/contrib/webform/src/Element/WebformLikert.php b/modules/contrib/webform/src/Element/WebformLikert.php
index c64ddc13..68f803b6 100644
--- a/modules/contrib/webform/src/Element/WebformLikert.php
+++ b/modules/contrib/webform/src/Element/WebformLikert.php
@@ -227,6 +227,9 @@ class WebformLikert extends FormElement {
 
     $element['#tree'] = TRUE;
 
+    // Add after_build callback.
+    $element['#after_build'][] = [get_called_class(), 'afterBuild'];
+
     // Add validate callback.
     $element += ['#element_validate' => []];
     array_unshift($element['#element_validate'], [get_called_class(), 'validateWebformLikert']);
@@ -254,10 +257,25 @@ class WebformLikert extends FormElement {
     ];
   }
 
+  /**
+   * Performs the after_build callback.
+   */
+  static public function afterBuild(array $element, FormStateInterface $form_state) {
+    if ($form_state->isProcessingInput()) {
+      // Likert elements contain a table which uses 'item' form elements to
+      // display the questions. These 'item' elements provide undesired data to
+      // the $form_state values. Set the value in $form_state again to overwrite
+      // the undesired item values.
+      // @see https://www.drupal.org/project/webform/issues/3090007
+      $form_state->setValueForElement($element, $element['#value']);
+    }
+    return $element;
+  }
+
   /**
    * {@inheritdoc}
    */
-  public static function valueCallback(&$element, $input, FormStateInterface $form_state) {
+  static public function valueCallback(&$element, $input, FormStateInterface $form_state) {
     $default_value = [];
     foreach ($element['#questions'] as $question_key => $question_title) {
       $default_value[$question_key] = NULL;
@@ -280,18 +298,26 @@ class WebformLikert extends FormElement {
    * Validates a likert element.
    */
   public static function validateWebformLikert(&$element, FormStateInterface $form_state, &$complete_form) {
-    $value = $element['#value'];
-
     if (!empty($element['#required'])) {
-      foreach ($element['#questions'] as $question_key => $question_title) {
-        if (is_null($value[$question_key])) {
-          $form_state->setError($element['table'][$question_key]['likert_question'], t('@name field is required.', ['@name' => $question_title]));
-        }
-      }
+      static::setRequiredError($element, $form_state);
     }
+  }
 
-    $element['#value'] = $value;
-    $form_state->setValueForElement($element, $value);
+  /**
+   * Set element required error messages.
+   *
+   * @param array $element
+   *   An element.
+   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   *   The current form's state.
+   */
+  public static function setRequiredError(array &$element, FormStateInterface $form_state) {
+    $value = $element['#value'];
+    foreach ($element['#questions'] as $question_key => $question_title) {
+      if (is_null($value[$question_key])) {
+        $form_state->setError($element['table'][$question_key]['likert_question'], t('@name field is required.', ['@name' => $question_title]));
+      }
+    }
   }
 
 }
diff --git a/modules/contrib/webform/src/Element/WebformMultiple.php b/modules/contrib/webform/src/Element/WebformMultiple.php
index 3f768329..eedffa2a 100644
--- a/modules/contrib/webform/src/Element/WebformMultiple.php
+++ b/modules/contrib/webform/src/Element/WebformMultiple.php
@@ -45,10 +45,14 @@ class WebformMultiple extends FormElement {
       '#add_more' => TRUE,
       '#add_more_items' => 1,
       '#add_more_button_label' => $this->t('Add'),
+      '#add_more_input' => TRUE,
       '#add_more_input_label' => $this->t('more items'),
       '#sorting' => TRUE,
       '#operations' => TRUE,
       '#add' => TRUE,
+      '#ajax_attributes' => [],
+      '#table_attributes' => [],
+      '#table_wrapper_attributes' => [],
       '#remove' => TRUE,
       '#process' => [
         [$class, 'processWebformMultiple'],
@@ -164,8 +168,10 @@ class WebformMultiple extends FormElement {
     }
 
     // Add wrapper to the element.
+    $ajax_attributes = $element['#ajax_attributes'];
+    $ajax_attributes['id'] = $table_id;
     $element += ['#prefix' => '', '#suffix' => ''];
-    $element['#prefix'] = $element['#prefix'] . '<div id="' . $table_id . '">';
+    $element['#prefix'] = $element['#prefix'] . '<div' . new Attribute($ajax_attributes) . '>';
     $element['#suffix'] = '</div>' . $element['#suffix'];
 
     // DEBUG:
@@ -219,12 +225,13 @@ class WebformMultiple extends FormElement {
     }
 
     // Build table.
-    $attributes = ['class' => ['webform-multiple-table']];
+    $table_wrapper_attributes = $element['#table_wrapper_attributes'];
+    $table_wrapper_attributes['class'][] = 'webform-multiple-table';
     if (count($element['#element']) > 1) {
-      $attributes['class'][] = 'webform-multiple-table-responsive';
+      $table_wrapper_attributes['class'][] = 'webform-multiple-table-responsive';
     }
     $element['items'] = [
-      '#prefix' => '<div' . new Attribute($attributes) . '>',
+      '#prefix' => '<div' . new Attribute($table_wrapper_attributes) . '>',
       '#suffix' => '</div>',
     ] + $rows;
 
@@ -233,6 +240,7 @@ class WebformMultiple extends FormElement {
       $element['items'] += [
         '#type' => 'table',
         '#header' => $header,
+        '#attributes' => $element['#table_attributes'],
       ] + $rows;
 
       // Add sorting to table.
@@ -279,6 +287,7 @@ class WebformMultiple extends FormElement {
         '#default_value' => $element['#add_more_items'],
         '#field_suffix' => $element['#add_more_input_label'],
         '#error_no_message' => TRUE,
+        '#access' => $element['#add_more_input'],
       ];
     }
 
@@ -473,7 +482,7 @@ class WebformMultiple extends FormElement {
           $title['title'] = [
             '#markup' => $child_title,
           ];
-          if (!empty($child_element ['#required']) || !empty($child_element ['#_required'])) {
+          if (!empty($child_element['#required']) || !empty($child_element['#_required'])) {
             $title['title'] += [
               '#prefix' => '<span class="form-required">',
               '#suffix' => '</span>',
diff --git a/modules/contrib/webform/src/Element/WebformOtherBase.php b/modules/contrib/webform/src/Element/WebformOtherBase.php
index 625c0cf9..a2e6f6f7 100644
--- a/modules/contrib/webform/src/Element/WebformOtherBase.php
+++ b/modules/contrib/webform/src/Element/WebformOtherBase.php
@@ -41,6 +41,7 @@ abstract class WebformOtherBase extends FormElement {
     '#options_display',
     '#options_randomize',
     '#options_description_display',
+    '#options__properties',
     '#default_value',
     '#attributes',
   ];
@@ -153,9 +154,10 @@ abstract class WebformOtherBase extends FormElement {
       $element['other']['#parents'] = array_merge($element['#parents'], ['other']);
     }
 
-    // Initialize the other element to allow for webform enhancements.
+    // Initialize the type and other elements to allow for webform enhancements.
     /** @var \Drupal\webform\Plugin\WebformElementManagerInterface $element_manager */
     $element_manager = \Drupal::service('plugin.manager.webform.element');
+    $element_manager->buildElement($element[$type], $complete_form, $form_state);
     $element_manager->buildElement($element['other'], $complete_form, $form_state);
 
     // Add js trigger attributes to the composite wrapper.
@@ -194,7 +196,7 @@ abstract class WebformOtherBase extends FormElement {
     // Determine if the element is visible. (#access !== FALSE)
     $has_access = (!isset($element['#access']) || $element['#access'] === TRUE);
 
-    // Determine if the element has mulitple values.
+    // Determine if the element has multiple values.
     $is_multiple = static::isMultiple($element);
 
     // Get value.
diff --git a/modules/contrib/webform/src/Entity/Webform.php b/modules/contrib/webform/src/Entity/Webform.php
index 04dd9417..1ca1e14e 100644
--- a/modules/contrib/webform/src/Entity/Webform.php
+++ b/modules/contrib/webform/src/Entity/Webform.php
@@ -3,6 +3,8 @@
 namespace Drupal\webform\Entity;
 
 use Drupal\Component\Utility\NestedArray;
+use Drupal\Core\Access\AccessResult;
+use Drupal\Core\Cache\Cache;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Serialization\Yaml;
 use Drupal\Core\Config\Entity\ConfigEntityBundleBase;
@@ -13,6 +15,7 @@ use Drupal\user\Entity\User;
 use Drupal\user\UserInterface;
 use Drupal\webform\Plugin\WebformElement\WebformActions;
 use Drupal\webform\Plugin\WebformElement\WebformWizardPage;
+use Drupal\webform\Plugin\WebformElementAssetInterface;
 use Drupal\webform\Plugin\WebformElementAttachmentInterface;
 use Drupal\webform\Plugin\WebformElementComputedInterface;
 use Drupal\webform\Plugin\WebformElementWizardPageInterface;
@@ -369,6 +372,27 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
    */
   protected $elementsComputed = [];
 
+  /**
+   * Track elements CSS.
+   *
+   * @var array
+   */
+  protected $elementsCss = [];
+
+  /**
+   * Track elements JavaScript.
+   *
+   * @var array
+   */
+  protected $elementsJavaScript = [];
+
+  /**
+   * A webfrom default data extracted from each elements default value or value.
+   *
+   * @var array
+   */
+  protected $elementsDefaultData = [];
+
   /**
    * The webform pages.
    *
@@ -416,7 +440,14 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
    *
    * @var bool
    */
-  protected $hasMessagehandler;
+  protected $hasMessageHandler;
+
+  /**
+   * Track if a webform handler requires anonymous submission tracking .
+   *
+   * @var bool
+   */
+  protected $hasAnonymousSubmissionTrackingHandler;
 
   /**
    * {@inheritdoc}
@@ -695,7 +726,6 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     return (!empty($this->elementsAttachments)) ? TRUE : FALSE;
   }
 
-
   /**
    * {@inheritdoc}
    */
@@ -792,15 +822,35 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
    * {@inheritdoc}
    */
   public function getAssets() {
+    $this->initElements();
+
+    // Css.
+    $css = [];
     $shared_css = \Drupal::config('webform.settings')->get('assets.css') ?: '';
+    if ($shared_css) {
+      $css[] = $shared_css;
+    }
     $webform_css = $this->css ?: '';
+    if ($webform_css) {
+      $css[] = $webform_css;
+    }
+    $css += $this->elementsCss;
 
+    // JavaScript.
+    $javascript = [];
     $shared_javascript = \Drupal::config('webform.settings')->get('assets.javascript') ?: '';
+    if ($shared_javascript) {
+      $javascript[] = $shared_javascript;
+    }
     $webform_javascript = $this->javascript ?: '';
+    if ($webform_javascript) {
+      $javascript[] = $webform_javascript;
+    }
+    $javascript += $this->elementsJavaScript;
 
     return [
-      'css' => $shared_css . (($shared_css && $webform_css) ? PHP_EOL : '') . $webform_css,
-      'javascript' => $shared_javascript . (($shared_javascript && $webform_javascript) ? PHP_EOL : '') . $webform_javascript,
+      'css' => implode(PHP_EOL, $css),
+      'javascript' => implode(PHP_EOL, $javascript),
     ];
   }
 
@@ -1002,6 +1052,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
       'wizard_progress_pages' => FALSE,
       'wizard_progress_percentage' => FALSE,
       'wizard_progress_link' => FALSE,
+      'wizard_progress_states' => FALSE,
       'wizard_start_label' => '',
       'wizard_preview_link' => FALSE,
       'wizard_confirmation' => TRUE,
@@ -1049,6 +1100,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
       'purge_days' => NULL,
       'results_disabled' => FALSE,
       'results_disabled_ignore' => FALSE,
+      'token_view' => FALSE,
       'token_update' => FALSE,
     ];
   }
@@ -1190,7 +1242,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     /** @var \Drupal\webform\Plugin\WebformElementManagerInterface $element_manager */
     $element_manager = \Drupal::service('plugin.manager.webform.element');
     foreach ($elements as $key => $element) {
-      $element_plugin = $element_manager->getElementInstance($element);
+      $element_plugin = $element_manager->getElementInstance($element, $this);
       if (!$element_plugin->checkAccessRules($operation, $element)) {
         unset($elements[$key]);
       }
@@ -1213,7 +1265,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     $selectors = [];
     $elements = $this->getElementsInitializedAndFlattened();
     foreach ($elements as $element) {
-      $element_plugin = $element_manager->getElementInstance($element);
+      $element_plugin = $element_manager->getElementInstance($element, $this);
 
       // Check excluded elements.
       if ($options['excluded_elements'] && in_array($element_plugin->getPluginId(), $options['excluded_elements'])) {
@@ -1251,7 +1303,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     $source_values = [];
     $elements = $this->getElementsInitializedAndFlattened();
     foreach ($elements as $element) {
-      $element_plugin = $element_manager->getElementInstance($element);
+      $element_plugin = $element_manager->getElementInstance($element, $this);
       $source_values += $element_plugin->getElementSelectorSourceValues($element);
     }
     return $source_values;
@@ -1261,9 +1313,18 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
    * {@inheritdoc}
    */
   public function getElementsPrepopulate() {
+    $this->initElements();
     return $this->elementsPrepopulate;
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function getElementsDefaultData() {
+    $this->initElements();
+    return $this->elementsDefaultData;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -1296,6 +1357,9 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     $this->elementsManagedFiles = [];
     $this->elementsAttachments = [];
     $this->elementsComputed = [];
+    $this->elementsCss = [];
+    $this->elementsJavaScript = [];
+    $this->elementsDefaultData = [];
 
     try {
       $config_translation = \Drupal::moduleHandler()->moduleExists('config_translation');
@@ -1363,6 +1427,9 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     $this->elementsManagedFiles = [];
     $this->elementsAttachments = [];
     $this->elementsComputed = [];
+    $this->elementsCss = [];
+    $this->elementsJavaScript = [];
+    $this->elementsDefaultData = [];
   }
 
   /**
@@ -1446,7 +1513,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
       $element_plugin = NULL;
       if (isset($element['#type'])) {
         // Load the element's handler.
-        $element_plugin = $element_manager->getElementInstance($element);
+        $element_plugin = $element_manager->getElementInstance($element, $this);
 
         // Initialize the element.
         // Note: Composite sub elements are initialized via
@@ -1504,6 +1571,30 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
           $this->elementsComputed[$key] = $key;
         }
 
+        // Track assets (CSS and JavaScript).
+        // @see \Drupal\webform_options_custom\Plugin\WebformElement\WebformOptionsCustom
+        if ($element_plugin instanceof WebformElementAssetInterface) {
+          $asset_id = $element_plugin->getAssetId();
+          if (!isset($this->elementsCss[$asset_id])) {
+            if ($css = $element_plugin->getCss()) {
+              $this->elementsCss[$asset_id] = $css;
+            }
+          }
+          if (!isset($this->elementsJavaScript[$asset_id])) {
+            if ($javascript = $element_plugin->getJavaScript()) {
+              $this->elementsJavaScript[$asset_id] = $javascript;
+            }
+          }
+        }
+
+        // Track default data.
+        if (isset($element['#value'])) {
+          $this->elementsDefaultData[$key] = $element['#value'];
+        }
+        elseif (isset($element['#default_value'])) {
+          $this->elementsDefaultData[$key] = $element['#default_value'];
+        }
+
         $element['#webform_multiple'] = $element_plugin->hasMultipleValues($element);
         $element['#webform_composite'] = $element_plugin->isComposite();
       }
@@ -1690,7 +1781,27 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
   /**
    * {@inheritdoc}
    */
-  public function getPages($operation = 'default') {
+  public function getPages($operation = 'default', WebformSubmissionInterface $webform_submission = NULL) {
+    $pages = $this->buildPages($operation);
+    if ($this->getSetting('wizard_progress_states') && $webform_submission) {
+      /** @var \Drupal\webform\WebformSubmissionConditionsValidatorInterface $constraint_validator */
+      $constraint_validator = \Drupal::service('webform_submission.conditions_validator');
+      $pages = $constraint_validator->buildPages($pages, $webform_submission);
+    }
+    return $pages;
+  }
+
+  /**
+   * Build and cache a webform's wizard pages based on the current operation.
+   *
+   * @param string $operation
+   *   The webform submission operation.
+   *   Usually 'default', 'add', 'edit', 'edit_all', 'api', or 'test'.
+   *
+   * @return array
+   *   An associative array of webform wizard pages.
+   */
+  protected function buildPages($operation = 'default') {
     if (isset($this->pages[$operation])) {
       return $this->pages[$operation];
     }
@@ -1716,7 +1827,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
         }
 
         /** @var \Drupal\webform\Plugin\WebformElementInterface $element_plugin */
-        $element_plugin = $element_manager->createInstance($element['#type']);
+        $element_plugin = $element_manager->getElementInstance($element, $this);
         if (!($element_plugin instanceof WebformElementWizardPageInterface)) {
           continue;
         }
@@ -1912,7 +2023,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
         $cache_contexts[] = 'url.query_args:entity_id';
       }
       // Add webform (secure) token query string parameter.
-      if ($this->getSetting('token_update')) {
+      if ($this->getSetting('token_view') || $this->getSetting('token_update')) {
         $cache_contexts[] = 'url.query_args:token';
       }
     }
@@ -1978,17 +2089,15 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
       $elements = WebformElementHelper::getFlattened($elements);
 
       // Handle create element.
-      if ($created_elements = array_diff_key($elements, $elements_original)) {
-        foreach ($created_elements as $element_key => $element) {
-          $this->invokeHandlers('createElement', $element_key, $element);
-        }
+      $created_elements = array_diff_key($elements, $elements_original) ?: [];
+      foreach ($created_elements as $element_key => $element) {
+        $this->invokeHandlers('createElement', $element_key, $element);
       }
 
       // Handle delete element.
-      if ($deleted_elements = array_diff_key($elements_original, $elements)) {
-        foreach ($deleted_elements as $element_key => $element) {
-          $this->invokeHandlers('deleteElement', $element_key, $element);
-        }
+      $deleted_elements = array_diff_key($elements_original, $elements) ?: [];
+      foreach ($deleted_elements as $element_key => $element) {
+        $this->invokeHandlers('deleteElement', $element_key, $element);
       }
 
       // Handle update element.
@@ -1997,6 +2106,21 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
           $this->invokeHandlers('updateElement', $element_key, $element, $elements_original[$element_key]);
         }
       }
+
+      // Invalidate library_info cache tag if any updated or deleted elements
+      // has assets (CSS or JavaScript).
+      // @see webform_library_info_build()
+      /** @var \Drupal\webform\Plugin\WebformElementManagerInterface $element_manager */
+      $element_manager = \Drupal::service('plugin.manager.webform.element');
+      $checked_elements = $created_elements + $deleted_elements;
+      foreach ($checked_elements as $element_key => $element) {
+        $element_plugin = $element_manager->getElementInstance($element, $this);
+        if ($element_plugin instanceof WebformElementAssetInterface
+          && $element_plugin->hasAssets()) {
+          Cache::invalidateTags(['library_info']);
+          break;
+        }
+      }
     }
 
     // Reset elements.
@@ -2103,6 +2227,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
    */
   protected function resetHandlers() {
     $this->hasMessageHandler = NULL;
+    $this->hasAnonymousSubmissionTrackingHandler = NULL;
   }
 
   /**
@@ -2125,6 +2250,26 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
     return $this->hasMessagehandler;
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function hasAnonymousSubmissionTrackingHandler() {
+    if (isset($this->hasAnonymousSubmissionTrackingHandler)) {
+      $this->hasAnonymousSubmissionTrackingHandler;
+    }
+
+    $this->hasAnonymousSubmissionTrackingHandler = FALSE;
+    $handlers = $this->getHandlers();
+    foreach ($handlers as $handler) {
+      if ($handler->hasAnonymousSubmissionTracking()) {
+        $this->hasAnonymousSubmissionTrackingHandler = TRUE;
+        break;
+      }
+    }
+
+    return $this->hasAnonymousSubmissionTrackingHandler;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -2250,7 +2395,7 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
   /**
    * {@inheritdoc}
    */
-  public function invokeHandlers($method, &$data, &$context1 = NULL, &$context2 = NULL) {
+  public function invokeHandlers($method, &$data, &$context1 = NULL, &$context2 = NULL, &$context3 = NULL) {
     // Get webform submission from arguments for conditions validations.
     $webform_submission = NULL;
     $args = func_get_args();
@@ -2261,45 +2406,79 @@ class Webform extends ConfigEntityBundleBase implements WebformInterface {
       }
     }
 
-    // If webform submission and alter settings, make sure to completely
-    // reset all settings to their original values.
-    if ($method === 'overrideSettings') {
-      $this->resetSettings();
-      $settings = $this->getSettings();
-      $handlers = $this->getHandlers();
-      foreach ($handlers as $handler) {
-        $handler->setWebformSubmission($webform_submission);
-        $this->invokeHandlerAlter($handler, $method, $args);
+    // Get handlers.
+    $handlers = $this->getHandlers();
 
-        if ($handler->isEnabled() && $handler->checkConditions($webform_submission)) {
-          $handler->overrideSettings($settings, $webform_submission);
+    switch ($method) {
+      case 'overrideSettings';
+        // If webform submission and alter settings, make sure to completely
+        // reset all settings to their original values.
+        $this->resetSettings();
+        $settings = $this->getSettings();
+        foreach ($handlers as $handler) {
+          $handler->setWebformSubmission($webform_submission);
+          $this->invokeHandlerAlter($handler, $method, $args);
+          if ($this->isHandlerEnabled($handler, $webform_submission)) {
+            $handler->overrideSettings($settings, $webform_submission);
+          }
         }
-      }
-      // If a handler has change some settings set override.
-      // Only look for altered original settings, which prevents issues where
-      // a webform saved settings and default settings are out-of-sync.
-      if (array_intersect_key($settings, $this->settingsOriginal) != $this->settingsOriginal) {
-        $this->setSettingsOverride($settings);
-      }
-    }
-    else {
-      $handlers = $this->getHandlers();
-      foreach ($handlers as $handler) {
-        $handler->setWebformSubmission($webform_submission);
-        $this->invokeHandlerAlter($handler, $method, $args);
-
-        // If the handler is disabled never invoke it.
-        if ($handler->isDisabled()) {
-          continue;
+        // If a handler has change some settings set override.
+        // Only look for altered original settings, which prevents issues where
+        // a webform saved settings and default settings are out-of-sync.
+        if (array_intersect_key($settings, $this->settingsOriginal) != $this->settingsOriginal) {
+          $this->setSettingsOverride($settings);
         }
-
-        // If the arguments contain the webform submission check conditions.
-        if ($webform_submission && !$handler->checkConditions($webform_submission)) {
-          continue;
+        return NULL;
+
+      case 'access':
+      case 'accessElement':
+        // WebformHandler::access() and WebformHandler::accessElement()
+        // returns a AccessResult.
+        /** @var \Drupal\Core\Access\AccessResultInterface $result */
+        $result = AccessResult::neutral();
+        foreach ($handlers as $handler) {
+          $handler->setWebformSubmission($webform_submission);
+          $this->invokeHandlerAlter($handler, $method, $args);
+          if ($this->isHandlerEnabled($handler, $webform_submission)) {
+            $result = $result->orIf($handler->$method($data, $context1, $context2));
+          }
+        }
+        return $result;
+
+      default:
+        foreach ($handlers as $handler) {
+          $handler->setWebformSubmission($webform_submission);
+          $this->invokeHandlerAlter($handler, $method, $args);
+          if ($this->isHandlerEnabled($handler, $webform_submission)) {
+            $handler->$method($data, $context1, $context2);
+          }
         }
+        return NULL;
+    }
+  }
 
-        $handler->$method($data, $context1, $context2);
-      }
+  /**
+   * Determine if a webform handler is enabled.
+   *
+   * @param \Drupal\webform\Plugin\WebformHandlerInterface $handler
+   *   A webform handler.
+   * @param \Drupal\webform\WebformSubmissionInterface|null $webform_submission
+   *   A webform submission.
+   *
+   * @return bool
+   *   TRUE if a webform handler is enabled.
+   */
+  protected function isHandlerEnabled(WebformHandlerInterface $handler, WebformSubmissionInterface $webform_submission = NULL) {
+    // Check if the handler is disabled.
+    if ($handler->isDisabled()) {
+      return FALSE;
+    }
+    // If webform submission defined, check the handlers conditions.
+    elseif ($webform_submission && !$handler->checkConditions($webform_submission)) {
+      return FALSE;
+    }
+    else {
+      return TRUE;
     }
   }
 
diff --git a/modules/contrib/webform/src/Entity/WebformSubmission.php b/modules/contrib/webform/src/Entity/WebformSubmission.php
index fc442121..0f7ecc8e 100644
--- a/modules/contrib/webform/src/Entity/WebformSubmission.php
+++ b/modules/contrib/webform/src/Entity/WebformSubmission.php
@@ -107,6 +107,13 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
    */
   protected $originalData = [];
 
+  /**
+   * The data with computed values.
+   *
+   * @var array
+   */
+  protected $computedData = [];
+
   /**
    * Flag to indicated if submission is being converted from anonymous to authenticated.
    *
@@ -368,7 +375,8 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
    * {@inheritdoc}
    */
   public function getElementData($key) {
-    return (isset($this->data[$key])) ? $this->data[$key] : NULL;
+    $data = $this->getData();
+    return (isset($data[$key])) ? $data[$key] : NULL;
   }
 
   /**
@@ -378,6 +386,7 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
     // Make sure the element exists before setting its value.
     if ($this->getWebform()->getElement($key)) {
       $this->data[$key] = $value;
+      $this->computedData = NULL;
     }
     return $this;
   }
@@ -385,17 +394,28 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
   /**
    * {@inheritdoc}
    */
-  public function getData() {
+  public function getRawData() {
     return $this->data;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function setData(array $data) {
-    $this->data = $data;
+  public function getData() {
+    if (isset($this->computedData)) {
+      return $this->computedData;
+    }
+
+    // If there is no active theme and we can't prematurely start computing
+    // element values because it will define and lock the active theme.
+    /** @var \Drupal\webform\WebformThemeManagerInterface $theme_manager */
+    $theme_manager = \Drupal::service('webform.theme_manager');
+    if (!$theme_manager->hasActiveTheme()) {
+      return $this->data;
+    }
 
     // Set computed element values in to submission data.
+    $this->computedData = $this->data;
     $webform = $this->getWebform();
     if ($webform->hasComputed()) {
       /** @var \Drupal\webform\Plugin\WebformElementManagerInterface $element_manager */
@@ -405,9 +425,19 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
         $computed_element = $webform->getElement($computed_element_name);
         /** @var \Drupal\webform\Plugin\WebformElementComputedInterface $element_plugin */
         $element_plugin = $element_manager->getElementInstance($computed_element);
-        $this->data[$computed_element_name] = $element_plugin->computeValue($computed_element, $this);
+        $this->computedData[$computed_element_name] = $element_plugin->computeValue($computed_element, $this);
       }
     }
+
+    return $this->computedData;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function setData(array $data) {
+    $this->data = $data;
+    $this->computedData = NULL;
     return $this;
   }
 
@@ -426,6 +456,13 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
     return $this;
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function getElementOriginalData($key) {
+    return (isset($this->originalData[$key])) ? $this->originalData[$key] : NULL;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -487,28 +524,42 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
   /**
    * {@inheritdoc}
    */
-  public function getTokenUrl() {
-    $uri = $this->getSourceUrl();
-    $options = $uri->getOptions();
+  public function getTokenUrl($operation = 'update') {
+    switch ($operation) {
+      case 'view':
+        /** @var \Drupal\webform\WebformRequestInterface $request_handler */
+        $request_handler = \Drupal::service('webform.request');
+        $url = $request_handler->getUrl($this, $this->getSourceEntity(), 'webform.user.submission');
+        break;
+
+      case 'update':
+        $url = $this->getSourceUrl();
+        break;
+
+      default:
+        throw new \Exception("Token URL operation $operation is not supported");
+    }
+
+    $options = $url->setAbsolute()->getOptions();
     $options['query']['token'] = $this->getToken();
-    return $uri->setOptions($options);
+    return $url->setOptions($options);
   }
 
   /**
    * {@inheritdoc}
    */
-  public function invokeWebformHandlers($method, &$context1 = NULL, &$context2 = NULL) {
+  public function invokeWebformHandlers($method, &$context1 = NULL, &$context2 = NULL, &$context3 = NULL) {
     if ($webform = $this->getWebform()) {
-      $webform->invokeHandlers($method, $this, $context1, $context2);
+      return $webform->invokeHandlers($method, $this, $context1, $context2, $context3);
     }
   }
 
   /**
    * {@inheritdoc}
    */
-  public function invokeWebformElements($method, &$context1 = NULL, &$context2 = NULL) {
+  public function invokeWebformElements($method, &$context1 = NULL, &$context2 = NULL, &$context3 = NULL) {
     if ($webform = $this->getWebform()) {
-      $webform->invokeElements($method, $this, $context1, $context2);
+      $webform->invokeElements($method, $this, $context1, $context2, $context3);
     }
   }
 
@@ -732,7 +783,7 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
       'langcode' => \Drupal::languageManager()->getCurrentLanguage()->getId(),
       'token' => Crypt::randomBytesBase64(),
       'uri' => preg_replace('#^' . base_path() . '#', '/', $current_request->getRequestUri()),
-      'remote_addr' => ($webform && $webform->hasRemoteAddr()) ? '' : $current_request->getClientIp(),
+      'remote_addr' => ($webform && $webform->hasRemoteAddr()) ? $current_request->getClientIp() : '',
     ];
 
     $webform->invokeHandlers(__FUNCTION__, $values);
@@ -796,7 +847,16 @@ class WebformSubmission extends ContentEntityBase implements WebformSubmissionIn
    * {@inheritdoc}
    */
   public function resave() {
-    return $this->entityManager()->getStorage($this->entityTypeId)->resave($this);
+    return $this->entityTypeManager()->getStorage($this->entityTypeId)->resave($this);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function access($operation, AccountInterface $account = NULL, $return_as_object = FALSE) {
+    $access = parent::access($operation, $account, TRUE)
+      ->orIf($this->invokeWebformHandlers('access', $operation, $account));
+    return $return_as_object ? $access : $access->isAllowed();
   }
 
   /**
diff --git a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsAccessForm.php b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsAccessForm.php
index 8317a9a6..43481afb 100644
--- a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsAccessForm.php
+++ b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsAccessForm.php
@@ -86,7 +86,6 @@ class WebformEntitySettingsAccessForm extends WebformEntitySettingsBaseForm {
    */
   public function save(array $form, FormStateInterface $form_state) {
     $access = $form_state->getValue('access');
-
     /** @var \Drupal\webform\WebformInterface $webform */
     $webform = $this->getEntity();
 
diff --git a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsConfirmationForm.php b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsConfirmationForm.php
index 63946cd8..cd719bc4 100644
--- a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsConfirmationForm.php
+++ b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsConfirmationForm.php
@@ -177,13 +177,13 @@ class WebformEntitySettingsConfirmationForm extends WebformEntitySettingsBaseFor
     $form['confirmation_url']['confirmation_exclude_token'] = [
       '#type' => 'checkbox',
       '#title' => $this->t('Exclude token from Confirmation URL'),
-      '#description' => $this->t('If checked, to submissions token will be removed from the Confirmation URL and the [webform-submission] tokens will not be available within the confirmation message.'),
+      '#description' => $this->t('If checked, to submissions token will be removed from the Confirmation URL and the [webform_submission] tokens will not be available within the confirmation message.'),
       '#default_value' => $settings['confirmation_exclude_token'],
       '#access' => !$webform->isResultsDisabled(),
     ];
     $form['confirmation_url']['token_tree_link'] = $this->tokenManager->buildTreeElement(
       ['webform', 'webform_submission', 'webform_handler'],
-      $this->t('You may use tokens to pass query string parameters. Make sure all tokens include the urlencode suffix. (i.e. [webform-submission:values:email:urlencode])')
+      $this->t('You may use tokens to pass query string parameters. Make sure all tokens include the urlencode suffix. (i.e. [webform_submission:values:email:urlencode])')
     );
 
     // Confirmation settings.
diff --git a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsFormForm.php b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsFormForm.php
index b07160c3..b9a27063 100644
--- a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsFormForm.php
+++ b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsFormForm.php
@@ -349,6 +349,13 @@ class WebformEntitySettingsFormForm extends WebformEntitySettingsBaseForm {
         ],
       ],
     ];
+    $form['wizard_settings']['wizard_progress_states'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t("Update wizard progress bar's pages based on conditions"),
+      '#description' => $this->t("If checked, the wizard's progress bar's pages will be hidden on shown based on each pages conditional logic."),
+      '#return_value' => TRUE,
+      '#default_value' => $settings['wizard_progress_states'],
+    ];
     $form['wizard_settings']['wizard_confirmation'] = [
       '#type' => 'checkbox',
       '#title' => $this->t('Include confirmation page in progress'),
@@ -515,7 +522,7 @@ class WebformEntitySettingsFormForm extends WebformEntitySettingsBaseForm {
       '#type' => 'select',
       '#title' => $this->t('Form method'),
       '#description' => $this->t('The HTTP method with which the form will be submitted.') . '<br /><br />' .
-        '<em>' . $this->t('Selecting a custom POST or GET method will automatically disable wizards, previews, drafts, submissions, limits, purging, confirmations, emails, and handlers.') . '</em>',
+        '<em>' . $this->t('Selecting a custom POST or GET method will automatically disable wizards, previews, drafts, submissions, limits, purging, confirmations, emails, computed elements, and handlers.') . '</em>',
       '#options' => [
         '' => $this->t('POST (Default)'),
         'post' => $this->t('POST (Custom)'),
@@ -615,20 +622,37 @@ class WebformEntitySettingsFormForm extends WebformEntitySettingsBaseForm {
     // Set custom properties, class, and style.
     $elements = $webform->getElementsDecoded();
     $elements = WebformElementHelper::removeProperties($elements);
+
     $properties = [];
+
+    // Unset custom method and action.
+    unset(
+      $properties['#method'],
+      $properties['#action']
+    );
+
+    // Set custom method and action.
     if (!empty($values['method'])) {
       $properties['#method'] = $values['method'];
+      if (!empty($values['action'])) {
+        $properties['#action'] = $values['action'];
+      }
     }
-    if (!empty($values['action'])) {
-      $properties['#action'] = $values['action'];
-    }
+
+    // Set custom properties.
     if (!empty($values['custom'])) {
       $properties += WebformArrayHelper::addPrefix($values['custom']);
     }
+
+    // Set custom attributions.
     if (!empty($values['attributes'])) {
       $properties['#attributes'] = $values['attributes'];
     }
+
+    // Prepend form properties to elements.
     $elements = $properties + $elements;
+
+    // Save elements.
     $webform->setElements($elements);
 
     // Remove custom properties and attributes.
diff --git a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsGeneralForm.php b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsGeneralForm.php
index c7160983..5574654d 100644
--- a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsGeneralForm.php
+++ b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsGeneralForm.php
@@ -330,7 +330,7 @@ class WebformEntitySettingsGeneralForm extends WebformEntitySettingsBaseForm {
       ],
       '#states' => [
         'visible' => [
-          ':input[name="ajax_effect]"]' => ['!value' => 'none']
+          ':input[name="ajax_effect]"]' => ['!value' => 'none'],
         ],
       ],
       '#default_value' => $settings['ajax_speed'],
diff --git a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsSubmissionsForm.php b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsSubmissionsForm.php
index 862daa3d..26925529 100644
--- a/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsSubmissionsForm.php
+++ b/modules/contrib/webform/src/EntitySettings/WebformEntitySettingsSubmissionsForm.php
@@ -84,6 +84,7 @@ class WebformEntitySettingsSubmissionsForm extends WebformEntitySettingsBaseForm
     $form['submission_settings']['submission_label'] = [
       '#type' => 'textfield',
       '#title' => $this->t('Submission label'),
+      '#maxlength' => NULL,
       '#default_value' => $settings['submission_label'],
     ];
     $form['submission_settings']['submission_exception_message'] = [
@@ -200,6 +201,11 @@ class WebformEntitySettingsSubmissionsForm extends WebformEntitySettingsBaseForm
         'title' => $this->t('Show the notification about previous submissions'),
         'form_description' => $this->t('Show the previous submissions notification that appears when users have previously submitted this form.'),
       ],
+      'token_view' => [
+        'title' => $this->t('Allow users to view a submission using a secure token'),
+        'form_description' => $this->t("If checked users will be able to view a submission using the webform submission's URL appended with the submission's (secure) token.") . ' ' .
+          $this->t("The 'tokenized' URL to view a submission will be available when viewing a submission's information and can be inserted into an email using the [webform_submission:view-url] token."),
+      ],
       'token_update' => [
         'title' => $this->t('Allow users to update a submission using a secure token'),
         'form_description' => $this->t("If checked users will be able to update a submission using the webform's URL appended with the submission's (secure) token.") . ' ' .
@@ -221,7 +227,9 @@ class WebformEntitySettingsSubmissionsForm extends WebformEntitySettingsBaseForm
       '#message_message' => $this->t("Submissions accessed using the (secure) token will by-pass all webform submission access rules."),
       '#states' => [
         'visible' => [
-          ':input[name="token_update"]' => ['checked' => TRUE],
+          [':input[name="token_view"]' => ['checked' => TRUE]],
+          'or',
+          [':input[name="token_update"]' => ['checked' => TRUE]],
         ],
       ],
       '#weight' => $form['submission_behaviors']['token_update']['#weight'] + 1,
@@ -433,7 +441,7 @@ class WebformEntitySettingsSubmissionsForm extends WebformEntitySettingsBaseForm
     ];
     $form['submission_limits']['total']['limit_total_unique_warning'] = [
       '#type' => 'webform_message',
-      '#message_message' => $this->t("Please make sure users are allowed to 'edit any submission'."),
+      '#message_message' => $this->t("Please make sure users are allowed to 'view any submission' and 'edit any submission'."),
       '#message_type' => 'warning',
       '#message_close' => TRUE,
       '#message_storage' => WebformMessage::STORAGE_SESSION,
@@ -535,7 +543,7 @@ class WebformEntitySettingsSubmissionsForm extends WebformEntitySettingsBaseForm
     ];
     $form['submission_limits']['user']['limit_user_unique_warning'] = [
       '#type' => 'webform_message',
-      '#message_message' => $this->t("Please make sure users are allowed to 'edit own submission'."),
+      '#message_message' => $this->t("Please make sure authenticated users are allowed to 'view own submission' and 'edit own submission'."),
       '#message_type' => 'warning',
       '#message_close' => TRUE,
       '#message_storage' => WebformMessage::STORAGE_SESSION,
diff --git a/modules/contrib/webform/src/Form/AdminConfig/WebformAdminConfigHandlersForm.php b/modules/contrib/webform/src/Form/AdminConfig/WebformAdminConfigHandlersForm.php
index 6e3a51a1..2315a94d 100644
--- a/modules/contrib/webform/src/Form/AdminConfig/WebformAdminConfigHandlersForm.php
+++ b/modules/contrib/webform/src/Form/AdminConfig/WebformAdminConfigHandlersForm.php
@@ -89,8 +89,8 @@ class WebformAdminConfigHandlersForm extends WebformAdminConfigBaseForm {
     ];
     $form['mail']['roles'] = [
       '#type' => 'webform_roles',
-      '#title' => $this->t('Recipient roles'),
-      '#description' => $this->t("Select roles that can be assigned to receive a webform's email. <em>Please note: Selected roles will be available to all webforms.</em>"),
+      '#title' => $this->t('Recipient user roles'),
+      '#description' => $this->t("Select user roles that can be assigned to receive a webform's email. <em>Please note: Selected user roles will be available to all webforms.</em>"),
       '#include_anonymous' => FALSE,
       '#default_value' => $config->get('mail.roles'),
     ];
diff --git a/modules/contrib/webform/src/Form/WebformAjaxFormTrait.php b/modules/contrib/webform/src/Form/WebformAjaxFormTrait.php
index 3c729209..16f3ea30 100644
--- a/modules/contrib/webform/src/Form/WebformAjaxFormTrait.php
+++ b/modules/contrib/webform/src/Form/WebformAjaxFormTrait.php
@@ -3,6 +3,7 @@
 namespace Drupal\webform\Form;
 
 use Drupal\Component\Serialization\Json;
+use Drupal\Component\Utility\Html;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\HtmlCommand;
 use Drupal\Core\EventSubscriber\MainContentViewSubscriber;
@@ -103,7 +104,8 @@ trait WebformAjaxFormTrait {
    *   The form's Ajax wrapper id.
    */
   protected function getWrapperId() {
-    return $this->getFormId() . '-ajax';
+    $form_id = (method_exists($this, 'getBaseFormId') ? $this->getBaseFormId() : $this->getFormId());
+    return Html::getId($form_id . '-ajax');
   }
 
   /**
@@ -159,7 +161,7 @@ trait WebformAjaxFormTrait {
     $wrapper_attributes = new Attribute($wrapper_attributes);
 
     $form['#form_wrapper_id'] = $wrapper_id;
-    $form['#prefix'] = '<a id="' . $wrapper_id . '-content" tabindex="-1"></a>';
+    $form['#prefix'] = '<a id="' . $wrapper_id . '-content" tabindex="-1" aria-hidden="true"></a>';
     $form['#prefix'] .= '<div' . $wrapper_attributes . '>';
     $form['#suffix'] = '</div>';
 
diff --git a/modules/contrib/webform/src/Form/WebformResultsCustomForm.php b/modules/contrib/webform/src/Form/WebformResultsCustomForm.php
index c3cd7529..d79a51f4 100644
--- a/modules/contrib/webform/src/Form/WebformResultsCustomForm.php
+++ b/modules/contrib/webform/src/Form/WebformResultsCustomForm.php
@@ -118,7 +118,7 @@ class WebformResultsCustomForm extends FormBase {
 
     // Sort and direction.
     // Display available columns sorted alphabetically.
-    $sort = $this->webform->getState($this->getStateKey('sort'), 'serial');
+    $sort = $this->webform->getState($this->getStateKey('sort'), 'created');
     $direction = $this->webform->getState($this->getStateKey('direction'), 'desc');
     $form['sort'] = [
       '#prefix' => '<div class="container-inline">',
diff --git a/modules/contrib/webform/src/Form/WebformSubmissionDeleteMultiple.php b/modules/contrib/webform/src/Form/WebformSubmissionDeleteMultiple.php
index ecb673f1..2f661887 100644
--- a/modules/contrib/webform/src/Form/WebformSubmissionDeleteMultiple.php
+++ b/modules/contrib/webform/src/Form/WebformSubmissionDeleteMultiple.php
@@ -34,19 +34,19 @@ class WebformSubmissionDeleteMultiple extends ConfirmFormBase {
    *
    * @var \Drupal\Core\Entity\EntityStorageInterface
    */
-  protected $manager;
+  protected $storage;
 
   /**
    * Constructs a WebformSubmissionDeleteMultiple object.
    *
    * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
    *   The tempstore factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $manager
+   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
-  public function __construct(PrivateTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $manager) {
+  public function __construct(PrivateTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $entity_type_manager) {
     $this->tempStoreFactory = $temp_store_factory;
-    $this->storage = $manager->getStorage('webform_submission');
+    $this->storage = $entity_type_manager->getStorage('webform_submission');
   }
 
   /**
diff --git a/modules/contrib/webform/src/Form/WebformSubmissionsPurgeForm.php b/modules/contrib/webform/src/Form/WebformSubmissionsPurgeForm.php
index de51b28c..c70e5a85 100644
--- a/modules/contrib/webform/src/Form/WebformSubmissionsPurgeForm.php
+++ b/modules/contrib/webform/src/Form/WebformSubmissionsPurgeForm.php
@@ -125,10 +125,10 @@ class WebformSubmissionsPurgeForm extends WebformSubmissionsDeleteFormBase {
   protected function getSubmissionTotal() {
     if (!isset($this->submissionTotal)) {
       $this->submissionTotal = $this->entityTypeManager
-      ->getStorage('webform_submission')
-      ->getQuery()
-      ->count()
-      ->execute();
+        ->getStorage('webform_submission')
+        ->getQuery()
+        ->count()
+        ->execute();
     }
     return $this->submissionTotal;
   }
diff --git a/modules/contrib/webform/src/Plugin/Block/WebformSubmissionLimitBlock.php b/modules/contrib/webform/src/Plugin/Block/WebformSubmissionLimitBlock.php
index a1f3d15e..14cd5518 100644
--- a/modules/contrib/webform/src/Plugin/Block/WebformSubmissionLimitBlock.php
+++ b/modules/contrib/webform/src/Plugin/Block/WebformSubmissionLimitBlock.php
@@ -2,7 +2,6 @@
 
 namespace Drupal\webform\Plugin\Block;
 
-use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -34,6 +33,20 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    */
   protected $currentUser;
 
+  /**
+   * The current webform with overridden settings.
+   *
+   * @var \Drupal\webform\WebformInterface|bool
+   */
+  protected $webform;
+
+  /**
+   * The current source entity.
+   *
+   * @var \Drupal\Core\Entity\EntityInterface|bool
+   */
+  protected $sourceEntity;
+
   /**
    * The entity type manager.
    *
@@ -117,7 +130,13 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    * {@inheritdoc}
    */
   public function blockForm($form, FormStateInterface $form_state) {
-    $form['type'] = [
+    // General.
+    $form['general'] = [
+      '#type' => 'details',
+      '#title' => $this->t('General settings'),
+      '#open' => TRUE,
+    ];
+    $form['general']['type'] = [
       '#title' => $this->t('Display limit and total submissions for the'),
       '#type' => 'select',
       '#options' => [
@@ -126,50 +145,66 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
       ],
       '#ajax' => self::getTokenAjaxSettings(),
       '#default_value' => $this->configuration['type'],
+      '#parents' => ['settings', 'type'],
     ];
-    $form['source_entity'] = [
+    $form['general']['source_entity'] = [
       '#title' => $this->t('Restrict limit and total submissions to current or specified source entity'),
       '#type' => 'checkbox',
       '#return_value' => TRUE,
       '#ajax' => self::getTokenAjaxSettings(),
       '#default_value' => $this->configuration['source_entity'],
+      '#parents' => ['settings', 'source_entity'],
     ];
-    $form['content'] = [
-      '#title' => $this->t('Content'),
+    $form['general']['content'] = [
       '#type' => 'webform_html_editor',
+      '#title' => $this->t('Content'),
+      '#description' => $this->t('The entered text appears before the progress bar.'),
       '#default_value' => $this->configuration['content'],
-      '#description' => self::buildTokens($this->configuration['type'], $this->configuration['source_entity']),
+      '#parents' => ['settings', 'content'],
     ];
 
-    $form['token_tree_link'] = $this->tokenManager->buildTreeElement();
+    // Tokens.
+    $form['tokens'] = self::buildTokens($this->configuration['type'], $this->configuration['source_entity']);
 
-    $form['progress_bar'] = [
+    // Progress.
+    $form['progress'] = [
+      '#type' => 'details',
+      '#title' => $this->t('Progress bar'),
+      '#open' => TRUE,
+    ];
+    $form['progress']['progress_bar'] = [
       '#title' => $this->t('Show progress bar'),
       '#type' => 'checkbox',
       '#return_value' => TRUE,
       '#default_value' => $this->configuration['progress_bar'],
+      '#parents' => ['settings', 'progress_bar'],
     ];
-    $form['progress_bar_label'] = [
+    $form['progress']['progress_bar_label'] = [
       '#title' => $this->t('Progress bar label'),
       '#type' => 'textfield',
+      '#description' => $this->t('The entered text appears above the progress bar.'),
       '#default_value' => $this->configuration['progress_bar_label'],
+      '#parents' => ['settings', 'progress_bar_label'],
       '#states' => [
         'visible' => [
           ':input[name="settings[progress_bar]"]' => ['checked' => TRUE],
         ],
       ],
     ];
-    $form['progress_bar_message'] = [
+    $form['progress']['progress_bar_message'] = [
       '#title' => $this->t('Progress bar message'),
       '#type' => 'textfield',
+      '#description' => $this->t('The entered text appears below the progress bar.'),
       '#default_value' => $this->configuration['progress_bar_message'],
+      '#parents' => ['settings', 'progress_bar_message'],
       '#states' => [
         'visible' => [
           ':input[name="settings[progress_bar]"]' => ['checked' => TRUE],
         ],
       ],
     ];
-    // Advanced settings.
+
+    // Advanced.
     $form['advanced'] = [
       '#title' => $this->t('Advanced settings'),
       '#type' => 'details',
@@ -181,6 +216,7 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
       '#type' => 'entity_autocomplete',
       '#target_type' => 'webform',
       '#default_value' => ($this->configuration['webform_id']) ? $this->entityTypeManager->getStorage('webform')->load($this->configuration['webform_id']) : NULL,
+      '#parents' => ['settings', 'webform_id'],
     ];
     $entity_type_options = [];
     foreach ($this->entityTypeManager->getDefinitions() as $entity_type_id => $entity_type) {
@@ -192,6 +228,7 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
       '#empty_option' => $this->t('- None -'),
       '#options' => $entity_type_options,
       '#default_value' => $this->configuration['entity_type'],
+      '#parents' => ['settings', 'entity_type'],
       '#states' => [
         'visible' => [
           ':input[name="settings[advanced][webform_id]"]' => ['filled' => TRUE],
@@ -203,6 +240,7 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
       '#type' => 'textfield',
       '#title' => 'Source entity id',
       '#default_value' => $this->configuration['entity_id'],
+      '#parents' => ['settings', 'entity_id'],
       '#states' => [
         'visible' => [
           ':input[name="settings[source_entity]"]' => ['checked' => TRUE],
@@ -222,7 +260,6 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    */
   public function blockValidate($form, FormStateInterface $form_state) {
     $values = $form_state->getValues();
-    $values += $values['advanced'];
     if ($values['entity_type']) {
       $t_args = ['%label' => $form['advanced']['entity_id']['#title']];
       if (empty($values['entity_id'])) {
@@ -239,7 +276,6 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     $values = $form_state->getValues();
-    $values += $values['advanced'];
     foreach ($this->defaultConfiguration() as $key => $default_value) {
       $this->configuration[$key] = $values[$key];
     }
@@ -326,6 +362,11 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
       $text = str_replace('[limit]', $this->getLimit(), $text);
     }
 
+    // Replace [remaining] token.
+    if (strpos($text, '[remaining]') !== FALSE) {
+      $text = str_replace('[remaining]', $this->getLimit() - $this->getTotal(), $text);
+    }
+
     // Replace [interval] token.
     if (strpos($text, '[interval]') !== FALSE) {
       $text = str_replace('[interval]', $this->getIntervalText(), $text);
@@ -395,11 +436,34 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    *   The webform or FALSE if the webform is not available.
    */
   protected function getWebform() {
+    if (isset($this->webform)) {
+      return $this->webform;
+    }
+
     if ($this->configuration['webform_id']) {
-      return Webform::load($this->configuration['webform_id']) ?: FALSE;
+      $this->webform = Webform::load($this->configuration['webform_id']) ?: FALSE;
+    }
+    else {
+      $this->webform = $this->requestHandler->getCurrentWebform() ?: FALSE;
     }
 
-    return $this->requestHandler->getCurrentWebform() ?: FALSE;
+    // Apply overridden settings to the webform which requires
+    // a temp webform submission.
+    if ($this->webform) {
+      /** @var \Drupal\webform\WebformSubmissionStorageInterface $webform_submission_storage */
+      $webform_submission_storage = $this->entityTypeManager->getStorage('webform_submission');
+      $values = ['webform_id' => $this->getWebform()->id()];
+      if ($source_entity = $this->getSourceEntity()) {
+        $values += [
+          'entity_type' => $source_entity->getEntityTypeId(),
+          'entity_id' => $source_entity->id(),
+        ];
+      }
+      $temp_webform_submission = $webform_submission_storage->create($values);
+      $this->webform->invokeHandlers('overrideSettings', $temp_webform_submission);
+    }
+
+    return $this->webform;
   }
 
   /**
@@ -414,15 +478,22 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
       return NULL;
     }
 
-    if ($this->configuration['entity_type'] && $this->configuration['entity_id']) {
-      $entity_storage = $this->entityTypeManager->getStorage($this->configuration['entity_type']);
-      if (!$entity_storage) {
-        return FALSE;
+    if (!isset($this->sourceEntity)) {
+      if ($this->configuration['entity_type'] && $this->configuration['entity_id']) {
+        $entity_storage = $this->entityTypeManager->getStorage($this->configuration['entity_type']);
+        if (!$entity_storage) {
+          $this->sourceEntity = FALSE;
+        }
+        else {
+          $this->sourceEntity = $entity_storage->load($this->configuration['entity_id']) ?: FALSE;
+        }
+      }
+      else {
+        $this->sourceEntity = $this->requestHandler->getCurrentSourceEntity('webform') ?: FALSE;
       }
-      return $entity_storage->load($this->configuration['entity_id']) ?: FALSE;
     }
 
-    return $this->requestHandler->getCurrentSourceEntity('webform') ?: FALSE;
+    return $this->sourceEntity;
   }
 
   /**
@@ -464,6 +535,8 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
   /**
    * Build available tokens for submission limit type and source entity.
    *
+   * NOTE: Using inline style attributes of fix in-place block editing UX.
+   *
    * @param string $type
    *   The submission type which can be 'webform' or 'user'.
    * @param string $source_entity
@@ -473,31 +546,56 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    *   A render array containing a list of available tokens.
    */
   public static function buildTokens($type, $source_entity) {
+    /** @var \Drupal\webform\WebformTokenManagerInterface $token_manager */
+    $token_manager = \Drupal::service('webform.token_manager');
+
     // Get token name and descriptions.
     module_load_include('inc', 'webform', 'webform.tokens');
     $token_info = webform_token_info();
     $tokens = $token_info['tokens']['webform_submission'];
 
-    $token_types = ['limit', 'interval', 'total'];
-    $token_items = [];
+    $token_types = ['limit', 'interval', 'total', 'remaining'];
+    $rows = [];
     foreach ($token_types as $token_type) {
       $token_name = self::getTokenName($token_type, $type, $source_entity);
-      $args = [
-        '@type' => $token_type,
-        '@name' => $tokens[$token_name]['name'],
-        '@description' => $tokens[$token_name]['description'],
-      ];
-      $token_items[$token_type] = [
-        '#markup' => new FormattableMarkup('[@type] =&gt; @name<br/><em>@description</em>', $args),
+      $rows[] = [
+        ['data' => '[' . $token_type . ']', 'style' => 'vertical-align: top'],
+        [
+          'data' => [
+            'name' => [
+              '#markup' => $tokens[$token_name]['name'],
+              '#prefix' => '<strong>',
+              '#suffix' => '</strong><br/>',
+            ],
+            'description' => [
+              '#markup' => $tokens[$token_name]['description'],
+            ],
+          ],
+          'style' => 'vertical-align: top',
+        ],
       ];
     }
 
     return [
-      '#prefix' => '<div id="webform-submission-limit-block-tokens">',
-      '#suffix' => '</div>',
-      '#theme' => 'item_list',
-      '#items' => $token_items,
-      '#title' => t('Available tokens'),
+      '#type' => 'container',
+      '#attributes' => ['id' => 'webform-submission-limit-block-tokens'],
+      'details' => [
+        '#type' => 'details',
+        '#title' => t('Available tokens'),
+        '#open' => TRUE,
+        'table' => [
+          '#type' => 'table',
+          '#header' => [
+            ['data' => t('Token'), 'style' => 'width: auto'],
+            ['data' => t('Name / Description'), 'style' => 'width: 100%'],
+          ],
+          '#rows' => $rows,
+          '#attributes' => ['style' => 'margin: 1em 0'],
+        ],
+        'token_tree_link' => [
+          'token' => $token_manager->buildTreeElement(),
+        ],
+      ],
     ];
   }
 
@@ -514,7 +612,7 @@ class WebformSubmissionLimitBlock extends BlockBase implements ContainerFactoryP
    * @return string
    *   A token name.
    */
-  protected static function getTokenName($prefix = 'limit', $type, $source_entity = FALSE) {
+  protected static function getTokenName($prefix = 'limit', $type = 'webform', $source_entity = FALSE) {
     $parts = [$prefix, $type];
     if ($source_entity) {
       $parts[] = 'source_entity';
diff --git a/modules/contrib/webform/src/Plugin/Field/FieldWidget/WebformEntityReferenceWidgetTrait.php b/modules/contrib/webform/src/Plugin/Field/FieldWidget/WebformEntityReferenceWidgetTrait.php
index 7bf40173..40967313 100644
--- a/modules/contrib/webform/src/Plugin/Field/FieldWidget/WebformEntityReferenceWidgetTrait.php
+++ b/modules/contrib/webform/src/Plugin/Field/FieldWidget/WebformEntityReferenceWidgetTrait.php
@@ -211,6 +211,15 @@ some_value: '[paragraph:some_value:clear]";
       $item += $item['settings'];
       unset($item['settings']);
 
+      // Set default values.
+      $item += [
+        'target_id' => '',
+        'default_data' => NULL,
+        'status' => '',
+        'open' => '',
+        'close' => '',
+      ];
+
       if ($item['status'] === WebformInterface::STATUS_SCHEDULED) {
         $states = ['open', 'close'];
         foreach ($states as $state) {
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/Captcha.php b/modules/contrib/webform/src/Plugin/WebformElement/Captcha.php
index 0afb5105..dba51f34 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/Captcha.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/Captcha.php
@@ -4,7 +4,10 @@ namespace Drupal\webform\Plugin\WebformElement;
 
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\webform\Plugin\WebformElementBase;
+use Drupal\webform\WebformSubmissionForm;
 use Drupal\webform\WebformSubmissionInterface;
+use Drupal\Core\Link;
+use Drupal\Core\Url as CoreUrl;
 
 /**
  * Provides a 'captcha' element.
@@ -94,10 +97,15 @@ class Captcha extends WebformElementBase {
   public function preview() {
     $element = parent::preview() + [
       '#captcha_admin_mode' => TRUE,
+      // Define empty form id to prevent fatal error when preview is
+      // rendered via Ajax.
+      // @see \Drupal\captcha\Element\Captcha::processCaptchaElement
+      '#captcha_info' => ['form_id' => ''],
     ];
     if (\Drupal::moduleHandler()->moduleExists('image_captcha')) {
       $element['#captcha_type'] = 'image_captcha/Image';
     }
+
     return $element;
   }
 
@@ -123,13 +131,26 @@ class Captcha extends WebformElementBase {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    if (\Drupal::moduleHandler()->moduleExists('captcha')) {
-      module_load_include('inc', 'captcha', 'captcha.admin');
-      $captcha_types = _captcha_available_challenge_types();
-    }
-    else {
-      $captcha_types = ['default' => $this->t('Default challenge type')];
+    // Issue #3090624: Call to undefined function trying to add CAPTCHA
+    // element to form.
+    // @see _captcha_available_challenge_types();
+    // @see \Drupal\captcha\Service\CaptchaService::getAvailableChallengeTypes
+    $captcha_types = [];
+    $captcha_types['default'] = t('Default challenge type');
+    // We do our own version of Drupal's module_invoke_all() here because
+    // we want to build an array with custom keys and values.
+    foreach (\Drupal::moduleHandler()->getImplementations('captcha') as $module) {
+      $result = call_user_func_array($module . '_captcha', ['list']);
+      if (is_array($result)) {
+        foreach ($result as $type) {
+          $captcha_types["$module/$type"] = t('@type (from module @module)', [
+            '@type' => $type,
+            '@module' => $module,
+          ]);
+        }
+      }
     }
+
     $form['captcha'] = [
       '#type' => 'fieldset',
       '#title' => $this->t('CAPTCHA settings'),
@@ -180,6 +201,39 @@ class Captcha extends WebformElementBase {
         $element['captcha_widgets']['captcha_response']['#description'] = $element['#captcha_description'];
       }
     }
+
+    // Add image refresh button to captcha form element.
+    // @see image_captcha_after_build_process()
+    if ($form_state->getFormObject() instanceof WebformSubmissionForm) {
+      $is_image_captcha = FALSE;
+      if ($element['#captcha_type'] === 'image_captcha/Image') {
+        $is_image_captcha = TRUE;
+      }
+      elseif ($element['#captcha_type'] === 'default') {
+        $default_challenge = \Drupal::service('config.manager')
+          ->getConfigFactory()
+          ->get('captcha.settings')
+          ->get('default_challenge');
+        if ($default_challenge === 'image_captcha/Image') {
+          $is_image_captcha = TRUE;
+        }
+      }
+      if ($is_image_captcha && isset($element['#captcha_info']['form_id'])) {
+        $form_id = $element['#captcha_info']['form_id'];
+        $uri = Link::fromTextAndUrl(t('Get new captcha!'),
+          new CoreUrl('image_captcha.refresh',
+            ['form_id' => $form_id],
+            ['attributes' => ['class' => ['reload-captcha']]]
+          )
+        );
+        $element['captcha_widgets']['captcha_refresh'] = [
+          '#theme' => 'image_captcha_refresh',
+          '#captcha_refresh_link' => $uri,
+        ];
+      }
+    }
+
+
     return $element;
   }
 
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/Checkboxes.php b/modules/contrib/webform/src/Plugin/WebformElement/Checkboxes.php
index c889bd66..589e8d98 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/Checkboxes.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/Checkboxes.php
@@ -30,6 +30,7 @@ class Checkboxes extends OptionsBase {
       // Options settings.
       'options_display' => 'one_column',
       'options_description_display' => 'description',
+      'options__properties' => [],
       // iCheck settings.
       'icheck' => '',
       // Wrapper.
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/EntityAutocomplete.php b/modules/contrib/webform/src/Plugin/WebformElement/EntityAutocomplete.php
index 3aa4d18f..9b1639fc 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/EntityAutocomplete.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/EntityAutocomplete.php
@@ -39,6 +39,11 @@ class EntityAutocomplete extends WebformElementBase implements WebformElementEnt
    * {@inheritdoc}
    */
   public function setDefaultValue(array &$element) {
+    // Make sure tags or multiple is used.
+    if (!empty($element['#tags']) && isset($element['#multiple'])) {
+      unset($element['#multiple']);
+    }
+
     if (isset($element['#multiple'])) {
       $element['#default_value'] = (isset($element['#default_value'])) ? (array) $element['#default_value'] : NULL;
       return;
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/Hidden.php b/modules/contrib/webform/src/Plugin/WebformElement/Hidden.php
index 171bbc0b..517b08f8 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/Hidden.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/Hidden.php
@@ -23,12 +23,20 @@ class Hidden extends TextBase {
    * {@inheritdoc}
    */
   public function getDefaultProperties() {
+    // Include only the access-view-related base properties.
+    $access_properties = $this->getDefaultBaseProperties();
+    $access_properties = array_filter($access_properties, function ($access_default, $access_key) {
+      return strpos($access_key, 'access_') === 0;
+    }, ARRAY_FILTER_USE_BOTH);
+
     return [
       // Element settings.
       'title' => '',
       'default_value' => '',
+      // Administration.
       'prepopulate' => FALSE,
-    ];
+      'private' => FALSE,
+    ] + $access_properties;
   }
 
   /**
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/OptionsBase.php b/modules/contrib/webform/src/Plugin/WebformElement/OptionsBase.php
index ff6587e4..99ee4dd3 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/OptionsBase.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/OptionsBase.php
@@ -4,7 +4,9 @@ namespace Drupal\webform\Plugin\WebformElement;
 
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\OptGroup;
+use Drupal\Core\Mail\MailFormatHelper;
 use Drupal\Core\Render\Markup;
+use Drupal\webform\Utility\WebformArrayHelper;
 use Drupal\webform\Utility\WebformElementHelper;
 use Drupal\webform\Utility\WebformOptionsHelper;
 use Drupal\webform\Plugin\WebformElementBase;
@@ -233,6 +235,12 @@ abstract class OptionsBase extends WebformElementBase {
     if (!empty($element['#required']) && isset($element['#default_value']) && $element['#default_value'] === '') {
       unset($element['#default_value']);
     }
+
+    // Process custom options properties.
+    if ($this->hasProperty('options__properties')) {
+      $this->setElementDefaultCallback($element, 'process');
+      $element['#process'][] = [get_class($this), 'processOptionsProperties'];
+    }
   }
 
   /**
@@ -245,6 +253,46 @@ abstract class OptionsBase extends WebformElementBase {
     parent::prepareElementValidateCallbacks($element, $webform_submission);
   }
 
+  /**
+   * Processes options (custom) properties.
+   */
+  public static function processOptionsProperties(&$element, FormStateInterface $form_state, &$complete_form) {
+    if (empty($element['#options__properties'])) {
+      return $element;
+    }
+
+    foreach ($element['#options__properties'] as $option_key => $options__properties) {
+      if (!isset($element[$option_key])) {
+        continue;
+      }
+
+      // Remove ignored properties.
+      $options__properties = WebformElementHelper::removeIgnoredProperties($options__properties);
+
+      foreach ($options__properties as $property => $value) {
+        $option_element =& $element[$option_key];
+        if (in_array($property, ['#attributes', '#wrapper_attributes', '#label_attributes'])) {
+          // Apply attributes.
+          $option_element += [$property => []];
+          foreach ($value as $attribute_name => $attribute_value) {
+            // Merge attributes class.
+            if ($attribute_name === 'class' && isset($element[$option_key][$property][$attribute_name])) {
+              $option_element[$property][$attribute_name] = array_merge($element[$option_key][$property][$attribute_name], $attribute_value);
+            }
+            else {
+              $option_element[$property][$attribute_name] = $attribute_value;
+            }
+          }
+        }
+        else {
+          $option_element[$property] = $value;
+        }
+      }
+    }
+
+    return $element;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -271,42 +319,55 @@ abstract class OptionsBase extends WebformElementBase {
    * {@inheritdoc}
    */
   protected function formatHtmlItem(array $element, WebformSubmissionInterface $webform_submission, array $options = []) {
-    $format = $this->getItemFormat($element);
-    $value = $this->formatTextItem($element, $webform_submission, ['prefixing' => FALSE] + $options);
+    $value = $this->getValue($element, $webform_submission, $options);
 
-    if ($format === 'raw') {
-      return Markup::create($value);
-    }
+    $format = $this->getItemFormat($element);
+    switch ($format) {
+      case 'raw':
+        return Markup::create($value);
+
+      case 'description':
+        if (isset($element['#options'])) {
+          $options_description = $this->hasProperty('options_description_display');
+          if ($options_description) {
+            $description = WebformOptionsHelper::getOptionDescription($value, $element['#options'], $options_description);
+            return ['#markup' => $description];
+          }
+        }
+        return '';
 
-    if (isset($element['#options'])) {
-      $flattened_options = OptGroup::flattenOptions($element['#options']);
-      $options_description = $this->hasProperty('options_description_display');
-      $value = WebformOptionsHelper::getOptionText($value, $flattened_options, $options_description);
-    }
+      case 'value':
+      default:
+        if (isset($element['#options'])) {
+          $options_description = $this->hasProperty('options_description_display');
+          $value = WebformOptionsHelper::getOptionText($value, $element['#options'], $options_description);
+        }
 
-    // Build a render that used #plain_text so that HTML characters are escaped.
-    // @see \Drupal\Core\Render\Renderer::ensureMarkupIsSafe
-    if ($value === '0') {
-      // Issue #2765609: #plain_text doesn't render empty-like values
-      // (e.g. 0 and "0").
-      // Workaround: Use #markup until this issue is fixed.
-      $build = ['#markup' => $value];
-    }
-    else {
-      $build = ['#plain_text' => $value];
-    }
+        // Build a render array that uses #plain_text so that
+        // HTML characters are escaped.
+        // @see \Drupal\Core\Render\Renderer::ensureMarkupIsSafe
+        if ($value === '0') {
+          // Issue #2765609: #plain_text doesn't render empty-like values
+          // (e.g. 0 and "0").
+          // Workaround: Use #markup until this issue is fixed.
+          // @todo Remove workaround once only Drupal 8.7.x is supported.
+          $build = ['#markup' => $value];
+        }
+        else {
+          $build = ['#plain_text' => $value];
+        }
 
-    $options += ['prefixing' => TRUE];
-    if ($options['prefixing']) {
-      if (isset($element['#field_prefix'])) {
-        $build['#prefix'] = $element['#field_prefix'];
-      }
-      if (isset($element['#field_suffix'])) {
-        $build['#suffix'] = $element['#field_suffix'];
-      }
+        $options += ['prefixing' => TRUE];
+        if ($options['prefixing']) {
+          if (isset($element['#field_prefix'])) {
+            $build['#prefix'] = $element['#field_prefix'];
+          }
+          if (isset($element['#field_suffix'])) {
+            $build['#suffix'] = $element['#field_suffix'];
+          }
+        }
+        return $build;
     }
-
-    return $build;
   }
 
   /**
@@ -314,30 +375,52 @@ abstract class OptionsBase extends WebformElementBase {
    */
   protected function formatTextItem(array $element, WebformSubmissionInterface $webform_submission, array $options = []) {
     $value = $this->getValue($element, $webform_submission, $options);
+
     $format = $this->getItemFormat($element);
+    switch ($format) {
+      case 'raw':
+        return $value;
+
+      case 'description':
+        if (isset($element['#options'])) {
+          $options_description = $this->hasProperty('options_description_display');
+          if ($options_description) {
+            $description = WebformOptionsHelper::getOptionDescription($value, $element['#options'], $options_description);
+            if ($description) {
+              return MailFormatHelper::htmlToText($description);
+            }
+          }
+        }
+        return '';
 
-    if ($format === 'raw') {
-      return $value;
-    }
+      case 'value':
+      default:
+        if (isset($element['#options'])) {
+          $options_description = $this->hasProperty('options_description_display');
+          $value = WebformOptionsHelper::getOptionText($value, $element['#options'], $options_description);
+        }
 
-    if (isset($element['#options'])) {
-      $flattened_options = OptGroup::flattenOptions($element['#options']);
-      $options_description = $this->hasProperty('options_description_display');
-      $value = WebformOptionsHelper::getOptionText($value, $flattened_options, $options_description);
-    }
+        $options += ['prefixing' => TRUE];
+        if ($options['prefixing']) {
+          if (isset($element['#field_prefix'])) {
+            $value = strip_tags($element['#field_prefix']) . $value;
+          }
+          if (isset($element['#field_suffix'])) {
+            $value .= strip_tags($element['#field_suffix']);
+          }
+        }
 
-    $options += ['prefixing' => TRUE];
-    $options += ['prefixing' => TRUE];
-    if ($options['prefixing']) {
-      if (isset($element['#field_prefix'])) {
-        $value = strip_tags($element['#field_prefix']) . $value;
-      }
-      if (isset($element['#field_suffix'])) {
-        $value .= strip_tags($element['#field_suffix']);
-      }
+        return $value;
     }
+  }
 
-    return $value;
+  /**
+   * {@inheritdoc}
+   */
+  public function getItemFormats() {
+    return parent::getItemFormats() + [
+      'description' => $this->t('Option description'),
+    ];
   }
 
   /**
@@ -857,6 +940,25 @@ abstract class OptionsBase extends WebformElementBase {
       ];
     }
 
+    $form['options_properties'] = [
+      '#type' => 'details',
+      '#title' => $this->t('Options (custom) properties'),
+      '#access' => $this->currentUser->hasPermission('edit webform source'),
+    ];
+    $form['options_properties']['options__properties'] = [
+      '#type' => 'webform_codemirror',
+      '#mode' => 'yaml',
+      '#title' => $this->t('Options properties'),
+      '#description' => $this->t("Custom options properties must include the 'Option value' followed by option (element) properties prepended with a hash (#) character.") .
+        "<pre>option_value:
+  '#wrapper_attributes': 
+    class:
+      - disabled
+  '#disabled': true</pre>" .
+        '<br /><br />' .
+        $this->t('These properties and callbacks are not allowed: @properties', ['@properties' => WebformArrayHelper::toString(WebformArrayHelper::addPrefix(WebformElementHelper::$ignoredProperties))]),
+    ];
+
     return $form;
   }
 
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/Radios.php b/modules/contrib/webform/src/Plugin/WebformElement/Radios.php
index f7e42142..c702815e 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/Radios.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/Radios.php
@@ -25,6 +25,7 @@ class Radios extends OptionsBase {
       // Form display.
       'options_display' => 'one_column',
       'options_description_display' => 'description',
+      'options__properties' => [],
       // iCheck settings.
       'icheck' => '',
       // Wrapper.
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/Select.php b/modules/contrib/webform/src/Plugin/WebformElement/Select.php
index 709b6c97..95909c68 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/Select.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/Select.php
@@ -114,6 +114,9 @@ class Select extends OptionsBase {
       $element['#attributes']['data-limit'] = $element['#multiple'];
     }
 
+    // Attach library which allows options to be disabled via JavaScript.
+    $element['#attached']['library'][] = 'webform/webform.element.select';
+
     parent::prepare($element, $webform_submission);
   }
 
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/Telephone.php b/modules/contrib/webform/src/Plugin/WebformElement/Telephone.php
index d4d04913..42750a92 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/Telephone.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/Telephone.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform\Plugin\WebformElement;
 
+use Drupal\Component\Serialization\Json;
 use Drupal\webform\Element\WebformMessage as WebformMessageElement;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Locale\CountryManager;
@@ -31,6 +32,7 @@ class Telephone extends TextBase {
         'multiple' => FALSE,
         'international' => FALSE,
         'international_initial_country' => '',
+        'international_preferred_countries' => '',
       ] + parent::getDefaultProperties();
 
     // Add support for telephone_validation.module.
@@ -54,11 +56,16 @@ class Telephone extends TextBase {
     // Add international library and classes.
     if (!empty($element['#international']) && $this->librariesManager->isIncluded('jquery.intl-tel-input')) {
       $element['#attached']['library'][] = 'webform/webform.element.telephone';
+
       $element['#attributes']['class'][] = 'js-webform-telephone-international';
       $element['#attributes']['class'][] = 'webform-webform-telephone-international';
+
       if (!empty($element['#international_initial_country'])) {
         $element['#attributes']['data-webform-telephone-international-initial-country'] = $element['#international_initial_country'];
       }
+      if (!empty($element['#international_preferred_countries'])) {
+        $element['#attributes']['data-webform-telephone-international-preferred-countries'] = Json::encode($element['#international_preferred_countries']);
+      }
 
       // The utilsScript is fetched when the page has finished loading to
       // prevent blocking.
@@ -78,7 +85,7 @@ class Telephone extends TextBase {
     // Add support for telephone_validation.module.
     if (\Drupal::moduleHandler()->moduleExists('telephone_validation')) {
       $format = $this->getElementProperty($element, 'telephone_validation_format');
-      if ($format === \libphonenumber\PhoneNumberFormat::NATIONAL) {
+      if ($format == \libphonenumber\PhoneNumberFormat::NATIONAL) {
         $country = (array) $this->getElementProperty($element, 'telephone_validation_country');
       }
       else {
@@ -121,10 +128,24 @@ class Telephone extends TextBase {
         'visible' => [':input[name="properties[international]"]' => ['checked' => TRUE]],
       ],
     ];
+    $form['telephone']['international_preferred_countries'] = [
+      '#title' => $this->t('Preferred countries'),
+      '#type' => 'select',
+      '#options' => CountryManager::getStandardList(),
+      '#description' => t('Specify the countries to appear at the top of the list.'),
+      '#select2' => TRUE,
+      '#multiple' => TRUE,
+      '#states' => [
+        'visible' => [':input[name="properties[international]"]' => ['checked' => TRUE]],
+      ],
+    ];
+    $this->elementManager->processElement($form['telephone']['international_preferred_countries']);
+
     if ($this->librariesManager->isExcluded('jquery.intl-tel-input')) {
       $form['telephone']['#access'] = FALSE;
       $form['telephone']['international']['#access'] = FALSE;
       $form['telephone']['international_initial_country']['#access'] = FALSE;
+      $form['telephone']['international_preferred_countries']['#access'] = FALSE;
     }
 
     // Add support for telephone_validation.module.
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/TextBase.php b/modules/contrib/webform/src/Plugin/WebformElement/TextBase.php
index 60a65ecb..b853daa6 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/TextBase.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/TextBase.php
@@ -161,6 +161,7 @@ abstract class TextBase extends WebformElementBase {
       '#title' => $this->t('Pattern'),
       '#description' => $this->t('A <a href=":href">regular expression</a> that the element\'s value is checked against.', [':href' => 'http://www.w3schools.com/js/js_regexp.asp']),
       '#value__title' => $this->t('Pattern regular expression'),
+      '#value__maxlength' => 255,
     ];
     $form['validation']['pattern_error'] = [
       '#type' => 'textfield',
@@ -251,8 +252,8 @@ abstract class TextBase extends WebformElementBase {
    *
    * @param array $element
    *   An element.
-   * @param $value
-   *   A value
+   * @param string $value
+   *   A value.
    *
    * @return bool
    *   TRUE if an element's value is the input mask's default value.
@@ -336,7 +337,7 @@ abstract class TextBase extends WebformElementBase {
    *   example, and patterh.
    */
   protected function getInputMasks() {
-    return [
+    $input_masks = [
       "'alias': 'currency'" => [
         'title' => $this->t('Currency'),
         'example' => '$ 9.99',
@@ -398,10 +399,21 @@ abstract class TextBase extends WebformElementBase {
         'example' => 'UPPERCASE',
       ],
       "'casing': 'lower'" => [
-        'title' => $this->t('Lowercase '),
+        'title' => $this->t('Lowercase'),
         'example' => 'lowercase',
       ],
     ];
+
+    // Get input masks.
+    $modules = \Drupal::moduleHandler()->getImplementations('webform_element_input_masks');
+    foreach ($modules as $module) {
+      $input_masks += \Drupal::moduleHandler()->invoke($module, 'webform_element_input_masks');
+    }
+
+    // Alter input masks.
+    \Drupal::moduleHandler()->alter('webform_element_input_masks', $input_masks);
+
+    return $input_masks;
   }
 
   /**
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/TextFormat.php b/modules/contrib/webform/src/Plugin/WebformElement/TextFormat.php
index 4da384b6..192ef142 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/TextFormat.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/TextFormat.php
@@ -19,6 +19,7 @@ use Drupal\webform\WebformSubmissionInterface;
  *   label = @Translation("Text format"),
  *   description = @Translation("Provides a text format form element."),
  *   category = @Translation("Advanced elements"),
+ *   states_wrapper = TRUE,
  *   composite = TRUE,
  *   multiline = TRUE,
  * )
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformEmailConfirm.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformEmailConfirm.php
index 31ff5120..efe989b2 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformEmailConfirm.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformEmailConfirm.php
@@ -28,6 +28,7 @@ class WebformEmailConfirm extends Email {
       'confirm__title' => '',
       'confirm__description' => '',
       'confirm__placeholder' => '',
+      'flexbox' => '',
       // Wrapper.
       'wrapper_type' => 'fieldset',
     ];
@@ -43,9 +44,17 @@ class WebformEmailConfirm extends Email {
    */
   public function prepare(array &$element, WebformSubmissionInterface $webform_submission = NULL) {
     parent::prepare($element, $webform_submission);
+    // Set confirm description.
     if (isset($element['#confirm__description'])) {
       $element['#confirm__description'] = WebformHtmlEditor::checkMarkup($element['#confirm__description']);
     }
+
+    // If #flexbox is not set or an empty string, determine if the
+    // webform is using a flexbox layout.
+    if ((!isset($element['#flexbox']) || $element['#flexbox'] === '') && $webform_submission) {
+      $webform = $webform_submission->getWebform();
+      $element['#flexbox'] = $webform->hasFlexboxLayout();
+    }
   }
 
   /**
@@ -69,12 +78,24 @@ class WebformEmailConfirm extends Email {
       '#type' => 'textfield',
       '#title' => $this->t('Email confirm placeholder'),
     ];
+    $form['email_confirm']['flexbox'] = [
+      '#type' => 'select',
+      '#title' => $this->t('Use Flexbox'),
+      '#description' => $this->t("If 'Automatic' is selected Flexbox layout will only be used if a 'Flexbox layout' element is included in the webform."),
+      '#options' => [
+        '' => $this->t('Automatic'),
+        0 => $this->t('No'),
+        1 => $this->t('Yes'),
+      ],
+    ];
 
-    // Remove unsupported title and description display from composite elements.
-    if ($this->isComposite()) {
-      unset($form['form']['display_container']['title_display']['#options']['inline']);
-      unset($form['form']['display_container']['description_display']['#options']['tooltip']);
-    }
+    $form['form']['display_container']['title_display']['#options'] = [
+      'before' => $this->t('Before'),
+      'after' => $this->t('After'),
+      'inline' => $this->t('Inline'),
+      'invisible' => $this->t('Invisible'),
+      'none' => $this->t('None'),
+    ];
 
     return $form;
   }
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityCheckboxes.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityCheckboxes.php
index c4d1bd9a..a7316fa3 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityCheckboxes.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityCheckboxes.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\webform\Plugin\WebformElement;
 
-use Drupal\webform\Plugin\WebformElementEntityReferenceInterface;
+use Drupal\webform\Plugin\WebformElementEntityOptionsInterface;
 
 /**
  * Provides a 'webform_entity_checkboxes' element.
@@ -14,7 +14,7 @@ use Drupal\webform\Plugin\WebformElementEntityReferenceInterface;
  *   category = @Translation("Entity reference elements"),
  * )
  */
-class WebformEntityCheckboxes extends Checkboxes implements WebformElementEntityReferenceInterface {
+class WebformEntityCheckboxes extends Checkboxes implements WebformElementEntityOptionsInterface {
 
   use WebformEntityReferenceTrait;
   use WebformEntityOptionsTrait;
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityRadios.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityRadios.php
index 48889c8b..913b4549 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityRadios.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityRadios.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\webform\Plugin\WebformElement;
 
-use Drupal\webform\Plugin\WebformElementEntityReferenceInterface;
+use Drupal\webform\Plugin\WebformElementEntityOptionsInterface;
 
 /**
  * Provides a 'webform_entity_radios' element.
@@ -14,7 +14,7 @@ use Drupal\webform\Plugin\WebformElementEntityReferenceInterface;
  *   category = @Translation("Entity reference elements"),
  * )
  */
-class WebformEntityRadios extends Radios implements WebformElementEntityReferenceInterface {
+class WebformEntityRadios extends Radios implements WebformElementEntityOptionsInterface {
 
   use WebformEntityReferenceTrait;
   use WebformEntityOptionsTrait;
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityReferenceTrait.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityReferenceTrait.php
index a54de5d5..97eb7612 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityReferenceTrait.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntityReferenceTrait.php
@@ -8,6 +8,7 @@ use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Url as UrlGenerator;
 use Drupal\webform\Element\WebformEntityTrait;
+use Drupal\webform\Entity\WebformSubmission;
 use Drupal\webform\WebformInterface;
 use Drupal\webform\WebformSubmissionInterface;
 
@@ -308,7 +309,12 @@ trait WebformEntityReferenceTrait {
               break;
 
             case 'url':
-              $record[] = $entity->toUrl('canonical', ['absolute' => TRUE])->toString();
+              if ($entity->hasLinkTemplate('canonical')) {
+                $record[] = $entity->toUrl('canonical', ['absolute' => TRUE])->toString();
+              }
+              else {
+                $record[] = '';
+              }
               break;
           }
         }
@@ -349,6 +355,16 @@ trait WebformEntityReferenceTrait {
    *   An array of settings used to limit and randomize options.
    */
   protected function setOptions(array &$element, array $settings = []) {
+    // Add the webform submission to entity reference selection settings.
+    if (!isset($settings['webform_submission']) && !empty($element['#webform_submission'])) {
+      $settings['webform_submission'] = WebformSubmission::load($element['#webform_submission']);
+    }
+
+    // Replace tokens element just in case entity selection settings use tokens.
+    if (isset($settings['webform_submission'])) {
+      $this->replaceTokens($element, $settings['webform_submission']);
+    }
+
     WebformEntityTrait::setOptions($element, $settings);
   }
 
@@ -598,6 +614,11 @@ trait WebformEntityReferenceTrait {
         ],
       ];
     }
+    // Disable tags in multiple is disabled.
+    if (!empty($form['element']['multiple']['#disabled'])) {
+      $form['element']['tags']['#disabled'] = $form['element']['multiple']['#disabled'];
+      $form['element']['tags']['#description'] = $form['element']['multiple']['#description'];
+    }
 
     return $form;
   }
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntitySelect.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntitySelect.php
index df0ab28a..b66e69c4 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformEntitySelect.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformEntitySelect.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\webform\Plugin\WebformElement;
 
-use Drupal\webform\Plugin\WebformElementEntityReferenceInterface;
+use Drupal\webform\Plugin\WebformElementEntityOptionsInterface;
 
 /**
  * Provides a 'webform_entity_select' element.
@@ -14,7 +14,7 @@ use Drupal\webform\Plugin\WebformElementEntityReferenceInterface;
  *   category = @Translation("Entity reference elements"),
  * )
  */
-class WebformEntitySelect extends Select implements WebformElementEntityReferenceInterface {
+class WebformEntitySelect extends Select implements WebformElementEntityOptionsInterface {
 
   use WebformEntityReferenceTrait;
   use WebformEntityOptionsTrait;
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformImageFile.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformImageFile.php
index bb03aead..0ffeb497 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformImageFile.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformImageFile.php
@@ -25,10 +25,14 @@ class WebformImageFile extends WebformManagedFileBase {
    * {@inheritdoc}
    */
   public function getDefaultProperties() {
-    return parent::getDefaultProperties() + [
+    $properties = parent::getDefaultProperties() + [
       'max_resolution' => '',
       'min_resolution' => '',
     ];
+    if (\Drupal::moduleHandler()->moduleExists('image')) {
+      $properties['attachment_image_style'] = '';
+    }
+    return $properties;
   }
 
   /**
@@ -117,26 +121,70 @@ class WebformImageFile extends WebformManagedFileBase {
       '#type' => 'fieldset',
       '#title' => $this->t('Image settings'),
     ];
-    $form['image'] = [
-      '#type' => 'fieldset',
-      '#title' => $this->t('Image settings'),
-    ];
     $form['image']['max_resolution'] = [
       '#type' => 'webform_image_resolution',
-      '#title' => t('Maximum image resolution'),
-      '#description' => t('The maximum allowed image size expressed as WIDTH×HEIGHT (e.g. 640×480). Leave blank for no restriction. If a larger image is uploaded, it will be resized to reflect the given width and height. Resizing images on upload will cause the loss of <a href="http://wikipedia.org/wiki/Exchangeable_image_file_format">EXIF data</a> in the image.'),
-      '#width_title' => t('Maximum width'),
-      '#height_title' => t('Maximum height'),
+      '#title' => $this->t('Maximum image resolution'),
+      '#description' => $this->t('The maximum allowed image size expressed as WIDTH×HEIGHT (e.g. 640×480). Leave blank for no restriction. If a larger image is uploaded, it will be resized to reflect the given width and height. Resizing images on upload will cause the loss of <a href="http://wikipedia.org/wiki/Exchangeable_image_file_format">EXIF data</a> in the image.'),
+      '#width_title' => $this->t('Maximum width'),
+      '#height_title' => $this->t('Maximum height'),
     ];
     $form['image']['min_resolution'] = [
       '#type' => 'webform_image_resolution',
-      '#title' => t('Minimum image resolution'),
-      '#description' => t('The minimum allowed image size expressed as WIDTH×HEIGHT (e.g. 640×480). Leave blank for no restriction. If a smaller image is uploaded, it will be rejected.'),
-      '#width_title' => t('Minimum width'),
-      '#height_title' => t('Minimum height'),
+      '#title' => $this->t('Minimum image resolution'),
+      '#description' => $this->t('The minimum allowed image size expressed as WIDTH×HEIGHT (e.g. 640×480). Leave blank for no restriction. If a smaller image is uploaded, it will be rejected.'),
+      '#width_title' => $this->t('Minimum width'),
+      '#height_title' => $this->t('Minimum height'),
     ];
-
+    if (\Drupal::moduleHandler()->moduleExists('image')) {
+      $form['image']['attachment_image_style'] = [
+        '#type' => 'select',
+        '#options' => image_style_options(),
+        '#title' => $this->t('Attachment image style'),
+        '#description' => $this->t('Use this to send image with image style when sending files as attachment in an email handler.'),
+      ];
+    }
     return $form;
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function getAttachments(array $element, WebformSubmissionInterface $webform_submission, array $options = []) {
+    $attachments = [];
+
+    /** @var \Drupal\image\ImageStyleInterface $image_style */
+    $image_style = NULL;
+    $attachment_image_style = $this->getElementProperty($element, 'attachment_image_style');
+    if ($attachment_image_style && \Drupal::moduleHandler()->moduleExists('image')) {
+      $image_style = $this->entityTypeManager
+        ->getStorage('image_style')
+        ->load($attachment_image_style);
+    }
+
+    $files = $this->getTargetEntities($element, $webform_submission, $options) ?: [];
+    foreach ($files as $file) {
+      if ($image_style) {
+        $file_uri = $image_style->buildUri($file->getFileUri());
+        if (!file_exists($file_uri)) {
+          $image_style->createDerivative($file->getFileUri(), $file_uri);
+        }
+        $file_url = $image_style->buildUrl($file->getFileUri());
+      }
+      else {
+        $file_uri = $file->getFileUri();
+        $file_url = file_create_url($file->getFileUri());
+      }
+      $attachments[] = [
+        'filecontent' => file_get_contents($file_uri),
+        'filename' => $file->getFilename(),
+        'filemime' => $file->getMimeType(),
+        'filepath' => \Drupal::service('file_system')->realpath($file_uri),
+        // URL is used when debugging or resending messages.
+        // @see \Drupal\webform\Plugin\WebformHandler\EmailWebformHandler::buildAttachments
+        '_fileurl' => $file_url,
+      ];
+    }
+    return $attachments;
+  }
+
 }
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformManagedFileBase.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformManagedFileBase.php
index c65e830e..c716202e 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformManagedFileBase.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformManagedFileBase.php
@@ -294,6 +294,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
     // Upload validators.
     $element['#upload_validators']['file_validate_size'] = [$this->getMaxFileSize($element)];
     $element['#upload_validators']['file_validate_extensions'] = [$this->getFileExtensions($element)];
+    $element['#upload_validators']['webform_file_validate_name_length'] = [];
 
     // Add file upload help to the element as #description, #help, or #more.
     // Copy upload validator so that we can add webform's file limit to
@@ -371,6 +372,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
 
     $format = $this->getItemFormat($element);
     switch ($format) {
+      case 'basename':
       case 'extension':
       case 'data':
       case 'id':
@@ -428,6 +430,11 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
       case 'name':
         return $file->getFilename();
 
+      case 'basename':
+        $filename = $file->getFilename();
+        $extension = pathinfo($filename, PATHINFO_EXTENSION);
+        return substr(pathinfo($filename, PATHINFO_BASENAME), 0, -strlen(".$extension"));
+
       case 'size':
         return $file->getSize();
 
@@ -458,6 +465,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
       'link' => $this->t('Link'),
       'url' => $this->t('URL'),
       'name' => $this->t('File name'),
+      'basename' => $this->t('File base name (no extension)'),
       'id' => $this->t('File ID'),
       'mime' => $this->t('File mime type'),
       'size' => $this->t('File size (Bytes)'),
@@ -768,7 +776,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
       $message = t('%title can only hold @max values but there were @count uploaded. The following files have been omitted as a result: %list.', $args);
       \Drupal::messenger()->addWarning($message);
     }
-    if (!empty($element['#multiple'] && !empty($element['#files']))
+    if (!empty($element['#multiple']) && !empty($element['#files'])
       && (count($element['#files']) === $element['#multiple'])) {
       $element['upload']['#access'] = FALSE;
       $element['upload_button']['#access'] = FALSE;
@@ -1067,6 +1075,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
       '#element' => [
         '#type' => 'textfield',
         '#title' => $this->t('File name pattern'),
+        '#description' => $this->t('File names combined with their full URI can not exceed 255 characters. File names that exceed this limit will be truncated.'),
         '#maxlength' => NULL,
       ],
     ];
@@ -1254,6 +1263,7 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
     $destination_folder = $this->fileSystem->dirname($file->getFileUri());
     $destination_filename = $file->getFilename();
     $destination_extension = pathinfo($destination_filename, PATHINFO_EXTENSION);
+    $destination_basename = substr(pathinfo($destination_filename, PATHINFO_BASENAME), 0, -strlen(".$destination_extension"));
 
     // Replace /_sid_/ token with the submission id.
     if (strpos($destination_folder, '/_sid_')) {
@@ -1261,9 +1271,9 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
       file_prepare_directory($destination_folder, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
     }
 
-    // Replace tokens in filename if we are instructed so.
+    // Replace tokens in file name.
     if (isset($element['#file_name']) && $element['#file_name']) {
-      $destination_filename = $this->tokenManager->replace($element['#file_name'], $webform_submission) . '.' . $destination_extension;
+      $destination_basename = $this->tokenManager->replace($element['#file_name'], $webform_submission);
     }
 
     // Sanitize filename.
@@ -1272,7 +1282,6 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
     if (!empty($element['#sanitize'])) {
       $destination_extension = mb_strtolower($destination_extension);
 
-      $destination_basename = substr(pathinfo($destination_filename, PATHINFO_BASENAME), 0, -strlen(".$destination_extension"));
       $destination_basename = mb_strtolower($destination_basename);
       $destination_basename = $this->transliteration->transliterate($destination_basename, $this->languageManager->getCurrentLanguage()->getId(), '-');
       $destination_basename = preg_replace('([^\w\s\d\-_~,;:\[\]\(\].]|[\.]{2,})', '', $destination_basename);
@@ -1291,11 +1300,23 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
           $destination_basename = $element['#type'];
         }
       }
-
-      $destination_filename = $destination_basename . '.' . $destination_extension;
     }
 
-    return $destination_folder . '/' . $destination_filename;
+    // Make sure $destination_uri does not exceed 250 + _01 character limit for
+    // the 'file_managed' table uri column.
+    // @see file_validate_name_length()
+    // @see https://drupal.stackexchange.com/questions/36760/overcoming-255-character-uri-limit-for-files-managed
+    $filename_maxlength = 250;
+    // Subtract the destination's folder length.
+    $filename_maxlength -= mb_strlen($destination_folder);
+    // Subtract the destination's extension length.
+    $filename_maxlength -= mb_strlen($destination_extension);
+    // Subtract the directory's forward slash and the extension's period.
+    $filename_maxlength -= 2;
+    // Truncate the base name.
+    $destination_basename = mb_strimwidth($destination_basename, 0, $filename_maxlength);
+
+    return $destination_folder . '/' . $destination_basename . '.' . $destination_extension;
   }
 
   /**
@@ -1428,10 +1449,12 @@ abstract class WebformManagedFileBase extends WebformElementBase implements Webf
         'filecontent' => file_get_contents($file->getFileUri()),
         'filename' => $file->getFilename(),
         'filemime' => $file->getMimeType(),
-        'filepath' => \Drupal::service('file_system')->realpath($file->getFileUri()),
+        // File URIs that are not supportted return FALSE, when this happens
+        // still use the file's URI as the file's path.
+        'filepath' => \Drupal::service('file_system')->realpath($file->getFileUri()) ?: $file->getFileUri(),
         // URI is used when debugging or resending messages.
         // @see \Drupal\webform\Plugin\WebformHandler\EmailWebformHandler::buildAttachments
-        '_uri' => file_create_url($file->getFileUri()),
+        '_fileurl' => file_create_url($file->getFileUri()),
       ];
     }
     return $attachments;
diff --git a/modules/contrib/webform/src/Plugin/WebformElement/WebformSame.php b/modules/contrib/webform/src/Plugin/WebformElement/WebformSame.php
index 4e866e0a..b5538f93 100644
--- a/modules/contrib/webform/src/Plugin/WebformElement/WebformSame.php
+++ b/modules/contrib/webform/src/Plugin/WebformElement/WebformSame.php
@@ -125,6 +125,10 @@ class WebformSame extends Checkbox {
    * {@inheritdoc}
    */
   public function alterForm(array &$element, array &$form, FormStateInterface $form_state) {
+    if (!isset($element['#source']) || !isset($element['#destination'])) {
+      return;
+    }
+
     // Get source element.
     $source = $element['#source'];
     $source_element = WebformElementHelper::getElement($form, $source);
diff --git a/modules/contrib/webform/src/Plugin/WebformElementBase.php b/modules/contrib/webform/src/Plugin/WebformElementBase.php
index 87bc5e9b..adf13ece 100644
--- a/modules/contrib/webform/src/Plugin/WebformElementBase.php
+++ b/modules/contrib/webform/src/Plugin/WebformElementBase.php
@@ -5,6 +5,7 @@ namespace Drupal\webform\Plugin;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\Xss;
+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -21,7 +22,6 @@ use Drupal\Core\Url;
 use Drupal\webform\Element\WebformCompositeFormElementTrait;
 use Drupal\webform\Element\WebformHtmlEditor;
 use Drupal\webform\Element\WebformMessage;
-use Drupal\webform\Entity\Webform;
 use Drupal\webform\Entity\WebformOptions;
 use Drupal\webform\Plugin\WebformElement\Checkbox;
 use Drupal\webform\Plugin\WebformElement\Checkboxes;
@@ -56,6 +56,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
   use StringTranslationTrait;
   use MessengerTrait;
   use WebformCompositeFormElementTrait;
+  use WebformEntityInjectionTrait;
 
   /**
    * A logger instance.
@@ -257,6 +258,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
       'multiple__add_more' => TRUE,
       'multiple__add_more_items' => 1,
       'multiple__add_more_button_label' => (string) $this->t('Add'),
+      'multiple__add_more_input' => TRUE,
       'multiple__add_more_input_label' => (string) $this->t('more items'),
       'multiple__no_items_message' => (string) $this->t('No items entered. Please add items below.'),
       'multiple__sorting' => TRUE,
@@ -394,14 +396,9 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
   /****************************************************************************/
 
   /**
-   * Get the Webform element's form element class definition.
-   *
-   * We use the plugin's base id here to support plugin derivatives.
-   *
-   * @return string
-   *   A form element class definition.
+   * {@inheritdoc}
    */
-  protected function getFormElementClassDefinition() {
+  public function getFormElementClassDefinition() {
     $definition = $this->elementInfo->getDefinition($this->getBaseId());
     return $definition['class'];
   }
@@ -682,6 +679,9 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
 
       // Apply element specific access rules.
       $operation = ($webform_submission->isCompleted()) ? 'update' : 'create';
+      // Make sure the webform and submission is set before
+      // checking access rules.
+      $this->setEntities($webform_submission);
       $element['#access'] = $this->checkAccessRules($operation, $element);
     }
 
@@ -728,7 +728,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
       '#multiple__no_items_message',
     ];
     foreach ($markup_properties as $markup_property) {
-      if (isset($element[$markup_property])) {
+      if (isset($element[$markup_property]) && !is_array($element[$markup_property])) {
         $element[$markup_property] = WebformHtmlEditor::checkMarkup($element[$markup_property]);
       }
     }
@@ -829,13 +829,16 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
     $this->prepareWrapper($element);
 
     // Set hidden element #after_build handler.
+    $this->setElementDefaultCallback($element, 'after_build');
     $element['#after_build'][] = [get_class($this), 'hiddenElementAfterBuild'];
   }
 
   /**
    * {@inheritdoc}
    */
-  public function alterForm(array &$element, array &$form, FormStateInterface $form_state) { }
+  public function alterForm(array &$element, array &$form, FormStateInterface $form_state) {
+    // Do nothing.
+  }
 
   /**
    * Webform element #after_build callback.
@@ -862,23 +865,48 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
       return FALSE;
     }
 
-    // Get the current user.
+    // Get the current user, webform, and webform submission.
     $account = $account ?: $this->currentUser;
+    $webform = $this->getWebform();
+    $webform_submission = $this->getWebformSubmission();
+
+    // If webform is missing, throw an exception.
+    if (!$webform) {
+      throw new \Exception("Webform entity is required to check and element's access (rules).");
+    }
 
     // If #private, check that the current user can 'view any submission'.
-    if (!empty($element['#private'])) {
-      // If #webform is missing, block access to the element.
-      if (empty($element['#webform'])) {
-        return FALSE;
-      }
-      // Check 'submission_view_any' access to the element's associated webform.
-      $webform = Webform::load($element['#webform']);
-      if (!$webform->access('submission_view_any', $account)) {
-        return FALSE;
-      }
+    if (!empty($element['#private']) && !$webform->access('submission_view_any', $account)) {
+      return FALSE;
+    }
+
+    // Check webform and other modules access results.
+    $access_result = $this->checkAccessRule($element, $operation, $account)
+      ? AccessResult::allowed()
+      : AccessResult::neutral();
+
+
+    // Allow webform handlers to adjust the access and/or directly set an
+    // element's #access to FALSE.
+    $handler_result = $webform->invokeHandlers('accessElement', $element, $operation, $account, $webform_submission);
+    $access_result = $access_result->orIf($handler_result);
+
+    // Allow modules to adjust the element's access.
+    $context = [
+      'webform' => $webform,
+      'webform_submission' => $webform_submission,
+    ];
+    $modules = \Drupal::moduleHandler()
+      ->getImplementations('webform_element_access');
+    foreach ($modules as $module) {
+      $hook = $module . '_webform_element_access';
+      $hook_result = $hook($operation, $element, $account, $context);
+      $access_result = $access_result->orIf($hook_result);
     }
 
-    return $this->checkAccessRule($element, $operation, $account);
+    // Grant access as provided by webform, webform handler(s) and/or
+    // hook_webform_element_access() implementation.
+    return $access_result->isAllowed();
   }
 
   /**
@@ -897,7 +925,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
    * @see \Drupal\webform\Entity\Webform::checkAccessRule
    */
   protected function checkAccessRule(array $element, $operation, AccountInterface $account) {
-    // If no access rules are set return TRUE.
+    // If no access rules are set return NULL (no opinion).
     // @see \Drupal\webform\Plugin\WebformElementBase::getDefaultBaseProperties
     if (!isset($element['#access_' . $operation . '_roles'])
       && !isset($element['#access_' . $operation . '_users'])
@@ -2330,6 +2358,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
         'after' => $this->t('After'),
         'inline' => $this->t('Inline'),
         'invisible' => $this->t('Invisible'),
+        'none' => $this->t('None'),
       ],
       '#description' => $this->t('Determines the placement of the title.'),
     ];
@@ -2362,6 +2391,21 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
       ],
       '#description' => $this->t('Determines the placement of the help tooltip.'),
     ];
+    if ($this->hasProperty('title_display')) {
+      $form['form']['title_display_message'] = [
+        '#type' => 'webform_message',
+        '#message_type' => 'warning',
+        '#message_message' => $this->t("Please note: Settings the element's title display to 'none' means the title will not be rendered or accessible to screenreaders"),
+        '#message_close' => TRUE,
+        '#message_storage' => WebformMessage::STORAGE_LOCAL,
+        '#access' => TRUE,
+        '#states' => [
+          'visible' => [
+            ':input[name="properties[title_display]"]' => ['value' => 'none'],
+          ],
+        ],
+      ];
+    }
 
     // Remove unsupported title and description display from composite elements.
     if ($this->isComposite()) {
@@ -2768,7 +2812,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
     ];
     $form['multiple']['multiple__add_more'] = [
       '#type' => 'checkbox',
-      '#title' => $this->t('Allows users to add more items'),
+      '#title' => $this->t('Allow users to add more items'),
       '#description' => $this->t('If checked, an add more input will be added below the multiple values.'),
       '#return_value' => TRUE,
     ];
@@ -2780,6 +2824,12 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
         ],
       ],
     ];
+    $form['multiple']['multiple__add_more_container']['multiple__add_more_input'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Allow users to input the number of items to be added.'),
+      '#description' => $this->t('If checked, users will be able to input the number of items to be added.'),
+      '#return_value' => TRUE,
+    ];
     $form['multiple']['multiple__add_more_container']['multiple__add_more_button_label'] = [
       '#type' => 'textfield',
       '#title' => $this->t('Add more button label'),
@@ -2789,11 +2839,11 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
       '#type' => 'textfield',
       '#title' => $this->t('Add more input label'),
       '#description' => $this->t('This is used as the add more items input label for this webform element when displaying multiple values.'),
-    ];
-    $form['multiple']['multiple__add_more_container']['multiple__add_more_button_label'] = [
-      '#type' => 'textfield',
-      '#title' => $this->t('Add more button label'),
-      '#description' => $this->t('This is used as the add more items button label for this webform element when displaying multiple values.'),
+      '#states' => [
+        'visible' => [
+          ':input[name="properties[multiple__add_more_input]"]' => ['checked' => TRUE],
+        ],
+      ],
     ];
     $form['multiple']['multiple__add_more_container']['multiple__add_more_items'] = [
       '#type' => 'number',
@@ -3265,6 +3315,7 @@ class WebformElementBase extends PluginBase implements WebformElementInterface {
           'summary_attributes',
           'display',
           'admin',
+          'options_properties',
           'custom',
         ],
         'weight' => 20,
diff --git a/modules/contrib/webform/src/Plugin/WebformElementInterface.php b/modules/contrib/webform/src/Plugin/WebformElementInterface.php
index d9cd64e9..0321c6c0 100644
--- a/modules/contrib/webform/src/Plugin/WebformElementInterface.php
+++ b/modules/contrib/webform/src/Plugin/WebformElementInterface.php
@@ -20,7 +20,7 @@ use Drupal\webform\WebformSubmissionInterface;
  * @see \Drupal\webform\Plugin\WebformElementManagerInterface
  * @see plugin_api
  */
-interface WebformElementInterface extends PluginInspectionInterface, PluginFormInterface, ContainerFactoryPluginInterface {
+interface WebformElementInterface extends PluginInspectionInterface, PluginFormInterface, ContainerFactoryPluginInterface, WebformEntityInjectionInterface {
 
   /****************************************************************************/
   // Property methods.
@@ -83,6 +83,16 @@ interface WebformElementInterface extends PluginInspectionInterface, PluginFormI
   // Definition and meta data methods.
   /****************************************************************************/
 
+  /**
+   * Get the Webform element's form element class definition.
+   *
+   * We use the plugin's base id here to support plugin derivatives.
+   *
+   * @return string
+   *   A form element class definition.
+   */
+  public function getFormElementClassDefinition();
+
   /**
    * Get the URL for the element's API documentation.
    *
@@ -358,6 +368,10 @@ interface WebformElementInterface extends PluginInspectionInterface, PluginFormI
    * @return bool
    *   TRUE is the element can be accessed by the user.
    *
+   * @throws |\Exception
+   *   Throws exception when the webform entity has not been set for
+   *   the element.
+   *
    * @see \Drupal\webform\WebformAccessRulesManagerInterface::checkWebformAccess
    */
   public function checkAccessRules($operation, array $element, AccountInterface $account = NULL);
@@ -873,7 +887,7 @@ interface WebformElementInterface extends PluginInspectionInterface, PluginFormI
    *
    * @return array
    *   An associative array contain the element's configuration webform without
-   *   any default values..
+   *   any default values.
    */
   public function form(array $form, FormStateInterface $form_state);
 
diff --git a/modules/contrib/webform/src/Plugin/WebformElementManager.php b/modules/contrib/webform/src/Plugin/WebformElementManager.php
index 09047dc0..318d85ec 100644
--- a/modules/contrib/webform/src/Plugin/WebformElementManager.php
+++ b/modules/contrib/webform/src/Plugin/WebformElementManager.php
@@ -5,6 +5,7 @@ namespace Drupal\webform\Plugin;
 use Drupal\Component\Plugin\FallbackPluginManagerInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -163,9 +164,11 @@ class WebformElementManager extends DefaultPluginManager implements FallbackPlug
   public function buildElement(array &$element, array $form, FormStateInterface $form_state) {
     // Get the webform submission.
     $form_object = $form_state->getFormObject();
+    /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
     $webform_submission = ($form_object instanceof WebformSubmissionForm) ? $form_object->getEntity() : NULL;
+    $webform = ($webform_submission) ? $webform_submission->getWebform() : NULL;
 
-    $element_plugin = $this->getElementInstance($element);
+    $element_plugin = $this->getElementInstance($element, $webform_submission ?: $webform);
     $element_plugin->prepare($element, $webform_submission);
     $element_plugin->finalize($element, $webform_submission);
     $element_plugin->setDefaultValue($element);
@@ -178,6 +181,11 @@ class WebformElementManager extends DefaultPluginManager implements FallbackPlug
     }
     $context = ['form' => $form];
     $this->moduleHandler->alter($hooks, $element, $form_state, $context);
+
+    // Allow handlers to alter the webform element.
+    if ($webform_submission) {
+      $webform->invokeHandlers('alterElement', $element, $form_state, $context);
+    }
   }
 
   /**
@@ -225,9 +233,20 @@ class WebformElementManager extends DefaultPluginManager implements FallbackPlug
   /**
    * {@inheritdoc}
    */
-  public function getElementInstance(array $element) {
+  public function getElementInstance(array $element, EntityInterface $entity = NULL) {
     $plugin_id = $this->getElementPluginId($element);
-    return $this->createInstance($plugin_id, $element);
+
+    /** @var \Drupal\webform\Plugin\WebformElementInterface $element_plugin */
+    $element_plugin = $this->createInstance($plugin_id, $element);
+
+    if ($entity) {
+      $element_plugin->setEntities($entity);
+    }
+    else {
+      $element_plugin->resetEntities();
+    }
+
+    return $element_plugin;
   }
 
   /**
diff --git a/modules/contrib/webform/src/Plugin/WebformElementManagerInterface.php b/modules/contrib/webform/src/Plugin/WebformElementManagerInterface.php
index 1f28da38..8839978b 100644
--- a/modules/contrib/webform/src/Plugin/WebformElementManagerInterface.php
+++ b/modules/contrib/webform/src/Plugin/WebformElementManagerInterface.php
@@ -6,6 +6,7 @@ use Drupal\Component\Plugin\CategorizingPluginManagerInterface;
 use Drupal\Component\Plugin\FallbackPluginManagerInterface;
 use Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -99,11 +100,16 @@ interface WebformElementManagerInterface extends PluginManagerInterface, CachedD
    *
    * @param array $element
    *   An associative array containing an element with a #type property.
+   * @param \Drupal\webform\WebformInterface|\Drupal\webform\WebformSubmissionInterface $entity
+   *   A webform or webform submission entity.
    *
    * @return \Drupal\webform\Plugin\WebformElementInterface
    *   A webform element plugin instance
+   *
+   * @throws \Exception
+   *   Throw exception if entity type is not a webform or webform submission.
    */
-  public function getElementInstance(array $element);
+  public function getElementInstance(array $element, EntityInterface $entity = NULL);
 
   /**
    * Gets sorted plugin definitions.
diff --git a/modules/contrib/webform/src/Plugin/WebformHandler/ActionWebformHandler.php b/modules/contrib/webform/src/Plugin/WebformHandler/ActionWebformHandler.php
index 5272b54e..d78fbfdf 100644
--- a/modules/contrib/webform/src/Plugin/WebformHandler/ActionWebformHandler.php
+++ b/modules/contrib/webform/src/Plugin/WebformHandler/ActionWebformHandler.php
@@ -260,13 +260,14 @@ class ActionWebformHandler extends WebformHandlerBase {
     $this->configuration['states'] = array_values(array_filter($this->configuration['states']));
 
     // Cleanup sticky.
-    $this->configuration['sticky'] = ($this->configuration['sticky'] === '') ? NULL : (bool) $this->configuration['sticky'];
+    if ($form_state->getValue('sticky') === '') {
+      $this->configuration['sticky'] = NULL;
+    }
 
     // Cleanup locked.
-    $this->configuration['locked'] = ($this->configuration['locked'] === '') ? NULL : (bool) $this->configuration['locked'];
-
-    // Cast debug.
-    $this->configuration['debug'] = (bool) $this->configuration['debug'];
+    if ($form_state->getValue('locked') === '') {
+      $this->configuration['locked'] = NULL;
+    }
   }
 
   /**
diff --git a/modules/contrib/webform/src/Plugin/WebformHandler/EmailWebformHandler.php b/modules/contrib/webform/src/Plugin/WebformHandler/EmailWebformHandler.php
index bb8b449f..332d1f81 100644
--- a/modules/contrib/webform/src/Plugin/WebformHandler/EmailWebformHandler.php
+++ b/modules/contrib/webform/src/Plugin/WebformHandler/EmailWebformHandler.php
@@ -180,12 +180,13 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
         $value = preg_replace('/\[webform:([^:]+)\]/', '[\1]', $value);
         $value = preg_replace('/\[webform_role:([^:]+)\]/', '[\1]', $value);
         $value = preg_replace('/\[webform_access:type:([^:]+)\]/', '[\1]', $value);
+        $value = preg_replace('/\[webform_group:role:([^:]+)\]/', '[group:\1]', $value);
+        $value = preg_replace('/\[webform_group:owner:mail\]/', '[group:owner]', $value);
         $value = preg_replace('/\[webform_submission:(?:node|source_entity|values):([^]]+)\]/', '[\1]', $value);
         $value = preg_replace('/\[webform_submission:([^]]+)\]/', '[\1]', $value);
         $value = preg_replace('/(:raw|:value)(:html)?\]/', ']', $value);
       }
     });
-
     // Set state.
     $states = [
       WebformSubmissionInterface::STATE_DRAFT_CREATED => $this->t('Draft created'),
@@ -259,6 +260,7 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
       'sender_mail' => '',
       'sender_name' => '',
       'theme_name' => '',
+      'parameters' => [],
     ];
   }
 
@@ -379,9 +381,17 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
         }
       }
 
-      // Allow 'webform_name' composite to be used a value token.
-      if ($element['#type'] === 'webform_name') {
-        $name_element_options["[webform_submission:values:$element_key:value]"] = $element_title;
+      // Element type specific tokens.
+      switch ($element['#type']) {
+        case 'webform_name':
+          // Allow 'webform_name' composite to be used a value token.
+          $name_element_options["[webform_submission:values:$element_key:value]"] = $element_title;
+          break;
+
+        case 'text_format':
+          // Allow 'text_format' composite to be used a value token.
+          $text_element_options_value["[webform_submission:values:$element_key]"] = $element_title;
+          break;
       }
 
       // Handle composite sub elements.
@@ -469,13 +479,20 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
     if ($this->moduleHandler->moduleExists('webform_access')) {
       $token_types[] = 'webform_access';
     }
+    if ($this->moduleHandler->moduleExists('webform_group')) {
+      $token_types[] = 'webform_group';
+    }
     $form['to']['token_tree_link'] = $this->buildTokenTreeElement($token_types);
 
     if (empty($roles_element_options) && $this->currentUser->hasPermission('administer webform')) {
+      $route_name = 'webform.config.handlers';
+      $route_destination = Url::fromRoute('entity.webform.handlers', ['webform' => $this->getWebform()->id()])->toString();
+      $route_options = ['query' => ['destination' => $route_destination]];
+      $t_args = [':href' => Url::fromRoute($route_name, [], $route_options)->toString()];
       $form['to']['roles_message'] = [
         '#type' => 'webform_message',
         '#message_type' => 'warning',
-        '#message_message' => $this->t('Please note: You can select which user roles can be available to receive webform emails by going to the Webform module\'s <a href=":href">admin settings</a> form.', [':href' => Url::fromRoute('webform.config.handlers')->toString()]),
+        '#message_message' => $this->t('Please note: You can select which <strong>user roles</strong> are available to receive webform emails by going to the Webform module\'s <a href=":href">admin settings</a> form.', $t_args),
         '#message_close' => TRUE,
         '#message_id' => 'webform_email_roles_message',
         '#message_storage' => WebformMessage::STORAGE_USER,
@@ -765,6 +782,14 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
       '#default_value' => $this->configuration['theme_name'],
     ];
 
+    $form['additional']['parameters'] = [
+      '#type' => 'webform_codemirror',
+      '#mode' => 'yaml',
+      '#title' => $this->t('Custom parameters'),
+      '#description' => $this->t('Enter additional custom parameters to be appended to the email message\'s parameters. Custom parameters are used by <a href=":href">email related add-on modules</a>.', [':href' => 'https://www.drupal.org/docs/8/modules/webform/webform-add-ons#mail']),
+      '#default_value' => $this->configuration['parameters'],
+    ];
+
     // Development.
     $form['development'] = [
       '#type' => 'details',
@@ -1034,7 +1059,7 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
     // Add user role email addresses to 'To', 'CC', and 'BCC'.
     // IMPORTANT: This is the only place where user email addresses can be
     // used as tokens. This prevents the webform module from being used to
-    // spam users or worse…expose user email addresses to malicious users.
+    // spam users or worse… expose user email addresses to malicious users.
     if (in_array($configuration_name, ['to', 'cc', 'bcc'])) {
       $roles = $this->configFactory->get('webform.settings')->get('mail.roles');
       $token_data = [];
@@ -1042,6 +1067,9 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
       if ($this->moduleHandler->moduleExists('webform_access')) {
         $token_data['webform_access'] = $webform_submission;
       }
+      if ($this->moduleHandler->moduleExists('webform_group')) {
+        $token_data['webform_group'] = $webform_submission;
+      }
       $emails = $this->replaceTokens($emails, $webform_submission, $token_data);
     }
 
@@ -1149,6 +1177,13 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
       unset($message['webform_submission'], $message['handler']);
     }
 
+    // Append additional custom parameters.
+    if (!empty($this->configuration['parameters'])) {
+      $message += $this->replaceTokens($this->configuration['parameters'], $webform_submission);
+    }
+    // Remove parameters.
+    unset($message['parameters']);
+
     $result = $this->mailManager->mail('webform', $key, $to, $current_langcode, $message, $from);
 
     if ($webform_submission->getWebform()->hasSubmissionLog()) {
@@ -1627,8 +1662,8 @@ class EmailWebformHandler extends WebformHandlerBase implements WebformHandlerMe
         '@filemime' => $attachment['filemime'],
         '@filesize' => format_size(mb_strlen($attachment['filecontent'])),
       ];
-      if (!empty($attachment['_uri'])) {
-        $t_args[':href'] = $attachment['_uri'];
+      if (!empty($attachment['_fileurl'])) {
+        $t_args[':href'] = $attachment['_fileurl'];
         $build[] = ['#markup' => $this->t('<strong><a href=":href">@filename</a></strong> (@filemime) - @filesize ', $t_args)];
       }
       else {
diff --git a/modules/contrib/webform/src/Plugin/WebformHandler/RemotePostWebformHandler.php b/modules/contrib/webform/src/Plugin/WebformHandler/RemotePostWebformHandler.php
index 3c60e64c..55d98d6f 100644
--- a/modules/contrib/webform/src/Plugin/WebformHandler/RemotePostWebformHandler.php
+++ b/modules/contrib/webform/src/Plugin/WebformHandler/RemotePostWebformHandler.php
@@ -408,9 +408,6 @@ class RemotePostWebformHandler extends WebformHandlerBase {
     if ($this->configuration['method'] === 'GET') {
       $this->configuration['type'] = '';
     }
-
-    // Cast debug.
-    $this->configuration['debug'] = (bool) $this->configuration['debug'];
   }
 
   /**
@@ -704,7 +701,7 @@ class RemotePostWebformHandler extends WebformHandlerBase {
    * @param string $request_type
    *   The type of remote post.
    * @param string $request_options
-   *   The requests options including the submission data..
+   *   The requests options including the submission data.
    * @param \Psr\Http\Message\ResponseInterface|null $response
    *   The response returned by the remote server.
    * @param string $type
@@ -854,7 +851,7 @@ class RemotePostWebformHandler extends WebformHandlerBase {
    * @param string $request_type
    *   The type of remote post.
    * @param string $request_options
-   *   The requests options including the submission data..
+   *   The requests options including the submission data.
    * @param \Psr\Http\Message\ResponseInterface|null $response
    *   The response returned by the remote server.
    */
diff --git a/modules/contrib/webform/src/Plugin/WebformHandlerBase.php b/modules/contrib/webform/src/Plugin/WebformHandlerBase.php
index 8b1fc801..cd6a2167 100644
--- a/modules/contrib/webform/src/Plugin/WebformHandlerBase.php
+++ b/modules/contrib/webform/src/Plugin/WebformHandlerBase.php
@@ -8,6 +8,8 @@ use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Plugin\PluginBase;
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Core\Access\AccessResult;
 use Drupal\webform\Utility\WebformElementHelper;
 use Drupal\webform\WebformInterface;
 use Drupal\webform\WebformSubmissionConditionsValidatorInterface;
@@ -138,7 +140,6 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, LoggerChannelFactoryInterface $logger_factory, ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, WebformSubmissionConditionsValidatorInterface $conditions_validator) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
-    $this->setConfiguration($configuration);
     $this->loggerFactory = $logger_factory;
     $this->configFactory = $config_factory;
     $this->submissionStorage = $entity_type_manager->getStorage('webform_submission');
@@ -147,6 +148,8 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
     // @todo Webform 8.x-6.x: Properly inject the token manager.
     // @todo Webform 8.x-6.x: Update handlers that injects the token manager.
     $this->tokenManager = \Drupal::service('webform.token_manager');
+
+    $this->setConfiguration($configuration);
   }
 
   /**
@@ -365,6 +368,13 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
     return ($this->pluginDefinition['submission'] === self::SUBMISSION_REQUIRED);
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function hasAnonymousSubmissionTracking() {
+    return FALSE;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -475,7 +485,12 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
     $values = $form_state->getValues();
     foreach ($values as $key => $value) {
       if (array_key_exists($key, $this->configuration)) {
-        $this->configuration[$key] = $value;
+        if (is_bool($this->configuration[$key])) {
+          $this->configuration[$key] = (int) $value;
+        }
+        else {
+          $this->configuration[$key] = $value;
+        }
       }
     }
   }
@@ -489,6 +504,11 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
    */
   public function alterElements(array &$elements, WebformInterface $webform) {}
 
+  /**
+   * {@inheritdoc}
+   */
+  public function alterElement(array &$element, FormStateInterface $form_state, array $context) {}
+
   /****************************************************************************/
   // Webform submission methods.
   /****************************************************************************/
@@ -561,6 +581,13 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
    */
   public function postSave(WebformSubmissionInterface $webform_submission, $update = TRUE) {}
 
+  /**
+   * {@inheritdoc}
+   */
+  public function access(WebformSubmissionInterface $webform_submission, $operation, AccountInterface $account = NULL) {
+    return AccessResult::neutral();
+  }
+
   /****************************************************************************/
   // Preprocessing methods.
   /****************************************************************************/
@@ -593,6 +620,13 @@ abstract class WebformHandlerBase extends PluginBase implements WebformHandlerIn
   // Element methods.
   /****************************************************************************/
 
+  /**
+   * {@inheritdoc}
+   */
+  public function accessElement(array &$element, $operation, AccountInterface $account = NULL) {
+    return AccessResult::neutral();
+  }
+
   /**
    * {@inheritdoc}
    */
diff --git a/modules/contrib/webform/src/Plugin/WebformHandlerInterface.php b/modules/contrib/webform/src/Plugin/WebformHandlerInterface.php
index d4b7d388..446296db 100644
--- a/modules/contrib/webform/src/Plugin/WebformHandlerInterface.php
+++ b/modules/contrib/webform/src/Plugin/WebformHandlerInterface.php
@@ -7,6 +7,7 @@ use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
+use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\WebformInterface;
 use Drupal\webform\WebformSubmissionInterface;
 
@@ -245,6 +246,16 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    */
   public function isSubmissionRequired();
 
+  /**
+   * Determine if the webform handler requires anonymous submission tracking.
+   *
+   * @return bool
+   *   TRUE if the webform handler requires anonymous submission tracking.
+   *
+   * @see \Drupal\webform_options_limit\Plugin\WebformHandler\OptionsLimitWebformHandler
+   */
+  public function hasAnonymousSubmissionTracking();
+
   /**
    * Set the webform that this is handler is attached to.
    *
@@ -253,6 +264,8 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    *
    * @return $this
    *   This webform handler.
+   *
+   * @todo Webform 8.x-6.x: Replace with WebformEntityInjectionInterface.
    */
   public function setWebform(WebformInterface $webform);
 
@@ -261,6 +274,8 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    *
    * @return \Drupal\webform\WebformInterface
    *   A webform.
+   *
+   * @todo Webform 8.x-6.x: Replace with WebformEntityInjectionInterface.
    */
   public function getWebform();
 
@@ -272,6 +287,8 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    *
    * @return $this
    *   This webform handler.
+   *
+   * @todo Webform 8.x-6.x: Replace with WebformEntityInjectionInterface.
    */
   public function setWebformSubmission(WebformSubmissionInterface $webform_submission = NULL);
 
@@ -280,6 +297,8 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    *
    * @return \Drupal\webform\WebformSubmissionInterface
    *   A webform submission.
+   *
+   * @todo Webform 8.x-6.x: Replace with WebformEntityInjectionInterface.
    */
   public function getWebformSubmission();
 
@@ -318,6 +337,22 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    */
   public function alterElements(array &$elements, WebformInterface $webform);
 
+  /**
+   * Alter webform element.
+   *
+   * @param array $element
+   *   The webform element.
+   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   *   The current state of the form.
+   * @param array $context
+   *   An associative array containing the following key-value pairs:
+   *   - form: The form structure to which elements is being attached.
+   *
+   * @see \Drupal\webform\WebformSubmissionForm::prepareElements()
+   * @see hook_webform_element_alter()
+   */
+  public function alterElement(array &$element, FormStateInterface $form_state, array $context);
+
   /****************************************************************************/
   // Webform submission methods.
   /****************************************************************************/
@@ -455,6 +490,21 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
    */
   public function postDelete(WebformSubmissionInterface $webform_submission);
 
+  /**
+   * Controls entity operation access to webform submission.
+   *
+   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   *   A webform submission.
+   * @param string $operation
+   *   The operation that is to be performed on $entity.
+   * @param \Drupal\Core\Session\AccountInterface $account
+   *   The account trying to access the entity.
+   *
+   * @return \Drupal\Core\Core\AccessResultInterface
+   *   The result of the access check. No option returns a nuetral result.
+   */
+  public function access(WebformSubmissionInterface $webform_submission, $operation, AccountInterface $account = NULL);
+
   /****************************************************************************/
   // Preprocessing methods.
   /****************************************************************************/
@@ -495,6 +545,21 @@ interface WebformHandlerInterface extends PluginInspectionInterface, Configurabl
   // Element methods.
   /****************************************************************************/
 
+  /**
+   * Controls entity operation access to webform submission element.
+   *
+   * @param array $element
+   *   The element's properties.
+   * @param string $operation
+   *   The operation that is to be performed on $entity.
+   * @param \Drupal\Core\Session\AccountInterface $account
+   *   The account trying to access the entity.
+   *
+   * @return \Drupal\Core\Access\AccessResultInterface
+   *   The result of the access check. Defaults to neutral.
+   */
+  public function accessElement(array &$element, $operation, AccountInterface $account = NULL);
+
   /**
    * Acts on a element after it has been created.
    *
diff --git a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityJsonApiTest.php b/modules/contrib/webform/src/Tests/Access/WebformAccessEntityJsonApiTest.php
deleted file mode 100644
index dc8790e6..00000000
--- a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityJsonApiTest.php
+++ /dev/null
@@ -1,81 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Access;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform entity JSON API access.
- *
- * @group Webform
- */
-class WebformAccessEntityJsonApiTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'jsonapi'];
-
-  /**
-   * Tests webform entity REST acces.
-   */
-  public function testRestAccess() {
-    $webform = Webform::load('contact');
-    $uuid = $webform->uuid();
-
-    $account = $this->drupalCreateUser();
-
-    $configuration_account = $this->drupalCreateUser([
-      'access any webform configuration',
-    ]);
-
-    /**************************************************************************/
-
-    // Check anonymous access denied to webform.
-    $this->drupalGet("jsonapi/webform/webform/$uuid");
-    $this->assertRaw('"title":"Forbidden","status":"403","detail":"The current user is not allowed to GET the selected resource. Access to webform configuration is required."');
-
-    // Login authenticated user.
-    $this->drupalLogin($account);
-
-    // Check authenticated access allowed to webform.
-    $this->drupalGet('/webform/contact');
-    $this->assertFieldByName('subject');
-
-    // Check authenticated access denied to webform via _format=hal_json.
-    $this->drupalGet("jsonapi/webform/webform/$uuid");
-    $this->assertRaw('"title":"Forbidden","status":"403","detail":"The current user is not allowed to GET the selected resource. Access to webform configuration is required."');
-
-    // Login rest (permission) user.
-    $this->drupalLogin($configuration_account);
-
-    // Check rest access allowed to webform.
-    $this->drupalGet("jsonapi/webform/webform/$uuid");
-    $this->assertNoRaw('"title":"Forbidden","status":"403","detail":"The current user is not allowed to GET the selected resource. Access to webform configuration is required."');
-    $this->assertRaw('"title":"Contact",');
-
-    // Allow anonymous role to access webform configuration.
-    $access_rules = $webform->getAccessRules();
-    $access_rules['configuration']['roles'] = ['anonymous', 'authenticated'];
-    $webform->setAccessRules($access_rules);
-    $webform->save();
-
-    // Login out and switch to anonymous user.
-    $this->drupalLogout();
-
-    // Check anonymous access allowed to webform.
-    $this->drupalGet("jsonapi/webform/webform/$uuid");
-    $this->assertNoRaw('"title":"Forbidden","status":"403","detail":"The current user is not allowed to GET the selected resource. Access to webform configuration is required."');
-
-    // Login authenticated user.
-    $this->drupalLogin($account);
-
-    // Check authenticated access allowed to webform.
-    $this->drupalGet("jsonapi/webform/webform/$uuid");
-    $this->assertNoRaw('"title":"Forbidden","status":"403","detail":"The current user is not allowed to GET the selected resource. Access to webform configuration is required."');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityPermissionsTest.php b/modules/contrib/webform/src/Tests/Access/WebformAccessEntityPermissionsTest.php
deleted file mode 100644
index f322fee9..00000000
--- a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityPermissionsTest.php
+++ /dev/null
@@ -1,105 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Access;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform entity permissions.
- *
- * @group Webform
- */
-class WebformAccessEntityPermissionsTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'webform', 'webform_test_submissions'];
-
-  /**
-   * Tests webform entity access controls.
-   */
-  public function testAccessControlHandler() {
-    $own_account = $this->drupalCreateUser([
-      'access webform overview',
-      'create webform',
-      'edit own webform',
-      'delete own webform',
-    ]);
-    $any_account = $this->drupalCreateUser([
-      'access webform overview',
-      'create webform',
-      'edit any webform',
-      'delete any webform',
-    ]);
-
-    /**************************************************************************/
-
-    // Login as user who can access own webform.
-    $this->drupalLogin($own_account);
-
-    // Check create own webform.
-    $this->drupalPostForm('admin/structure/webform/add', ['id' => 'test_own', 'title' => 'test_own'], t('Save'));
-
-    // Check webform submission overview contains own webform.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertRaw('test_own');
-
-    // Add test element to own webform.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_own', ['elements' => "test:\n  '#markup': 'test'"], t('Save'));
-
-    // Check duplicate own webform.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/duplicate');
-    $this->assertResponse(200);
-
-    // Check delete own webform.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/delete');
-    $this->assertResponse(200);
-
-    // Check access own webform submissions.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/results/submissions');
-    $this->assertResponse(200);
-
-    // Login as user who can access any webform.
-    $this->drupalLogin($any_account);
-
-    // Check duplicate any webform.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/duplicate');
-    $this->assertResponse(200);
-
-    // Check delete any webform.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/delete');
-    $this->assertResponse(200);
-
-    // Check access any webform submissions.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/results/submissions');
-    $this->assertResponse(200);
-
-    // Change the owner of the webform to 'any' user.
-    $own_webform = Webform::load('test_own');
-    $own_webform->setOwner($any_account)->save();
-
-    // Login as user who can access own webform.
-    $this->drupalLogin($own_account);
-
-    // Check webform submission overview does not contains any webform.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertNoRaw('test_own');
-
-    // Check duplicate denied any webform.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/duplicate');
-    $this->assertResponse(403);
-
-    // Check delete denied any webform.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/delete');
-    $this->assertResponse(403);
-
-    // Check access denied any webform submissions.
-    $this->drupalGet('/admin/structure/webform/manage/test_own/results/submissions');
-    $this->assertResponse(403);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRestTest.php b/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRestTest.php
deleted file mode 100644
index dc7104d4..00000000
--- a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRestTest.php
+++ /dev/null
@@ -1,80 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Access;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform entity REST access.
- *
- * @group Webform
- */
-class WebformAccessEntityRestTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_rest'];
-
-  /**
-   * Tests webform entity REST acces.
-   */
-  public function testRestAccess() {
-    $webform = Webform::load('contact');
-
-    $account = $this->drupalCreateUser();
-
-    $configuration_account = $this->drupalCreateUser([
-      'access any webform configuration',
-    ]);
-
-    /**************************************************************************/
-
-    // Check anonymous access denied to webform via _format=hal_json.
-    $this->drupalGet('/webform/contact', ['query' => ['_format' => 'hal_json']]);
-    $this->assertRaw('{"message":"Access to webform configuration is required."}');
-
-    // Login authenticated user.
-    $this->drupalLogin($account);
-
-    // Check authenticated access allowed to webform via _format=html.
-    $this->drupalGet('/webform/contact');
-    $this->assertFieldByName('subject');
-
-    // Check authenticated access denied to webform via _format=hal_json.
-    $this->drupalGet('/webform/contact', ['query' => ['_format' => 'hal_json']]);
-    $this->assertRaw('{"message":"Access to webform configuration is required."}');
-
-    // Login rest (permission) user.
-    $this->drupalLogin($configuration_account);
-
-    // Check rest access allowed to webform via _format=hal_json.
-    $this->drupalGet('/webform/contact', ['query' => ['_format' => 'hal_json']]);
-    $this->assertNoRaw('{"message":"Access to webform configuration is required."}');
-    $this->assertRaw('"id":"contact","title":"Contact"');
-
-    // Allow anonymous role to access webform configuration.
-    $access_rules = $webform->getAccessRules();
-    $access_rules['configuration']['roles'] = ['anonymous', 'authenticated'];
-    $webform->setAccessRules($access_rules);
-    $webform->save();
-
-    // Login out and switch to anonymous user.
-    $this->drupalLogout();
-
-    // Check anonymous access allowed to webform via _format=hal_json.
-    $this->drupalGet('/webform/contact', ['query' => ['_format' => 'hal_json']]);
-    $this->assertNoRaw('{"message":"Access to webform configuration is required."}');
-
-    // Login authenticated user.
-    $this->drupalLogin($account);
-
-    // Check authenticated access allowed to webform via _format=hal_json.
-    $this->drupalGet('/webform/contact', ['query' => ['_format' => 'hal_json']]);
-    $this->assertNoRaw('{"message":"Access to webform configuration is required."}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRulesTest.php b/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRulesTest.php
deleted file mode 100644
index 77cbbba5..00000000
--- a/modules/contrib/webform/src/Tests/Access/WebformAccessEntityRulesTest.php
+++ /dev/null
@@ -1,296 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Access;
-
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform entity access rules.
- *
- * @group Webform
- */
-class WebformAccessEntityRulesTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'webform', 'webform_test_submissions'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submissions'];
-
-  /**
-   * Tests webform entity access rules.
-   */
-  public function testAccessRules() {
-    global $base_path;
-
-    /** @var \Drupal\webform\WebformAccessRulesManagerInterface $access_rules_manager */
-    $access_rules_manager = \Drupal::service('webform.access_rules_manager');
-    $default_access_rules = $access_rules_manager->getDefaultAccessRules();
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_submissions');
-    /** @var \Drupal\webform\WebformSubmissionInterface[] $submissions */
-    $submissions = array_values(\Drupal::entityTypeManager()->getStorage('webform_submission')->loadByProperties(['webform_id' => 'test_submissions']));
-
-    $account = $this->drupalCreateUser(['access content', 'edit webform source']);
-
-    $webform_id = $webform->id();
-    $sid = $submissions[0]->id();
-    $uid = $account->id();
-    $rid = $account->getRoles(TRUE)[0];
-
-    /**************************************************************************/
-    // Test.
-    /**************************************************************************/
-
-    $this->drupalLogin($account);
-
-    // Check that user cannot access test form.
-    $this->drupalGet("webform/$webform_id/test");
-    $this->assertResponse(403, 'Webform setting access denied for test rule.');
-
-    // Assign user to 'test' access rule.
-    $access_rules = [
-      'test' => [
-        'roles' => [],
-        'users' => [$uid],
-        'permissions' => [],
-      ],
-    ] + $default_access_rules;
-    $webform->setAccessRules($access_rules)->save();
-
-    // Check that user can access test form.
-    $this->drupalGet("webform/$webform_id/test");
-    $this->assertResponse(200, 'Webform setting access for test rule.');
-
-    /**************************************************************************/
-    // Administer.
-    /**************************************************************************/
-
-    // Check that user cannot access form settings.
-    $this->drupalGet("admin/structure/webform/manage/$webform_id/settings");
-    $this->assertResponse(403, 'Webform setting access denied for administer rule.');
-    $this->drupalGet("admin/structure/webform/manage/$webform_id/results/submissions");
-    $this->assertResponse(403, 'Webform submissions access denied for administer rule.');
-
-    // Assign user to 'administer' access rule.
-    $access_rules = [
-      'administer' => [
-        'roles' => [],
-        'users' => [$uid],
-        'permissions' => [],
-      ],
-    ] + $default_access_rules;
-    $webform->setAccessRules($access_rules)->save();
-
-    // Check that user cannot access settings.
-    $this->drupalGet("admin/structure/webform/manage/$webform_id/settings");
-    $this->assertResponse(200, 'Webform setting access allowed for administer rule.');
-    $this->drupalGet("admin/structure/webform/manage/$webform_id/results/submissions");
-    $this->assertResponse(200, 'Webform submissions access allowed for administer rule.');
-
-    /**************************************************************************/
-    // Create.
-    /**************************************************************************/
-
-    $this->drupalLogout();
-
-    // Check create authenticated/anonymous access.
-    $webform->setAccessRules($default_access_rules)->save();
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertResponse(200, 'Webform create submission access allowed for anonymous/authenticated user.');
-
-    // Revoke create from anonymous and authenticated roles.
-    $access_rules = [
-      'create' => [
-        'roles' => [],
-        'users' => [],
-        'permissions' => [],
-      ],
-    ] + $default_access_rules;
-    $webform->setAccessRules($access_rules)->save();
-
-    // Check create access denied.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertResponse(403, 'Webform returns access denied');
-
-    /**************************************************************************/
-    // Any.
-    /**************************************************************************/
-
-    $any_tests = [
-      'webform/{webform}' => 'create',
-      'admin/structure/webform/manage/{webform}/results/submissions' => 'view_any',
-      'admin/structure/webform/manage/{webform}/results/download' => 'view_any',
-      'admin/structure/webform/manage/{webform}/results/clear' => 'purge_any',
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}' => 'view_any',
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/text' => 'view_any',
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/yaml' => 'view_any',
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/edit' => 'update_any',
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/delete' => 'delete_any',
-    ];
-
-    // Check that all the test paths are access denied for anonymous users.
-    foreach ($any_tests as $path => $permission) {
-      $path = str_replace('{webform}', $webform_id, $path);
-      $path = str_replace('{webform_submission}', $sid, $path);
-
-      $this->drupalGet($path);
-      $this->assertResponse(403, 'Webform returns access denied');
-    }
-
-    // Login.
-    $this->drupalLogin($account);
-
-    // Check that all the test paths are access denied for authenticated.
-    foreach ($any_tests as $path => $permission) {
-      $path = str_replace('{webform}', $webform_id, $path);
-      $path = str_replace('{webform_submission}', $sid, $path);
-
-      $this->drupalGet($path);
-      $this->assertResponse(403, 'Webform returns access denied');
-    }
-
-    // Check any access rules by role, user id, and permission.
-    foreach ($any_tests as $path => $permission) {
-      $path = str_replace('{webform}', $webform_id, $path);
-      $path = str_replace('{webform_submission}', $sid, $path);
-
-      // Check access rule via role.
-      $access_rules = [
-        $permission => [
-          'roles' => [$rid],
-          'users' => [],
-          'permissions' => [],
-        ],
-      ] + $default_access_rules;
-      $webform->setAccessRules($access_rules)->save();
-      $this->drupalGet($path);
-      $this->assertResponse(200, 'Webform allows access via role access rules');
-
-      // Check access rule via user id.
-      $access_rules = [
-        $permission => [
-          'roles' => [],
-          'users' => [$uid],
-          'permissions' => [],
-        ],
-      ] + $default_access_rules;
-      $webform->setAccessRules($access_rules)->save();
-      $this->drupalGet($path);
-      $this->assertResponse(200, 'Webform allows access via user access rules');
-
-      // Check access rule via 'access content'.
-      $access_rules = [
-        $permission => [
-          'roles' => [],
-          'users' => [],
-          'permissions' => ['access content'],
-        ],
-      ] + $default_access_rules;
-      $webform->setAccessRules($access_rules)->save();
-      $this->drupalGet($path);
-      $this->assertResponse(200, "Webform allows access via permission access rules");
-    }
-
-    /**************************************************************************/
-    // Own.
-    /**************************************************************************/
-
-    // Check own / user specific access rules.
-    $access_rules = [
-      'view_own' => [
-        'roles' => [$rid],
-        'users' => [],
-        'permissions' => [],
-      ],
-      'update_own' => [
-        'roles' => [$rid],
-        'users' => [],
-        'permissions' => [],
-      ],
-      'delete_own' => [
-        'roles' => [$rid],
-        'users' => [],
-        'permissions' => [],
-      ],
-    ] + $default_access_rules;
-    $webform->setAccessRules($access_rules)->save();
-
-    // Must delete all existing anonymous submission to prevent them from
-    // getting transferred to authenticated user.
-    foreach ($submissions as $submission) {
-      $submission->delete();
-    }
-
-    // Login and post a submission as a user.
-    $this->drupalLogin($account);
-
-    // Check no view previous submission message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertNoRaw('You have already submitted this webform.');
-    $this->assertNoRaw('View your previous submission');
-
-    $sid = $this->postSubmission($webform);
-
-    // Check view previous submission message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}webform/{$webform_id}/submissions/{$sid}\">View your previous submission</a>.");
-
-    $sid = $this->postSubmission($webform);
-
-    // Check view previous submissions message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}webform/{$webform_id}/submissions\">View your previous submissions</a>");
-
-    // Check the new submission's view, update, and delete access for the user.
-    $test_own = [
-      'admin/structure/webform/manage/{webform}/results/submissions' => 403,
-      'admin/structure/webform/manage/{webform}/results/download' => 403,
-      'admin/structure/webform/manage/{webform}/results/clear' => 403,
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}' => 200,
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/text' => 403,
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/yaml' => 403,
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/edit' => 200,
-      'admin/structure/webform/manage/{webform}/submission/{webform_submission}/delete' => 200,
-      'webform/{webform}/submissions/{webform_submission}' => 200,
-      'webform/{webform}/submissions/{webform_submission}/edit' => 200,
-      'webform/{webform}/submissions/{webform_submission}/duplicate' => 403,
-      'webform/{webform}/submissions/{webform_submission}/delete' => 200,
-    ];
-    foreach ($test_own as $path => $status_code) {
-      $path = str_replace('{webform}', $webform_id, $path);
-      $path = str_replace('{webform_submission}', $sid, $path);
-
-      $this->drupalGet($path);
-      $this->assertResponse($status_code, new FormattableMarkup('Webform @status_code access via own access rules.', ['@status_code' => ($status_code == 403 ? 'denies' : 'allows')]));
-    }
-
-    // Enable submission user duplicate.
-    $webform->setSetting('submission_user_duplicate', TRUE);
-    $webform->save();
-
-    // Check enable user submission duplicate.
-    $this->drupalGet("webform/$webform_id/submissions/$sid/duplicate");
-    $this->assertResponse(200);
-
-    // Check disabled previous submissions messages.
-    $webform->setSetting('form_previous_submissions', FALSE);
-    $webform->save();
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertNoRaw('You have already submitted this webform.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Access/WebformAccessSubmissionPermissionsTest.php b/modules/contrib/webform/src/Tests/Access/WebformAccessSubmissionPermissionsTest.php
deleted file mode 100644
index 3020bc1c..00000000
--- a/modules/contrib/webform/src/Tests/Access/WebformAccessSubmissionPermissionsTest.php
+++ /dev/null
@@ -1,239 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Access;
-
-use Drupal\user\Entity\Role;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission permissions.
- *
- * @group Webform
- */
-class WebformAccessSubmissionPermissionsTest extends WebformTestBase {
-
-  /**
-   * Test webform submission access permissions.
-   */
-  public function testPermissions() {
-    global $base_path;
-
-    $admin_webform_account = $this->drupalCreateUser([
-      'administer webform',
-      'create webform',
-    ]);
-
-    $admin_submission_account = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    $own_webform_account = $this->drupalCreateUser([
-      'edit own webform',
-    ]);
-
-    $any_submission_account = $this->drupalCreateUser([
-      'view any webform submission',
-      'edit any webform submission',
-      'delete any webform submission',
-    ]);
-
-    $own_submission_account = $this->drupalCreateUser([
-      'view own webform submission',
-      'edit own webform submission',
-      'delete own webform submission',
-      'access webform submission user',
-    ]);
-
-    $webform_id = 'contact';
-    $webform = Webform::load('contact');
-
-    /**************************************************************************/
-    // Create submission permissions (anonymous).
-    /**************************************************************************/
-
-    $edit = ['subject' => '{subject}', 'message' => '{message}'];
-    $sid_1 = $this->postSubmission($webform, $edit);
-
-    // Check cannot view own submissions.
-    $uid = $own_submission_account->id();
-    $this->drupalGet("user/$uid/submissions");
-    $this->assertResponse(403);
-
-    // Check cannot view own previous submission message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertNoRaw('You have already submitted this webform.');
-
-    // Check cannot 'view own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_1}");
-    $this->assertResponse(403);
-
-    /**************************************************************************/
-    // Own submission permissions (authenticated).
-    /**************************************************************************/
-
-    $this->drupalLogin($own_submission_account);
-
-    $edit = ['subject' => '{subject}', 'message' => '{message}'];
-    $sid_2 = $this->postSubmission($webform, $edit);
-
-    // Check 'access webform submission user' permission.
-    $uid = $own_submission_account->id();
-    $this->drupalGet("user/$uid/submissions");
-    $this->assertResponse(200);
-
-    // Check view own previous submission message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}webform/{$webform_id}/submissions/{$sid_2}\">View your previous submission</a>.");
-
-    // Check 'view own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_2}");
-    $this->assertResponse(200);
-
-    // Check 'edit own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_2}/edit");
-    $this->assertResponse(200);
-
-    // Check 'delete own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_2}/delete");
-    $this->assertResponse(200);
-
-    $sid_3 = $this->postSubmission($webform, $edit);
-
-    // Check view own previous submissions message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}webform/{$webform_id}/submissions\">View your previous submissions</a>");
-
-    // Check view own previous submissions.
-    $this->drupalGet("webform/{$webform_id}/submissions");
-    $this->assertResponse(200);
-    $this->assertNoLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}webform/{$webform_id}/submissions/{$sid_2}");
-    $this->assertLinkByHref("{$base_path}webform/{$webform_id}/submissions/{$sid_3}");
-
-    // Check webform submission allowed.
-    $this->drupalGet("/admin/structure/webform/manage/{$webform_id}/submission/{$sid_2}");
-    $this->assertResponse(200);
-
-    // Check all results access denied.
-    $this->drupalGet('/admin/structure/webform/submissions/manage');
-    $this->assertResponse(403);
-
-    // Check webform results access denied.
-    $this->drupalGet("/admin/structure/webform/manage/{$webform_id}/results/submissions");
-    $this->assertResponse(403);
-
-    /**************************************************************************/
-    // Any submission permissions.
-    /**************************************************************************/
-
-    // Login as any user.
-    $this->drupalLogin($any_submission_account);
-
-    // Check 'access webform submission user' permission.
-    $uid = $any_submission_account->id();
-    $this->drupalGet("user/$uid/submissions");
-    $this->assertResponse(200);
-
-    // Check 'access webform submission user' permission denied.
-    $uid = $own_submission_account->id();
-    $this->drupalGet("user/$uid/submissions");
-    $this->assertResponse(200);
-
-    // Check webform results access allowed.
-    $this->drupalGet("/admin/structure/webform/manage/{$webform_id}/results/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_2}");
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_3}");
-
-    // Check webform submission access allowed.
-    $this->drupalGet("/admin/structure/webform/manage/{$webform_id}/submission/{$sid_2}");
-    $this->assertResponse(200);
-
-    // Check all results access allowed.
-    $this->drupalGet('/admin/structure/webform/submissions/manage');
-    $this->assertResponse(200);
-
-    /**************************************************************************/
-    // Own submission permissions (anonymous).
-    /**************************************************************************/
-
-    /** @var \Drupal\user\RoleInterface $anonymous_role */
-    $anonymous_role = Role::load('anonymous');
-    $anonymous_role->grantPermission('view own webform submission')
-      ->grantPermission('edit own webform submission')
-      ->grantPermission('delete own webform submission')
-      ->save();
-    $this->drupalLogout();
-
-    $edit = ['name' => '{name}', 'email' => 'example@example.com', 'subject' => '{subject}', 'message' => '{message}'];
-    $sid_4 = $this->postSubmission($webform, $edit);
-
-    // Check view own previous submission message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}webform/{$webform_id}/submissions/{$sid_4}\">View your previous submission</a>.");
-
-    // Check 'view own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_4}");
-    $this->assertResponse(200);
-
-    // Check 'edit own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_4}/edit");
-    $this->assertResponse(200);
-
-    // Check 'delete own submission' permission.
-    $this->drupalGet("webform/{$webform_id}/submissions/{$sid_4}/delete");
-    $this->assertResponse(200);
-
-    $sid_5 = $this->postSubmission($webform, $edit);
-
-    // Check view own previous submissions message.
-    $this->drupalGet('/webform/' . $webform->id());
-    $this->assertRaw('You have already submitted this webform.');
-    $this->assertRaw("<a href=\"{$base_path}webform/{$webform_id}/submissions\">View your previous submissions</a>");
-
-    // Check view own previous submissions.
-    $this->drupalGet("webform/{$webform_id}/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}webform/{$webform_id}/submissions/{$sid_4}");
-    $this->assertLinkByHref("{$base_path}webform/{$webform_id}/submissions/{$sid_5}");
-
-    /**************************************************************************/
-    // Administer webform or webform submission permission.
-    /**************************************************************************/
-
-    $this->drupalLogin($admin_webform_account);
-    $uid = $own_submission_account->id();
-    $this->drupalGet("user/$uid/submissions");
-    $this->assertResponse(200);
-
-    $this->drupalLogin($admin_submission_account);
-    $uid = $own_submission_account->id();
-    $this->drupalGet("user/$uid/submissions");
-    $this->assertResponse(200);
-
-    // Check user can't see all submissions unless they are the owner.
-    $this->drupalLogin($own_webform_account);
-    $this->drupalGet("/admin/structure/webform/manage/{$webform_id}/results/submissions");
-    $this->assertResponse(403);
-
-    // Check user can see all submissions when they are the webform owner.
-    $webform->setOwner($own_webform_account)->save();
-    $this->drupalGet("/admin/structure/webform/manage/{$webform_id}/results/submissions");
-    $this->assertResponse(200);
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_1}");
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_2}");
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_3}");
-    $this->assertLinkByHref("{$base_path}admin/structure/webform/manage/{$webform_id}/submission/{$sid_4}");
-
-    // Check user can the submissions when they are the webform owner.
-    $this->drupalGet("admin/structure/webform/manage/{$webform_id}/submission/{$sid_4}");
-    $this->assertResponse(200);
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Block/WebformBlockContextTest.php b/modules/contrib/webform/src/Tests/Block/WebformBlockContextTest.php
deleted file mode 100644
index 9f2fa161..00000000
--- a/modules/contrib/webform/src/Tests/Block/WebformBlockContextTest.php
+++ /dev/null
@@ -1,84 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Block;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform block context.
- *
- * @group Webform
- */
-class WebformBlockContextTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform', 'webform_node', 'webform_test_block_context'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Manually install blocks.
-    $contexts = [
-      'webform' => '@webform.webform_route_context:webform',
-      'webform_submission' => '@webform.webform_submission_route_context:webform_submission',
-      'node' => '@node.node_route_context:node',
-    ];
-    foreach ($contexts as $type => $context) {
-      $block = $this->drupalPlaceBlock('webform_test_block_context_block', ['label' => '{' . $type . ' context}']);
-      $block->setVisibilityConfig('webform', [
-        'id' => 'webform',
-        'webforms' => ['contact' => 'contact'],
-        'negate' => FALSE,
-        'context_mapping' => [
-          $type => $context,
-        ],
-      ]);
-      $block->save();
-    }
-    $block = $this->drupalPlaceBlock('webform_test_block_context_block', ['label' => '{all contexts}']);
-    $block->setVisibilityConfig('webform', [
-      'id' => 'webform',
-      'webforms' => ['contact' => 'contact'],
-      'negate' => FALSE,
-      'context_mapping' => $contexts,
-    ]);
-    $block->save();
-  }
-
-  /**
-   * Tests webform block context.
-   */
-  public function testBlockContext() {
-    $this->drupalLogin($this->rootUser);
-    $webform = Webform::load('contact');
-
-    // Check webform context.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('{all contexts}');
-    $this->assertRaw('{webform context}');
-
-    // Check webform submission context.
-    $sid = $this->postSubmissionTest($webform);
-    $this->drupalGet("/admin/structure/webform/manage/contact/submission/$sid");
-    $this->assertRaw('{all contexts}');
-    $this->assertRaw('{webform_submission context}');
-
-    // Check webform node context.
-    $node = $this->drupalCreateNode(['type' => 'webform']);
-    $node->webform->target_id = 'contact';
-    $node->webform->status = 1;
-    $node->save();
-    $this->drupalGet('/node/' . $node->id());
-    $this->assertRaw('{all contexts}');
-    $this->assertRaw('{node context}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Block/WebformBlockTest.php b/modules/contrib/webform/src/Tests/Block/WebformBlockTest.php
deleted file mode 100644
index 1fb130c8..00000000
--- a/modules/contrib/webform/src/Tests/Block/WebformBlockTest.php
+++ /dev/null
@@ -1,70 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Block;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform block.
- *
- * @group Webform
- */
-class WebformBlockTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_confirmation_inline', 'test_confirmation_message'];
-
-  /**
-   * Tests webform block.
-   */
-  public function testBlock() {
-    // Place block.
-    $block = $this->drupalPlaceBlock('webform_block', [
-      'webform_id' => 'contact',
-    ]);
-
-    // Check contact webform.
-    $this->drupalGet('/<front>');
-    $this->assertRaw('webform-submission-contact-add-form');
-
-    // Check contact webform with default data.
-    $block->getPlugin()->setConfigurationValue('default_data', "name: 'John Smith'");
-    $block->save();
-    $this->drupalGet('/<front>');
-    $this->assertRaw('webform-submission-contact-add-form');
-    $this->assertFieldByName('name', 'John Smith');
-
-    // Check confirmation inline webform.
-    $block->getPlugin()->setConfigurationValue('webform_id', 'test_confirmation_inline');
-    $block->save();
-    $this->drupalPostForm('<front>', [], t('Submit'));
-    $this->assertRaw('This is a custom inline confirmation message.');
-
-    // Check confirmation message webform displayed on front page.
-    $block->getPlugin()->setConfigurationValue('webform_id', 'test_confirmation_message');
-    $block->save();
-    $this->drupalPostForm('<front>', [], t('Submit'));
-    $this->assertRaw('This is a <b>custom</b> confirmation message.');
-    $this->assertUrl('/user/login');
-
-    // Check confirmation message webform display on webform URL.
-    $block->getPlugin()->setConfigurationValue('redirect', TRUE);
-    $block->save();
-    $this->drupalPostForm('<front>', [], t('Submit'));
-    $this->assertRaw('This is a <b>custom</b> confirmation message.');
-    $this->assertUrl('webform/test_confirmation_message');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomFileTest.php b/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomFileTest.php
deleted file mode 100644
index fa28b18c..00000000
--- a/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomFileTest.php
+++ /dev/null
@@ -1,62 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Composite;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\Element\WebformElementManagedFileTestBase;
-
-/**
- * Tests for custom composite element.
- *
- * @group Webform
- */
-class WebformCompositeCustomFileTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_composite_custom_file'];
-
-  /**
-   * Test custom composite element.
-   */
-  public function testCustom() {
-    $webform = Webform::load('test_composite_custom_file');
-
-    $first_file = $this->files[0];
-
-    /**************************************************************************/
-
-    // Create submission with file.
-    $edit = [
-      'webform_custom_composite_file[items][0][_item_][textfield]' => '{textfield}',
-      'files[webform_custom_composite_file_items_0__item__managed_file]' => \Drupal::service('file_system')->realpath($first_file->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $webform_submission = WebformSubmission::load($sid);
-
-    $fid = $this->getLastFileId();
-    $file = File::load($fid);
-
-    // Check file permanent.
-    $this->assert($file->isPermanent(), 'Test file is permanent');
-
-    // Check file upload.
-    $element_data = $webform_submission->getElementData('webform_custom_composite_file');
-    $this->assertEqual($element_data[0]['managed_file'], $fid, 'Test file was upload to the current submission');
-
-    // Check test file file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($file), 'The file has 1 usage.');
-
-    // Check test file uploaded file path.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_composite_custom_file/' . $sid . '/' . $first_file->filename);
-
-    // Check that test file exists.
-    $this->assert(file_exists($file->getFileUri()), 'File exists');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomTest.php b/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomTest.php
deleted file mode 100644
index 3ebfd756..00000000
--- a/modules/contrib/webform/src/Tests/Composite/WebformCompositeCustomTest.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Composite;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for custom composite element.
- *
- * @group Webform
- */
-class WebformCompositeCustomTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_composite_custom'];
-
-  /**
-   * Test custom composite element.
-   */
-  public function testCustom() {
-
-    /* Display */
-
-    $this->drupalGet('/webform/test_composite_custom');
-
-    // Check basic custom composite.
-    $this->assertRaw('<label>webform_custom_composite_basic</label>');
-    $this->assertRaw('<div id="webform_custom_composite_basic_table">');
-    $this->assertRaw('<div class="webform-multiple-table webform-multiple-table-responsive">');
-    $this->assertRaw('<th class="webform_custom_composite_basic-table--handle webform-multiple-table--handle"><span class="visually-hidden">Re-order</span></th>');
-    $this->assertRaw('<th class="webform_custom_composite_basic-table--first_name webform-multiple-table--first_name">First name</th>');
-    $this->assertRaw('<th class="webform_custom_composite_basic-table--last_name webform-multiple-table--last_name">Last name</th>');
-    $this->assertRaw('<th class="webform_custom_composite_basic-table--weight webform-multiple-table--weight">Weight</th>');
-
-    // Check advanced custom composite.
-    $this->assertRaw('<span class="field-suffix"> yrs. old</span>');
-
-    /* Processing */
-
-    // Check contact composite value.
-    $this->drupalPostForm('webform/test_composite_custom', [], t('Submit'));
-    $this->assertRaw("webform_custom_composite_basic:
-  - first_name: John
-    last_name: Smith
-webform_custom_composite_advanced:
-  - first_name: John
-    last_name: Smith
-    gender: Male
-    martial_status: Single
-    employment_status: Unemployed
-    age: '20'");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Composite/WebformCompositeFormatTest.php b/modules/contrib/webform/src/Tests/Composite/WebformCompositeFormatTest.php
deleted file mode 100644
index 13e4bde7..00000000
--- a/modules/contrib/webform/src/Tests/Composite/WebformCompositeFormatTest.php
+++ /dev/null
@@ -1,236 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Composite;
-
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformSubmissionInterface;
-
-/**
- * Tests for webform submission webform element custom #format support.
- *
- * @group Webform
- */
-class WebformCompositeFormatTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'address', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_composite_format', 'test_composite_format_multiple'];
-
-  /**
-   * Tests element format.
-   */
-  public function testFormat() {
-
-    /**************************************************************************/
-    /* Format composite element as HTML and text */
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_composite_format');
-    $sid = $this->postSubmission($webform);
-    $submission = WebformSubmission::load($sid);
-
-    // Check composite elements item formatted as HTML.
-    $body = $this->getMessageBody($submission, 'email_html');
-    $elements = [
-      'Text format (Plain text)' => '<p>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Negat esse eam, inquit, propter se expetendam. Primum Theophrasti, Strato, physicum se voluit; Id mihi magnum videtur. Itaque mihi non satis videmini considerare quod iter sit naturae quaeque progressio. Quare hoc videndum est, possitne nobis hoc ratio philosophorum dare. Est enim tanti philosophi tamque nobilis audacter sua decreta defendere.&lt;/p&gt;</p>',
-      'Likert (Value)' => '<div class="item-list"><ul><li><b>Please answer question 1?:</b> 1</li><li><b>How about now answering question 2?:</b> 1</li><li><b>Finally, here is question 3?:</b> 1</li></ul></div>',
-      'Likert (Raw value)' => '<div class="item-list"><ul><li><b>q1:</b> 1</li><li><b>q2:</b> 1</li><li><b>q3:</b> 1</li></ul></div>',
-      'Likert (List)' => '<div class="item-list"><ul><li><b>Please answer question 1?:</b> 1</li><li><b>How about now answering question 2?:</b> 1</li><li><b>Finally, here is question 3?:</b> 1</li></ul></div>',
-      'Basic address (Value)' => '10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan<br />',
-      'Basic address (Raw value)' => '<div class="item-list"><ul><li><b>address:</b> 10 Main Street</li><li><b>address_2:</b> 10 Main Street</li><li><b>city:</b> Springfield</li><li><b>state_province:</b> Alabama</li><li><b>postal_code:</b> 11111</li><li><b>country:</b> Afghanistan</li></ul></div><br /><br />',
-      'Basic address (List)' => '<div class="item-list"><ul><li><b>Address:</b> 10 Main Street</li><li><b>Address 2:</b> 10 Main Street</li><li><b>City/Town:</b> Springfield</li><li><b>State/Province:</b> Alabama</li><li><b>ZIP/Postal Code:</b> 11111</li><li><b>Country:</b> Afghanistan</li></ul></div><br /><br />',
-      'Advanced address (Value)' => '<div class="address" translate="no"><span class="given-name">John</span> <span class="family-name">Smith</span><br>
-<span class="organization">Google Inc.</span><br>
-<span class="address-line1">1098 Alta Ave</span><br>
-<span class="locality">Mountain View</span>, <span class="administrative-area">CA</span> <span class="postal-code">94043</span><br>
-<span class="country">United States</span></div>',
-      'Advanced address (Raw value)' => '<div class="item-list"><ul><li><b>given_name:</b> John</li><li><b>family_name:</b> Smith</li><li><b>organization:</b> Google Inc.</li><li><b>address_line1:</b> 1098 Alta Ave</li><li><b>postal_code:</b> 94043</li><li><b>locality:</b> Mountain View</li><li><b>administrative_area:</b> CA</li><li><b>country_code:</b> US</li><li><b>langcode:</b> en</li></ul>',
-      'Advanced address (List)' => '<div class="item-list"><ul><li><b>Given name:</b> John</li><li><b>Family name:</b> Smith</li><li><b>Organization:</b> Google Inc.</li><li><b>Address line 1:</b> 1098 Alta Ave</li><li><b>Postal code:</b> 94043</li><li><b>Locality:</b> Mountain View</li><li><b>Administrative area:</b> CA</li><li><b>Country code:</b> US</li><li><b>Language code:</b> en</li></ul>',
-      'Link (Value)' => '<a href="http://example.com">Loremipsum</a>',
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertContains('<b>' . $label . '</b><br />' . $value, $body, new FormattableMarkup('Found @label: @value', ['@label' => $label, '@value' => $value]));
-    }
-
-    // Check composite elements formatted as text.
-    $body = $this->getMessageBody($submission, 'email_text');
-    $elements = [
-      'Link (Value): Loremipsum (http://example.com)',
-      'Likert (Value):
-Please answer question 1?: 1
-How about now answering question 2?: 1
-Finally, here is question 3?: 1',
-      'Likert (Raw value):
-q1: 1
-q2: 1
-q3: 1',
-      'Likert (List):
-Please answer question 1?: 1
-How about now answering question 2?: 1
-Finally, here is question 3?: 1',
-      'Likert (Table):
-Please answer question 1?: 1
-How about now answering question 2?: 1
-Finally, here is question 3?: 1',
-      'Basic address (Value):
-10 Main Street
-10 Main Street
-Springfield, Alabama. 11111
-Afghanistan',
-      'Basic address (Raw value):
-address: 10 Main Street
-address_2: 10 Main Street
-city: Springfield
-state_province: Alabama
-postal_code: 11111
-country: Afghanistan',
-      'Basic address (List):
-Address: 10 Main Street
-Address 2: 10 Main Street
-City/Town: Springfield
-State/Province: Alabama
-ZIP/Postal Code: 11111
-Country: Afghanistan',
-      'Advanced address (Value):
-John Smith
-Google Inc.
-1098 Alta Ave
-Mountain View, CA 94043
-United States',
-      'Advanced address (Raw value):
-given_name: John
-family_name: Smith
-organization: Google Inc.
-address_line1: 1098 Alta Ave
-postal_code: 94043
-locality: Mountain View
-administrative_area: CA
-country_code: US
-langcode: en',
-      'Advanced address (List):
-Given name: John
-Family name: Smith
-Organization: Google Inc.
-Address line 1: 1098 Alta Ave
-Postal code: 94043
-Locality: Mountain View
-Administrative area: CA
-Country code: US
-Language code: en',
-    ];
-    foreach ($elements as $value) {
-      $this->assertContains($value, $body, new FormattableMarkup('Found @value', ['@value' => $value]));
-    }
-
-    /**************************************************************************/
-    /* Format composite multiple element as HTML and text */
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_composite_format_multiple');
-    $sid = $this->postSubmission($webform);
-    $submission = WebformSubmission::load($sid);
-
-    // Check composite elements item formatted as HTML.
-    $body = $this->getMessageBody($submission, 'email_html');
-
-    // Remove all spaces between tags to that we can easily check the output.
-    $body = preg_replace('/>\s+</ims', '><', $body);
-    $body = str_replace('<b>', PHP_EOL . '<b>', $body);
-    $this->debug($body);
-
-    $elements = [
-      'Basic address (Ordered list)' => '<div class="item-list"><ol><li>10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan</li><li>10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan</li><li>10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan</li></ol></div>',
-      'Basic address (Unordered list)' => '<div class="item-list"><ul><li>10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan</li><li>10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan</li><li>10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan</li></ul></div>',
-      'Basic address (Horizontal rule)' => '10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan<hr class="webform-horizontal-rule" />10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan<hr class="webform-horizontal-rule" />10 Main Street<br />10 Main Street<br />Springfield, Alabama. 11111<br />Afghanistan',
-      'Basic address (Table)' => '<table width="100%" cellspacing="0" cellpadding="5" border="1" class="responsive-enabled" data-striping="1"><thead><tr><th bgcolor="#eee">Address</th><th bgcolor="#eee">Address 2</th><th bgcolor="#eee">City/Town</th><th bgcolor="#eee">State/Province</th><th bgcolor="#eee">ZIP/Postal Code</th><th bgcolor="#eee">Country</th></tr></thead><tbody><tr class="odd"><td>10 Main Street</td><td>10 Main Street</td><td>Springfield</td><td>Alabama</td><td>11111</td><td>Afghanistan</td></tr><tr class="even"><td>10 Main Street</td><td>10 Main Street</td><td>Springfield</td><td>Alabama</td><td>11111</td><td>Afghanistan</td></tr><tr class="odd"><td>10 Main Street</td><td>10 Main Street</td><td>Springfield</td><td>Alabama</td><td>11111</td><td>Afghanistan</td></tr></tbody></table>',
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertContains('<b>' . $label . '</b><br />' . $value, $body, new FormattableMarkup('Found @label: @value', ['@label' => $label, '@value' => $value]));
-    }
-
-    // Check composite elements formatted as text.
-    $body = $this->getMessageBody($submission, 'email_text');
-    $elements = [
-      'Basic address (Ordered list):
-1. 10 Main Street
-   10 Main Street
-   Springfield, Alabama. 11111
-   Afghanistan
-2. 10 Main Street
-   10 Main Street
-   Springfield, Alabama. 11111
-   Afghanistan
-3. 10 Main Street
-   10 Main Street
-   Springfield, Alabama. 11111
-   Afghanistan',
-      'Basic address (Unordered list):
-- 10 Main Street
-  10 Main Street
-  Springfield, Alabama. 11111
-  Afghanistan
-- 10 Main Street
-  10 Main Street
-  Springfield, Alabama. 11111
-  Afghanistan
-- 10 Main Street
-  10 Main Street
-  Springfield, Alabama. 11111
-  Afghanistan',
-      'Basic address (Horizontal rule):
-10 Main Street
-10 Main Street
-Springfield, Alabama. 11111
-Afghanistan
----
-10 Main Street
-10 Main Street
-Springfield, Alabama. 11111
-Afghanistan
----
-10 Main Street
-10 Main Street
-Springfield, Alabama. 11111
-Afghanistan',
-    ];
-    foreach ($elements as $value) {
-      $this->assertContains($value, $body, new FormattableMarkup('Found @value', ['@value' => $value]));
-    }
-  }
-
-  /**
-   * Get webform email message body for a webform submission.
-   *
-   * @param \Drupal\webform\WebformSubmissionInterface $submission
-   *   A webform submission.
-   * @param string $handler_id
-   *   The webform email handler id.
-   *
-   * @return string
-   *   The webform email message body for a webform submission.
-   */
-  protected function getMessageBody(WebformSubmissionInterface $submission, $handler_id = 'email_html') {
-    /** @var \Drupal\webform\Plugin\WebformHandlerMessageInterface $message_handler */
-    $message_handler = $submission->getWebform()->getHandler($handler_id);
-    $message = $message_handler->getMessage($submission);
-    $body = (string) $message['body'];
-    $this->verbose($body);
-    return $body;
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginFileTest.php b/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginFileTest.php
deleted file mode 100644
index ff9da752..00000000
--- a/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginFileTest.php
+++ /dev/null
@@ -1,103 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Composite;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\Element\WebformElementManagedFileTestBase;
-
-/**
- * Tests for composite plugin file upload.
- *
- * @group Webform
- */
-class WebformCompositePluginFileTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_test_element'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_comp_file_plugin'];
-
-  /**
-   * Test composite plugin.
-   */
-  public function testPlugin() {
-    $webform = Webform::load('test_element_comp_file_plugin');
-
-    $first_file = $this->files[0];
-    $second_file = $this->files[1];
-
-    /**************************************************************************/
-    // Single composite with file upload.
-    /**************************************************************************/
-
-    // Create submission with file.
-    $edit = [
-      'webform_test_composite_file[textfield]' => '{textfield}',
-      'files[webform_test_composite_file_managed_file]' => \Drupal::service('file_system')->realpath($first_file->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $webform_submission = WebformSubmission::load($sid);
-
-    $fid = $this->getLastFileId();
-    $file = File::load($fid);
-
-    // Check file permanent.
-    $this->assert($file->isPermanent(), 'Test file is permanent');
-
-    // Check file upload.
-    $element_data = $webform_submission->getElementData('webform_test_composite_file');
-    $this->assertEqual($element_data['managed_file'], $fid, 'Test file was upload to the current submission');
-
-    // Check test file file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($file), 'The file has 1 usage.');
-
-    // Check test file uploaded file path.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_element_comp_file_plugin/' . $sid . '/' . $first_file->filename);
-
-    // Check that test file exists.
-    $this->assert(file_exists($file->getFileUri()), 'File exists');
-
-    /**************************************************************************/
-    // Multiple composite with file upload.
-    /**************************************************************************/
-
-    // Create submission with file.
-    $edit = [
-      'webform_test_composite_file_multiple_header[items][0][textfield]' => '{textfield}',
-      'files[webform_test_composite_file_multiple_header_items_0_managed_file]' => \Drupal::service('file_system')->realpath($second_file->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $webform_submission = WebformSubmission::load($sid);
-
-    $fid = $this->getLastFileId();
-    $file = File::load($fid);
-
-    // Check file permanent.
-    $this->assert($file->isPermanent(), 'Test file is permanent');
-
-    // Check file upload.
-    $element_data = $webform_submission->getElementData('webform_test_composite_file_multiple_header');
-    $this->assertEqual($element_data[0]['managed_file'], $fid, 'Test file was upload to the current submission');
-
-    // Check test file file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($file), 'The file has 1 usage.');
-
-    // Check test file uploaded file path.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_element_comp_file_plugin/' . $sid . '/' . $second_file->filename);
-
-    // Check that test file exists.
-    $this->assert(file_exists($file->getFileUri()), 'File exists');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginTest.php b/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginTest.php
deleted file mode 100644
index f71b51b7..00000000
--- a/modules/contrib/webform/src/Tests/Composite/WebformCompositePluginTest.php
+++ /dev/null
@@ -1,85 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Composite;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for composite plugin.
- *
- * @group Webform
- */
-class WebformCompositePluginTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_test_element'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_composite_plugin'];
-
-  /**
-   * Test composite plugin.
-   */
-  public function testPlugin() {
-
-    /* Display */
-
-    $this->drupalGet('/webform/test_element_composite_plugin');
-
-    // Check fieldset with nested elements is rendered.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-test-composite-fieldset" id="edit-webform-test-composite-fieldset" class="js-webform-type-fieldset webform-type-fieldset js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="fieldset-legend">fieldset</span>');
-
-    /* Processing */
-
-    // Check processing simple composite.
-    $edit = [
-      'webform_test_composite[textfield]' => '{textfield}',
-      'webform_test_composite[email]' => 'email@email.com',
-      'webform_test_composite[webform_email_confirm][mail_1]' => 'email@email.com',
-      'webform_test_composite[webform_email_confirm][mail_2]' => 'email@email.com',
-      'webform_test_composite[tel]' => '123-456-7890',
-      'webform_test_composite[select]' => 'one',
-      'webform_test_composite[radios]' => 'one',
-      'webform_test_composite[date]' => '2018-01-01',
-      'webform_test_composite[webform_entity_select]' => '',
-      'webform_test_composite[entity_autocomplete]' => '',
-      'webform_test_composite[datelist][year]' => '2018',
-      'webform_test_composite[datelist][month]' => '1',
-      'webform_test_composite[datelist][day]' => '1',
-      'webform_test_composite[datelist][hour]' => '1',
-      'webform_test_composite[datelist][minute]' => '1',
-      'webform_test_composite[datetime][date]' => '2018-03-21',
-      'webform_test_composite[datetime][time]' => '23:19:25',
-      'webform_test_composite[nested_tel]' => '123-456-7890',
-      'webform_test_composite[nested_select]' => 'Monday',
-      'webform_test_composite[nested_radios]' => 'Monday',
-    ];
-    $this->drupalPostForm('webform/test_element_composite_plugin', $edit, t('Submit'));
-    $this->assertRaw("webform_test_composite:
-  textfield: '{textfield}'
-  email: email@email.com
-  webform_email_confirm: email@email.com
-  tel: 123-456-7890
-  select: one
-  radios: one
-  date: '2018-01-01'
-  webform_entity_select: ''
-  entity_autocomplete: null
-  datelist: '2018-01-01T01:01:00+1100'
-  datetime: '2018-03-21T23:19:25+1100'
-  nested_tel: 123-456-7890
-  nested_select: Monday
-  nested_radios: Monday
-  webform_toggle: ''");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Composite/WebformCompositeTest.php b/modules/contrib/webform/src/Tests/Composite/WebformCompositeTest.php
deleted file mode 100644
index 2b6a98ff..00000000
--- a/modules/contrib/webform/src/Tests/Composite/WebformCompositeTest.php
+++ /dev/null
@@ -1,105 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Composite;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for composite elements.
- *
- * @group Webform
- */
-class WebformCompositeTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_ui'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_composite'];
-
-  /**
-   * Test composite element.
-   */
-  public function testComposite() {
-    /* Display */
-
-    $this->drupalGet('/webform/test_composite');
-
-    // Check webform contact basic.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-contact-basic" id="edit-contact-basic--wrapper" class="webform-contact--wrapper fieldgroup form-composite webform-composite-hidden-title required js-webform-type-webform-contact webform-type-webform-contact js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="visually-hidden fieldset-legend js-form-required form-required">Contact basic</span>');
-    $this->assertRaw('<label for="edit-contact-basic-name" class="js-form-required form-required">Name</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-contact-basic-name" type="text" id="edit-contact-basic-name" name="contact_basic[name]" value="John Smith" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-
-    // Check custom name title, description, and required.
-    $this->assertRaw('<label for="edit-contact-advanced-name" class="js-form-required form-required">Custom contact name</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-contact-advanced-name" aria-describedby="edit-contact-advanced-name--description" type="text" id="edit-contact-advanced-name" name="contact_advanced[name]" value="John Smith" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-    $this->assertRaw('Custom contact name description');
-
-    // Check custom state type and not required.
-    $this->assertRaw('<label for="edit-contact-advanced-state-province">State/Province</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-contact-advanced-state-province" type="text" id="edit-contact-advanced-state-province" name="contact_advanced[state_province]" value="New Jersey" size="60" maxlength="255" class="form-text" />');
-
-    // Check custom country access.
-    $this->assertNoRaw('edit-contact-advanced-country');
-
-    // Check link multiple in table.
-    $this->assertRaw('<label>Link multiple</label>');
-    $this->assertRaw('<th class="link_multiple-table--title webform-multiple-table--title">Link Title<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Link Title&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is link title help&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<th class="link_multiple-table--url webform-multiple-table--url">Link URL<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Link URL&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is link url help&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    /* Processing */
-
-    // Check contact composite value.
-    $this->drupalPostForm('webform/test_composite', [], t('Submit'));
-    $this->assertRaw("contact_basic:
-  name: 'John Smith'
-  company: Acme
-  email: example@example.com
-  phone: 123-456-7890
-  address: '100 Main Street'
-  address_2: 'PO BOX 999'
-  city: 'Hill Valley'
-  state_province: 'New Jersey'
-  postal_code: 11111-1111
-  country: 'United States'");
-
-    // Check contact validate required composite elements.
-    $edit = [
-      'contact_basic[name]' => '',
-    ];
-    $this->drupalPostForm('webform/test_composite', $edit, t('Submit'));
-    $this->assertRaw('Name field is required.');
-
-    /* Custom options */
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check editing custom options are renderd.
-    $this->drupalGet('/webform/test_composite');
-    $this->assertRaw('<select data-drupal-selector="edit-address-custom-options-state-province" id="edit-address-custom-options-state-province" name="address_custom_options[state_province]" class="form-select"><option value="" selected="selected">- None -</option><option value="Yes">Yes</option><option value="No">No</option></select>');
-    $this->assertRaw('<select data-drupal-selector="edit-address-custom-options-country" id="edit-address-custom-options-country" name="address_custom_options[country]" class="form-select"><option value="" selected="selected">- None -</option><option value="one">One</option><option value="two">Two</option><option value="three">Three</option></select>');
-
-    // Check composite element with custom options warning message.
-    $this->drupalGet('/admin/structure/webform/manage/test_composite/element/address_custom_options/edit');
-    $this->assertRaw('<em>Custom options can only be updated via the <a href="' . base_path() . 'admin/structure/webform/manage/test_composite/source">YAML source</a>.</em>');
-
-    // Save composite element with custom options.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_composite/element/address_custom_options/edit', [], t('Save'));
-
-    // Check editing custom options are not removed.
-    $this->drupalGet('/webform/test_composite');
-    $this->assertRaw('<select data-drupal-selector="edit-address-custom-options-state-province" id="edit-address-custom-options-state-province" name="address_custom_options[state_province]" class="form-select"><option value="" selected="selected">- None -</option><option value="Yes">Yes</option><option value="No">No</option></select>');
-    $this->assertRaw('<select data-drupal-selector="edit-address-custom-options-country" id="edit-address-custom-options-country" name="address_custom_options[country]" class="form-select"><option value="" selected="selected">- None -</option><option value="one">One</option><option value="two">Two</option><option value="three">Three</option></select>');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementAccessTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementAccessTest.php
deleted file mode 100644
index 14dbc737..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementAccessTest.php
+++ /dev/null
@@ -1,203 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform element access.
- *
- * @group Webform
- */
-class WebformElementAccessTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_ui'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_access'];
-
-  /**
-   * Test element access.
-   */
-  public function testAccess() {
-    $normal_user = $this->drupalCreateUser([
-      'access user profiles',
-    ]);
-
-    $admin_submission_user = $this->drupalCreateUser([
-      'access user profiles',
-      'administer webform submission',
-    ]);
-
-    $own_submission_user = $this->drupalCreateUser([
-      'access user profiles',
-      'access webform overview',
-      'create webform',
-      'edit own webform',
-      'delete own webform',
-      'view own webform submission',
-      'edit own webform submission',
-      'delete own webform submission',
-    ]);
-
-    $webform = Webform::load('test_element_access');
-
-    /**************************************************************************/
-
-    // Check user from USER:1 to admin submission user.
-    $elements = $webform->get('elements');
-    $elements = str_replace('      - 1', '      - ' . $admin_submission_user->id(), $elements);
-    $elements = str_replace('USER:1', 'USER:' . $admin_submission_user->id(), $elements);
-    $webform->set('elements', $elements);
-    $webform->save();
-
-    // Create a webform submission.
-    $this->drupalLogin($normal_user);
-    $sid = $this->postSubmission($webform);
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check admins have 'administer webform element access' permission.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/admin/structure/webform/manage/test_element_access/element/access_create_roles_anonymous/edit');
-    $this->assertFieldById('edit-properties-access-create-roles-anonymous');
-
-    // Check webform builder don't have 'administer webform element access'
-    // permission.
-    $this->drupalLogin($own_submission_user);
-    $this->drupalGet('/admin/structure/webform/manage/test_element_access/element/access_create_roles_anonymous/edit');
-    $this->assertNoFieldById('edit-properties-access-create-roles-anonymous');
-
-    /* Create access */
-
-    // Check anonymous role access.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_element_access');
-    $this->assertFieldByName('access_create_roles_anonymous');
-    $this->assertNoFieldByName('access_create_roles_authenticated');
-    $this->assertNoFieldByName('access_create_users');
-    $this->assertNoFieldByName('access_create_permissions');
-
-    // Check authenticated access.
-    $this->drupalLogin($normal_user);
-    $this->drupalGet('/webform/test_element_access');
-    $this->assertNoFieldByName('access_create_roles_anonymous');
-    $this->assertFieldByName('access_create_roles_authenticated');
-    $this->assertNoFieldByName('access_create_users');
-    $this->assertFieldByName('access_create_permissions');
-
-    // Check admin user access.
-    $this->drupalLogin($admin_submission_user);
-    $this->drupalGet('/webform/test_element_access');
-    $this->assertNoFieldByName('access_create_roles_anonymous');
-    $this->assertFieldByName('access_create_roles_authenticated');
-    $this->assertFieldByName('access_create_users');
-    $this->assertFieldByName('access_create_permissions');
-
-    /* Update access */
-
-    // Check anonymous role access.
-    $this->drupalLogout();
-    $this->drupalGet($webform_submission->getTokenUrl());
-    $this->assertFieldByName('access_update_roles_anonymous');
-    $this->assertNoFieldByName('access_update_roles_authenticated');
-    $this->assertNoFieldByName('access_update_users');
-    $this->assertNoFieldByName('access_update_permissions');
-
-    // Check authenticated role access.
-    $this->drupalLogin($normal_user);
-    $this->drupalGet("/webform/test_element_access/submissions/$sid/edit");
-    $this->assertNoFieldByName('access_update_roles_anonymous');
-    $this->assertFieldByName('access_update_roles_authenticated');
-    $this->assertNoFieldByName('access_update_users');
-    $this->assertFieldByName('access_update_permissions');
-
-    // Check admin user access.
-    $this->drupalLogin($admin_submission_user);
-    $this->drupalGet("/admin/structure/webform/manage/test_element_access/submission/$sid/edit");
-    $this->assertNoFieldByName('access_update_roles_anonymous');
-    $this->assertFieldByName('access_update_roles_authenticated');
-    $this->assertFieldByName('access_update_users');
-    $this->assertFieldByName('access_update_permissions');
-
-    /* View, Table, and Download access */
-
-    $urls = [
-      ['path' => "/admin/structure/webform/manage/test_element_access/submission/$sid"],
-      ['path' => '/admin/structure/webform/manage/test_element_access/results/submissions'],
-      ['path' => '/admin/structure/webform/manage/test_element_access/results/download'],
-      ['path' => '/admin/structure/webform/manage/test_element_access/results/download', 'options' => ['query' => ['download' => 1]]],
-    ];
-    foreach ($urls as $url) {
-      $url += ['options' => []];
-
-      // Check anonymous role access.
-      $this->drupalLogout();
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertRaw('access_view_roles (anonymous)');
-      $this->assertNoRaw('access_view_roles (authenticated)');
-      $this->assertNoRaw('access_view_users (USER:' . $admin_submission_user->id() . ')');
-      $this->assertNoRaw('access_view_permissions (access user profiles)');
-
-      // Check authenticated role access.
-      $this->drupalLogin($this->rootUser);
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertNoRaw('access_view_roles (anonymous)');
-      $this->assertRaw('access_view_roles (authenticated)');
-      $this->assertNoRaw('access_view_users (USER:' . $admin_submission_user->id() . ')');
-      $this->assertRaw('access_view_permissions (access user profiles)');
-
-      // Check admin user access.
-      $this->drupalLogin($admin_submission_user);
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertNoRaw('access_view_roles (anonymous)');
-      $this->assertRaw('access_view_roles (authenticated)');
-      $this->assertRaw('access_view_users (USER:' . $admin_submission_user->id() . ')');
-      $this->assertRaw('access_view_permissions (access user profiles)');
-    }
-
-    /* Download token access */
-    $urls = [
-      '<td>token</td>' => [
-        'path' => '/admin/structure/webform/manage/test_element_access/results/download',
-      ],
-      ',Token,' => [
-        'path' => '/admin/structure/webform/manage/test_element_access/results/download',
-        'options' => ['query' => ['download' => 1, 'excluded_columns' => '']],
-      ],
-    ];
-    foreach ($urls as $raw => $url) {
-      $url += ['options' => []];
-
-      // Check anonymous role access.
-      $this->drupalLogout();
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertNoRaw($raw, 'Anonymous user can not access token');
-
-      // Check authenticated role access.
-      $this->drupalLogin($normal_user);
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertNoRaw($raw, 'Authenticated user can not access token');
-
-      // Check admin webform access.
-      $this->drupalLogin($this->rootUser);
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertRaw($raw, 'Admin webform user can access token');
-
-      // Check admin submission access.
-      $this->drupalLogin($admin_submission_user);
-      $this->drupalGet($url['path'], $url['options']);
-      $this->assertRaw($raw, 'Admin submission user can access token');
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementActionsTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementActionsTest.php
deleted file mode 100644
index c0da1e04..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementActionsTest.php
+++ /dev/null
@@ -1,86 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform actions element.
- *
- * @group Webform
- */
-class WebformElementActionsTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_actions', 'test_element_actions_buttons'];
-
-  /**
-   * Tests actions element.
-   */
-  public function testActions() {
-    /* Test webform actions */
-
-    // Get form.
-    $this->drupalGet('/webform/test_element_actions');
-
-    // Check custom actions.
-    $this->assertRaw('<div style="border: 2px solid red; padding: 10px" data-drupal-selector="edit-actions-custom" class="form-actions webform-actions js-form-wrapper form-wrapper" id="edit-actions-custom">');
-    $this->assertRaw('<input formnovalidate="formnovalidate" class="webform-button--draft custom-draft button js-form-submit form-submit" style="font-weight: bold" data-custom-draft data-drupal-selector="edit-actions-custom-draft" type="submit" id="edit-actions-custom-draft" name="op" value="{Custom draft}" />');
-    $this->assertRaw('<input class="webform-button--next custom-wizard-next button js-form-submit form-submit" style="font-weight: bold" data-custom-wizard-next data-drupal-selector="edit-actions-custom-wizard-next" type="submit" id="edit-actions-custom-wizard-next" name="op" value="{Custom wizard next}" />');
-    $this->assertRaw('<input formnovalidate="formnovalidate" class="webform-button--reset custom-reet button js-form-submit form-submit" style="font-weight: bold" data-custom-reset data-drupal-selector="edit-actions-custom-reset" type="submit" id="edit-actions-custom-reset" name="op" value="{Custom reset}" />');
-
-    // Check wizard next.
-    $this->assertRaw('id="edit-actions-wizard-next-wizard-next"');
-    $this->assertNoRaw('id="edit-actions-wizard-prev-wizard-prev"');
-
-    // Move to next page.
-    $this->drupalPostForm(NULL, [], t('Next Page >'));
-
-    // Check no wizard next.
-    $this->assertNoRaw('id="edit-actions-wizard-next-wizard-next"');
-    $this->assertRaw('id="edit-actions-wizard-prev-wizard-prev"');
-
-    // Move to preview.
-    $this->drupalPostForm(NULL, [], t('Preview'));
-
-    // Check submit button.
-    $this->assertRaw('id="edit-actions-submit-submit"');
-
-    // Check reset button.
-    $this->assertRaw('id="edit-actions-reset-reset"');
-
-    // Submit form.
-    $this->drupalPostForm(NULL, [], t('Submit'));
-
-    // Check no actions.
-    $this->assertNoRaw('form-actions');
-
-    /* Test actions buttons */
-    $this->drupalLogin($this->rootUser);
-
-    $this->drupalGet('/webform/test_element_actions_buttons');
-
-    // Check draft button.
-    $this->assertRaw('<input formnovalidate="formnovalidate" class="webform-button--draft draft_button_attributes button js-form-submit form-submit" style="color: blue" data-drupal-selector="edit-actions-draft" type="submit" id="edit-actions-draft" name="op" value="Save Draft" />');
-    // Check next button.
-    $this->assertRaw('<input class="webform-button--next wizard_next_button_attributes button js-form-submit form-submit" style="color: yellow" data-drupal-selector="edit-actions-wizard-next" type="submit" id="edit-actions-wizard-next" name="op" value="Next Page &gt;" />');
-
-    $this->drupalPostForm('webform/test_element_actions_buttons', [], t('Next Page >'));
-
-    // Check previous button.
-    $this->assertRaw('<input formnovalidate="formnovalidate" class="webform-button--previous wizard_prev_button_attributes button js-form-submit form-submit" style="color: yellow" data-drupal-selector="edit-actions-wizard-prev" type="submit" id="edit-actions-wizard-prev" name="op" value="&lt; Previous Page" />');
-    // Check preview button.
-    $this->assertRaw('<input class="webform-button--preview preview_next_button_attributes button js-form-submit form-submit" style="color: orange" data-drupal-selector="edit-actions-preview-next" type="submit" id="edit-actions-preview-next" name="op" value="Preview" />');
-
-    $this->drupalPostForm(NULL, [], t('Preview'));
-
-    // Check previous button.
-    $this->assertRaw('<input formnovalidate="formnovalidate" class="webform-button--previous preview_prev_button_attributes button js-form-submit form-submit" style="color: orange" data-drupal-selector="edit-actions-preview-prev" type="submit" id="edit-actions-preview-prev" name="op" value="&lt; Previous" />');
-    // Check submit button.
-    $this->assertRaw('<input class="webform-button--submit form_submit_attributes button button--primary js-form-submit form-submit" style="color: green" data-drupal-selector="edit-actions-submit" type="submit" id="edit-actions-submit" name="op" value="Submit" />');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementAddressTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementAddressTest.php
deleted file mode 100644
index 4a4dea09..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementAddressTest.php
+++ /dev/null
@@ -1,155 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\field\Entity\FieldStorageConfig;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform address element.
- *
- * @group Webform
- */
-class WebformElementAddressTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'address', 'node'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_address'];
-
-  /**
-   * Tests address element.
-   */
-  public function testAddress() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_element_address');
-
-    /**************************************************************************/
-    // Rendering.
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_address');
-
-    // Check basic fieldset wrapper.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-address" id="edit-address--wrapper" class="address--wrapper fieldgroup form-composite webform-composite-hidden-title js-webform-type-address webform-type-address js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="visually-hidden fieldset-legend">address_basic</span>');
-
-    // Check advanced fieldset, legend, help, and description.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-address-advanced" aria-describedby="edit-address-advanced--wrapper--description" id="edit-address-advanced--wrapper" class="address--wrapper fieldgroup form-composite webform-composite-visible-title webform-element-help-container--title webform-element-help-container--title-after js-webform-type-address webform-type-address js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="fieldset-legend">address_advanced<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;address_advanced&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<div class="description"><div id="edit-address-advanced--wrapper--description" class="webform-element-description">This is a description</div>');
-
-    /**************************************************************************/
-    // Processing.
-    /**************************************************************************/
-
-    // Check submitted value.
-    $sid = $this->postSubmission($webform);
-    $this->assertRaw("address:
-  country_code: US
-  langcode: en
-  given_name: John
-  family_name: Smith
-  organization: 'Google Inc.'
-  address_line1: '1098 Alta Ave'
-  address_line2: ''
-  locality: 'Mountain View'
-  administrative_area: CA
-  postal_code: '94043'
-  additional_name: null
-  sorting_code: null
-  dependent_locality: null
-address_advanced:
-  country_code: US
-  langcode: en
-  address_line1: '1098 Alta Ave'
-  address_line2: ''
-  locality: 'Mountain View'
-  administrative_area: CA
-  postal_code: '94043'
-  given_name: null
-  additional_name: null
-  family_name: null
-  organization: null
-  sorting_code: null
-  dependent_locality: null
-address_none: null
-address_multiple:
-  - country_code: US
-    langcode: en
-    given_name: John
-    family_name: Smith
-    organization: 'Google Inc.'
-    address_line1: '1098 Alta Ave'
-    address_line2: ''
-    locality: 'Mountain View'
-    administrative_area: CA
-    postal_code: '94043'");
-
-    // Check text formatting.
-    $this->drupalGet("/admin/structure/webform/manage/test_element_address/submission/$sid/text");
-    $this->assertRaw('address_basic:
-John Smith
-Google Inc.
-1098 Alta Ave
-Mountain View, CA 94043
-United States
-
-address_advanced:
-1098 Alta Ave
-Mountain View, CA 94043
-United States
-
-address_none:
-{Empty}
-
-address_multiple:
-- John Smith
-  Google Inc.
-  1098 Alta Ave
-  Mountain View, CA 94043
-  United States');
-
-    /**************************************************************************/
-    // Schema.
-    /**************************************************************************/
-
-    $field_storage = FieldStorageConfig::create([
-      'entity_type' => 'node',
-      'field_name' => 'address',
-      'type' => 'address',
-    ]);
-    $schema = $field_storage->getSchema();
-
-    /** @var \Drupal\webform\Plugin\WebformElementManagerInterface $element_manager */
-    $element_manager = \Drupal::service('plugin.manager.webform.element');
-    /** @var \Drupal\webform\Plugin\WebformElement\Address $element_plugin */
-    $element_plugin = $element_manager->getElementInstance(['#type' => 'address']);
-
-    // Get webform address element plugin.
-    $element = [];
-    $element_plugin->initializeCompositeElements($element);
-
-    // Check composite elements against address schema.
-    $composite_elements = $element['#webform_composite_elements'];
-    $diff_composite_elements = array_diff_key($composite_elements, $schema['columns']);
-    $this->debug($diff_composite_elements);
-    $this->assert(empty($diff_composite_elements));
-
-    // Check composite elements maxlength against address schema.
-    foreach ($schema['columns'] as $column_name => $column) {
-      $this->assertEqual($composite_elements[$column_name]['#maxlength'], $column['length']);
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementAllowsTagsTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementAllowsTagsTest.php
deleted file mode 100644
index ea5c7522..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementAllowsTagsTest.php
+++ /dev/null
@@ -1,40 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for element allowed tags.
- *
- * @group Webform
- */
-class WebformElementAllowsTagsTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_allowed_tags'];
-
-  /**
-   * Test element allowed tags.
-   */
-  public function testAllowsTags() {
-    // Check <b> tags is allowed.
-    $this->drupalGet('/webform/test_element_allowed_tags');
-    $this->assertRaw('Hello <b>…Goodbye</b>');
-
-    // Check custom <ignored> <tag> is allowed and <b> tag removed.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.allowed_tags', 'ignored tag')
-      ->save();
-    $this->drupalGet('/webform/test_element_allowed_tags');
-    $this->assertRaw('Hello <ignored></tag>…Goodbye');
-
-    // Restore admin tags.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.allowed_tags', 'admin')
-      ->save();
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementAttributesTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementAttributesTest.php
deleted file mode 100644
index 80031832..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementAttributesTest.php
+++ /dev/null
@@ -1,34 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform element attributes.
- *
- * @group Webform
- */
-class WebformElementAttributesTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_attributes'];
-
-  /**
-   * Tests element attributes.
-   */
-  public function testAttributes() {
-    // Check default value handling.
-    $this->drupalPostForm('webform/test_element_attributes', [], t('Submit'));
-    $this->assertRaw("webform_element_attributes:
-  class:
-    - one
-    - two
-    - four
-  style: 'color: red'
-  custom: test");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementAutocompleteTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementAutocompleteTest.php
deleted file mode 100644
index 1e957d00..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementAutocompleteTest.php
+++ /dev/null
@@ -1,90 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform autocomplete element.
- *
- * @group Webform
- */
-class WebformElementAutocompleteTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_autocomplete'];
-
-  /**
-   * Tests autocomplete element.
-   */
-  public function testAutocomplete() {
-    global $base_path;
-
-    $this->drupalLogin($this->rootUser);
-
-    /* Test #autocomplete property */
-
-    $this->drupalGet('/webform/test_element_autocomplete');
-    $this->assertRaw('<input autocomplete="off" data-drupal-selector="edit-autocomplete-off" type="email" id="edit-autocomplete-off" name="autocomplete_off" value="" size="60" maxlength="254" class="form-email" />');
-
-    /* Test #autocomplete_items element property */
-
-    // Check routes data-drupal-selector.
-    $this->drupalGet('/webform/test_element_autocomplete');
-    $this->assertRaw('<input data-drupal-selector="edit-autocomplete-items" class="form-autocomplete form-text webform-autocomplete" data-autocomplete-path="' . $base_path . 'webform/test_element_autocomplete/autocomplete/autocomplete_items" type="text" id="edit-autocomplete-items" name="autocomplete_items" value="" size="60" maxlength="255" />');
-
-    // Check #autocomplete_items partial match.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_items', ['query' => ['q' => 'United']]);
-    $this->assertRaw('[{"value":"United Arab Emirates","label":"United Arab Emirates"},{"value":"United Kingdom","label":"United Kingdom"},{"value":"United States","label":"United States"}]');
-
-    // Check #autocomplete_items exact match.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_items', ['query' => ['q' => 'United States']]);
-    $this->assertRaw('[{"value":"United States","label":"United States"}]');
-
-    // Check #autocomplete_items just one character.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_items', ['query' => ['q' => 'U']]);
-    $this->assertRaw('[{"value":"Anguilla","label":"Anguilla"},{"value":"Antigua and Barbuda","label":"Antigua and Barbuda"},{"value":"Aruba","label":"Aruba"},{"value":"Australia","label":"Australia"},{"value":"Austria","label":"Austria"}]');
-
-    /* Test #autocomplete_existing element property */
-
-    // Check autocomplete is not enabled until there is a submission.
-    $this->drupalGet('/webform/test_element_autocomplete');
-    $this->assertNoRaw('<input data-drupal-selector="edit-autocomplete-existing" class="form-autocomplete form-text" data-autocomplete-path="' . $base_path . 'webform/test_element_autocomplete/autocomplete/autocomplete_existing" type="text" id="edit-autocomplete-existing" name="autocomplete_existing" value="" size="60" maxlength="255" />');
-    $this->assertRaw('<input data-drupal-selector="edit-autocomplete-existing" type="text" id="edit-autocomplete-existing" name="autocomplete_existing" value="" size="60" maxlength="255" class="form-text webform-autocomplete" />');
-
-    // Check #autocomplete_existing no match.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_existing', ['query' => ['q' => 'abc']]);
-    $this->assertRaw('[]');
-
-    // Add #autocomplete_existing values to the submission table.
-    $this->drupalPostForm('webform/test_element_autocomplete', ['autocomplete_existing' => 'abcdefg'], t('Submit'));
-
-    // Check #autocomplete_existing enabled now that there is submission.
-    $this->drupalGet('/webform/test_element_autocomplete');
-    $this->assertRaw('<input data-drupal-selector="edit-autocomplete-existing" class="form-autocomplete form-text webform-autocomplete" data-autocomplete-path="' . $base_path . 'webform/test_element_autocomplete/autocomplete/autocomplete_existing" type="text" id="edit-autocomplete-existing" name="autocomplete_existing" value="" size="60" maxlength="255" />');
-    $this->assertNoRaw('<input data-drupal-selector="edit-autocomplete-existing" type="text" id="edit-autocomplete-existing" name="autocomplete_existing" value="" size="60" maxlength="255" class="form-text webform-autocomplete" />');
-
-    // Check #autocomplete_existing match.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_existing', ['query' => ['q' => 'abc']]);
-    $this->assertNoRaw('[]');
-    $this->assertRaw('[{"value":"abcdefg","label":"abcdefg"}]');
-
-    // Check #autocomplete_existing minimum number of characters < 3.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_existing', ['query' => ['q' => 'ab']]);
-    $this->assertRaw('[]');
-    $this->assertNoRaw('[{"value":"abcdefg","label":"abcdefg"}]');
-
-    /* Test #autocomplete_existing and #autocomplete_items element property */
-
-    // Add #autocomplete_body values to the submission table.
-    $this->drupalPostForm('webform/test_element_autocomplete', ['autocomplete_both' => 'Existing Item'], t('Submit'));
-
-    // Check #autocomplete_both match.
-    $this->drupalGet('/webform/test_element_autocomplete/autocomplete/autocomplete_both', ['query' => ['q' => 'Item']]);
-    $this->assertNoRaw('[]');
-    $this->assertRaw('[{"value":"Example Item","label":"Example Item"},{"value":"Existing Item","label":"Existing Item"}]');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCaptchaTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCaptchaTest.php
deleted file mode 100644
index c5c48f26..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCaptchaTest.php
+++ /dev/null
@@ -1,94 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for CAPTCHA element.
- *
- * @group Webform
- */
-class WebformElementCaptchaTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_captcha'];
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'captcha'];
-
-  /**
-   * Test CAPTCHA element.
-   */
-  public function testCaptcha() {
-    $this->drupalGet('/webform/test_element_captcha');
-
-    // Check default title and description.
-    $this->assertRaw('<label for="edit-captcha-response" class="js-form-required form-required">Math question</label>');
-    $this->assertRaw('Solve this simple math problem and enter the result. E.g. for 1+3, enter 4.');
-
-    // Check CAPTCHA element custom title and description.
-    $this->assertRaw('<label for="edit-captcha-response--4" class="js-form-required form-required">{captcha_math_title}</label>');
-    $this->assertRaw('{captcha_math_description}');
-
-    // Enable CAPTCHA admin mode.
-    \Drupal::configFactory()
-      ->getEditable('captcha.settings')
-      ->set('administration_mode', TRUE)
-      ->save();
-
-    // Login root user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check add CAPTCHA element text.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('CAPTCHA should be added as an element to this webform.');
-
-    // Check replace CAPTCHA element text.
-    $this->drupalGet('/webform/test_element_captcha');
-    $this->assertNoRaw('/admin/structure/webform/manage/test_element_captcha/element/captcha/edit');
-    $this->assertRaw('Untrusted users will see a CAPTCHA element on this webform.');
-
-    // Install the Webform UI.
-    \Drupal::service('module_installer')->install(['webform_ui']);
-
-    // Check add CAPTCHA element text.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('Add CAPTCHA element to this webform for untrusted users.');
-
-    // Check replace CAPTCHA element text.
-    $this->drupalGet('/webform/test_element_captcha');
-    $this->assertRaw('/admin/structure/webform/manage/test_element_captcha/element/captcha/edit');
-    $this->assertRaw('Untrusted users will see a CAPTCHA element on this webform.');
-
-    // Disable replace CAPTCHA admin mode.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('third_party_settings.captcha.replace_administration_mode', FALSE)
-      ->save();
-
-    // Check add CAPTCHA not replaced.
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('Add CAPTCHA element to this webform for untrusted users.');
-    $this->assertRaw('Place a CAPTCHA here for untrusted users.');
-
-    // Enabled replace CAPTCHA admin mode and exclude the CAPTCHA element.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('element.excluded_elements', ['captcha' => 'captcha'])
-      ->set('third_party_settings.captcha.replace_administration_mode', FALSE)
-      ->save();
-
-    // Check add CAPTCHA is still not replaced.
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('Add CAPTCHA element to this webform for untrusted users.');
-    $this->assertRaw('Place a CAPTCHA here for untrusted users.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxValueTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxValueTest.php
deleted file mode 100644
index 1e49a5f9..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxValueTest.php
+++ /dev/null
@@ -1,42 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform checkbox value element.
- *
- * @group Webform
- */
-class WebformElementCheckboxValueTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_checkbox_value'];
-
-  /**
-   * Tests checkbox value element.
-   */
-  public function testCheckboxValue() {
-    $webform = Webform::load('test_element_checkbox_value');
-
-    // Check submitted values.
-    $this->postSubmission($webform);
-    $this->assertRaw("checkbox_value_empty: ''
-checkbox_value_filled: '{default_value}'
-checkbox_value_select_other: Four");
-
-    // Check validation.
-    $edit = [
-      'checkbox_value_empty[checkbox]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('Enter a value field is required.');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxesTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxesTest.php
deleted file mode 100644
index acdd6cc7..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCheckboxesTest.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform checkboxes element.
- *
- * @group Webform
- */
-class WebformElementCheckboxesTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_checkboxes'];
-
-  /**
-   * Tests checkbox and checkboxes element.
-   */
-  public function testCheckboxes() {
-    $webform = Webform::load('test_element_checkboxes');
-
-    $this->drupalGet('/webform/test_element_checkboxes');
-
-    // Check checkboxes displayed as buttons.
-    $this->assertRaw('<div id="edit-checkboxes-buttons" class="js-webform-checkboxes webform-options-display-buttons form-checkboxes"><div class="webform-options-display-buttons-wrapper">');
-    $this->assertRaw('<input data-drupal-selector="edit-checkboxes-buttons-yes" class="visually-hidden form-checkbox" type="checkbox" id="edit-checkboxes-buttons-yes" name="checkboxes_buttons[Yes]" value="Yes" />');
-    $this->assertRaw('<label class="webform-options-display-buttons-label option" for="edit-checkboxes-buttons-yes">Yes</label>');
-
-    // Check checkboxes displayed as buttons with description.
-    $this->assertRaw('<label class="webform-options-display-buttons-label option" for="edit-checkboxes-buttons-description-one"><div class="webform-options-display-buttons-title">One</div><div class="webform-options-display-buttons-description description">This is a description</div></label>');
-
-    // Check exclude empty is not visible.
-    $edit = [
-      'checkboxes_required_conditions[Yes]' => TRUE,
-      'checkboxes_other_required_conditions[checkboxes][Yes]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit, t('Preview'));
-    $this->assertNoRaw('<label>checkbox_exclude_empty</label>');
-
-    // Uncheck #exclude_empty.
-    $webform->setElementProperties('checkbox_exclude_empty', ['#type' => 'checkbox', '#title' => 'checkbox_exclude_empty']);
-    $webform->save();
-
-    // Check exclude empty is visible.
-    $edit = [
-      'checkboxes_required_conditions[Yes]' => TRUE,
-      'checkboxes_other_required_conditions[checkboxes][Yes]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit, t('Preview'));
-    $this->assertRaw('<label>checkbox_exclude_empty</label>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCodeMirrorTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCodeMirrorTest.php
deleted file mode 100644
index b9bbf283..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCodeMirrorTest.php
+++ /dev/null
@@ -1,131 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform CodeMirror element.
- *
- * @group Webform
- */
-class WebformElementCodeMirrorTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_codemirror'];
-
-  /**
-   * Tests CodeMirror element.
-   */
-  public function testCodeMirror() {
-
-    /**************************************************************************/
-    // code:text
-    /**************************************************************************/
-
-    // Check Text.
-    $this->drupalGet('/webform/test_element_codemirror');
-    $this->assertRaw('<label for="edit-text-basic">text_basic</label>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-text-basic" class="js-webform-codemirror webform-codemirror text form-textarea resize-vertical" data-webform-codemirror-mode="text/plain" id="edit-text-basic" name="text_basic" rows="5" cols="60">Hello</textarea>');
-
-    // Check Text with no wrap.
-    $this->drupalGet('/webform/test_element_codemirror');
-    $this->assertRaw('<label for="edit-text-basic-no-wrap">text_basic_no_wrap</label>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-text-basic-no-wrap" wrap="off" class="js-webform-codemirror webform-codemirror text form-textarea resize-vertical" data-webform-codemirror-mode="text/plain" id="edit-text-basic-no-wrap" name="text_basic_no_wrap" rows="5" cols="60">');
-
-    /**************************************************************************/
-    // code:yaml
-    /**************************************************************************/
-
-    // Check YAML.
-    $this->drupalGet('/webform/test_element_codemirror');
-    $this->assertRaw('<label for="edit-yaml-basic">yaml_basic</label>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-yaml-basic" class="js-webform-codemirror webform-codemirror yaml form-textarea resize-vertical" data-webform-codemirror-mode="text/x-yaml" id="edit-yaml-basic" name="yaml_basic" rows="5" cols="60">test: hello</textarea>');
-
-    // Check associative array as the #default_value.
-    $this->drupalPostForm('webform/test_element_codemirror', [], t('Submit'));
-    $this->assertRaw('yaml_array:
-  one: One
-  two: Two
-  three: Three');
-
-    // Check invalid YAML.
-    $edit = [
-      'yaml_basic' => "'not: valid",
-    ];
-    $this->drupalPostForm('webform/test_element_codemirror', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">yaml_basic</em> is not valid.');
-
-    // Check valid YAML.
-    $edit = [
-      'yaml_basic' => 'is: valid',
-    ];
-    $this->drupalPostForm('webform/test_element_codemirror', $edit, t('Submit'));
-    $this->assertNoRaw('<em class="placeholder">yaml_basic</em> is not valid.');
-
-    /**************************************************************************/
-    // code:html
-    /**************************************************************************/
-
-    // Check HTML.
-    $this->drupalGet('/webform/test_element_codemirror');
-    $this->assertRaw('<label for="edit-html-basic">html_basic</label>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-html-basic" class="js-webform-codemirror webform-codemirror html form-textarea resize-vertical" data-webform-codemirror-mode="text/html" id="edit-html-basic" name="html_basic" rows="5" cols="60">&lt;b&gt;Hello&lt;/b&gt;</textarea>');
-
-    // Check invalid HTML.
-    $edit = [
-      'html_basic' => "<b>bold</bold>",
-    ];
-    $this->drupalPostForm('webform/test_element_codemirror', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">html_basic</em> is not valid.');
-    $this->assertRaw('expected &#039;&gt;&#039;');
-
-    // Check valid HTML.
-    $edit = [
-      'html_basic' => '<b>bold</b>',
-    ];
-    $this->drupalPostForm('webform/test_element_codemirror', $edit, t('Submit'));
-    $this->assertNoRaw('<em class="placeholder">html_basic</em> is not valid.');
-    $this->assertNoRaw('expected &#039;&gt;&#039;');
-
-    /**************************************************************************/
-    // code:twig
-    /**************************************************************************/
-
-    // Check disabled Twig editor.
-    $this->drupalGet('/webform/test_element_codemirror');
-    $this->assertRaw('<label for="edit-twig-basic">twig_basic</label>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-twig-basic" disabled="disabled" class="js-webform-codemirror webform-codemirror twig form-textarea resize-vertical" data-webform-codemirror-mode="twig" id="edit-twig-basic" name="twig_basic" rows="5" cols="60">
-{% set value = &quot;Hello&quot; %}
-{{ value }}
-</textarea>');
-
-    // Login and enable Twig editor.
-    $this->drupalLogin($this->rootUser);
-
-    // Check enabled Twig editor.
-    $this->drupalGet('/webform/test_element_codemirror');
-    $this->assertRaw('<textarea data-drupal-selector="edit-twig-basic" class="js-webform-codemirror webform-codemirror twig form-textarea resize-vertical" data-webform-codemirror-mode="twig" id="edit-twig-basic" name="twig_basic" rows="5" cols="60">
-{% set value = &quot;Hello&quot; %}
-{{ value }}
-</textarea>');
-
-    // Check that enabled Twig editor can be updated.
-    $edit = [
-      'twig_basic' => 'Can edit Twig template.',
-    ];
-    $this->drupalPostForm('webform/test_element_codemirror', $edit, t('Submit'));
-    $this->assertRaw('Can edit Twig template.');
-
-    // Check invalid Twig syntax.
-    $edit = [
-      'twig_basic' => "{{ value ",
-    ];
-    $this->drupalPostForm('webform/test_element_codemirror', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">twig_basic</em> is not valid.');
-    $this->assertRaw('Unclosed &quot;variable&quot; in');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCompositeTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCompositeTest.php
deleted file mode 100644
index 50f28c31..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCompositeTest.php
+++ /dev/null
@@ -1,147 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for composite element (builder).
- *
- * @group Webform
- */
-class WebformElementCompositeTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_element_composite',
-    'test_element_composite_wrapper',
-  ];
-
-  /**
-   * Test composite (builder).
-   */
-  public function testComposite() {
-
-    /**************************************************************************/
-    // Builder.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_element_composite');
-
-    // Check processing for user who can't edit source.
-    $this->postSubmission($webform);
-    $this->assertRaw("webform_element_composite_basic:
-  first_name:
-    '#type': textfield
-    '#required': true
-    '#title': 'First name'
-  last_name:
-    '#type': textfield
-    '#required': true
-    '#title': 'Last name'
-webform_element_composite_advanced:
-  first_name:
-    '#type': textfield
-    '#title': 'First name'
-  last_name:
-    '#type': textfield
-    '#title': 'Last name'
-  gender:
-    '#type': select
-    '#options':
-      Male: Male
-      Female: Female
-    '#title': Gender
-  martial_status:
-    '#type': webform_select_other
-    '#options': marital_status
-    '#title': 'Martial status'
-  employment_status:
-    '#type': webform_select_other
-    '#options': employment_status
-    '#title': 'Employment status'
-  age:
-    '#type': number
-    '#title': Age
-    '#field_suffix': ' yrs. old'
-    '#min': 1
-    '#max': 125");
-
-    // Check processing for user who can edit source.
-    $this->drupalLogin($this->rootUser);
-    $this->postSubmission($webform);
-    $this->assertRaw("webform_element_composite_basic:
-  first_name:
-    '#type': textfield
-    '#required': true
-    '#title': 'First name'
-  last_name:
-    '#type': textfield
-    '#required': true
-    '#title': 'Last name'
-webform_element_composite_advanced:
-  first_name:
-    '#type': textfield
-    '#title': 'First name'
-  last_name:
-    '#type': textfield
-    '#title': 'Last name'
-  gender:
-    '#type': select
-    '#options':
-      Male: Male
-      Female: Female
-    '#title': Gender
-  martial_status:
-    '#type': webform_select_other
-    '#options': marital_status
-    '#title': 'Martial status'
-  employment_status:
-    '#type': webform_select_other
-    '#options': employment_status
-    '#title': 'Employment status'
-  age:
-    '#type': number
-    '#title': Age
-    '#field_suffix': ' yrs. old'
-    '#min': 1
-    '#max': 125");
-
-    /**************************************************************************/
-    // Wrapper.
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_composite_wrapper');
-
-    // Check fieldset wrapper.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-radios-wrapper-fieldset" id="edit-radios-wrapper-fieldset--wrapper" class="radios--wrapper fieldgroup form-composite webform-composite-visible-title required js-webform-type-radios webform-type-radios js-form-item form-item js-form-wrapper form-wrapper">');
-
-    // Check fieldset wrapper with hidden title.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-radios-wrapper-fieldset-hidden-title" id="edit-radios-wrapper-fieldset-hidden-title--wrapper" class="radios--wrapper fieldgroup form-composite webform-composite-hidden-title required js-webform-type-radios webform-type-radios js-form-item form-item js-form-wrapper form-wrapper">');
-
-    // Check form element wrapper.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-radios form-type-radios js-form-item-radios-wrapper-form-element form-item-radios-wrapper-form-element">');
-
-    // Check container wrapper.
-    $this->assertRaw('<div data-drupal-selector="edit-radios-wrapper-container" id="edit-radios-wrapper-container--wrapper" class="radios--wrapper fieldgroup form-composite js-form-wrapper form-wrapper">');
-
-    // Check radios 'aria-describedby' with wrapper description.
-    $this->assertRaw('<input data-drupal-selector="edit-radios-wrapper-fieldset-description-one" aria-describedby="edit-radios-wrapper-fieldset-description--wrapper--description" type="radio" id="edit-radios-wrapper-fieldset-description-one" name="radios_wrapper_fieldset_description" value="One" class="form-radio" />');
-    $this->assertRaw('<div class="description"><div id="edit-radios-wrapper-fieldset-description--wrapper--description" class="webform-element-description">This is a description</div>');
-
-    // Check wrapper with #states.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-states-fieldset" class="js-webform-states-hidden radios--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-radios webform-type-radios js-form-item form-item js-form-wrapper form-wrapper" id="edit-states-fieldset--wrapper" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-element-composite-wrapper-add-form :input[name=\u0022states_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">');
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-radios form-type-radios js-form-item-states-form-item form-item-states-form-item" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-element-composite-wrapper-add-form :input[name=\u0022states_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">');
-    $this->assertRaw('<div data-drupal-selector="edit-states-container" class="js-webform-states-hidden radios--wrapper fieldgroup form-composite js-form-wrapper form-wrapper" id="edit-states-container--wrapper" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-element-composite-wrapper-add-form :input[name=\u0022states_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">');
-
-    // Below tests are only failing on Drupal.org and pass locally.
-    // Check radios 'aria-describedby' with individual descriptions.
-    // $this->assertRaw('<input data-drupal-selector="edit-radios-wrapper-fieldset-element-descriptions-one" aria-describedby="edit-radios-wrapper-fieldset-element-descriptions-one--description" type="radio" id="edit-radios-wrapper-fieldset-element-descriptions-one" name="radios_wrapper_fieldset_element_descriptions" value="One" class="form-radio" />');
-    // $this->assertRaw('<div id="edit-radios-wrapper-fieldset-element-descriptions-one--description" class="webform-element-description">This is a radio description</div>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementComputedTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementComputedTest.php
index f53f6e2c..8825761c 100644
--- a/modules/contrib/webform/src/Tests/Element/WebformElementComputedTest.php
+++ b/modules/contrib/webform/src/Tests/Element/WebformElementComputedTest.php
@@ -50,8 +50,12 @@ class WebformElementComputedTest extends WebformElementTestBase {
 
     $token_webform = Webform::load('test_element_computed_token');
 
+    // Check computed tokens are processed on form load.
+    $this->drupalGet('/webform/test_element_computed_token');
+    $this->assertRaw('<b class="webform_computed_token_auto">simple string:</b> This is a string<br />');
+
     // Get computed token preview.
-    $this->drupalPostForm('webform/test_element_computed_token', [], t('Preview'));
+    $this->drupalPostForm('/webform/test_element_computed_token', [], t('Preview'));
 
     // Check token auto detection.
     $this->assertRaw('<b class="webform_computed_token_auto">simple string:</b> This is a string<br />');
@@ -97,6 +101,9 @@ class WebformElementComputedTest extends WebformElementTestBase {
     // Get computed Twig form.
     $this->drupalGet('/webform/test_element_computed_twig');
 
+    // Check computed Twig is processed on form load.
+    $this->assertRaw('<b class="webform_computed_twig_auto">number:</b> 2 * 2 = 4<br />');
+
     // Check Twig trim.
     $this->assertFieldByName('webform_computed_twig_trim', '<em>This is trimmed</em>  <br/>');
 
@@ -104,7 +111,7 @@ class WebformElementComputedTest extends WebformElementTestBase {
     $this->assertFieldByName('webform_computed_twig_spaceless', '<em>This is spaceless</em><br/>');
 
     // Get computed Twig preview.
-    $this->drupalPostForm('webform/test_element_computed_twig', [], t('Preview'));
+    $this->drupalPostForm('/webform/test_element_computed_twig', [], t('Preview'));
 
     // Check Twig auto detection.
     $this->assertRaw('<b class="webform_computed_twig_auto">number:</b> 2 * 2 = 4<br />');
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCounterTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCounterTest.php
deleted file mode 100644
index bd0a0aec..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCounterTest.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform (text) counter.
- *
- * @group Webform
- */
-class WebformElementCounterTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_counter'];
-
-  /**
-   * Tests text elements.
-   */
-  public function testCounter() {
-
-    // Check counters.
-    $this->drupalGet('/webform/test_element_counter');
-    $this->assertRaw('<input data-counter-type="character" data-counter-minimum="5" data-counter-minimum-message="%d character(s) entered. This is custom text" class="js-webform-counter webform-counter form-text" data-drupal-selector="edit-counter-characters-min-message" type="text" id="edit-counter-characters-min-message" name="counter_characters_min_message" value="" size="60" maxlength="255" />');
-    $this->assertRaw('<input data-counter-type="character" data-counter-maximum="10" data-counter-maximum-message="%d character(s) remaining. This is custom text" class="js-webform-counter webform-counter form-text" data-drupal-selector="edit-counter-characters-max-message" type="text" id="edit-counter-characters-max-message" name="counter_characters_max_message" value="" size="60" maxlength="10" />');
-    $this->assertRaw('<textarea data-counter-type="word" data-counter-minimum="5" data-counter-minimum-message="%d word(s) entered. This is custom text" class="js-webform-counter webform-counter form-textarea resize-vertical" data-drupal-selector="edit-counter-words-min-message" id="edit-counter-words-min-message" name="counter_words_min_message" rows="5" cols="60"></textarea>');
-    $this->assertRaw('<textarea data-counter-type="word" data-counter-maximum="10" data-counter-maximum-message="%d character(s) remaining. This is custom text" class="js-webform-counter webform-counter form-textarea resize-vertical" data-drupal-selector="edit-counter-words-max-message" id="edit-counter-words-max-message" name="counter_words_max_message" rows="5" cols="60"></textarea>');
-
-    // Check counter min/max validation error (min: 5 / max: 10).
-    $edit = [
-      'counter_characters_min' => '123',
-      'counter_characters_max' => '1234567890xxx',
-      'counter_words_min' => 'one two three',
-      'counter_words_max' => 'one two three four five six seven eight nine ten eleven',
-    ];
-    $this->drupalPostForm('webform/test_element_counter', $edit, t('Submit'));
-    $this->assertRaw('counter_characters_min (5) must be longer than <em class="placeholder">5</em> characters but is currently <em class="placeholder">3</em> characters long.');
-    $this->assertRaw('counter_characters_max (10) cannot be longer than <em class="placeholder">10</em> characters but is currently <em class="placeholder">13</em> characters long.');
-    $this->assertRaw('counter_words_min (5) must be longer than <em class="placeholder">5</em> words but is currently <em class="placeholder">3</em> words long.');
-    $this->assertRaw('counter_words_max (10) cannot be longer than <em class="placeholder">10</em> words but is currently <em class="placeholder">11</em> words long.');
-
-    // Check counter validation passes (min: 5 / max: 10).
-    $edit = [
-      'counter_characters_min' => '12345',
-      'counter_characters_max' => '1234567890',
-      'counter_words_min' => 'one two three four five',
-      'counter_words_max' => 'one two three four five six seven eight nine ten',
-    ];
-    $this->drupalPostForm('webform/test_element_counter', $edit, t('Submit'));
-    $this->assertNoRaw('counter_characters_min (5) must be longer than <em class="placeholder">5</em> characters');
-    $this->assertNoRaw('counter_characters_max (10) cannot be longer than <em class="placeholder">10</em> characters');
-    $this->assertNoRaw('counter_words_min (5) must be longer than <em class="placeholder">5</em> words');
-    $this->assertNoRaw('counter_words_max (10) cannot be longer than <em class="placeholder">10</em> words');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementCustomPropertiesTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementCustomPropertiesTest.php
deleted file mode 100644
index df989808..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementCustomPropertiesTest.php
+++ /dev/null
@@ -1,86 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for the webform element custom properties.
- *
- * @group Webform
- */
-class WebformElementCustomPropertiesTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_ui', 'webform_test_custom_properties'];
-
-  /**
-   * Tests element custom properties.
-   */
-  public function testCustomProperties() {
-    // Create and login admin user.
-    $admin_user = $this->drupalCreateUser([
-      'administer webform',
-    ]);
-    $this->drupalLogin($admin_user);
-
-    // Get Webform storage.
-    $webform_storage = \Drupal::entityTypeManager()->getStorage('webform');
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = $webform_storage->load('contact');
-
-    // Set name element.
-    $name_element = [
-      '#type' => 'textfield',
-      '#title' => 'Your Name',
-      '#default_value' => '[current-user:display-name]',
-      '#required' => TRUE,
-    ];
-
-    // Check that name element render array does not contain custom property
-    // or data.
-    $this->assertEqual($webform->getElementDecoded('name'), $name_element);
-
-    // Check that name input does not contain custom data.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('<input data-drupal-selector="edit-name" type="text" id="edit-name" name="name" value="' . htmlentities($admin_user->label()) . '" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-
-    // Submit empty custom property and data.
-    $edit = [
-      'properties[custom_data]' => '',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/name/edit', $edit, t('Save'));
-
-    // Get updated contact webform.
-    $webform_storage->resetCache();
-    $webform = $webform_storage->load('contact');
-
-    // Check that name element render array still does not contain custom
-    // property or data.
-    $this->assertEqual($webform->getElementDecoded('name'), $name_element);
-
-    // Add custom property and data.
-    $edit = [
-      'properties[custom_data]' => 'custom-data',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact/element/name/edit', $edit, t('Save'));
-
-    // Get updated contact webform.
-    $webform_storage->resetCache();
-    $webform = $webform_storage->load('contact');
-
-    // Check that name element does contain custom property or data.
-    $name_element += [
-      '#custom_data' => 'custom-data',
-    ];
-    $this->assertEqual($webform->getElementDecoded('name'), $name_element);
-
-    // Check that name input does contain custom data.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('<input data-custom="custom-data" data-drupal-selector="edit-name" type="text" id="edit-name" name="name" value="' . htmlentities($admin_user->label()) . '" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementDateListTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementDateListTest.php
deleted file mode 100644
index b398662d..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementDateListTest.php
+++ /dev/null
@@ -1,113 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\Core\Datetime\DrupalDateTime;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform datelist element.
- *
- * @group Webform
- */
-class WebformElementDateListTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_datelist'];
-
-  /**
-   * Test datelist element.
-   */
-  public function testDateListElement() {
-    $webform = Webform::load('test_element_datelist');
-
-    // Check posted submission values.
-    $this->postSubmission($webform);
-    $this->assertRaw("datelist_default: '2009-08-18T16:00:00+1000'
-datelist_no_abbreviate: '2009-08-18T16:00:00+1000'
-datelist_text_parts: '2009-08-18T16:00:00+1000'
-datelist_datetime: '2009-08-18T16:00:00+1000'
-datelist_date: '2009-08-18T00:00:00+1000'
-datelist_min_max: '2009-08-18T00:00:00+1000'
-datelist_min_max_time: '2009-01-01T09:00:00+1100'
-datelist_date_year_range_reverse: ''
-datelist_required_error: '2009-08-18T16:00:00+1000'
-datelist_multiple:
-  - '2009-08-18T16:00:00+1000'
-datelist_custom_composite:
-  - datelist: '2009-08-18T16:00:00+1000'");
-
-    $this->drupalGet('/webform/test_element_datelist');
-
-    // Check datelist label has not for attributes.
-    $this->assertRaw('<label>datelist_default</label>');
-
-    // Check '#format' values.
-    $this->assertFieldByName('datelist_default[month]', '8');
-
-    // Check '#date_abbreviate': false.
-    $this->assertRaw('<select data-drupal-selector="edit-datelist-no-abbreviate-month" title="Month" id="edit-datelist-no-abbreviate-month" name="datelist_no_abbreviate[month]" class="form-select"><option value="">Month</option><option value="1">January</option>');
-
-    // Check date year range reverse.
-    $this->drupalGet('/webform/test_element_datelist');
-    $this->assertRaw('<select data-drupal-selector="edit-datelist-date-year-range-reverse-year" title="Year" id="edit-datelist-date-year-range-reverse-year" name="datelist_date_year_range_reverse[year]" class="form-select"><option value="" selected="selected">Year</option><option value="2010">2010</option><option value="2009">2009</option><option value="2008">2008</option><option value="2007">2007</option><option value="2006">2006</option><option value="2005">2005</option></select>');
-
-    // Check 'datelist' and 'datetime' #default_value.
-    $form = $webform->getSubmissionForm();
-    $this->assert($form['elements']['datelist_default']['#default_value'] instanceof DrupalDateTime, 'datelist_default #default_value instance of \Drupal\Core\Datetime\DrupalDateTime.');
-
-    // Check datelist #date_date_max validation.
-    $edit = [
-      'datelist_min_max[year]' => '2010',
-      'datelist_min_max[month]' => '8',
-      'datelist_min_max[day]' => '18',
-    ];
-    $this->drupalPostForm('webform/test_element_datelist', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datelist_min_max</em> must be on or before <em class="placeholder">2009-12-31</em>.');
-
-    // Check datelist #date_date_min validation.
-    $edit = [
-      'datelist_min_max[year]' => '2006',
-      'datelist_min_max[month]' => '8',
-      'datelist_min_max[day]' => '18',
-    ];
-    $this->drupalPostForm('webform/test_element_datelist', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datelist_min_max</em> must be on or after <em class="placeholder">2009-01-01</em>.');
-
-    // Check datelist #date_max validation.
-    $edit = [
-      'datelist_min_max_time[year]' => '2009',
-      'datelist_min_max_time[month]' => '12',
-      'datelist_min_max_time[day]' => '31',
-      'datelist_min_max_time[hour]' => '18',
-    ];
-    $this->drupalPostForm('webform/test_element_datelist', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datelist_min_max_time</em> must be on or before <em class="placeholder">2009-12-31 17:00:00</em>.');
-
-    // Check datelist #date_min validation.
-    $edit = [
-      'datelist_min_max_time[year]' => '2009',
-      'datelist_min_max_time[month]' => '1',
-      'datelist_min_max_time[day]' => '1',
-      'datelist_min_max_time[hour]' => '8',
-    ];
-    $this->drupalPostForm('webform/test_element_datelist', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datelist_min_max_time</em> must be on or after <em class="placeholder">2009-01-01 09:00:00</em>.');
-
-    // Check custom required error.
-    $edit = [
-      'datelist_required_error[year]' => '',
-      'datelist_required_error[month]' => '',
-      'datelist_required_error[day]' => '',
-      'datelist_required_error[hour]' => '',
-      'datelist_required_error[minute]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_datelist', $edit, t('Submit'));
-    $this->assertRaw('Custom required error');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementDateTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementDateTest.php
deleted file mode 100644
index 9bee893d..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementDateTest.php
+++ /dev/null
@@ -1,88 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform date element.
- *
- * @group Webform
- */
-class WebformElementDateTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_date'];
-
-  /**
-   * Test date element.
-   */
-  public function testDateElement() {
-    $webform = Webform::load('test_element_date');
-
-    /**************************************************************************/
-    // Render date elements.
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_date');
-
-    // Check '#format' values.
-    $this->assertFieldByName('date_default', '2009-08-18');
-
-    // Check dynamic date picker.
-    $min = date('D, m/d/Y', strtotime('-1 year'));
-    $min_year = date('Y', strtotime('-1 year'));
-    $max = date('D, m/d/Y', strtotime('+1 year'));
-    $max_year = date('Y', strtotime('+1 year'));
-    $default_value = date('D, m/d/Y', strtotime('now'));
-    $this->assertRaw('<input min="' . $min . '" data-min-year="' . $min_year . '" max="' . $max . '" data-max-year="' . $max_year . '" type="text" data-drupal-date-format="D, m/d/Y" data-drupal-selector="edit-date-datepicker-min-max-dynamic" aria-describedby="edit-date-datepicker-min-max-dynamic--description" id="edit-date-datepicker-min-max-dynamic" name="date_datepicker_min_max_dynamic" value="' . $default_value . '" class="form-text" />');
-
-    // Check 'datelist' and 'datetime' #default_value.
-    $form = $webform->getSubmissionForm();
-    $this->assert(is_string($form['elements']['date_default']['#default_value']), 'date_default #default_value is a string.');
-
-    // Check date #max validation.
-    $edit = ['date_min_max' => '2010-08-18'];
-    $this->drupalPostForm('webform/test_element_date', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">date_min_max</em> must be on or before <em class="placeholder">2009-12-31</em>.');
-
-    // Check date #min validation.
-    $edit = ['date_min_max' => '2006-08-18'];
-    $this->drupalPostForm('webform/test_element_date', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">date_min_max</em> must be on or after <em class="placeholder">2009-01-01</em>.');
-
-    // Check date #date_days validation.
-    $edit = ['date_datepicker_weekend' => '2010-08-18'];
-    $this->drupalPostForm('webform/test_element_date', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">date_datepicker_weekend</em> must be a <em class="placeholder">Sunday or Saturday</em>.');
-
-    // Check dynamic date.
-    $this->drupalGet('/webform/test_element_date');
-    $min = \Drupal::service('date.formatter')->format(strtotime('-1 year'), 'html_date');
-    $min_year = date('Y', strtotime('-1 year'));
-    $max = \Drupal::service('date.formatter')->format(strtotime('+1 year'), 'html_date');
-    $max_year = date('Y', strtotime('+1 year'));
-    $default_value = \Drupal::service('date.formatter')->format(strtotime('now'), 'html_date');
-    $this->assertRaw('<input min="' . $min . '" data-min-year="' . $min_year . '" max="' . $max . '" data-max-year="' . $max_year . '" type="date" data-drupal-selector="edit-date-min-max-dynamic" aria-describedby="edit-date-min-max-dynamic--description" data-drupal-date-format="Y-m-d" id="edit-date-min-max-dynamic" name="date_min_max_dynamic" value="' . $default_value . '" class="form-date" />');
-
-    /**************************************************************************/
-    // Format date elements.
-    /**************************************************************************/
-
-    $this->drupalPostForm('webform/test_element_date', [], t('Preview'));
-
-    // Check date formats.
-    $this->assertElementPreview('date_default', '2009-08-18');
-    $this->assertElementPreview('date_custom', '18-Aug-2009');
-    $this->assertElementPreview('date_min_max', '2009-08-18');
-    $this->assertElementPreview('date_min_max_dynamic', date('Y-m-d', strtotime('now')));
-    $this->assertElementPreview('date_datepicker', 'Tue, 08/18/2009');
-    $this->assertElementPreview('date_datepicker_custom', 'Tuesday, August 18, 2009');
-    $this->assertElementPreview('date_datepicker_min_max_dynamic', date('D, m/d/Y', strtotime('now')));
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementDateTimeTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementDateTimeTest.php
deleted file mode 100644
index d8cf2e82..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementDateTimeTest.php
+++ /dev/null
@@ -1,103 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\Core\Datetime\DrupalDateTime;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform datetime element.
- *
- * @group Webform
- */
-class WebformElementDateTimeTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_datetime'];
-
-  /**
-   * Test datetime element.
-   */
-  public function testDateTime() {
-    $webform = Webform::load('test_element_datetime');
-
-    // Check posted submission values.
-    $this->postSubmission($webform);
-    $this->assertRaw("datetime_default: '2009-08-18T16:00:00+1000'");
-    $this->assertRaw("datetime_multiple:
-  - '2009-08-18T16:00:00+1000'");
-    $this->assertRaw("datetime_custom_composite:
-  - datetime: '2009-08-18T16:00:00+1000'");
-
-    $this->drupalGet('/webform/test_element_datetime');
-
-    // Check datetime label has not for attributes.
-    $this->assertRaw('<label>datetime_default</label>');
-
-    // Check '#format' values.
-    $this->assertFieldByName('datetime_default[date]', '2009-08-18');
-    $this->assertFieldByName('datetime_default[time]', '16:00:00');
-
-    // Check datepicker and timepicker.
-    $now_date = date('D, m/d/Y', strtotime('now'));
-    $this->assertRaw('<input data-drupal-selector="edit-datetime-datepicker-timepicker-date" title="Date (e.g. ' . $now_date . ')" type="text" min="Mon, 01/01/1900" max="Sat, 12/31/2050" data-drupal-date-format="D, m/d/Y" id="edit-datetime-datepicker-timepicker-date" name="datetime_datepicker_timepicker[date]" value="Tue, 08/18/2009" size="15" maxlength="128" class="form-text" />');
-    $this->assertRaw('<input data-drupal-selector="edit-datetime-datepicker-timepicker-time"');
-    // Skip time which can change during the tests.
-    $this->assertRaw('type="text" step="1" data-webform-time-format="g:i A" id="edit-datetime-datepicker-timepicker-time" name="datetime_datepicker_timepicker[time]" value="4:00 PM" size="12" maxlength="12" class="form-time webform-time" />');
-
-    // Check time with custom min/max/step attributes.
-    $this->assertRaw('<input min="2009-01-01" data-min-year="2009" max="2009-12-31" data-max-year="2009" data-drupal-selector="edit-datetime-time-min-max-date"');
-    $this->assertRaw('<input min="09:00:00" max="17:00:00" data-drupal-selector="edit-datetime-time-min-max-time"');
-    $this->assertRaw('<input min="Thu, 01/01/2009" data-min-year="2009" max="Thu, 12/31/2009" data-max-year="2009" data-drupal-selector="edit-datetime-datepicker-timepicker-time-min-max-date"');
-    $this->assertRaw('<input min="09:00:00" max="17:00:00" data-drupal-selector="edit-datetime-datepicker-timepicker-time-min-max-time"');
-
-    // Check 'datelist' and 'datetime' #default_value.
-    $form = $webform->getSubmissionForm();
-    $this->assert($form['elements']['datetime_default']['#default_value'] instanceof DrupalDateTime, 'datetime_default #default_value instance of \Drupal\Core\Datetime\DrupalDateTime.');
-
-    // Check datetime #date_date_max validation.
-    $edit = ['datetime_min_max[date]' => '2010-08-18'];
-    $this->drupalPostForm('webform/test_element_datetime', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datetime_min_max</em> must be on or before <em class="placeholder">2009-12-31</em>.');
-
-    // Check datetime #date_date_min validation.
-    $edit = ['datetime_min_max[date]' => '2006-08-18'];
-    $this->drupalPostForm('webform/test_element_datetime', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datetime_min_max</em> must be on or after <em class="placeholder">2009-01-01</em>.');
-
-    // Check datetime #date_max date validation.
-    $edit = ['datetime_min_max_time[date]' => '2009-12-31', 'datetime_min_max_time[time]' => '19:00:00'];
-    $this->drupalPostForm('webform/test_element_datetime', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datetime_min_max_time</em> must be on or before <em class="placeholder">2009-12-31 17:00:00</em>.');
-
-    // Check datetime #date_min date validation.
-    $edit = ['datetime_min_max_time[date]' => '2009-01-01', 'datetime_min_max_time[time]' => '08:00:00'];
-    $this->drupalPostForm('webform/test_element_datetime', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datetime_min_max_time</em> must be on or after <em class="placeholder">2009-01-01 09:00:00</em>.');
-
-    // Check datetime #date_max time validation.
-    $edit = ['datetime_min_max_time[time]' => '01:00:00'];
-    $this->drupalPostForm('webform/test_element_datetime', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datetime_min_max_time: Time</em> must be on or after <em class="placeholder">09:00:00</em>.');
-    $this->assertRaw('<em class="placeholder">datetime_min_max_time</em> must be on or after <em class="placeholder">2009-01-01 09:00:00</em>.');
-
-    // Check datetime #date_min time validation.
-    $edit = ['datetime_min_max_time[time]' => '01:00:00'];
-    $this->drupalPostForm('webform/test_element_datetime', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">datetime_min_max_time: Time</em> must be on or after <em class="placeholder">09:00:00</em>.');
-    $this->assertRaw('<em class="placeholder">datetime_min_max_time</em> must be on or after <em class="placeholder">2009-01-01 09:00:00</em>.');
-
-    // Check: Issue #2723159: Datetime form element cannot validate when using a
-    // format without seconds.
-    $sid = $this->postSubmission($webform);
-    $submission = WebformSubmission::load($sid);
-    $this->assertNoRaw('The datetime_no_seconds date is invalid.');
-    $this->assertEqual($submission->getElementData('datetime_no_seconds'), '2009-08-18T16:00:00+1000');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementDetailsTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementDetailsTest.php
deleted file mode 100644
index f4989a0f..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementDetailsTest.php
+++ /dev/null
@@ -1,37 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for details element.
- *
- * @group Webform
- */
-class WebformElementDetailsTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_details'];
-
-  /**
-   * Test details element.
-   */
-  public function testDetails() {
-    $this->drupalGet('/webform/test_element_details');
-
-    // Check details with help, field prefix, field suffix, description,
-    // and more. Also, check that invalid 'required' and 'aria-required'
-    // attributes are removed.
-    $this->assertRaw('<details data-webform-key="details" data-drupal-selector="edit-details" aria-describedby="edit-details--description" id="edit-details" class="js-form-wrapper form-wrapper required webform-element-help-container--title webform-element-help-container--title-after" open="open">');
-    $this->assertRaw('<summary role="button" aria-controls="edit-details" aria-expanded="true" aria-pressed="true" class="js-form-required form-required">details<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;details&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text.&lt;/div&gt;"><span aria-hidden="true">?</span>');
-    $this->assertRaw('<div class="details-description"><div id="edit-details--description" class="webform-element-description">This is a description.</div>');
-    $this->assertRaw('<div id="edit-details--more" class="js-webform-element-more webform-element-more">');
-
-    // Check details title_display: invisible.
-    $this->assertRaw('<summary role="button" aria-controls="edit-details-title-invisible" aria-expanded="false" aria-pressed="false"><span class="visually-hidden">Details title invisible</span></summary>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementEmailConfirmTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementEmailConfirmTest.php
deleted file mode 100644
index df1c10e1..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementEmailConfirmTest.php
+++ /dev/null
@@ -1,84 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for email_confirm element.
- *
- * @group Webform
- */
-class WebformElementEmailConfirmTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_email_confirm'];
-
-  /**
-   * Test email_confirm element.
-   */
-  public function testEmailConfirm() {
-    $this->drupalGet('/webform/test_element_email_confirm');
-
-    // Check basic email confirm.
-    $this->assertRaw('<fieldset id="edit-email-confirm-basic--wrapper" class="webform-email-confirm--wrapper fieldgroup form-composite webform-composite-hidden-title js-webform-type-webform-email-confirm webform-type-webform-email-confirm js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="visually-hidden fieldset-legend">email_confirm_basic</span>');
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-email form-type-email js-form-item-email-confirm-basic-mail-1 form-item-email-confirm-basic-mail-1">');
-    $this->assertRaw('<label for="edit-email-confirm-basic-mail-1">email_confirm_basic</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-email-confirm-basic-mail-1" class="webform-email form-email" type="email" id="edit-email-confirm-basic-mail-1" name="email_confirm_basic[mail_1]" value="" size="60" maxlength="254" />');
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-email form-type-email js-form-item-email-confirm-basic-mail-2 form-item-email-confirm-basic-mail-2">');
-    $this->assertRaw('<label for="edit-email-confirm-basic-mail-2">Confirm email</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-email-confirm-basic-mail-2" class="webform-email-confirm form-email" type="email" id="edit-email-confirm-basic-mail-2" name="email_confirm_basic[mail_2]" value="" size="60" maxlength="254" />');
-
-    // Check advanced email confirm w/ custom label.
-    $this->assertRaw('<fieldset id="edit-email-confirm-advanced--wrapper" class="webform-email-confirm--wrapper fieldgroup form-composite webform-composite-hidden-title js-webform-type-webform-email-confirm webform-type-webform-email-confirm js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="visually-hidden fieldset-legend">Email address</span>');
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-email form-type-email js-form-item-email-confirm-advanced-mail-1 form-item-email-confirm-advanced-mail-1">');
-    $this->assertRaw('<label for="edit-email-confirm-advanced-mail-1">Email address</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-email-confirm-advanced-mail-1" aria-describedby="edit-email-confirm-advanced-mail-1--description" class="webform-email form-email" type="email" id="edit-email-confirm-advanced-mail-1" name="email_confirm_advanced[mail_1]" value="" size="60" maxlength="254" placeholder="Enter email address" />');
-    $this->assertRaw('<div id="edit-email-confirm-advanced-mail-1--description" class="description">');
-    $this->assertRaw('Please make sure to review your email address');
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-email form-type-email js-form-item-email-confirm-advanced-mail-2 form-item-email-confirm-advanced-mail-2">');
-    $this->assertRaw('<label for="edit-email-confirm-advanced-mail-2">Please confirm your email address</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-email-confirm-advanced-mail-2" aria-describedby="edit-email-confirm-advanced-mail-2--description" class="webform-email-confirm form-email" type="email" id="edit-email-confirm-advanced-mail-2" name="email_confirm_advanced[mail_2]" value="" size="60" maxlength="254" placeholder="Enter confirmation email address" />');
-    $this->assertRaw('<div id="edit-email-confirm-advanced-mail-2--description" class="description">');
-    $this->assertRaw('Please make sure to review your confirmation email address');
-
-    // Check email confirm invalid email addresses.
-    $edit = [
-      'email_confirm_advanced[mail_1]' => 'Not a valid email address',
-      'email_confirm_advanced[mail_2]' => 'Not a valid email address, again',
-    ];
-    $this->drupalPostForm('webform/test_element_email_confirm', $edit, t('Submit'));
-    $this->assertRaw('The email address <em class="placeholder">Not a valid email address</em> is not valid.');
-    $this->assertRaw('The email address <em class="placeholder">Not a valid email address, again</em> is not valid.');
-
-    // Check email confirm non-matching email addresses.
-    $edit = [
-      'email_confirm_advanced[mail_1]' => 'example01@example.com',
-      'email_confirm_advanced[mail_2]' => 'example02@example.com',
-    ];
-    $this->drupalPostForm('webform/test_element_email_confirm', $edit, t('Submit'));
-    $this->assertRaw('The specified email addresses do not match.');
-
-    // Check email confirm matching email addresses.
-    $edit = [
-      'email_confirm_advanced[mail_1]' => 'example@example.com',
-      'email_confirm_advanced[mail_2]' => 'example@example.com',
-    ];
-    $this->drupalPostForm('webform/test_element_email_confirm', $edit, t('Submit'));
-    $this->assertNoRaw('<li class="messages__item">The specified email addresses do not match.</li>');
-    $this->assertRaw('email_confirm_advanced: example@example.com');
-
-    // Check email confirm empty confirm email address.
-    $edit = [
-      'email_confirm_advanced[mail_1]' => '',
-      'email_confirm_advanced[mail_2]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_email_confirm', $edit, t('Submit'));
-    $this->assertNoRaw('<li class="messages__item">Confirm Email field is required.</li>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementEmailMultipleTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementEmailMultipleTest.php
deleted file mode 100644
index ad2cc982..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementEmailMultipleTest.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for email_multiple element.
- *
- * @group Webform
- */
-class WebformElementEmailMultipleTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_email_multiple'];
-
-  /**
-   * Test email_multiple element.
-   */
-  public function testEmailMultiple() {
-    // Check basic email multiple.
-    $this->drupalGet('/webform/test_element_email_multiple');
-    $this->assertRaw('<label for="edit-email-multiple-basic">email_multiple_basic</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-email-multiple-basic" aria-describedby="edit-email-multiple-basic--description" type="text" id="edit-email-multiple-basic" name="email_multiple_basic" value="" size="60" class="form-text webform-email-multiple" />');
-    $this->assertRaw('Multiple email addresses may be separated by commas.');
-
-    // Check email multiple invalid second email address.
-    $edit = [
-      'email_multiple_basic' => 'example@example.com, Not a valid email address',
-    ];
-    $this->drupalPostForm('webform/test_element_email_multiple', $edit, t('Submit'));
-    $this->assertRaw('The email address <em class="placeholder">Not a valid email address</em> is not valid.');
-
-    // Check email multiple invalid token email address.
-    $edit = [
-      'email_multiple_basic' => 'example@example.com, [token]',
-    ];
-    $this->drupalPostForm('webform/test_element_email_multiple', $edit, t('Submit'));
-    $this->assertRaw('The email address <em class="placeholder">[token]</em> is not valid.');
-
-    // Check email multiple valid second email address.
-    $edit = [
-      'email_multiple_basic' => 'example@example.com, other@other.com',
-    ];
-    $this->drupalPostForm('webform/test_element_email_multiple', $edit, t('Submit'));
-    $this->assertRaw("email_multiple_basic: 'example@example.com, other@other.com'");
-
-    // Check email multiple valid token email address (via #allow_tokens).
-    $edit = [
-      'email_multiple_advanced' => 'example@example.com, [token]',
-    ];
-    $this->drupalPostForm('webform/test_element_email_multiple', $edit, t('Submit'));
-    $this->assertRaw("email_multiple_advanced: 'example@example.com, [token]'");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementEntityReferenceTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementEntityReferenceTest.php
deleted file mode 100644
index 16ad6344..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementEntityReferenceTest.php
+++ /dev/null
@@ -1,57 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for entity reference elements.
- *
- * @group Webform
- */
-class WebformElementEntityReferenceTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'user', 'node', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_entity_reference'];
-
-  /**
-   * Test entity reference elements.
-   */
-  public function testEntityReferenceTest() {
-    $webform = Webform::load('test_element_entity_reference');
-
-    // Check render entity_autocomplete.
-    $this->drupalGet('/webform/test_element_entity_reference');
-    $this->assertFieldByName('entity_autocomplete_user_default', 'admin (1)');
-    $this->assertFieldByName('entity_autocomplete_user_tags', 'admin (1)');
-
-    // Check process entity_autocomplete.
-    $this->postSubmission($webform);
-    $this->assertRaw("entity_autocomplete_user_default: '1'
-entity_autocomplete_user_tags:
-  - '1'
-entity_autocomplete_user_multiple:
-  - '1'
-entity_autocomplete_node_default: null
-entity_autocomplete_node_view: null
-webform_entity_select_user_default: '1'
-webform_entity_select_user_multiple:
-  - '1'
-webform_entity_radios_user_default: '1'
-webform_entity_checkboxes_user_default:
-  - '1'");
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementFieldsetTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementFieldsetTest.php
deleted file mode 100644
index a663af93..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementFieldsetTest.php
+++ /dev/null
@@ -1,43 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for fieldset element.
- *
- * @group Webform
- */
-class WebformElementFieldsetTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_fieldset'];
-
-  /**
-   * Test fieldset element.
-   */
-  public function testFieldset() {
-    $this->drupalGet('/webform/test_element_fieldset');
-
-    // Check fieldset with help, field prefix, field suffix, description,
-    // and more. Also, check that invalid 'required' and 'aria-required'
-    // attributes are removed.
-    $this->assertRaw('<fieldset class="webform-has-field-prefix webform-has-field-suffix required webform-element-help-container--title webform-element-help-container--title-after js-webform-type-fieldset webform-type-fieldset js-form-item form-item js-form-wrapper form-wrapper" data-drupal-selector="edit-fieldset" aria-describedby="edit-fieldset--description" id="edit-fieldset">');
-    $this->assertRaw('<span class="fieldset-legend js-form-required form-required">fieldset<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;fieldset&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text.&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<span class="field-prefix">prefix</span>');
-    $this->assertRaw('<span class="field-suffix">suffix</span>');
-    $this->assertRaw('<div class="description">');
-    $this->assertRaw('<div id="edit-fieldset--description" class="webform-element-description">This is a description.</div>');
-    $this->assertRaw('<div id="edit-fieldset--more" class="js-webform-element-more webform-element-more">');
-
-    // Check fieldset title_display: invisible.
-    $this->assertRaw('<span class="visually-hidden fieldset-legend">fieldset_title_invisible</span>');
-
-    // Check fieldset description_display: before.
-    $this->assertRaw('<span class="field-prefix">prefix<div id="edit-fieldset-description-before--description" class="webform-element-description">This is a description before.</div>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementFormatCustomTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementFormatCustomTest.php
deleted file mode 100644
index f563397e..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementFormatCustomTest.php
+++ /dev/null
@@ -1,182 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform submission webform element custom #format support.
- *
- * @group Webform
- */
-class WebformElementFormatCustomTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_format_custom'];
-
-  /**
-   * Tests element custom format.
-   */
-  public function testFormatCustom() {
-    $this->drupalLogin($this->rootUser);
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_element_format_custom');
-
-    $files = $this->drupalGetTestFiles('image');
-    $this->debug($files[0]);
-    $edit = [
-      'files[image_custom]' => \Drupal::service('file_system')->realpath($files[0]->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-
-    // Retrieves the fid of the last inserted file.
-    $fid = (int) \Drupal::database()->query('SELECT MAX(fid) FROM {file_managed}')->fetchField();
-    $file = File::load($fid);
-    $file_name = $file->getFilename();
-    $file_size = $file->getSize();
-    $file_url = file_create_url($file->getFileUri());
-
-    /**************************************************************************/
-    // Custom HTML.
-    /**************************************************************************/
-
-    $this->drupalGet("admin/structure/webform/manage/test_element_format_custom/submission/$sid");
-
-    // Check basic custom HTML format.
-    $this->assertRaw('<label>textfield_custom</label>');
-    $this->assertRaw('<em>{textfield_custom}</em>');
-
-    // Check basic custom token HTML format.
-    $this->assertRaw('<label>textfield_custom_token</label>');
-    $this->assertRaw('<em>{textfield_custom_token}</em>');
-
-    // Check caught exception is displayed to users with update access.
-    // @see \Drupal\webform\Twig\TwigExtension::renderTwigTemplate
-    $this->assertRaw('(&quot;The &quot;[webform_submission:values:textfield_custom_token_exception]&quot; is being called recursively.&quot;)');
-    $this->assertRaw('<label>textfield_custom_token_exception</label>');
-    $this->assertRaw('<em>EXCEPTION</em>');
-
-    // Check multiple custom HTML format.
-    $this->assertRaw('<label>textfield_custom</label>');
-    $this->assertRaw('<table>');
-    $this->assertRaw('<tr ><td>One</td></tr>');
-    $this->assertRaw('<tr style="background-color: #ffc"><td>Two</td></tr>');
-    $this->assertRaw('<tr ><td>Three</td></tr>');
-    $this->assertRaw('<tr style="background-color: #ffc"><td>Four</td></tr>');
-    $this->assertRaw('<tr ><td>Five</td></tr>');
-    $this->assertRaw('</table>');
-
-    // Check image custom HTML format.
-    $this->assertRaw('<label>image_custom</label>');
-    $this->assertRaw('value: 1<br/>');
-    $this->assertRaw("item['value']: $file_url<br/>");
-    $this->assertRaw("item['raw']: $file_url<br/>");
-    $this->assertRaw("item['link']:");
-    $this->assertRaw('<span class="file file--mime-image-png file--image"> <a href="' . $file_url . '" type="image/png; length=' . $file_size . '">' . $file_name . '</a></span>');
-    $this->assertRaw('item[\'id\']: 1<br/>');
-    $this->assertRaw("item['url']: $file_url<br/>");
-    $this->assertRaw('<img class="webform-image-file" alt="' . $file_name . '" title="' . $file_name . '" src="' . $file_url . '" />');
-
-    // Check composite custom HTML format.
-    $this->assertRaw('<label>address_custom</label>');
-    $this->assertRaw('element.address: {address}<br/>');
-    $this->assertRaw('element.address_2: {address_2}<br/>');
-    $this->assertRaw('element.city: {city}<br/>');
-    $this->assertRaw('element.state_province: {state_province}<br/>');
-    $this->assertRaw('element.postal_code: {postal_code}<br/>');
-    $this->assertRaw('element.country: {country}<br/>');
-
-    // Check composite multiple custom HTML format.
-    $this->assertRaw('<label>address_multiple_custom</label>');
-    $this->assertRaw('<div>*****</div>
-element.address: {02-address}<br/>
-element.address_2: {02-address_2}<br/>
-element.city: {02-city}<br/>
-element.state_province: {02-state_province}<br/>
-element.postal_code: {02-postal_code}<br/>
-element.country: {02-country}<br/>
-<div>*****</div>');
-
-    // Check fieldset displayed as details.
-    $this->assertRaw('<details class="webform-container webform-container-type-details js-form-wrapper form-wrapper" data-webform-element-id="test_element_format_custom--fieldset_custom" id="test_element_format_custom--fieldset_custom" open="open">');
-    $this->assertRaw('<summary role="button" aria-controls="test_element_format_custom--fieldset_custom" aria-expanded="true" aria-pressed="true">fieldset_custom</summary>');
-
-    // Check container custom HTML format.
-    $this->assertRaw('<h3>fieldset_custom_children</h3>' . PHP_EOL . '<hr />');
-
-    /**************************************************************************/
-    // Custom Text.
-    /**************************************************************************/
-
-    $this->drupalGet("admin/structure/webform/manage/test_element_format_custom/submission/$sid/text");
-    $this->assertRaw("textfield_custom: /{textfield_custom}/
-textfield_custom_token: /{textfield_custom_token}/
-textfield_custom_token_exception: /EXCEPTION/
-textfield_custom:
-⦿ One
-⦿ Two
-⦿ Three
-⦿ Four
-⦿ Five
-
-
-image_custom:
-value: 1
-item['value']: $file_url
-item['raw']: $file_url
-item['link']: $file_url
-item['id']: 1
-item['url']: $file_url
-
-address_custom:
-element.address: {address}
-element.address_2: {address_2}
-element.city: {city}
-element.state_province: {state_province}
-element.postal_code: {postal_code}
-element.country: {country}
-
-address_multiple_custom:
-*****
-element.address: {01-address}
-element.address_2: {01-address_2}
-element.city: {01-city}
-element.state_province: {01-state_province}
-element.postal_code: {01-postal_code}
-element.country: {01-country}
-*****
-*****
-element.address: {02-address}
-element.address_2: {02-address_2}
-element.city: {02-city}
-element.state_province: {02-state_province}
-element.postal_code: {02-postal_code}
-element.country: {02-country}
-*****
-
-
-fieldset_custom
----------------
-fieldset_custom_textfield: {fieldset_custom_textfield}
-
-fieldset_custom_children
-------------------------
-fieldset_custom_children_textfield: {fieldset_custom_children_textfield}
-
-");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementFormatTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementFormatTest.php
deleted file mode 100644
index 48f46ad7..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementFormatTest.php
+++ /dev/null
@@ -1,315 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\WebformSubmissionInterface;
-
-/**
- * Tests for webform submission webform element custom #format support.
- *
- * @group Webform
- */
-class WebformElementFormatTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'taxonomy', 'file', 'webform', 'webform_image_select'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_format', 'test_element_format_multiple', 'test_element_format_token'];
-
-  /**
-   * Tests element format.
-   */
-  public function testFormat() {
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    /* Format (single) element as HTML and text */
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_element_format');
-
-    $sid = $this->postSubmission($webform);
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-
-    // Check (single) elements item formatted as HTML.
-    $body = $this->getMessageBody($submission, 'email_html');
-    $elements = [
-      'Checkbox (Value)' => 'Yes',
-      'Color (Color swatch)' => '<font color="#ffffcc">█</font> #ffffcc',
-      'Email (Link)' => '<a href="mailto:example@example.com">example@example.com</a>',
-      'Email confirm (Link)' => '<a href="mailto:example@example.com">example@example.com</a>',
-      'Email multiple (Link)' => '<a href="mailto:example@example.com">example@example.com</a>, <a href="mailto:test@test.com">test@test.com</a>, <a href="mailto:random@random.com">random@random.com</a>',
-      'Signature (Status)' => '[signed]',
-      'Telephone (Link)' => '<a href="tel:+1 212-333-4444">+1 212-333-4444</a>',
-      'Toggle (Value)' => 'Yes',
-      'URL (Link)' => '<a href="http://example.com">http://example.com</a>',
-      'Date (Raw value)' => '1942-06-18',
-      'Date (Fallback date format)' => '1942-06-18',
-      'Date (HTML Date)' => '1942-06-18',
-      'Date (HTML Datetime)' => '1942-06-18T00:00:00+1000',
-      'Date (HTML Month)' => '1942-06',
-      'Date (HTML Time)' => '00:00:00',
-      'Date (HTML Week)' => '1942-W25',
-      'Date (HTML Year)' => '1942',
-      'Date (HTML Yearless date)' => '06-18',
-      'Date (Default long date)' => 'Thursday, June 18, 1942 - 00:00',
-      'Date (Default medium date)' => 'Thu, 06/18/1942 - 00:00',
-      'Date (Default short date)' => '06/18/1942 - 00:00',
-      'Time (Value)' => '09:00',
-      'Time (Raw value)' => '09:00:00',
-//      'Entity autocomplete (Raw value)' => 'user:1',
-//      'Entity autocomplete (Link)' => '<a href="http://localhost/webform/user/1" hreflang="en">admin</a>',
-//      'Entity autocomplete (Entity ID)' => '1',
-//      'Entity autocomplete (Label)' => 'admin',
-//      'Entity autocomplete (Label (ID))' => 'admin (1)',
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertContains('<b>' . $label . '</b><br />' . $value, $body, new FormattableMarkup('Found @label: @value', ['@label' => $label, '@value' => $value]));
-    }
-
-    // Check code format.
-    $this->assertContains('<pre class="js-webform-codemirror-runmode webform-codemirror-runmode" data-webform-codemirror-mode="text/x-yaml">message: \'Hello World\'</pre>', $body);
-
-    // Check elements formatted as text.
-    $body = $this->getMessageBody($submission, 'email_text');
-    $elements = [
-      'Checkbox (Value): Yes',
-      'Color (Color swatch): #ffffcc',
-      'Email (Link): example@example.com',
-      'Email multiple (Link): example@example.com, test@test.com, random@random.com',
-      'Toggle (Value): Yes',
-      'URL (Link): http://example.com',
-      'Date (Raw value): 1942-06-18',
-      'Date (Fallback date format): 1942-06-18',
-      'Date (HTML Date): 1942-06-18',
-      'Date (HTML Datetime): 1942-06-18T00:00:00+1000',
-      'Date (HTML Month): 1942-06',
-      'Date (HTML Time): 00:00:00',
-      'Date (HTML Week): 1942-W25',
-      'Date (HTML Year): 1942',
-      'Date (HTML Yearless date): 06-18',
-      'Date (Default long date): Thursday, June 18, 1942 - 00:00',
-      'Date (Default medium date): Thu, 06/18/1942 - 00:00',
-      'Date (Default short date): 06/18/1942 - 00:00',
-      'Time (Value): 09:00',
-      'Time (Raw value): 09:00:00',
-    ];
-    foreach ($elements as $value) {
-      $this->assertContains($value, $body, new FormattableMarkup('Found @value', ['@value' => $value]));
-    }
-
-    /**************************************************************************/
-    /* Format managed file element as HTML and text */
-    /**************************************************************************/
-
-    $sid = $this->postSubmissionTest($webform);
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-
-    // Check managed file element formatted as HTML.
-    $body = $this->getMessageBody($submission, 'email_html');
-    $elements = [
-      'File (Value)' => $this->getSubmissionFileUrl($submission, 'managed_file_value'),
-      'File (Raw value)' => $this->getSubmissionFileUrl($submission, 'managed_file_raw'),
-      'File (File)' => '<div>
-<span class="file file--mime-text-plain file--text"> <a href="' . $this->getSubmissionFileUrl($submission, 'managed_file_file') . '" type="text/plain; length=43">managed_file_file.txt</a></span>
-</div>',
-      'File (Link)' => '
-<span class="file file--mime-text-plain file--text"> <a href="' . $this->getSubmissionFileUrl($submission, 'managed_file_link') . '" type="text/plain; length=43">managed_file_link.txt</a></span>',
-      'File (File ID)' => $submission->getElementData('managed_file_id'),
-      'File (File name)' => 'managed_file_name.txt',
-      'File (File extension)' => 'txt',
-      'File (URL)' => $this->getSubmissionFileUrl($submission, 'managed_file_url'),
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertContains('<b>' . $label . '</b><br />' . $value, $body, new FormattableMarkup('Found @label: @value', ['@label' => $label, '@value' => $value]));
-    }
-
-    // Check managed file element formatted as text.
-    $body = $this->getMessageBody($submission, 'email_text');
-    $elements = [
-      'File (Value): ' . $this->getSubmissionFileUrl($submission, 'managed_file_value'),
-      'File (Raw value): ' . $this->getSubmissionFileUrl($submission, 'managed_file_raw'),
-      'File (File): ' . $this->getSubmissionFileUrl($submission, 'managed_file_file'),
-      'File (Link): ' . $this->getSubmissionFileUrl($submission, 'managed_file_link'),
-      'File (File ID): ' . $submission->getElementData('managed_file_id'),
-      'File (File name): managed_file_name.txt',
-      'File (URL): ' . $this->getSubmissionFileUrl($submission, 'managed_file_url'),
-      'File (File mime type)' => 'text/plain',
-      'File (File size (Bytes))' => '43',
-      'File (File content (Base64))' => 'dGhpcyBpcyBhIHNhbXBsZSB0eHQgZmlsZQppdCBoYXMgdHdvIGxpbmVzCg==',
-    ];
-    foreach ($elements as $value) {
-      $this->assertContains($value, $body, new FormattableMarkup('Found @value', ['@value' => $value]));
-    }
-
-    /**************************************************************************/
-    /* Format multiple element as HTML and text */
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webforms */
-    $webforms = Webform::load('test_element_format_multiple');
-    $sid = $this->postSubmission($webforms);
-    $webforms_submission = WebformSubmission::load($sid);
-
-    // Check elements (single) item formatted as HTML.
-    $body = $this->getMessageBody($webforms_submission, 'email_html');
-    $elements = [
-      'Text field (Comma)' => 'Loremipsum, Oratione, Dixisset',
-      'Text field (Semicolon)' => 'Loremipsum; Oratione; Dixisset',
-      'Text field (And)' => 'Loremipsum, Oratione, and Dixisset',
-      'Text field (Ordered list)' => '<div class="item-list"><ol><li>Loremipsum</li><li>Oratione</li><li>Dixisset</li></ol></div>',
-      'Text field (Unordered list)' => '<div class="item-list"><ul><li>Loremipsum</li><li>Oratione</li><li>Dixisset</li></ul></div>',
-      'Checkboxes (Comma)' => 'One, Two, Three',
-      'Checkboxes (Semicolon)' => 'One; Two; Three',
-      'Checkboxes (And)' => 'One, Two, and Three',
-      'Checkboxes (Ordered list)' => '<div class="item-list"><ol><li>One</li><li>Two</li><li>Three</li></ol>',
-      'Checkboxes (Unordered list)' => '<div class="item-list"><ul><li>One</li><li>Two</li><li>Three</li></ul>',
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertContains('<b>' . $label . '</b><br />' . $value, $body, new FormattableMarkup('Found @label: @value', [
-        '@label' => $label,
-        '@value' => $value,
-      ]));
-    }
-
-    // Check elements formatted as text.
-    $body = $this->getMessageBody($webforms_submission, 'email_text');
-    $elements = [
-      'Text field (Comma): Loremipsum, Oratione, Dixisset',
-      'Text field (Semicolon): Loremipsum; Oratione; Dixisset',
-      'Text field (And): Loremipsum, Oratione, and Dixisset',
-      'Text field (Ordered list):
-1. Loremipsum
-2. Oratione
-3. Dixisset',
-      'Text field (Unordered list):
-- Loremipsum
-- Oratione
-- Dixisset',
-      'Checkboxes (Comma): One, Two, Three',
-      'Checkboxes (Semicolon): One; Two; Three',
-      'Checkboxes (And): One, Two, and Three',
-      'Checkboxes (Ordered list):
-1. One
-2. Two
-3. Three',
-      'Checkboxes (Unordered list):
-- One
-- Two
-- Three',
-    ];
-    foreach ($elements as $value) {
-      $this->assertContains($value, $body, new FormattableMarkup('Found @value', ['@value' => $value]));
-    }
-
-    /**************************************************************************/
-    /* Format element using tokens */
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform_format_token */
-    $webform_format_token = Webform::load('test_element_format_token');
-    $sid = $this->postSubmission($webform_format_token);
-    $webform_format_token_submission = WebformSubmission::load($sid);
-
-    // Check elements tokens formatted as HTML.
-    $body = $this->getMessageBody($webform_format_token_submission, 'email_html');
-    $elements = [
-      'default:' => 'one, two, three',
-      'comma:' => 'one, two, three',
-      'semicolon:' => 'one; two; three',
-      'and:' => 'one, two, and three',
-      'ul:' => '<div class="item-list"><ul><li>one</li><li>two</li><li>three</li></ul></div>',
-      'ol:' => '<div class="item-list"><ol><li>one</li><li>two</li><li>three</li></ol></div>',
-      'raw:' => '1, 2, 3',
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertContains('<h3>' . $label . '</h3>' . $value . '<hr />', $body, new FormattableMarkup('Found @label: @value', [
-        '@label' => $label,
-        '@value' => $value,
-      ]));
-    }
-
-    // Check elements tokens formatted as text.
-    $body = $this->getMessageBody($webform_format_token_submission, 'email_text');
-    $elements = [
-      "default:\none, two, three",
-      "comma:\none, two, three",
-      "semicolon:\none; two; three",
-      "and:\none, two, and three",
-      "ul:\n- one\n- two\n- three",
-      "ol:\n1. one\n2. two\n3. three",
-      "raw:\n1, 2, 3",
-    ];
-    foreach ($elements as $value) {
-      $this->assertContains($value, $body, new FormattableMarkup('Found @value', ['@value' => $value]));
-    }
-
-    // Check element default format item global setting.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('format.checkboxes.item', 'raw')
-      ->save();
-    $body = $this->getMessageBody($webform_format_token_submission, 'email_text');
-    $this->assertContains("default:\n1, 2, 3", $body);
-
-    // Check element default format items global setting.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('format.checkboxes.items', 'and')
-      ->save();
-    $body = $this->getMessageBody($webform_format_token_submission, 'email_text');
-    $this->assertContains("default:\n1, 2, and 3", $body);
-  }
-
-  /**
-   * Get webform email message body for a webform submission.
-   *
-   * @param \Drupal\webform\WebformSubmissionInterface $submission
-   *   A webform submission.
-   * @param string $handler_id
-   *   The webform email handler id.
-   *
-   * @return string
-   *   The webform email message body for a webform submission.
-   */
-  protected function getMessageBody(WebformSubmissionInterface $submission, $handler_id = 'email_html') {
-    /** @var \Drupal\webform\Plugin\WebformHandlerMessageInterface $message_handler */
-    $message_handler = $submission->getWebform()->getHandler($handler_id);
-    $message = $message_handler->getMessage($submission);
-    $body = (string) $message['body'];
-    $this->verbose($body);
-    return $body;
-  }
-
-  /**
-   * Get submission element's file URL.
-   *
-   * @param \Drupal\webform\WebformSubmissionInterface $submission
-   *   A webform submission.
-   * @param string $element_key
-   *   The element key.
-   *
-   * @return string
-   *   A submission element's file URL.
-   */
-  protected function getSubmissionFileUrl(WebformSubmissionInterface $submission, $element_key) {
-    $fid = $submission->getElementData($element_key);
-    $file = File::load($fid);
-    return file_create_url($file->getFileUri());
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementHelpTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementHelpTest.php
deleted file mode 100644
index c5cd1feb..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementHelpTest.php
+++ /dev/null
@@ -1,69 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for element help.
- *
- * @group Webform
- */
-class WebformElementHelpTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_help'];
-
-  /**
-   * Test element help.
-   */
-  public function testHelp() {
-    $this->drupalGet('/webform/test_element_help');
-
-    // Check basic help.
-    $this->assertRaw('<label for="edit-help">help<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check help with required.
-    $this->assertRaw('<label for="edit-help-required" class="js-form-required form-required">help_required<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_required&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help for a required element}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check help with custom title.
-    $this->assertRaw('<label for="edit-help-title">help_title<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;{Help custom title}&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help with a custom help title}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check help with HTML markup.
-    $this->assertRaw('<label for="edit-help-html">help_html<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_html&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help with &lt;b&gt;HTML markup&lt;/b&gt;}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check help with XSS.
-    $this->assertRaw('<label for="edit-help-xss">help_xss<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_xss&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help with &lt;b&gt;XSS alert(&quot;XSS&quot;)&lt;/b&gt;}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check help with inline title.
-    $this->assertRaw('<label for="edit-help-checkbox" class="option">help_checkbox<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_checkbox&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<label for="edit-help-inline"><span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_inline&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help with an inline title}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check radios (fieldset).
-    $this->assertRaw('<span class="fieldset-legend">help_radios<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_radios&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help for radio buttons}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check fieldset.
-    $this->assertRaw('<span class="fieldset-legend">help_radios<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_radios&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help for radio buttons}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check details.
-    $this->assertRaw('<summary role="button" aria-controls="edit-help-details" aria-expanded="false" aria-pressed="false">help_details<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_details&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help for a details element}&lt;/div&gt;"><span aria-hidden="true">?</span>');
-
-    // Check section.
-    $this->assertRaw('<h2 class="webform-section-title">help_section<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_section&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help for a section element}&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check help display title after.
-    $this->assertRaw('<label for="edit-help-after-title">help_after_title<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_after_title&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help}&lt;/div&gt;"><span aria-hidden="true">?</span></span></label>');
-
-    // Check help display title before.
-    $this->assertRaw('<label for="edit-help-before-title"><span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_before_title&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help}&lt;/div&gt;"><span aria-hidden="true">?</span></span>help_before_title</label>');
-
-    // Check help display element after.
-    $this->assertRaw('<span class="field-suffix"><span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_after_element&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help}&lt;/div&gt;"><span aria-hidden="true">?</span></span></span>');
-
-    // Check help display element before.
-    $this->assertRaw('<span class="field-prefix"><span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;help_before_element&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;{This is an example of help}&lt;/div&gt;"><span aria-hidden="true">?</span></span></span>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementHorizontalRuleTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementHorizontalRuleTest.php
deleted file mode 100644
index 75051d3d..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementHorizontalRuleTest.php
+++ /dev/null
@@ -1,30 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for horizontal rule element.
- *
- * @group Webform
- */
-class WebformElementHorizontalRuleTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_horizontal_rule'];
-
-  /**
-   * Test horizontal rule element.
-   */
-  public function testHorizontalRule() {
-    $this->drupalGet('/webform/test_element_horizontal_rule');
-
-    // Check rendering.
-    $this->assertRaw('<hr data-drupal-selector="edit-horizontal-rule" id="edit-horizontal-rule" class="webform-horizontal-rule" />');
-    $this->assertRaw('<hr class="webform-horizontal-rule--dotted webform-horizontal-rule" style="border-color: red" data-drupal-selector="edit-horizontal-rule-custom" id="edit-horizontal-rule-custom" />');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementHtmlEditorTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementHtmlEditorTest.php
deleted file mode 100644
index cf931cd5..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementHtmlEditorTest.php
+++ /dev/null
@@ -1,151 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Element\WebformHtmlEditor;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform HTML editor element.
- *
- * @group Webform
- */
-class WebformElementHtmlEditorTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_html_editor'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filters.
-    $this->createFilters();
-  }
-
-  /**
-   * Tests HTML Editor element.
-   */
-  public function testHtmlEditor() {
-    $this->drupalLogin($this->rootUser);
-
-    /* Element text format */
-
-    $webform = Webform::load('test_element_html_editor');
-
-    // Check required validation.
-    $edit = [
-      'webform_html_editor[value]' => '',
-      'webform_html_editor_disable[value]' => '',
-      'webform_html_editor_format[value][value]' => '',
-      'webform_html_editor_codemirror[value]' => '',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('webform_html_editor (default) field is required.');
-    $this->assertRaw('webform_html_editor (disable) field is required.');
-    $this->assertRaw('webform_html_editor (format) field is required.');
-    $this->assertRaw('webform_html_editor_codemirror (none) field is required.');
-
-    $this->drupalGet('/webform/test_element_html_editor');
-
-    // Check that HTML editor is enabled.
-    $this->assertRaw('<textarea data-drupal-selector="edit-webform-html-editor-value" class="js-html-editor form-textarea required resize-vertical" id="edit-webform-html-editor-value" name="webform_html_editor[value]" rows="5" cols="60" required="required" aria-required="true">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-
-    // Check that HTML editor is disabled.
-    $this->assertRaw('<textarea class="custom-disabled js-html-editor form-textarea required resize-vertical" data-drupal-selector="edit-webform-html-editor-disable-value" id="edit-webform-html-editor-disable-value" name="webform_html_editor_disable[value]" rows="5" cols="60" required="required" aria-required="true">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-
-    // Check that CodeMirror is displayed when #format: FALSE.
-    $this->assertRaw('<textarea data-drupal-selector="edit-webform-html-editor-codemirror-value" class="js-webform-codemirror webform-codemirror html required form-textarea resize-vertical" required="required" aria-required="true" data-webform-codemirror-mode="text/html" id="edit-webform-html-editor-codemirror-value" name="webform_html_editor_codemirror[value]" rows="5" cols="60">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-
-    // Disable HTML editor.
-    $this->drupalPostForm('admin/structure/webform/config/elements', ['html_editor[disabled]' => TRUE], t('Save configuration'));
-
-    // Check that HTML editor is removed and replaced by CodeMirror HTML editor.
-    $this->drupalGet('/webform/test_element_html_editor');
-    $this->assertNoRaw('<textarea class="js-html-editor form-textarea required resize-vertical" data-drupal-selector="edit-webform-html-editor-value" id="edit-webform-html-editor-value" name="webform_html_editor[value]" rows="5" cols="60" required="required" aria-required="true">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-webform-html-editor-value" class="js-webform-codemirror webform-codemirror html required form-textarea resize-vertical" required="required" aria-required="true" data-webform-codemirror-mode="text/html" id="edit-webform-html-editor-value" name="webform_html_editor[value]" rows="5" cols="60">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-
-    // Enable HTML editor and element text format.
-    $edit = [
-      'html_editor[disabled]' => FALSE,
-      'html_editor[element_format]' => 'basic_html',
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/elements', $edit, t('Save configuration'));
-
-    // Check that Text format is disabled.
-    $this->drupalGet('/webform/test_element_html_editor');
-    $this->assertNoRaw('<textarea class="js-html-editor form-textarea resize-vertical" data-drupal-selector="edit-webform-html-editor-value" id="edit-webform-html-editor-value" name="webform_html_editor[value]" rows="5" cols="60">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-    $this->assertNoRaw('<textarea data-drupal-selector="edit-webform-html-editor-value" class="js-webform-codemirror webform-codemirror html required form-textarea resize-vertical" required="required" aria-required="true" data-webform-codemirror-mode="text/html" id="edit-webform-html-editor-value" name="webform_html_editor[value]" rows="5" cols="60">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-    $this->assertRaw('<textarea data-drupal-selector="edit-webform-html-editor-value-value" id="edit-webform-html-editor-value-value" name="webform_html_editor[value][value]" rows="5" cols="60" class="form-textarea required resize-vertical" required="required" aria-required="true">Hello &lt;b&gt;World!!!&lt;/b&gt;</textarea>');
-    $this->assertRaw('<h4 class="label">Basic HTML</h4>');
-
-    // Disable element text format.
-    $edit = [
-      'html_editor[element_format]' => '',
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/elements', $edit, t('Save configuration'));
-
-    // Check that tidy removed <p> tags.
-    $build = WebformHtmlEditor::checkMarkup('<p>Some text</p>');
-    $this->assertEqual(\Drupal::service('renderer')->renderPlain($build), 'Some text');
-
-    $build = WebformHtmlEditor::checkMarkup('<p class="other">Some text</p>');
-    $this->assertEqual(\Drupal::service('renderer')->renderPlain($build), '<p class="other">Some text</p>');
-
-    $build = WebformHtmlEditor::checkMarkup('<p>Some text</p><p>More text</p>');
-    $this->assertEqual(\Drupal::service('renderer')->renderPlain($build), '<p>Some text</p><p>More text</p>');
-
-    // Disable HTML tidy.
-    $this->drupalPostForm('admin/structure/webform/config/elements', ['html_editor[tidy]' => FALSE], t('Save configuration'));
-
-    // Check that tidy is disabled.
-    $build = WebformHtmlEditor::checkMarkup('<p>Some text</p>');
-    $this->assertEqual(\Drupal::service('renderer')->renderPlain($build), '<p>Some text</p>');
-
-    /* Email text format */
-    // Disable HTML editor.
-    $edit = [
-      'html_editor[disabled]' => FALSE,
-      'html_editor[element_format]' => '',
-      'html_editor[mail_format]' => '',
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/elements', $edit, t('Save configuration'));
-
-    // Check that HTML editor is used.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers/email_confirmation/edit');
-    $this->assertRaw('<textarea data-drupal-selector="edit-settings-body-custom-html-value" class="js-html-editor form-textarea resize-vertical" id="edit-settings-body-custom-html-value" name="settings[body_custom_html][value]" rows="5" cols="60">');
-
-    // Enable mail text format.
-    $edit = [
-      'html_editor[mail_format]' => 'basic_html',
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/elements', $edit, t('Save configuration'));
-
-    // Check mail text format is used.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers/email_confirmation/edit');
-    $this->assertNoRaw('<textarea data-drupal-selector="edit-settings-body-custom-html-value" class="js-html-editor form-textarea resize-vertical" id="edit-settings-body-custom-html-value" name="settings[body_custom_html][value]" rows="5" cols="60">');
-    $this->assertRaw('<textarea data-drupal-selector="edit-settings-body-custom-html-value-value" id="edit-settings-body-custom-html-value-value" name="settings[body_custom_html][value][value]" rows="5" cols="60" class="form-textarea resize-vertical">');
-    // @todo Remove once Drupal 8.8.x is only supported.
-    if (floatval(\Drupal::VERSION) >= 8.8) {
-      $this->assertRaw('<div class="js-filter-wrapper filter-wrapper js-form-wrapper form-wrapper" data-drupal-selector="edit-settings-body-custom-html-value-format" id="edit-settings-body-custom-html-value-format">');
-    }
-    else {
-      $this->assertRaw('<div class="filter-wrapper js-form-wrapper form-wrapper" data-drupal-selector="edit-settings-body-custom-html-value-format" id="edit-settings-body-custom-html-value-format">');
-    }
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementIcheckTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementIcheckTest.php
deleted file mode 100644
index 24a2c9d9..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementIcheckTest.php
+++ /dev/null
@@ -1,68 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for iCheck element.
- *
- * @group Webform
- */
-class WebformElementIcheckTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_icheck'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    $this->config('webform.settings')
-      ->set('libraries.excluded_libraries', [])
-      ->save();
-  }
-
-  /**
-   * Test iCheck element.
-   */
-  public function testIcheckElement() {
-
-    $this->drupalGet('/webform/test_element_icheck');
-
-    // Check custom iCheck style set to 'flat'.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-checkbox-custom form-item-checkbox-custom">');
-    $this->assertRaw('<input data-webform-icheck="flat" data-drupal-selector="edit-checkbox-custom" type="checkbox" id="edit-checkbox-custom" name="checkbox_custom" value="1" class="form-checkbox" />');
-
-    // Check default iCheck style not set.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-checkbox-default form-item-checkbox-default">');
-    $this->assertRaw('<input data-drupal-selector="edit-checkbox-default" type="checkbox" id="edit-checkbox-default" name="checkbox_default" value="1" class="form-checkbox" />');
-
-    // Check none iCheck style not set.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-checkbox-none form-item-checkbox-none">');
-    $this->assertRaw('<input data-drupal-selector="edit-checkbox-none" type="checkbox" id="edit-checkbox-none" name="checkbox_none" value="1" class="form-checkbox" />');
-
-    // Enable default icheck style.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.default_icheck', 'minimal')
-      ->save();
-
-    $this->drupalGet('/webform/test_element_icheck');
-
-    // Check custom iCheck style still set to 'flat'.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-checkbox-custom form-item-checkbox-custom">');
-    $this->assertRaw('<input data-webform-icheck="flat" data-drupal-selector="edit-checkbox-custom" type="checkbox" id="edit-checkbox-custom" name="checkbox_custom" value="1" class="form-checkbox" />');
-
-    // Check default iCheck style set to 'minimal'.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-checkbox-default form-item-checkbox-default">');
-    $this->assertRaw('<input data-webform-icheck="minimal" data-drupal-selector="edit-checkbox-default" type="checkbox" id="edit-checkbox-default" name="checkbox_default" value="1" class="form-checkbox" />');
-
-    // Check none iCheck style not set.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-checkbox-none form-item-checkbox-none">');
-    $this->assertRaw('<input data-drupal-selector="edit-checkbox-none" type="checkbox" id="edit-checkbox-none" name="checkbox_none" value="1" class="form-checkbox" />');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementIgnoredPropertiesTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementIgnoredPropertiesTest.php
deleted file mode 100644
index 8bae5a5b..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementIgnoredPropertiesTest.php
+++ /dev/null
@@ -1,34 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Utility\WebformElementHelper;
-
-/**
- * Tests for element ignored properties.
- *
- * @group Webform
- */
-class WebformElementIgnoredPropertiesTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_ignored_properties'];
-
-  /**
-   * Test element ignored properties.
-   */
-  public function testIgnoredProperties() {
-    $webform_ignored_properties = Webform::load('test_element_ignored_properties');
-    $elements = $webform_ignored_properties->getElementsInitialized();
-    foreach (WebformElementHelper::$ignoredProperties as $ignored_property) {
-      $this->assert(!isset($elements['test'][$ignored_property]), new FormattableMarkup('@property ignored.', ['@property' => $ignored_property]));
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementImageResolutionTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementImageResolutionTest.php
deleted file mode 100644
index eff6bd3f..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementImageResolutionTest.php
+++ /dev/null
@@ -1,44 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform image resolution element.
- *
- * @group Webform
- */
-class WebformElementImageResolutionTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_image_resolution'];
-
-  /**
-   * Tests image resolution element.
-   */
-  public function testImageResolution() {
-
-    $this->drupalGet('/webform/test_element_image_resolution');
-
-    // Check rendering.
-    $this->assertRaw('<label for="edit-webform-image-resolution-advanced">webform_image_resolution_advanced</label>');
-    $this->assertRaw('<label for="edit-webform-image-resolution-advanced-x" class="visually-hidden">{width_title}</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-image-resolution-advanced-x" type="number" id="edit-webform-image-resolution-advanced-x" name="webform_image_resolution_advanced[x]" value="300" step="1" min="1" class="form-number" />');
-    $this->assertRaw('<label for="edit-webform-image-resolution-advanced-y" class="visually-hidden">{height_title}</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-image-resolution-advanced-y" type="number" id="edit-webform-image-resolution-advanced-y" name="webform_image_resolution_advanced[y]" value="400" step="1" min="1" class="form-number" />');
-    $this->assertRaw('{description}');
-
-    // Check validation.
-    $this->drupalPostForm('webform/test_element_image_resolution', ['webform_image_resolution[x]' => '100'], t('Submit'));
-    $this->assertRaw('Both a height and width value must be specified in the webform_image_resolution field.');
-
-    // Check processing.
-    $this->drupalPostForm('webform/test_element_image_resolution', [], t('Submit'));
-    $this->assertRaw("webform_image_resolution: ''
-webform_image_resolution_advanced: 300x400");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementInputMaskTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementInputMaskTest.php
deleted file mode 100644
index 01c2c748..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementInputMaskTest.php
+++ /dev/null
@@ -1,103 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for element input mask.
- *
- * @group Webform
- */
-class WebformElementInputMaskTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_input_mask'];
-
-  /**
-   * Test element input mask.
-   */
-  public function testInputMask() {
-    $webform = Webform::load('test_element_input_mask');
-
-    // Check default values.
-    $this->postSubmission($webform);
-    $this->assertRaw("currency: '$ 1.00'
-datetime: ''
-decimal: ''
-email: ''
-ip: ''
-license_plate: ''
-mac: ''
-percentage: ''
-phone: ''
-ssn: ''
-vin: ''
-zip: ''
-uppercase: ''
-lowercase: ''
-custom: ''");
-
-    // Check patterns.
-    $edit = [
-      'email' => 'example@example.com',
-      'datetime' => '2007-06-09\'T\'17:46:21',
-      'decimal' => '9.9',
-      'ip' => '255.255.255.255',
-      'currency' => '$ 9.99',
-      'percentage' => '99 %',
-      'phone' => '(999) 999-9999',
-      'license_plate' => '9-AAA-999',
-      'mac' => '99-99-99-99-99-99',
-      'ssn' => '999-99-9999',
-      'vin' => 'JA3AY11A82U020534',
-      'zip' => '99999-9999',
-      'uppercase' => 'UPPERCASE',
-      'lowercase' => 'lowercase',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw("currency: '$ 9.99'
-datetime: '2007-06-09''T''17:46:21'
-decimal: '9.9'
-email: example@example.com
-ip: 255.255.255.255
-license_plate: 9-AAA-999
-mac: 99-99-99-99-99-99
-percentage: '99 %'
-phone: '(999) 999-9999'
-ssn: 999-99-9999
-vin: JA3AY11A82U020534
-zip: 99999-9999
-uppercase: UPPERCASE
-lowercase: lowercase
-custom: ''");
-
-    // Check pattern validation error messages.
-    $edit = [
-      'currency' => '$ 9.9_',
-      'decimal' => '9._',
-      'ip' => '255.255.255.__',
-      'mac' => '99-99-99-99-99-_)',
-      'percentage' => '_ %',
-      'phone' => '(999) 999-999_',
-      'ssn' => '999-99-999_',
-      'zip' => '99999-999_',
-    ];
-    $this->postSubmission($webform, $edit);
-    foreach ($edit as $name => $value) {
-      $this->assertRaw('<em class="placeholder">' . $name . '</em> field is not in the right format.');
-    }
-
-    // Check currency submitted as the default input (ie $ 0.00) triggers
-    // required validation.
-    // @see \Drupal\webform\Plugin\WebformElement\TextBase::validateInputMask
-    $this->postSubmission($webform, ['currency' => '$ 0.00']);
-    $this->assertRaw('currency field is required.');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementLikertTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementLikertTest.php
deleted file mode 100644
index 0a1d7c7e..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementLikertTest.php
+++ /dev/null
@@ -1,90 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for likert element.
- *
- * @group Webform
- */
-class WebformElementLikertTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_likert'];
-
-  /**
-   * Test likert element.
-   */
-  public function testLikertElement() {
-
-    $this->drupalGet('/webform/test_element_likert');
-
-    // Check default likert element.
-    $this->assertRaw('<table class="webform-likert-table sticky-enabled responsive-enabled" data-likert-answers-count="3" data-drupal-selector="edit-likert-default-table" id="edit-likert-default-table" data-striping="1">');
-    $this->assertPattern('#<tr>\s+<th><span class="visually-hidden">Questions</span></th>\s+<th>Option 1</th>\s+<th>Option 2</th>\s+<th>Option 3</th>\s+</tr>#');
-    $this->assertRaw('<label>Question 1</label>');
-    $this->assertRaw('<td><div class="js-form-item form-item js-form-type-radio form-type-radio js-form-item-likert-default-q1 form-item-likert-default-q1">');
-    $this->assertRaw('<input aria-labelledby="edit-likert-default-table-q1-likert-question" data-drupal-selector="edit-likert-default-q1" type="radio" id="edit-likert-default-q1" name="likert_default[q1]" value="1" class="form-radio" />');
-    $this->assertRaw('<label for="edit-likert-default-q1" class="option"><span class="webform-likert-label visually-hidden">Option 1</span></label>');
-
-    // Check advanced likert element with N/A.
-    $this->assertPattern('#<tr>\s+<th><span class="visually-hidden">Questions</span></th>\s+<th>Option 1</th>\s+<th>Option 2</th>\s+<th>Option 3</th>\s+<th>Not applicable</th>\s+</tr>#');
-    $this->assertRaw('<td><div class="js-form-item form-item js-form-type-radio form-type-radio js-form-item-likert-advanced-q1 form-item-likert-advanced-q1">');
-    $this->assertRaw('<input aria-labelledby="edit-likert-advanced-table-q1-likert-question" data-drupal-selector="edit-likert-advanced-q1" type="radio" id="edit-likert-advanced-q1--4" name="likert_advanced[q1]" value="N/A" class="form-radio" />');
-    $this->assertRaw('<label for="edit-likert-advanced-q1--4" class="option"><span class="webform-likert-label visually-hidden">Not applicable</span></label>');
-
-    // Check likert with description.
-    $this->assertRaw('<th>Option 1<div class="description">This is a description</div>');
-    $this->assertRaw('<label>Question 1</label>');
-    $this->assertRaw('<div id="edit-likert-description-table-q1-likert-question--description" class="webform-element-description">');
-    $this->assertRaw('<label for="edit-likert-description-q1" class="option"><span class="webform-likert-label visually-hidden">Option 1</span></label>');
-    $this->assertRaw('<span class="webform-likert-description hidden">This is a description</span>');
-
-    // Check likert with help.
-    $this->assertRaw('<th>Option 1<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Option 1&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<label>Question 1<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Question 1&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<label for="edit-likert-help-q1--2" class="option"><span class="webform-likert-label visually-hidden">Option 2<span class="webform-likert-help hidden"><span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Option 2&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check likert required.
-    $this->drupalPostForm('webform/test_element_likert', [], t('Submit'));
-    $this->assertRaw('Question 1 field is required.');
-    $this->assertRaw('Question 2 field is required.');
-    $this->assertRaw('Question 3 field is required.');
-
-    // Check likert processing.
-    $edit = [
-      'likert_advanced[q1]' => '1',
-      'likert_advanced[q2]' => '2',
-      'likert_advanced[q3]' => 'N/A',
-      'likert_values[0]' => '0',
-      'likert_values[1]' => '1',
-      'likert_values[2]' => 'N/A',
-    ];
-    $this->drupalPostForm('webform/test_element_likert', $edit, t('Submit'));
-    $this->assertRaw("likert_default:
-  q1: null
-  q2: null
-  q3: null
-likert_advanced:
-  q1: '1'
-  q2: '2'
-  q3: N/A
-likert_description:
-  q1: null
-  q2: null
-  q3: null
-likert_help:
-  q1: null
-  q2: null
-  q3: null
-likert_values:
-  - '0'
-  - '1'
-  - N/A");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementLocationPlacesTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementLocationPlacesTest.php
deleted file mode 100644
index 47eab668..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementLocationPlacesTest.php
+++ /dev/null
@@ -1,78 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for location (Algolia) places element.
- *
- * @group Webform
- */
-class WebformElementLocationPlacesTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_loc_places'];
-
-  /**
-   * Test location (Algolia) places element.
-   */
-  public function testLocationPlaces() {
-    $webform = Webform::load('test_element_loc_places');
-
-    $this->drupalGet('/webform/test_element_loc_places');
-
-    // Check hidden attributes.
-    $this->assertRaw('<input class="webform-location-places form-text" data-drupal-selector="edit-location-default-value" type="text" id="edit-location-default-value" name="location_default[value]" value="" size="60" maxlength="255" placeholder="Enter a location" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="lat" data-drupal-selector="edit-location-default-lat" type="hidden" name="location_default[lat]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="lng" data-drupal-selector="edit-location-default-lng" type="hidden" name="location_default[lng]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="name" data-drupal-selector="edit-location-default-name" type="hidden" name="location_default[name]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="city" data-drupal-selector="edit-location-default-city" type="hidden" name="location_default[city]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="country" data-drupal-selector="edit-location-default-country" type="hidden" name="location_default[country]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="country_code" data-drupal-selector="edit-location-default-country-code" type="hidden" name="location_default[country_code]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="administrative" data-drupal-selector="edit-location-default-administrative" type="hidden" name="location_default[administrative]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="county" data-drupal-selector="edit-location-default-county" type="hidden" name="location_default[county]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="suburb" data-drupal-selector="edit-location-default-suburb" type="hidden" name="location_default[suburb]" value="" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="postcode" data-drupal-selector="edit-location-default-postcode" type="hidden" name="location_default[postcode]" value="" />');
-
-    // Check visible attributes.
-    $this->assertRaw('<input class="webform-location-places form-text" data-drupal-selector="edit-location-attributes-value" type="text" id="edit-location-attributes-value" name="location_attributes[value]" value="" size="60" maxlength="255" />');
-    $this->assertRaw('<input data-webform-location-places-attribute="lat" data-drupal-selector="edit-location-attributes-lat" type="text" id="edit-location-attributes-lat" name="location_attributes[lat]" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check invalid validation.
-    $edit = [
-      'location_attributes_required[value]' => 'test',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('The location_attributes_required is not valid.');
-
-    // Check valid validation with lat(itude).
-    $edit = [
-      'location_attributes_required[value]' => 'test',
-      'location_attributes_required[lat]' => 1,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('The location_attributes_required is not valid.');
-
-    // Check application id and API key is missing.
-    $this->assertNoRaw('"app_id"');
-    $this->assertNoRaw('"api_key"');
-
-    // Set application id and API key.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.default_algolia_places_app_id', '{default_algolia_places_app_id}')
-      ->set('element.default_algolia_places_api_key', '{default_algolia_places_api_key}')
-      ->save();
-
-    // Check application id and API key is set.
-    $this->drupalGet('/webform/test_element_loc_places');
-    $this->assertRaw('"app_id"');
-    $this->assertRaw('"api_key"');
-    $this->assertRaw('"webform":{"location":{"places":{"app_id":"{default_algolia_places_app_id}","api_key":"{default_algolia_places_api_key}"}}}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileImageTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileImageTest.php
deleted file mode 100644
index 846ae67c..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileImageTest.php
+++ /dev/null
@@ -1,48 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Test for webform element managed file image handling.
- *
- * @group Webform
- */
-class WebformElementManagedFileImageTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'image', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_image_file'];
-
-  /**
-   * Test image file upload.
-   */
-  public function testImageFileUpload() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_element_image_file');
-
-    // Get test image.
-    $images = $this->drupalGetTestFiles('image');
-    $image = reset($images);
-
-    // Check image max resolution validation is being applied.
-    $edit = [
-      'files[webform_image_file_advanced]' => \Drupal::service('file_system')->realpath($image->uri),
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('The image was resized to fit within the maximum allowed dimensions of <em class="placeholder">20x20</em> pixels.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileLimitTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileLimitTest.php
deleted file mode 100644
index 901fb114..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileLimitTest.php
+++ /dev/null
@@ -1,84 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Test for webform element managed file limit.
- *
- * @group Webform
- */
-class WebformElementManagedFileLimitTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_managed_file_limit'];
-
-  /**
-   * Test file limit.
-   */
-  public function testLimits() {
-    $this->drupalLogin($this->rootUser);
-
-    // Get a 1 MB text file.
-    $files = $this->getTestFiles('text', '1024');
-    $file = reset($files);
-    $bytes = filesize($file->uri);
-    $this->debug($bytes);
-
-    $webform = Webform::load('test_element_managed_file_limit');
-
-    // Check form file limit.
-    $this->drupalGet('/webform/test_element_managed_file_limit');
-    $this->assertRaw('1 MB limit per form.');
-
-    // Check empty form file limit.
-    $webform->setSetting('form_file_limit', '')->save();
-    $this->drupalGet('/webform/test_element_managed_file_limit');
-    $this->assertNoRaw('1 MB limit per form.');
-
-    // Check default form file limit.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('settings.default_form_file_limit', '2 MB')
-      ->save();
-    $this->drupalGet('/webform/test_element_managed_file_limit');
-    $this->assertRaw('2 MB limit per form.');
-
-    // Set limit to 2 files.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('settings.default_form_file_limit', ($bytes * 2) . ' bytes')
-      ->save();
-    $this->drupalGet('/webform/test_element_managed_file_limit');
-    $this->assertRaw(format_size($bytes * 2) . ' limit per form.');
-
-    // Check valid file upload.
-    $edit = [
-      'files[managed_file_01]' => \Drupal::service('file_system')->realpath($file->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $this->assertNotNull($sid);
-
-    // Check invalid file upload.
-    $edit = [
-      'files[managed_file_01]' => \Drupal::service('file_system')->realpath($file->uri),
-      'files[managed_file_02]' => \Drupal::service('file_system')->realpath($file->uri),
-      'files[managed_file_03]' => \Drupal::service('file_system')->realpath($file->uri),
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('This form\'s file upload quota of <em class="placeholder">2 KB</em> has been exceeded. Please remove some files.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePreviewTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePreviewTest.php
deleted file mode 100644
index 9a6008fc..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePreviewTest.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Test for webform element managed file preview.
- *
- * @group Webform
- */
-class WebformElementManagedFilePreviewTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'image', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_managed_file_prev'];
-
-  /**
-   * Test image file upload.
-   */
-  public function testImageFileUpload() {
-    global $base_url;
-
-    // Check that anonymous users can not preview files.
-    $this->drupalGet('/webform/test_element_managed_file_prev/test');
-    $this->assertRaw('<span data-drupal-selector="edit-webform-image-file-file-1-filename" class="file file--mime-image-gif file--image"> webform_image_file.gif</span>');
-    $this->assertRaw('<span data-drupal-selector="edit-webform-audio-file-file-3-filename" class="file file--mime-audio-mpeg file--audio"> webform_audio_file.mp3</span>');
-    $this->assertRaw('<span data-drupal-selector="edit-webform-video-file-file-5-filename" class="file file--mime-video-mp4 file--video"> webform_video_file.mp4</span>');
-    $this->assertRaw('<span data-drupal-selector="edit-webform-document-file-file-7-filename" class="file file--mime-text-plain file--text"> webform_document_file.txt</span>');
-
-    // Login admin user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check that authenticated users can preview files.
-    $this->drupalGet('/webform/test_element_managed_file_prev/test');
-
-    $this->assertRaw('<div class="webform-managed-file-preview webform-image-file-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-webform-image-file-file-9-filename" id="edit-webform-image-file-file-9-filename">');
-    $this->assertRaw('<a href="' . $base_url . '/system/files/webform/test_element_managed_file_prev/_sid_/webform_image_file_0.gif" class="js-webform-image-file-modal webform-image-file-modal">');
-
-    $this->assertRaw('<div class="webform-managed-file-preview webform-audio-file-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-webform-audio-file-file-11-filename" id="edit-webform-audio-file-file-11-filename">');
-    $this->assertRaw('<source src="' . $base_url . '/system/files/webform/test_element_managed_file_prev/_sid_/webform_audio_file_0.mp3" type="audio/mpeg">');
-
-    $this->assertRaw('<div class="webform-managed-file-preview webform-video-file-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-webform-video-file-file-13-filename" id="edit-webform-video-file-file-13-filename">');
-    $this->assertRaw('<source src="' . $base_url . '/system/files/webform/test_element_managed_file_prev/_sid_/webform_video_file_0.mp4" type="video/mp4">');
-
-    $this->assertRaw('<div class="webform-managed-file-preview webform-document-file-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-webform-document-file-file-15-filename" id="edit-webform-document-file-file-15-filename">');
-    $this->assertRaw($base_url . '/system/files/webform/test_element_managed_file_prev/_sid_/webform_document_file_0.txt');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePrivateTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePrivateTest.php
deleted file mode 100644
index 8a829e30..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePrivateTest.php
+++ /dev/null
@@ -1,120 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\Core\Url;
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Test for webform element managed file handling.
- *
- * @group Webform
- */
-class WebformElementManagedFilePrivateTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_managed_file'];
-
-  /**
-   * Test private files.
-   */
-  public function testPrivateFiles() {
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    $webform = Webform::load('test_element_managed_file');
-
-    /**************************************************************************/
-
-    $elements = $webform->getElementsDecoded();
-    $elements['managed_file_single']['#uri_scheme'] = 'private';
-    $webform->setElements($elements);
-    $webform->save();
-
-    $this->drupalLogin($admin_submission_user);
-
-    // Upload private file as authenticated user.
-    $edit = [
-      'files[managed_file_single]' => \Drupal::service('file_system')->realpath($this->files[0]->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-
-    /** @var \Drupal\file\Entity\File $file */
-    $fid = $this->getLastFileId();
-    $file = File::load($fid);
-
-    // Check that test file 3 was uploaded to the current submission.
-    $this->assertEqual($submission->getElementData('managed_file_single'), $fid, 'Test file 3 was upload to the current submission');
-
-    // Check test file 3 file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($file), 'The file has 3 usage.');
-
-    // Check test file 3 uploaded file path.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_element_managed_file/' . $sid . '/' . $this->files[0]->filename);
-
-    // Check private file access allowed.
-    $this->drupalGet(file_create_url($file->getFileUri()));
-    $this->assertResponse(200);
-
-    $this->drupalLogout();
-
-    // Check private file access redirects to user login page with destination.
-    $this->drupalGet(file_create_url($file->getFileUri()));
-    $this->assertResponse(200);
-
-    $destination_url = Url::fromUri('base://system/files', [
-      'query' => [
-        'file' => 'webform/test_element_managed_file/' . $sid . '/' . $this->files[0]->filename,
-      ],
-    ]);
-    $this->assertUrl('user/login', [
-      'query' => [
-        'destination' => $destination_url->toString(),
-      ],
-    ]);
-
-    // Upload private file and preview as anonymous user.
-    $edit = [
-      'files[managed_file_single]' => \Drupal::service('file_system')->realpath($this->files[1]->uri),
-    ];
-    $this->drupalPostForm('webform/' . $webform->id(), $edit, t('Preview'));
-
-    $temp_file_uri = file_create_url('private://webform/test_element_managed_file/_sid_/' . basename($this->files[1]->uri));
-
-    // Check that temp file is not linked.
-    $this->assertNoRaw('<span class="file file--mime-text-plain file--text"> <a href="' . $temp_file_uri . '" type="text/plain; length=16384">text-1.txt</a></span>');
-    $this->assertRaw('<span class="file file--mime-text-plain file--text"> ' . basename($this->files[1]->uri) . '</span>');
-
-    // Check that anonymous user can't access temp file.
-    $this->drupalGet($temp_file_uri);
-    $this->assertResponse(403);
-
-    // Check that authenticated user can't access temp file.
-    $this->drupalLogin($admin_submission_user);
-    $this->drupalGet($temp_file_uri);
-    $this->assertResponse(403);
-
-    // Disable redirect anonymous users to login when attempting to access
-    // private file uploads.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('file.file_private_redirect', FALSE)
-      ->save();
-
-    // Check private file access redirects to user login page with destination.
-    $this->drupalLogout();
-    $this->drupalGet(file_create_url($file->getFileUri()));
-    $this->assertResponse(403);
-    $this->assertUrl('system/files/webform/test_element_managed_file/' . $sid . '/' . $this->files[0]->filename);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePublicTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePublicTest.php
deleted file mode 100644
index f471aa52..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFilePublicTest.php
+++ /dev/null
@@ -1,87 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Test for webform element managed public file handling (DRUPAL-PSA-2016-003).
- *
- * @see https://www.drupal.org/psa-2016-003
- *
- * @group Webform
- */
-class WebformElementManagedFilePublicTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_managed_file'];
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform', 'webform_ui'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Set public file upload support for testing.
-    $settings_config = \Drupal::configFactory()->getEditable('webform.settings');
-    $settings_config->set('file.file_public', TRUE);
-    $settings_config->save();
-  }
-
-  /**
-   * Test public upload protection.
-   */
-  public function testPublicUpload() {
-    // Check status report private file system warning.
-    $requirements = webform_requirements('runtime');
-    $this->assertEqual($requirements['webform_file_private']['value'], (string) t('Private file system is set.'));
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check element webform warning message for public files.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/element/managed_file_single/edit');
-    $this->assertRaw('Public files upload destination is dangerous for webforms that are available to anonymous and/or untrusted users.');
-    $this->assertFieldById('edit-properties-uri-scheme-public');
-
-    // Check element webform warning message not visible public files.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('file.file_public', FALSE)
-      ->save();
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/element/managed_file_single/edit');
-    $this->assertNoRaw('Public files upload destination is dangerous for webforms that are available to anonymous and/or untrusted users.');
-    $this->assertNoFieldById('edit-properties-uri-scheme-public');
-
-    /**************************************************************************/
-    // NOTE: Unable to test private file upload warning because SimpleTest
-    // automatically enables private file uploads.
-    /**************************************************************************/
-
-    // Check managed_file element is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/element/add');
-    $this->assertRaw('>File<');
-
-    // Disable managed file element.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.excluded_elements.managed_file', 'managed_file')
-      ->save();
-
-    // Check disabled managed_file element remove from add element dialog.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/element/add');
-    $this->assertNoRaw('>File<');
-
-    // Check disabled managed_file element warning.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file');
-    $this->assertRaw('<em class="placeholder">managed_file_single</em> is a <em class="placeholder">File</em> element, which has been disabled and will not be rendered.');
-    $this->assertRaw('<em class="placeholder">managed_file_multiple</em> is a <em class="placeholder">File</em> element, which has been disabled and will not be rendered.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTest.php
deleted file mode 100644
index 0bf8c8a1..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTest.php
+++ /dev/null
@@ -1,364 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Test for webform element managed file handling.
- *
- * @group Webform
- */
-class WebformElementManagedFileTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_element_managed_file',
-    'test_element_managed_file_dis',
-    'test_element_managed_file_name',
-  ];
-
-  /**
-   * The 'test_element_managed_file' webform.
-   *
-   * @var \Drupal\webform\WebformInterface
-   */
-  protected $webform;
-
-  /**
-   * Admin submission user.
-   *
-   * @var \Drupal\user\Entity\User
-   */
-  protected $adminSubmissionUser;
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    $this->webform = Webform::load('test_element_managed_file');
-
-    $this->adminSubmissionUser = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-  }
-
-  /**
-   * Test single and multiple file upload.
-   */
-  public function testFileUpload() {
-
-    /* Element rendering */
-
-    $this->drupalGet('/webform/test_element_managed_file');
-
-    // Check single file upload button.
-    $this->assertRaw('<label for="edit-managed-file-single-button-upload-button--2" class="button button-action webform-file-button">Choose file</label>');
-
-    // Check multiple file upload button.
-    $this->assertRaw('<label for="edit-managed-file-multiple-button-upload-button--2" class="button button-action webform-file-button">Choose files</label>');
-
-    // Check single custom file upload button.
-    $this->assertRaw('<label style="color: red" for="edit-managed-file-single-button-custom-upload-button--2" class="button button-action webform-file-button">{Custom label}</label>');
-
-    /* Element processing */
-
-    $this->checkFileUpload('single', $this->files[0], $this->files[1]);
-    $this->checkFileUpload('multiple', $this->files[2], $this->files[3]);
-
-    /* Multiple processing */
-
-    // Check file input is visible.
-    $this->drupalGet('/webform/test_element_managed_file');
-    $this->assertFieldByName('files[managed_file_multiple_two][]');
-    $this->assertFieldByName('managed_file_multiple_two_upload_button');
-
-    // Check that only two files can be uploaded.
-    $edit = [
-      'files[managed_file_multiple_two][]' => [
-        \Drupal::service('file_system')->realpath($this->files[0]->uri),
-        \Drupal::service('file_system')->realpath($this->files[1]->uri),
-        \Drupal::service('file_system')->realpath($this->files[2]->uri),
-      ],
-    ];
-    $this->drupalPostForm('/webform/test_element_managed_file', $edit, t('Upload'));
-    $this->assertRaw('<em class="placeholder">managed_file_multiple_two</em> can only hold 2 values but there were 3 uploaded. The following files have been omitted as a result: <em class="placeholder">text-2.txt</em>.');
-
-    // Check file input is removed.
-    $this->assertNoFieldByName('files[managed_file_multiple_two][]');
-    $this->assertNoFieldByName('managed_file_multiple_two_upload_button');
-
-    /* File placeholder */
-
-    // Check placeholder is displayed.
-    $this->drupalGet('/webform/test_element_managed_file');
-    $this->assertRaw('<div class="webform-managed-file-placeholder managed-file-placeholder js-form-wrapper form-wrapper" data-drupal-selector="edit-managed-file-single-placeholder-file-placeholder" id="edit-managed-file-single-placeholder-file-placeholder">This is the single file upload placeholder</div>');
-    $this->assertRaw('<div class="webform-managed-file-placeholder managed-file-placeholder js-form-wrapper form-wrapper" data-drupal-selector="edit-managed-file-multiple-placeholder-file-placeholder" id="edit-managed-file-multiple-placeholder-file-placeholder">This is the multiple file upload placeholder</div>');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check placeholder is not displayed when files are uploaded.
-    $this->drupalGet('/webform/test_element_managed_file/test');
-    $this->assertNoRaw('<div class="webform-managed-file-placeholder managed-file-placeholder js-form-wrapper form-wrapper" data-drupal-selector="edit-managed-file-single-placeholder-file-placeholder" id="edit-managed-file-single-placeholder-file-placeholder">This is the single file upload placeholder</div>');
-    $this->assertNoRaw('<div class="webform-managed-file-placeholder managed-file-placeholder js-form-wrapper form-wrapper" data-drupal-selector="edit-managed-file-multiple-placeholder-file-placeholder" id="edit-managed-file-multiple-placeholder-file-placeholder">This is the multiple file upload placeholder</div>');
-  }
-
-  /**
-   * Test the file renaming feature.
-   *
-   * The property #file_name_pattern is tested.
-   */
-  public function testFileRename() {
-    $webform = Webform::load('test_element_managed_file_name');
-
-    $source_for_filename = $this->randomMachineName();
-    $sid = $this->postSubmission($webform, [
-      'source_for_filename' => $source_for_filename,
-      'files[file_single]' => \Drupal::service('file_system')->realpath($this->files[0]->uri),
-      'files[file_multiple][]' => \Drupal::service('file_system')->realpath($this->files[0]->uri),
-    ]);
-
-    $this->drupalLogin($this->adminSubmissionUser);
-    // Edit the submission and insert 1 extra file into the multiple element.
-    $this->drupalPostForm('webform/' . $webform->id() . '/submissions/' . $sid . '/edit', [
-      'files[file_multiple][]' => \Drupal::service('file_system')->realpath($this->files[1]->uri),
-    ], 'Save');
-    $this->drupalLogout();
-
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-
-    /** @var \Drupal\file\FileInterface $single_file */
-    $single_file = File::load($submission->getElementData('file_single'));
-    $this->assertEqual('file_single_' . $source_for_filename . '.txt', $single_file->getFilename());
-
-    /** @var \Drupal\file\FileInterface[] $multiple_file */
-    $multiple_file = File::loadMultiple($submission->getElementData('file_multiple'));
-    $this->assertEqual(count($multiple_file), 2, 'Two files found in the multiple element.');
-
-    $i = -1;
-    foreach ($multiple_file as $file) {
-      $suffix = $i == -1 ? '' : '_' . $i;
-      $this->assertEqual('file_multiple_' . $source_for_filename . $suffix . '.txt', $file->getFilename());
-      $i++;
-    }
-  }
-
-  /**
-   * Test file management.
-   */
-  public function testFileManagement() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_element_managed_file');
-
-    /**************************************************************************/
-    // Test immediately delete file.
-    /**************************************************************************/
-
-    // Upload files.
-    $sid = $this->postSubmissionTest($webform);
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-    $managed_file_single = $this->fileLoad($submission->getElementData('managed_file_single'));
-
-    // Check single file is not temporary.
-    $this->debug($submission->getData());
-    $this->assertNotNull($managed_file_single);
-    $this->assertFalse($managed_file_single->isTemporary());
-
-    // Check deleting file completely deletes the file record.
-    $submission->delete();
-    $managed_file_single = $this->fileLoad($submission->getElementData('managed_file_single'));
-    $this->assertNull($managed_file_single);
-
-    /**************************************************************************/
-    // Test disabling immediately deleted temporary managed files.
-    /**************************************************************************/
-
-    // Disable deleting of temporary files.
-    $config = \Drupal::configFactory()->getEditable('webform.settings');
-    $config->set('file.delete_temporary_managed_files', FALSE);
-    $config->save();
-
-    // Upload files.
-    $sid = $this->postSubmissionTest($webform);
-    $submission = WebformSubmission::load($sid);
-
-    // Check deleting file completely deletes the file record.
-    $submission->delete();
-    $managed_file_single = $this->fileLoad($submission->getElementData('managed_file_single'));
-    $this->assertNotNull($managed_file_single);
-    $this->assertTrue($managed_file_single->isTemporary());
-
-    /**************************************************************************/
-    // Test disabling unused files marked temporary.
-    /**************************************************************************/
-
-    // Disable deleting of temporary files.
-    $config = \Drupal::configFactory()->getEditable('webform.settings');
-    $config->set('file.make_unused_managed_files_temporary', FALSE);
-    $config->save();
-
-    // Upload files.
-    $sid = $this->postSubmissionTest($webform);
-    $submission = WebformSubmission::load($sid);
-
-    // Check deleting file completely deletes the file record.
-    $submission->delete();
-    $managed_file_single = $this->fileLoad($submission->getElementData('managed_file_single'));
-    $this->assertNotNull($managed_file_single);
-    $this->assertFalse($managed_file_single->isTemporary());
-  }
-
-  /**
-   * Test file upload with disabled results.
-   */
-  public function testFileUploadWithDisabledResults() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_element_managed_file_dis');
-
-    // Upload new file.
-    $sid = $this->postSubmissionTest($webform);
-    $file = File::load($this->getLastFileId());
-
-    // Check that no submission was saved to the database.
-    $this->assertNull($sid);
-
-    // Check file URI.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_element_managed_file_dis/_sid_/managed_file.txt');
-
-    // Check file is temporary.
-    $this->assertTrue($file->isTemporary());
-
-    // Check file_managed table has 1 record.
-    $this->assertEqual(1, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed}')->fetchField());
-
-    // Check file_usage table has no records.
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_usage}')->fetchField());
-  }
-
-  /****************************************************************************/
-  // Helper functions. From: \Drupal\file\Tests\FileFieldTestBase::getTestFile
-  /****************************************************************************/
-
-  /**
-   * Check file upload.
-   *
-   * @param string $type
-   *   The type of file upload which can be either single or multiple.
-   * @param object $first_file
-   *   The first file to be uploaded.
-   * @param object $second_file
-   *   The second file that replaces the first file.
-   */
-  protected function checkFileUpload($type, $first_file, $second_file) {
-    $key = 'managed_file_' . $type;
-    $parameter_name = ($type == 'multiple') ? "files[$key][]" : "files[$key]";
-
-    $edit = [
-      $parameter_name => \Drupal::service('file_system')->realpath($first_file->uri),
-    ];
-    $sid = $this->postSubmission($this->webform, $edit);
-
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-
-    /** @var \Drupal\file\FileInterface $file */
-    $fid = $this->getLastFileId();
-    $file = File::load($fid);
-
-    // Check that test file was uploaded to the current submission.
-    $second = ($type == 'multiple') ? [$fid] : $fid;
-    $this->assertEqual($submission->getElementData($key), $second, 'Test file was upload to the current submission');
-
-    // Check test file file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($file), 'The file has 1 usage.');
-
-    // Check test file uploaded file path.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_element_managed_file/' . $sid . '/' . $first_file->filename);
-
-    // Check that test file exists.
-    $this->assert(file_exists($file->getFileUri()), 'File exists');
-
-    // Login admin user.
-    $this->drupalLogin($this->adminSubmissionUser);
-
-    // Check managed file formatting.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/submission/' . $sid);
-    if ($type == 'multiple') {
-      $this->assertRaw('<label>managed_file_multiple</label>');
-      $this->assertRaw('<div class="item-list">');
-    }
-    $this->assertRaw('<span class="file file--mime-text-plain file--text"> <a href="' . file_create_url($file->getFileUri()) . '" type="text/plain; length=' . $file->getSize() . '">' . $file->getFilename() . '</a></span>');
-
-    // Remove the uploaded file.
-    if ($type == 'multiple') {
-      $edit = ['managed_file_multiple[file_' . $fid . '][selected]' => TRUE];
-      $submit = t('Remove selected');
-    }
-    else {
-      $edit = [];
-      $submit = t('Remove');
-    }
-    $this->drupalPostForm('/admin/structure/webform/manage/test_element_managed_file/submission/' . $sid . '/edit', $edit, $submit);
-
-    // Upload new file.
-    $edit = [
-      $parameter_name => \Drupal::service('file_system')->realpath($second_file->uri),
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Upload'));
-
-    // Submit the new file.
-    $this->drupalPostForm(NULL, [], t('Save'));
-
-    /** @var \Drupal\file\FileInterface $test_file_0 */
-    $new_fid = $this->getLastFileId();
-    $new_file = File::load($new_fid);
-
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $submission = WebformSubmission::load($sid);
-
-    // Check that test new file was uploaded to the current submission.
-    $second = ($type == 'multiple') ? [$new_fid] : $new_fid;
-    $this->assertEqual($submission->getElementData($key), $second, 'Test new file was upload to the current submission');
-
-    // Check that test file was deleted from the disk and database.
-    $this->assert(!file_exists($file->getFileUri()), 'Test file deleted from disk');
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_usage} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
-
-    // Check test file 1 file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($new_file), 'The new file has 1 usage.');
-
-    // Check that file directory was create.
-    $this->assertTrue(file_exists('private://webform/test_element_managed_file/' . $sid . '/'));
-
-    // Delete the submission.
-    $submission->delete();
-
-    // Check that test file 1 was deleted from the disk and database.
-    $this->assert(!file_exists($new_file->getFileUri()), 'Test new file deleted from disk');
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $new_fid])->fetchField(), 'Test new file deleted from database');
-
-    // Check that empty file directory was deleted.
-    $this->assertFalse(file_exists('private://webform/test_element_managed_file/' . $sid . '/'));
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTestBase.php b/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTestBase.php
deleted file mode 100644
index 2387214b..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementManagedFileTestBase.php
+++ /dev/null
@@ -1,66 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\file\Entity\File;
-
-/**
- * Base class for testing webform element managed file handling.
- */
-abstract class WebformElementManagedFileTestBase extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform'];
-
-  /**
-   * File usage manager.
-   *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
-   */
-  protected $fileUsage;
-
-  /**
-   * An array of plain text test files.
-   *
-   * @var array
-   */
-  protected $files;
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    $this->fileUsage = $this->container->get('file.usage');
-    $this->files = $this->drupalGetTestFiles('text');
-
-    $this->verbose('<pre>' . print_r($this->files, TRUE) . '</pre>');
-  }
-
-  /**
-   * Retrieves the fid of the last inserted file.
-   */
-  protected function getLastFileId() {
-    return (int) \Drupal::database()->query('SELECT MAX(fid) FROM {file_managed}')->fetchField();
-  }
-
-  /**
-   * Load an uncached file entity.
-   *
-   * @param string $fid
-   *   A file id.
-   *
-   * @return \Drupal\file\FileInterface
-   *   An uncached file object
-   */
-  protected function fileLoad($fid) {
-    \Drupal::entityTypeManager()->getStorage('file')->resetCache();
-    return File::load($fid);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementMappingTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementMappingTest.php
deleted file mode 100644
index 9d22d849..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementMappingTest.php
+++ /dev/null
@@ -1,129 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for mapping element.
- *
- * @group Webform
- */
-class WebformElementMappingTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_mapping'];
-
-  /**
-   * Test mapping element.
-   */
-  public function testMappingElement() {
-    $this->drupalGet('/webform/test_element_mapping');
-
-    // Check default element.
-    $this->assertRaw('<th>Source &rarr;</th>');
-    $this->assertRaw('<th>Destination</th>');
-    $this->assertRaw('<select data-drupal-selector="edit-webform-mapping-one" id="edit-webform-mapping-one" name="webform_mapping[one]" class="form-select"><option value="" selected="selected">- Select -</option><option value="four">Four</option><option value="five">Five</option><option value="six">Six</option></select>');
-
-    // Check source description.
-    $this->assertRaw('<td>One &rarr;<div class="description js-form-wrapper form-wrapper" data-drupal-selector="edit-table-one-source-data-description" id="edit-table-one-source-data-description">This is a description. This is a <a href="https://google.com">link</a></div>');
-
-    // Check source help.
-    $this->assertRaw('<td>One<span data-drupal-selector="edit-table-one-source-data-help" class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;One&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help. This is a &lt;a href=&quot;https://google.com&quot;&gt;link&lt;/a&gt;&lt;/div&gt;"><span aria-hidden="true">?</span></span> &rarr;</td>');
-
-    // Check custom element.
-    $this->assertRaw('<th>{Custom source} &raquo;</th>');
-    $this->assertRaw('<th>{Destination source}</th>');
-    $this->assertRaw('<select data-drupal-selector="edit-webform-mapping-one" id="edit-webform-mapping-one" name="webform_mapping[one]" class="form-select"><option value="" selected="selected">- Select -</option><option value="four">Four</option><option value="five">Five</option><option value="six">Six</option></select>');
-
-    // Check custom select other element type.
-    $this->assertRaw('<input data-drupal-selector="edit-webform-mapping-select-other-one-other" type="text" id="edit-webform-mapping-select-other-one-other" name="webform_mapping_select_other[one][other]" value="" size="60" maxlength="255" placeholder="Enter other…" class="form-text" />');
-
-    // Check custom textfield #size property.
-    $this->assertRaw('<input data-drupal-selector="edit-webform-mapping-textfield-one" type="text" id="edit-webform-mapping-textfield-one" name="webform_mapping_textfield[one]" value="" size="10" maxlength="128" class="form-text" />');
-
-    // Check required.
-    $this->drupalPostForm('webform/test_element_mapping', [], t('Submit'));
-    $this->assertRaw('webform_mapping_required field is required.');
-    $this->assertRaw('One field is required.');
-    $this->assertRaw('Two field is required.');
-    $this->assertRaw('Three field is required.');
-
-    // Check that required all element does not display error since all the
-    // destination elements are required.
-    // @see \Drupal\webform\Element\WebformMapping::validateWebformMapping
-    $this->assertNoRaw('webform_mapping_required_all field is required.');
-
-    // Check processing.
-    $edit = [
-      'webform_mapping[one]' => 'four',
-      'webform_mapping[three]' => 'six',
-      'webform_mapping_description[two]' => 'five',
-      'webform_mapping_help[two]' => 'five',
-      'webform_mapping_required[one]' => 'four',
-      'webform_mapping_required_all[one]' => 'four',
-      'webform_mapping_required_all[two]' => 'five',
-      'webform_mapping_required_all[three]' => 'six',
-      'webform_mapping_custom[Sunday]' => 'four',
-      'webform_mapping_custom[Monday]' => 'four',
-      'webform_mapping_custom[Tuesday]' => 'four',
-      'webform_mapping_custom[Wednesday]' => 'four',
-      'webform_mapping_custom[Thursday]' => 'four',
-      'webform_mapping_custom[Friday]' => 'four',
-      'webform_mapping_custom[Saturday]' => 'four',
-      'webform_mapping_select_other[one][select]' => 'five',
-      'webform_mapping_select_other[two][select]' => 'five',
-      'webform_mapping_select_other[three][select]' => '_other_',
-      'webform_mapping_select_other[three][other]' => '{other}',
-      'webform_mapping_textfield[one]' => 'Loremipsum',
-      'webform_mapping_textfield[two]' => 'Loremipsum',
-      'webform_mapping_textfield[three]' => 'Loremipsum',
-      'webform_mapping_email_multiple[one]' => 'example@example.com, test@test.com, random@random.com',
-      'webform_mapping_email_multiple[two]' => '',
-      'webform_mapping_email_multiple[three]' => '',
-    ];
-
-    // Check preview.
-    $this->drupalPostForm('webform/test_element_mapping', $edit, t('Preview'));
-
-    // Check that source description is not displayed.
-    $this->assertRaw('<li>Two &rarr; Five</li>');
-
-    // Check submitted values.
-    $this->drupalPostForm('webform/test_element_mapping', $edit, t('Submit'));
-    $this->assertRaw("webform_mapping:
-  one: four
-  three: six
-webform_mapping_description:
-  two: five
-webform_mapping_help:
-  two: five
-webform_mapping_custom:
-  Sunday: four
-  Monday: four
-  Tuesday: four
-  Wednesday: four
-  Thursday: four
-  Friday: four
-  Saturday: four
-webform_mapping_required:
-  one: four
-webform_mapping_required_all:
-  one: four
-  two: five
-  three: six
-webform_mapping_select_other:
-  one: five
-  two: five
-  three: '{other}'
-webform_mapping_textfield:
-  one: Loremipsum
-  two: Loremipsum
-  three: Loremipsum
-webform_mapping_email_multiple:
-  one: 'example@example.com, test@test.com, random@random.com'");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementMarkupTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementMarkupTest.php
deleted file mode 100644
index 8f790b90..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementMarkupTest.php
+++ /dev/null
@@ -1,54 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for markup element.
- *
- * @group Webform
- */
-class WebformElementMarkupTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_markup'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_markup'];
-
-  /**
-   * Test markup element.
-   */
-  public function testMarkup() {
-
-    // Check markup display on form.
-    $this->drupalGet('/webform/test_element_markup');
-    $this->assertRaw('<div id="edit-markup" class="js-form-item form-item js-form-type-webform-markup form-type-webform-markup js-form-item-markup form-item-markup form-no-label">');
-    $this->assertRaw('<p>This is normal markup</p>');
-    $this->assertRaw('<p>This is only displayed on the form view.</p>');
-    $this->assertNoRaw('<p>This is only displayed on the submission view.</p>');
-    $this->assertRaw('<p>This is displayed on the both the form and submission view.</p>');
-    $this->assertRaw('<p>This is displayed on the both the form and submission view.</p>');
-
-    // Check markup alter via preprocessing.
-    // @see webform_test_markup_preprocess_webform_html_editor_markup()
-    $this->drupalGet('/webform/test_element_markup');
-    $this->assertNoRaw('<p>Alter this markup.</p>');
-    $this->assertRaw('<p><em>Alter this markup.</em> <strong>This markup was altered.</strong></p>');
-
-    // Check markup display on view.
-    $this->drupalPostForm('webform/test_element_markup', [], t('Preview'));
-    $this->assertNoRaw('<p>This is normal markup</p>');
-    $this->assertNoRaw('<p>This is only displayed on the form view.</p>');
-    $this->assertRaw('<p>This is only displayed on the submission view.</p>');
-    $this->assertRaw('<p>This is displayed on the both the form and submission view.</p>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementMediaFileTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementMediaFileTest.php
deleted file mode 100644
index 00f5cdb1..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementMediaFileTest.php
+++ /dev/null
@@ -1,171 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Test for webform element managed file handling.
- *
- * @group Webform
- */
-class WebformElementMediaFileTest extends WebformElementManagedFileTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'image', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_media_file'];
-
-  /**
-   * Test media file upload elements.
-   */
-  public function testMediaFileUpload() {
-    /* Element render */
-
-    // Get test webform.
-    $this->drupalGet('/webform/test_element_media_file');
-
-    // Check document file.
-    $this->assertRaw('<input data-drupal-selector="edit-document-file-upload" type="file" id="edit-document-file-upload" name="files[document_file]" size="22" class="js-form-file form-file" />');
-
-    // Check audio file.
-    $this->assertRaw('<input data-drupal-selector="edit-audio-file-upload" accept="audio/*" type="file" id="edit-audio-file-upload" name="files[audio_file]" size="22" class="js-form-file form-file" />');
-
-    // Check image file.
-    $this->assertRaw('<input data-drupal-selector="edit-image-file-upload" accept="image/*" type="file" id="edit-image-file-upload" name="files[image_file]" size="22" class="js-form-file form-file" />');
-
-    // Check video file.
-    $this->assertRaw('<input data-drupal-selector="edit-video-file-upload" accept="video/*" type="file" id="edit-video-file-upload" name="files[video_file]" size="22" class="js-form-file form-file" />');
-
-    /* Element processing */
-
-    // Get test webform preview with test values.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm('webform/test_element_media_file/test', [], t('Preview'));
-
-    // Check audio file preview.
-    $this->assertRaw('<source src="' . $this->getAbsoluteUrl('/system/files/webform/test_element_media_file/_sid_/audio_file_mp3.mp3') . '" type="audio/mpeg">');
-
-    // Check image file preview.
-    $this->assertRaw('<img class="webform-image-file" alt="image_file_jpg.jpg" title="image_file_jpg.jpg" src="' . $this->getAbsoluteUrl('/system/files/webform/test_element_media_file/_sid_/image_file_jpg.jpg') . '" />');
-
-    // Check image file link to modal.
-    $this->assertRaw('/system/files/webform/test_element_media_file/_sid_/image_file_jpg_modal.jpg" class="js-webform-image-file-modal webform-image-file-modal">');
-    $this->assertRaw('/system/files/styles/thumbnail/private/webform/test_element_media_file/_sid_/image_file_jpg_modal.jpg?itok=');
-
-    // Check video file preview.
-    $this->assertRaw('<source src="' . $this->getAbsoluteUrl('/system/files/webform/test_element_media_file/_sid_/video_file_mp4.mp4') . '" type="video/mp4">');
-  }
-
-  /****************************************************************************/
-  // Helper functions. From: \Drupal\file\Tests\FileFieldTestBase::getTestFile
-  /****************************************************************************/
-
-  /**
-   * Check file upload.
-   *
-   * @param string $type
-   *   The type of file upload which can be either single or multiple.
-   * @param object $first_file
-   *   The first file to be uploaded.
-   * @param object $second_file
-   *   The second file that replaces the first file.
-   */
-  protected function checkFileUpload($type, $first_file, $second_file) {
-    $key = 'managed_file_' . $type;
-    $parameter_name = ($type == 'multiple') ? "files[$key][]" : "files[$key]";
-
-    $edit = [
-      $parameter_name => \Drupal::service('file_system')->realpath($first_file->uri),
-    ];
-    $sid = $this->postSubmission($this->webform, $edit);
-
-    /** @var \Drupal\webform\WebformSubmissionInterface $submission */
-    $submission = WebformSubmission::load($sid);
-
-    /** @var \Drupal\file\Entity\File $file */
-    $fid = $this->getLastFileId();
-    $file = File::load($fid);
-
-    // Check that test file was uploaded to the current submission.
-    $second = ($type == 'multiple') ? [$fid] : $fid;
-    $this->assertEqual($submission->getElementData($key), $second, 'Test file was upload to the current submission');
-
-    // Check test file file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($file), 'The file has 1 usage.');
-
-    // Check test file uploaded file path.
-    $this->assertEqual($file->getFileUri(), 'private://webform/test_element_managed_file/' . $sid . '/' . $first_file->filename);
-
-    // Check that test file exists.
-    $this->assert(file_exists($file->getFileUri()), 'File exists');
-
-    // Login admin user.
-    $this->drupalLogin($this->adminSubmissionUser);
-
-    // Check managed file formatting.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_managed_file/submission/' . $sid);
-    if ($type == 'multiple') {
-      $this->assertRaw('<label>managed_file_multiple</label>');
-      $this->assertRaw('<div class="item-list">');
-    }
-    $this->assertRaw('<span class="file file--mime-text-plain file--text"> <a href="' . file_create_url($file->getFileUri()) . '" type="text/plain; length=' . $file->getSize() . '">' . $file->getFilename() . '</a></span>');
-
-    // Remove the uploaded file.
-    if ($type == 'multiple') {
-      $edit = ['managed_file_multiple[file_' . $fid . '][selected]' => TRUE];
-      $submit = t('Remove selected');
-    }
-    else {
-      $edit = [];
-      $submit = t('Remove');
-    }
-    $this->drupalPostForm('/admin/structure/webform/manage/test_element_managed_file/submission/' . $sid . '/edit', $edit, $submit);
-
-    // Upload new file.
-    $edit = [
-      $parameter_name => \Drupal::service('file_system')->realpath($second_file->uri),
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Upload'));
-
-    // Submit the new file.
-    $this->drupalPostForm(NULL, [], t('Save'));
-
-    /** @var \Drupal\file\Entity\File $test_file_0 */
-    $new_fid = $this->getLastFileId();
-    $new_file = File::load($new_fid);
-
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $submission = WebformSubmission::load($sid);
-
-    // Check that test new file was uploaded to the current submission.
-    $second = ($type == 'multiple') ? [$new_fid] : $new_fid;
-    $this->assertEqual($submission->getElementData($key), $second, 'Test new file was upload to the current submission');
-
-    // Check that test file was deleted from the disk and database.
-    $this->assert(!file_exists($file->getFileUri()), 'Test file deleted from disk');
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_usage} WHERE fid = :fid', [':fid' => $fid])->fetchField(), 'Test file 0 deleted from database');
-
-    // Check test file 1 file usage.
-    $this->assertIdentical(['webform' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($new_file), 'The new file has 1 usage.');
-
-    // Delete the submission.
-    $submission->delete();
-
-    // Check that test file 1 was deleted from the disk and database.
-    $this->assert(!file_exists($new_file->getFileUri()), 'Test new file deleted from disk');
-    $this->assertEqual(0, \Drupal::database()->query('SELECT COUNT(fid) AS total FROM {file_managed} WHERE fid = :fid', [':fid' => $new_fid])->fetchField(), 'Test new file deleted from database');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementMessageTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementMessageTest.php
deleted file mode 100644
index 90e9d75c..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementMessageTest.php
+++ /dev/null
@@ -1,116 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for message webform element.
- *
- * @group Webform
- */
-class WebformElementMessageTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_test_message_custom'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_message'];
-
-  /**
-   * Tests message element.
-   */
-  public function testMessage() {
-    $webform = Webform::load('test_element_message');
-
-    $this->drupalGet('/webform/test_element_message');
-
-    // Check basic message.
-    $this->assertRaw('<div data-drupal-selector="edit-message-info" class="webform-message js-webform-message js-form-wrapper form-wrapper" id="edit-message-info">');
-    $this->assertRaw('<div role="contentinfo" aria-label="" class="messages messages--info">');
-    $this->assertRaw('This is an <strong>info</strong> message.');
-
-    // Check close message with slide effect.
-    $this->assertRaw('<div data-drupal-selector="edit-message-close-slide" class="webform-message js-webform-message webform-message--close js-webform-message--close js-form-wrapper form-wrapper" data-message-close-effect="slide" id="edit-message-close-slide">');
-    $this->assertRaw('<div role="contentinfo" aria-label="" class="messages messages--info">');
-    $this->assertRaw('<a href="#close" aria-label="close" class="js-webform-message__link webform-message__link">×</a>This is message that can be <b>closed using slide effect</b>.');
-
-    // Set user and state storage.
-    $elements = [
-      'message_close_storage_user' => $webform->getElementDecoded('message_close_storage_user'),
-      'message_close_storage_state' => $webform->getElementDecoded('message_close_storage_state'),
-      'message_close_storage_custom' => $webform->getElementDecoded('message_close_storage_custom'),
-    ];
-    $webform->setElements($elements);
-    $webform->save();
-
-    // Check that close links are not enabled for 'user' or 'state' storage
-    // for anonymous users.
-    $this->drupalGet('/webform/test_element_message');
-    $this->assertRaw('href="#close"');
-    $this->assertNoRaw('data-message-storage="user"');
-    $this->assertNoRaw('data-message-storage="state"');
-
-    // Login to test closing message via 'user' and 'state' storage.
-    $this->drupalLogin($this->drupalCreateUser());
-
-    // Check that close links are enabled.
-    $this->drupalGet('/webform/test_element_message');
-    $this->assertNoRaw('href="#close"');
-    $this->assertRaw('data-drupal-selector="edit-message-close-storage-user"');
-    $this->assertRaw('data-message-storage="user"');
-    $this->assertRaw('data-drupal-selector="edit-message-close-storage-state"');
-    $this->assertRaw('data-message-storage="state"');
-    $this->assertRaw('data-drupal-selector="edit-message-close-storage-custom"');
-    $this->assertRaw('data-message-storage="custom"');
-
-    // Close message using 'user' storage.
-    $this->drupalGet('/webform/test_element_message');
-    $this->clickLink('×', 0);
-
-    // Check that 'user' storage message is removed.
-    $this->drupalGet('/webform/test_element_message');
-    $this->assertNoRaw('data-drupal-selector="edit-message-close-storage-user"');
-    $this->assertNoRaw('data-message-storage="user"');
-    $this->assertRaw('data-drupal-selector="edit-message-close-storage-state"');
-    $this->assertRaw('data-message-storage="state"');
-    $this->assertRaw('data-drupal-selector="edit-message-close-storage-custom"');
-    $this->assertRaw('data-message-storage="custom"');
-
-    // Close message using 'state' storage.
-    $this->drupalGet('/webform/test_element_message');
-    $this->clickLink('×', 0);
-
-    // Check that 'state' and 'user' storage message is removed.
-    $this->drupalGet('/webform/test_element_message');
-    $this->assertNoRaw('data-drupal-selector="edit-message-close-storage-user"');
-    $this->assertNoRaw('data-message-storage="user"');
-    $this->assertNoRaw('data-drupal-selector="edit-message-close-storage-state"');
-    $this->assertNoRaw('data-message-storage="state"');
-    $this->assertRaw('data-drupal-selector="edit-message-close-storage-custom"');
-    $this->assertRaw('data-message-storage="custom"');
-
-    // Close message using 'custom' storage.
-    $this->drupalGet('/webform/test_element_message');
-    $this->clickLink('×', 0);
-
-    // Check that 'state' and 'user' storage message is removed.
-    $this->drupalGet('/webform/test_element_message');
-    $this->assertNoRaw('data-drupal-selector="edit-message-close-storage-user"');
-    $this->assertNoRaw('data-message-storage="user"');
-    $this->assertNoRaw('data-drupal-selector="edit-message-close-storage-state"');
-    $this->assertNoRaw('data-message-storage="state"');
-    $this->assertNoRaw('data-drupal-selector="edit-message-close-storage-custom"');
-    $this->assertNoRaw('data-message-storage="custom"');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementMoreTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementMoreTest.php
deleted file mode 100644
index 16d6f762..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementMoreTest.php
+++ /dev/null
@@ -1,66 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for element more.
- *
- * @group Webform
- */
-class WebformElementMoreTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_more'];
-
-  /**
-   * Test element more.
-   */
-  public function testMore() {
-    $this->drupalGet('/webform/test_element_more');
-
-    // Check more element.
-    $this->assertRaw('<div data-drupal-selector="edit-more" id="webform-element-more" class="js-webform-element-more webform-element-more">');
-    $this->assertRaw('<div class="webform-element-more--link"><a role="button" href="#webform-element-more--content">More</a></div>');
-    $this->assertRaw('<div id="webform-element-more--content" class="webform-element-more--content">{This is an example of more}</div>');
-
-    // Check textfield default more.
-    $this->assertRaw('<div id="edit-more-textfield--more" class="js-webform-element-more webform-element-more">');
-    $this->assertRaw('<div class="webform-element-more--link"><a role="button" href="#edit-more-textfield--more--content">More</a></div>');
-
-    // Check textfield more with custom title.
-    $this->assertRaw('<div id="edit-more-textfield-title--more" class="js-webform-element-more webform-element-more">');
-    $this->assertRaw('<div class="webform-element-more--link"><a role="button" href="#edit-more-textfield-title--more--content">{Custom more title}</a></div>');
-
-    // Check textfield more with HTML markup.
-    $this->assertRaw('<div id="edit-more-textfield-html--more" class="js-webform-element-more webform-element-more">');
-    $this->assertRaw('<div id="edit-more-textfield-html--more--content" class="webform-element-more--content">{This is an example of more with <b>HTML markup</b>}</div>');
-
-    // Check textfield more with description.
-    $this->assertRaw('<div id="edit-more-textfield-title-desc--description" class="webform-element-description">{This is an example of a description}</div>');
-    $this->assertRaw('<div id="edit-more-textfield-title-desc--more" class="js-webform-element-more webform-element-more">');
-
-    // Check more with hidden description.
-    $this->assertRaw('<div id="edit-more-textfield-title-desc-hidden--description" class="webform-element-description visually-hidden">{This is an example of a hidden description}</div>');
-    $this->assertRaw('<div id="edit-more-textfield-title-desc-hidden--more" class="js-webform-element-more webform-element-more">');
-
-    // Check datetime more.
-    $this->assertRaw('<div id="edit-more-datetime--more" class="js-webform-element-more webform-element-more">');
-
-    // Check fieldset more.
-    $this->assertRaw('<div id="edit-more-fieldset--description" class="webform-element-description">{This is a description}</div>');
-    $this->assertRaw('<div id="edit-more-fieldset--more" class="js-webform-element-more webform-element-more">');
-
-    // Check details more.
-    $this->assertRaw('<div id="edit-more-details--more" class="js-webform-element-more webform-element-more">');
-    $this->assertRaw('<div class="webform-element-more--link"><a role="button" href="#edit-more-details--more--content">More</a></div>');
-
-    // Check tooltip ignored more.
-    $this->assertRaw('<div id="edit-more-tooltip--description" class="webform-element-description visually-hidden">{This is a description}</div>');
-    $this->assertRaw('<div id="edit-more-tooltip--more" class="js-webform-element-more webform-element-more">');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementMultipleTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementMultipleTest.php
deleted file mode 100644
index 3126cd60..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementMultipleTest.php
+++ /dev/null
@@ -1,244 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform element multiple.
- *
- * @group Webform
- */
-class WebformElementMultipleTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_multiple', 'test_element_multiple_property'];
-
-  /**
-   * Tests multiple element.
-   */
-  public function testMultiple() {
-
-    /**************************************************************************/
-    // Processing.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_element_multiple');
-
-    // Check processing for all elements.
-    $this->drupalPostForm('webform/test_element_multiple', [], t('Submit'));
-    $this->assertRaw("webform_multiple_default:
-  - One
-  - Two
-  - Three
-webform_multiple_no_sorting:
-  - One
-  - Two
-  - Three
-webform_multiple_no_operations:
-  - One
-  - Two
-  - Three
-webform_multiple_no_add_more:
-  - One
-  - Two
-  - Three
-webform_multiple_custom_label:
-  - One
-  - Two
-  - Three
-webform_multiple_required:
-  - One
-  - Two
-  - Three
-webform_multiple_email_five:
-  - example@example.com
-  - test@test.com
-webform_multiple_datelist: {  }
-webform_multiple_name_composite:
-  - title: ''
-    first: John
-    middle: ''
-    last: Smith
-    suffix: ''
-    degree: ''
-  - title: ''
-    first: Jane
-    middle: ''
-    last: Doe
-    suffix: ''
-    degree: ''
-webform_multiple_elements_name_item:
-  - first_name: John
-    last_name: Smith
-  - first_name: Jane
-    last_name: Doe
-webform_multiple_elements_name_table:
-  - first_name: John
-    last_name: Smith
-  - first_name: Jane
-    last_name: Doe
-webform_multiple_options:
-  - value: one
-    text: One
-  - value: two
-    text: Two
-webform_multiple_key:
-  one:
-    text: One
-    score: '1'
-  two:
-    text: Two
-    score: '2'
-webform_multiple_elements_hidden_table:
-  - first_name: John
-    id: john
-    last_name: Smith
-  - first_name: Jane
-    id: jane
-    last_name: Doe
-webform_multiple_elements_flattened:
-  - value: one
-    text: One
-    description: 'This is the number 1.'
-  - value: two
-    text: Two
-    description: 'This is the number 2.'
-webform_multiple_no_items: {  }
-webform_multiple_custom_attributes: {  }");
-
-    /**************************************************************************/
-    // Rendering.
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_multiple');
-
-    // Check first tr.
-    $this->assertRaw('<tr class="draggable odd" data-drupal-selector="edit-webform-multiple-default-items-0">');
-    $this->assertRaw('<td><div class="js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-webform-multiple-default-items-0--item- form-item-webform-multiple-default-items-0--item- form-no-label">');
-    $this->assertRaw('<label for="edit-webform-multiple-default-items-0-item-" class="visually-hidden">Item value</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-multiple-default-items-0-item-" type="text" id="edit-webform-multiple-default-items-0-item-" name="webform_multiple_default[items][0][_item_]" value="One" size="60" maxlength="128" placeholder="Enter value…" class="form-text" />');
-    $this->assertRaw('<td class="webform-multiple-table--weight"><div class="webform-multiple-table--weight js-form-item form-item js-form-type-number form-type-number js-form-item-webform-multiple-default-items-0-weight form-item-webform-multiple-default-items-0-weight form-no-label">');
-    $this->assertRaw('<label for="edit-webform-multiple-default-items-0-weight" class="visually-hidden">Item weight</label>');
-    $this->assertRaw('<input class="webform-multiple-sort-weight form-number" data-drupal-selector="edit-webform-multiple-default-items-0-weight" type="number" id="edit-webform-multiple-default-items-0-weight" name="webform_multiple_default[items][0][weight]" value="0" step="1" size="10" />');
-    $this->assertRaw('<td class="webform-multiple-table--operations webform-multiple-table--operations-two"><input data-drupal-selector="edit-webform-multiple-default-items-0-operations-add" formnovalidate="formnovalidate" type="image" id="edit-webform-multiple-default-items-0-operations-add" name="webform_multiple_default_table_add_0"');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-multiple-default-items-0-operations-remove" formnovalidate="formnovalidate" type="image" id="edit-webform-multiple-default-items-0-operations-remove" name="webform_multiple_default_table_remove_0"');
-
-    // Check that sorting is disabled.
-    $this->assertNoRaw('<tr class="draggable odd" data-drupal-selector="edit-webform-multiple-no-sorting-items-0">');
-    $this->assertRaw('<tr data-drupal-selector="edit-webform-multiple-no-sorting-items-0" class="odd">');
-
-    // Check that add more is removed.
-    $this->assertFieldByName('webform_multiple_no_operations[add][more_items]', '1');
-    $this->assertNoFieldByName('webform_multiple_no_add_more[add][more_items]', '1');
-
-
-    // Check custom labels.
-    $this->assertRaw('<input data-drupal-selector="edit-webform-multiple-custom-label-add-submit" formnovalidate="formnovalidate" type="submit" id="edit-webform-multiple-custom-label-add-submit" name="webform_multiple_custom_label_table_add" value="{add_more_button_label}" class="button js-form-submit form-submit" />');
-    $this->assertRaw('<span class="field-suffix">{add_more_input_label}</span>');
-
-    // Check that operations is disabled.
-    $this->assertNoRaw('data-drupal-selector="edit-webform-multiple-no-operations-items-0-operations-remove"');
-
-    // Check no items message.
-    $this->assertRaw('No items entered. Please add items below.');
-
-    // Check that required does not include any empty elements.
-    $this->assertFieldByName('webform_multiple_required[items][2][_item_]');
-    $this->assertNoFieldByName('webform_multiple_required[items][3][_item_]');
-
-    // Check custom label, wrapper, and element attributes.
-    $this->assertRaw('<th class="custom-label webform_multiple_custom_attributes-table--textfield webform-multiple-table--textfield">textfield</th>');
-    $this->assertRaw('<label class="custom-label visually-hidden"');
-    $this->assertRaw('<div class="custom-wrapper js-form-item form-item');
-    $this->assertRaw('<input class="custom-element form-text"');
-
-    /**************************************************************************/
-    // Validation.
-    /**************************************************************************/
-
-    // Check unique #key validation.
-    $edit = [
-      'webform_multiple_key[items][1][value]' => 'one',
-    ];
-    $this->drupalPostForm('webform/test_element_multiple', $edit, t('Submit'));
-    $this->assertRaw('The <em class="placeholder">Option value</em> \'one\' is already in use. It must be unique.');
-
-    /**************************************************************************/
-    // Processing.
-    /**************************************************************************/
-
-    // Check populated 'webform_multiple_default'.
-    $this->assertFieldByName('webform_multiple_default[items][0][_item_]', 'One');
-    $this->assertFieldByName('webform_multiple_default[items][1][_item_]', 'Two');
-    $this->assertFieldByName('webform_multiple_default[items][2][_item_]', 'Three');
-    $this->assertFieldByName('webform_multiple_default[items][3][_item_]', '');
-    $this->assertNoFieldByName('webform_multiple_default[items][4][_item_]', '');
-
-    // Check adding empty after one.
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_default_table_add_0');
-    $this->assertFieldByName('webform_multiple_default[items][0][_item_]', 'One');
-    $this->assertFieldByName('webform_multiple_default[items][1][_item_]', '');
-    $this->assertNoFieldByName('webform_multiple_default[items][1][_item_]', 'Two');
-    $this->assertFieldByName('webform_multiple_default[items][2][_item_]', 'Two');
-    $this->assertFieldByName('webform_multiple_default[items][3][_item_]', 'Three');
-
-    // Check removing empty after one.
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_default_table_remove_1');
-    $this->assertFieldByName('webform_multiple_default[items][0][_item_]', 'One');
-    $this->assertFieldByName('webform_multiple_default[items][1][_item_]', 'Two');
-    $this->assertFieldByName('webform_multiple_default[items][2][_item_]', 'Three');
-
-    // Check adding 'four' and 1 more option.
-    $edit = [
-      'webform_multiple_default[items][3][_item_]' => 'Four',
-    ];
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_default_table_add');
-    $this->assertFieldByName('webform_multiple_default[items][3][_item_]', 'Four');
-    $this->assertFieldByName('webform_multiple_default[items][4][_item_]', '');
-
-    // Check add 10 more rows.
-    $edit = ['webform_multiple_default[add][more_items]' => 10];
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_default_table_add');
-    $this->assertFieldByName('webform_multiple_default[items][14][_item_]', '');
-    $this->assertNoFieldByName('webform_multiple_default[items][15][_item_]', '');
-
-    // Check remove 'one' options.
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_default_table_remove_0');
-    $this->assertNoFieldByName('webform_multiple_default[items][14][_item_]', '');
-    $this->assertNoFieldByName('webform_multiple_default[items][0][_item_]', 'One');
-    $this->assertFieldByName('webform_multiple_default[items][0][_item_]', 'Two');
-    $this->assertFieldByName('webform_multiple_default[items][1][_item_]', 'Three');
-    $this->assertFieldByName('webform_multiple_default[items][2][_item_]', 'Four');
-
-    // Add one options to 'webform_multiple_no_items'.
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_no_items_table_add');
-    $this->assertNoRaw('No items entered. Please add items below.');
-    $this->assertFieldByName('webform_multiple_no_items[items][0][_item_]');
-
-    // Check no items message is never displayed when #required.
-    $webform->setElementProperties('webform_multiple_no_items', ['#type' => 'webform_multiple', '#title' => 'webform_multiple_no_items', '#required' => TRUE]);
-    $webform->save();
-    $this->drupalGet('/webform/test_element_multiple');
-    $this->assertNoRaw('No items entered. Please add items below.');
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_multiple_default_table_remove_0');
-    $this->assertNoRaw('No items entered. Please add items below.');
-
-    /**************************************************************************/
-    // Property (#multiple).
-    /**************************************************************************/
-
-    // Check processing.
-    $this->drupalPostForm('webform/test_element_multiple_property', [], t('Submit'));
-    $this->assertRaw('webform_element_multiple: false
-webform_element_multiple_true: true
-webform_element_multiple_false: false
-webform_element_multiple_custom: 5
-webform_element_multiple_disabled: 5');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementOptionsTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementOptionsTest.php
deleted file mode 100644
index d3169acc..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementOptionsTest.php
+++ /dev/null
@@ -1,65 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform element options.
- *
- * @group Webform
- */
-class WebformElementOptionsTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_options'];
-
-  /**
-   * Tests options element.
-   */
-  public function testElementOptions() {
-    // Check options maxlength.
-    $this->drupalGet('/webform/test_element_options');
-    $this->assertRaw('<input class="js-webform-options-sync form-text" data-drupal-selector="edit-webform-options-maxlength-options-items-0-value" type="text" id="edit-webform-options-maxlength-options-items-0-value" name="webform_options_maxlength[options][items][0][value]" value="one" size="60" maxlength="20" placeholder="Enter value…" />');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-options-maxlength-options-items-0-text" type="text" id="edit-webform-options-maxlength-options-items-0-text" name="webform_options_maxlength[options][items][0][text]" value="One" size="60" maxlength="20" placeholder="Enter text…" class="form-text" />');
-
-    // Check default value handling.
-    $this->drupalPostForm('webform/test_element_options', [], t('Submit'));
-    $this->assertRaw("webform_options: {  }
-webform_options_default_value:
-  one: One
-  two: Two
-  three: Three
-webform_options_maxlength:
-  one: One
-  two: Two
-  three: Three
-webform_options_optgroup:
-  'Group One':
-    one: One
-  'Group Two':
-    two: Two
-  'Group Three':
-    three: Three
-webform_element_options_entity: yes_no
-webform_element_options_custom:
-  one: One
-  two: Two
-  three: Three");
-
-    // Check default value handling.
-    $this->drupalPostForm('webform/test_element_options', ['webform_element_options_custom[options]' => 'yes_no'], t('Submit'));
-    $this->assertRaw("webform_element_options_custom: yes_no");
-
-    // Check unique option value validation.
-    $edit = [
-      'webform_options[options][items][0][value]' => 'test',
-      'webform_options[options][items][1][value]' => 'test',
-    ];
-    $this->drupalPostForm('webform/test_element_options', $edit, t('Submit'));
-    $this->assertRaw('The <em class="placeholder">Option value</em> \'test\' is already in use. It must be unique.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementOtherTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementOtherTest.php
deleted file mode 100644
index 2f0fdd04..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementOtherTest.php
+++ /dev/null
@@ -1,336 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform element other.
- *
- * @group Webform
- */
-class WebformElementOtherTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_other'];
-
-  /**
-   * Tests options with other elements.
-   */
-  public function testBuildingOtherElements() {
-    $this->drupalGet('/webform/test_element_other');
-
-    /**************************************************************************/
-    // select_other
-    /**************************************************************************/
-
-    // Check basic select_other.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-select-other-basic" class="js-webform-select-other webform-select-other webform-select-other--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-webform-select-other webform-type-webform-select-other js-form-item form-item js-form-wrapper form-wrapper" id="edit-select-other-basic">');
-    $this->assertRaw('<span class="fieldset-legend">Select other basic</span>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-other-basic-select" id="edit-select-other-basic-select" name="select_other_basic[select]" class="form-select">');
-    $this->assertRaw('<input data-drupal-selector="edit-select-other-basic-other" type="text" id="edit-select-other-basic-other" name="select_other_basic[other]" value="Four" size="60" maxlength="255" placeholder="Enter other…" class="form-text" />');
-    $this->assertRaw('<option value="_other_" selected="selected">Other…</option>');
-
-    // Check advanced select_other w/ custom label.
-    $this->assertRaw('<span class="fieldset-legend js-form-required form-required">Select other advanced</span>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-other-advanced-select" id="edit-select-other-advanced-select" name="select_other_advanced[select]" class="form-select required" required="required" aria-required="true">');
-    $this->assertRaw('<option value="_other_" selected="selected">Is there another option you wish to enter?</option>');
-    $this->assertRaw('<label for="edit-select-other-advanced-other">Other</label>');
-    $this->assertRaw('<input data-counter-type="character" data-counter-minimum="4" data-counter-maximum="10" class="js-webform-counter webform-counter form-text" data-drupal-selector="edit-select-other-advanced-other" aria-describedby="edit-select-other-advanced-other--description" type="text" id="edit-select-other-advanced-other" name="select_other_advanced[other]" value="Four" size="20" maxlength="10" placeholder="What is this other option" />');
-    $this->assertRaw('<div id="edit-select-other-advanced-other--description" class="webform-element-description">Other select description</div>');
-
-    // Check multiple select_other.
-    $this->assertRaw('<span class="fieldset-legend">Select other multiple</span>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-other-multiple-select" multiple="multiple" name="select_other_multiple[select][]" id="edit-select-other-multiple-select" class="form-select">');
-    $this->assertRaw('<input data-drupal-selector="edit-select-other-multiple-other" type="text" id="edit-select-other-multiple-other" name="select_other_multiple[other]" value="Four" size="60" maxlength="255" placeholder="Enter other…" class="form-text" />');
-
-    /**************************************************************************/
-    // checkboxes_other
-    /**************************************************************************/
-
-    // Check basic checkboxes.
-    $this->assertRaw('<span class="fieldset-legend">Checkboxes other basic</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-checkboxes-other-basic-checkboxes-other-" type="checkbox" id="edit-checkboxes-other-basic-checkboxes-other-" name="checkboxes_other_basic[checkboxes][_other_]" value="_other_" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('<label for="edit-checkboxes-other-basic-checkboxes-other-" class="option">Other…</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-checkboxes-other-basic-other" type="text" id="edit-checkboxes-other-basic-other" name="checkboxes_other_basic[other]" value="Four" size="60" maxlength="255" placeholder="Enter other…" class="form-text" />');
-
-    // Check advanced checkboxes.
-    $this->assertRaw('<div id="edit-checkboxes-other-advanced-checkboxes" class="js-webform-checkboxes webform-options-display-two-columns form-checkboxes">');
-    $this->assertRaw('<span class="fieldset-legend js-form-required form-required">Checkboxes other advanced</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-checkboxes-other-advanced-other" aria-describedby="edit-checkboxes-other-advanced-other--description" type="text" id="edit-checkboxes-other-advanced-other" name="checkboxes_other_advanced[other]" value="Four" size="60" maxlength="255" placeholder="What is this other option" class="form-text" />');
-    $this->assertRaw('<div id="edit-checkboxes-other-advanced-other--description" class="webform-element-description">Other checkbox description</div>');
-    $this->assertRaw('<label for="edit-checkboxes-other-advanced-checkboxes-one" class="option">One<span class="webform-element-help"');
-
-    /**************************************************************************/
-    // radios_other
-    /**************************************************************************/
-
-    // Check basic radios_other.
-    $this->assertRaw('<span class="fieldset-legend">Radios other basic</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-radios-other-basic-radios-other-" type="radio" id="edit-radios-other-basic-radios-other-" name="radios_other_basic[radios]" value="_other_" checked="checked" class="form-radio" />');
-    $this->assertRaw('<label for="edit-radios-other-basic-radios-other-" class="option">Other…</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-radios-other-basic-other" type="text" id="edit-radios-other-basic-other" name="radios_other_basic[other]" value="Four" size="60" maxlength="255" placeholder="Enter other…" class="form-text" />');
-
-    // Check advanced radios_other w/ custom label.
-    $this->assertRaw('<span class="fieldset-legend js-form-required form-required">Radios other advanced</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-radios-other-advanced-radios-other-" type="radio" id="edit-radios-other-advanced-radios-other-" name="radios_other_advanced[radios]" value="_other_" checked="checked" class="form-radio" />');
-    $this->assertRaw('<input data-drupal-selector="edit-radios-other-advanced-other" aria-describedby="edit-radios-other-advanced-other--description" type="text" id="edit-radios-other-advanced-other" name="radios_other_advanced[other]" value="Four" size="60" maxlength="255" placeholder="What is this other option" class="form-text" />');
-    $this->assertRaw('<div id="edit-radios-other-advanced-other--description" class="webform-element-description">Other radio description</div>');
-    $this->assertRaw('<label for="edit-radios-other-advanced-radios-one" class="option">One<span class="webform-element-help"');
-
-    /**************************************************************************/
-    // buttons_other
-    /**************************************************************************/
-
-    // Check basic buttons_other.
-    $this->assertRaw('<span class="fieldset-legend">Buttons other basic</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-buttons-other-basic-buttons-one" type="radio" id="edit-buttons-other-basic-buttons-one" name="buttons_other_basic[buttons]" value="One" class="form-radio" />');
-    $this->assertRaw('<label for="edit-buttons-other-basic-buttons-one" class="option">One</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-buttons-other-basic-other" type="text" id="edit-buttons-other-basic-other" name="buttons_other_basic[other]" value="Four" size="60" maxlength="255" placeholder="Enter other…" class="form-text" />');
-
-    // Check advanced buttons_other w/ custom label.
-    $this->assertRaw('<span class="fieldset-legend js-form-required form-required">Buttons other advanced</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-buttons-other-advanced-buttons-one" type="radio" id="edit-buttons-other-advanced-buttons-one" name="buttons_other_advanced[buttons]" value="One" class="form-radio" />');
-    $this->assertRaw('<input data-drupal-selector="edit-buttons-other-advanced-other" aria-describedby="edit-buttons-other-advanced-other--description" type="text" id="edit-buttons-other-advanced-other" name="buttons_other_advanced[other]" value="Four" size="60" maxlength="255" placeholder="What is this other option" class="form-text" />');
-    $this->assertRaw('<div id="edit-buttons-other-advanced-other--description" class="webform-element-description">Other button description</div>');
-
-    /**************************************************************************/
-    // wrapper_type
-    /**************************************************************************/
-
-    // Check form_item wrapper type.
-    $this->assertRaw('<div class="js-webform-select-other webform-select-other js-form-item form-item js-form-type-webform-select-other form-type-webform-select-other js-form-item-wrapper-other-form-element form-item-wrapper-other-form-element" id="edit-wrapper-other-form-element">');
-
-    // Check container wrapper type.
-    $this->assertRaw('<div data-drupal-selector="edit-wrapper-other-container" class="js-webform-select-other webform-select-other webform-select-other--wrapper fieldgroup form-composite js-form-wrapper form-wrapper" id="edit-wrapper-other-container">');
-  }
-
-  /**
-   * Tests value processing for other elements.
-   */
-  public function testProcessingOtherElements() {
-    $webform = Webform::load('test_element_other');
-
-    /**************************************************************************/
-    // select_other
-    /**************************************************************************/
-
-    // Check select other is required when selected.
-    $edit = [
-      'select_other_basic[select]' => '_other_',
-      'select_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Select other basic field is required.');
-
-    // Check select other is not required when not selected.
-    $edit = [
-      'select_other_basic[select]' => '',
-      'select_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertNoRaw('Select other basic field is required.');
-
-    // Check select other required validation.
-    $edit = [
-      'select_other_advanced[select]' => '',
-      'select_other_advanced[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Select other advanced field is required.');
-
-    // Check select other processing w/ other min/max character validation.
-    $edit = [
-      'select_other_advanced[select]' => '_other_',
-      'select_other_advanced[other]' => 'X',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Other must be longer than <em class="placeholder">4</em> characters but is currently <em class="placeholder">1</em> characters long.');
-
-    // Check select other processing w/ other.
-    $edit = [
-      'select_other_advanced[select]' => '_other_',
-      'select_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('select_other_advanced: Five');
-
-    // Check select other processing w/o other.
-    $edit = [
-      'select_other_advanced[select]' => 'One',
-      // This value is ignored, because 'select_other_advanced[select]' is not set to '_other_'.
-      'select_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('select_other_advanced: One');
-    $this->assertNoRaw('select_other_advanced: Five');
-
-    // Check select other validation is required when default value is NULL.
-    $elements = $webform->getElementsDecoded();
-    $elements['select_other']['select_other_advanced']['#default_value'] = NULL;
-    $webform->setElements($elements)->save();
-    $this->drupalPostForm('webform/test_element_other', [], t('Submit'));
-    $this->assertRaw('Select other advanced field is required.');
-
-    // Check select other validation is skipped when #access is set to FALSE.
-    $elements['select_other']['select_other_advanced']['#access'] = FALSE;
-    $webform->setElements($elements)->save();
-    $this->drupalPostForm('webform/test_element_other', [], t('Submit'));
-    $this->assertNoRaw('Select other advanced field is required.');
-
-    /**************************************************************************/
-    // radios_other
-    /**************************************************************************/
-
-    // Check radios other required when checked.
-    $edit = [
-      'radios_other_basic[radios]' => '_other_',
-      'radios_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Radios other basic field is required.');
-
-    // Check radios other not required when not checked.
-    $edit = [
-      'radios_other_basic[radios]' => 'One',
-      'radios_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertNoRaw('Radios other basic field is required.');
-
-    // Check radios other required validation.
-    $edit = [
-      'radios_other_advanced[radios]' => '_other_',
-      'radios_other_advanced[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Radios other advanced field is required.');
-
-    // Check radios other processing w/ other.
-    $edit = [
-      'radios_other_advanced[radios]' => '_other_',
-      'radios_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('radios_other_advanced: Five');
-
-    // Check radios other processing w/o other.
-    $edit = [
-      'radios_other_advanced[radios]' => 'One',
-      // This value is ignored, because 'radios_other_advanced[radios]' is not set to '_other_'.
-      'radios_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('radios_other_advanced: One');
-    $this->assertNoRaw('radios_other_advanced: Five');
-
-    /**************************************************************************/
-    // checkboxes_other
-    /**************************************************************************/
-
-    // Check checkboxes other required when checked.
-    $edit = [
-      'checkboxes_other_basic[checkboxes][_other_]' => TRUE,
-      'checkboxes_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Checkboxes other basic field is required.');
-
-    // Check checkboxes other not required when not checked.
-    $edit = [
-      'checkboxes_other_basic[checkboxes][_other_]' => FALSE,
-      'checkboxes_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertNoRaw('Checkboxes other basic field is required.');
-
-    // Check checkboxes other required validation.
-    $edit = [
-      'checkboxes_other_advanced[checkboxes][One]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][Two]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][Three]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][_other_]' => TRUE,
-      'checkboxes_other_advanced[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Checkboxes other advanced field is required.');
-
-    // Check checkboxes other processing w/ other.
-    $edit = [
-      'checkboxes_other_advanced[checkboxes][One]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][Two]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][Three]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][_other_]' => TRUE,
-      'checkboxes_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('checkboxes_other_advanced:
-  - Five');
-
-    // Check checkboxes other processing w/o other.
-    $edit = [
-      'checkboxes_other_advanced[checkboxes][One]' => TRUE,
-      'checkboxes_other_advanced[checkboxes][Two]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][Three]' => FALSE,
-      'checkboxes_other_advanced[checkboxes][_other_]' => FALSE,
-      // This value is ignored, because 'radios_other_advanced[radios]' is not set to '_other_'.
-      'checkboxes_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('checkboxes_other_advanced:
-  - One');
-    $this->assertNoRaw('checkboxes_other_advanced:
-  - Five');
-
-    /**************************************************************************/
-    // buttons_other
-    /**************************************************************************/
-
-    // Check buttons other required when checked.
-    $edit = [
-      'buttons_other_basic[buttons]' => '_other_',
-      'buttons_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Buttons other basic field is required.');
-
-    // Check buttons other not required when not checked.
-    $edit = [
-      'buttons_other_basic[buttons]' => 'One',
-      'buttons_other_basic[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertNoRaw('Buttons other basic field is required.');
-
-    // Check buttons other required validation.
-    $edit = [
-      'buttons_other_advanced[buttons]' => '_other_',
-      'buttons_other_advanced[other]' => '',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('Buttons other advanced field is required.');
-
-    // Check buttons other processing w/ other.
-    $edit = [
-      'buttons_other_advanced[buttons]' => '_other_',
-      'buttons_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('buttons_other_advanced: Five');
-
-    // Check buttons other processing w/o other.
-    $edit = [
-      'buttons_other_advanced[buttons]' => 'One',
-      // This value is ignored, because 'buttons_other_advanced[buttons]' is not set to '_other_'.
-      'buttons_other_advanced[other]' => 'Five',
-    ];
-    $this->drupalPostForm('webform/test_element_other', $edit, t('Submit'));
-    $this->assertRaw('buttons_other_advanced: One');
-    $this->assertNoRaw('buttons_other_advanced: Five');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementPatternTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementPatternTest.php
deleted file mode 100644
index 4a5f62ad..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementPatternTest.php
+++ /dev/null
@@ -1,52 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform pattern validation.
- *
- * @group Webform
- */
-class WebformElementPatternTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_pattern'];
-
-  /**
-   * Tests pattern validation.
-   */
-  public function testPattern() {
-    // Check rendering.
-    $this->drupalGet('/webform/test_element_pattern');
-    $this->assertRaw('<input pattern="Hello" data-drupal-selector="edit-pattern" aria-describedby="edit-pattern--description" type="text" id="edit-pattern" name="pattern" value="" size="60" maxlength="255" class="form-text" />');
-    $this->assertRaw('<input pattern="Hello" data-webform-pattern-error="You did not enter &#039;Hello&#039;" data-drupal-selector="edit-pattern-error" aria-describedby="edit-pattern-error--description" type="text" id="edit-pattern-error" name="pattern_error" value="" size="60" maxlength="255" class="form-text" />');
-    $this->assertRaw('<input pattern="\u2E8F" data-drupal-selector="edit-pattern-unicode" aria-describedby="edit-pattern-unicode--description" type="text" id="edit-pattern-unicode" name="pattern_unicode" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check validation.
-    $edit = [
-      'pattern' => 'GoodBye',
-      'pattern_error' => 'GoodBye',
-      'pattern_unicode' => 'Unicode',
-    ];
-    $this->drupalPostForm('webform/test_element_pattern', $edit, t('Submit'));
-    $this->assertRaw('<li class="messages__item"><em class="placeholder">pattern</em> field is not in the right format.</li>');
-    $this->assertRaw('<li class="messages__item">You did not enter &#039;Hello&#039;</li>');
-    $this->assertRaw('<li class="messages__item"><em class="placeholder">pattern_unicode</em> field is not in the right format.</li>');
-
-    // Check validation.
-    $edit = [
-      'pattern' => 'Hello',
-      'pattern_error' => 'Hello',
-      'pattern_unicode' => '⺏',
-    ];
-    $this->drupalPostForm('webform/test_element_pattern', $edit, t('Submit'));
-    $this->assertNoRaw('<li class="messages__item"><em class="placeholder">pattern</em> field is not in the right format.</li>');
-    $this->assertNoRaw('<li class="messages__item">You did not enter &#039;Hello&#039;</li>');
-    $this->assertNoRaw('<li class="messages__item"><em class="placeholder">pattern_unicode</em> field is not in the right format.</li>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementPluginTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementPluginTest.php
deleted file mode 100644
index 436b3eaf..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementPluginTest.php
+++ /dev/null
@@ -1,106 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for the webform element plugin.
- *
- * @group Webform
- */
-class WebformElementPluginTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_element'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_plugin'];
-
-  /**
-   * Tests webform element plugin.
-   */
-  public function testElementPlugin() {
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    // Dependencies. @see hook_webform_element_info_alter()
-    /**************************************************************************/
-
-    // Check that managed_file and webform_term-select are not available when
-    // dependent modules are not installed.
-    $this->drupalGet('/admin/reports/webform-plugins/elements');
-    $this->assertNoRaw('<td><div class="webform-form-filter-text-source">managed_file</div></td>');
-    $this->assertNoRaw('<td><div class="webform-form-filter-text-source">webform_term_select</div></td>');
-
-    // Install file and taxonomy module.
-    \Drupal::service('module_installer')->install(['file', 'taxonomy']);
-
-    // Check that managed_file and webform_term-select are available when
-    // dependent modules are installed.
-    $this->drupalGet('/admin/reports/webform-plugins/elements');
-    $this->assertRaw('<td><div class="webform-form-filter-text-source">managed_file</div></td>');
-    $this->assertRaw('<td><div class="webform-form-filter-text-source">webform_term_select</div></td>');
-
-    /**************************************************************************/
-    // Plugin hooks.
-    /**************************************************************************/
-
-    // Get the webform test element.
-    $webform_plugin_test = Webform::load('test_element_plugin');
-
-    // Check prepare and setDefaultValue().
-    $this->drupalGet('/webform/test_element_plugin');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:preCreate');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postCreate');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:prepare');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:setDefaultValue');
-
-    // Check save.
-    $sid = $this->postSubmission($webform_plugin_test);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:preCreate');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:prepare');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:setDefaultValue');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement::validate');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:preSave');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postSave insert');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postLoad');
-
-    // Check update.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_element_plugin/submission/' . $sid . '/edit', [], t('Save'));
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postLoad');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:prepare');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:setDefaultValue');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement::validate');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:preSave');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postSave update');
-
-    // Check HTML.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_plugin/submission/' . $sid);
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postLoad');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:formatHtml');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:formatText');
-
-    // Check plain text.
-    $this->drupalGet('/admin/structure/webform/manage/test_element_plugin/submission/' . $sid . '/text');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postLoad');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:formatText');
-
-    // Check delete.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_element_plugin/submission/' . $sid . '/delete', [], t('Delete'));
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:preDelete');
-    $this->assertRaw('Invoked: Drupal\webform_test_element\Plugin\WebformElement\WebformTestElement:postDelete');
-    $this->assertRaw('<em class="placeholder">Test: Element: Test (plugin): Submission #' . $webform_submission->serial() . '</em> has been deleted.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementPrepopulateTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementPrepopulateTest.php
deleted file mode 100644
index 60fa1f3f..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementPrepopulateTest.php
+++ /dev/null
@@ -1,64 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform element prepopulate.
- *
- * @group Webform
- */
-class WebformElementPrepopulateTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_prepopulate'];
-
-  /**
-   * Test element prepopulate.
-   */
-  public function testElementPrepopulate() {
-    $webform = Webform::load('test_element_prepopulate');
-
-    $files = $this->drupalGetTestFiles('text');
-
-    // Check prepopulation of an element.
-    $this->drupalGet('/webform/test_element_prepopulate');
-    $this->assertFieldByName('textfield', '');
-    $this->assertFieldByName('textfield_prepopulate', '');
-    $this->assertFieldByName('files[managed_file_prepopulate]', '');
-
-    // Check 'textfield' can not be prepopulated.
-    $this->drupalGet('/webform/test_element_prepopulate', ['query' => ['textfield' => 'value']]);
-    $this->assertNoFieldByName('textfield', 'value');
-
-    // Check 'textfield_prepopulate' can be prepopulated.
-    $this->drupalGet('/webform/test_element_prepopulate', ['query' => ['textfield_prepopulate' => 'value']]);
-    $this->assertFieldByName('textfield_prepopulate', 'value');
-
-    // Check 'managed_file_prepopulate' can not be prepopulated.
-    // The #prepopulate property is not available to managed file elements.
-    // @see \Drupal\webform\Plugin\WebformElement\WebformManagedFileBase::getDefaultProperties
-    $edit = [
-      'files[managed_file_prepopulate]' => \Drupal::service('file_system')->realpath($files[0]->uri),
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $webform_submission = WebformSubmission::load($sid);
-    $fid = $webform_submission->getElementData('managed_file_prepopulate');
-    $this->drupalGet('/webform/test_element_prepopulate', ['query' => ['managed_file_prepopulate' => $fid]]);
-    $this->assertFieldByName('files[managed_file_prepopulate]', '');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementPrivateTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementPrivateTest.php
deleted file mode 100644
index c2f99616..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementPrivateTest.php
+++ /dev/null
@@ -1,68 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform element private.
- *
- * @group Webform
- */
-class WebformElementPrivateTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_private'];
-
-  /**
-   * Test element access.
-   */
-  public function testElementAccess() {
-    $normal_user = $this->drupalCreateUser(['view own webform submission']);
-
-    $webform = Webform::load('test_element_private');
-
-    /**************************************************************************/
-
-    // Login as normal user.
-    $this->drupalLogin($normal_user);
-
-    // Create two webform submissions.
-    $this->postSubmission($webform);
-    $sid = $this->postSubmission($webform);
-
-    // Check element with #private property hidden for normal user.
-    $this->drupalGet('/webform/test_element_private');
-    $this->assertNoFieldByName('private', '');
-
-    // Check submission data with #private property hidden for normal user.
-    $this->drupalGet("/webform/test_element_private/submissions/$sid");
-    $this->assertNoCssSelect('#test_element_private--private');
-    $this->assertNoRaw('<label>private</label>');
-
-    // Check user submissions columns excludes 'private' column.
-    $this->drupalGet('/webform/test_element_private/submissions');
-    $this->assertNoRaw('<th specifier="element__private">');
-
-    // Login as root user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check element with #private property visible for admin user.
-    $this->drupalGet('/webform/test_element_private');
-    $this->assertFieldByName('private', '');
-
-    // Check submission data with #private property visible for admin user.
-    $this->drupalGet("/webform/test_element_private/submissions/$sid");
-    $this->assertCssSelect('#test_element_private--private');
-    $this->assertRaw('<label>private</label>');
-
-    // Check user submissions columns include 'private' column.
-    $this->drupalGet('/webform/test_element_private/submissions');
-    $this->assertRaw('<th specifier="element__private">');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementRadiosTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementRadiosTest.php
deleted file mode 100644
index c266c2b7..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementRadiosTest.php
+++ /dev/null
@@ -1,57 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform element radios.
- *
- * @group Webform
- */
-class WebformElementRadiosTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_radios'];
-
-  /**
-   * Tests radios element.
-   */
-  public function testElementRadios() {
-    $this->drupalLogin($this->rootUser);
-
-    $this->drupalGet('/webform/test_element_radios');
-
-    // Check radios with description display.
-    $this->assertRaw('<input data-drupal-selector="edit-radios-description-one" aria-describedby="edit-radios-description-one--description" type="radio" id="edit-radios-description-one" name="radios_description" value="one" class="form-radio" />');
-    $this->assertRaw('<label for="edit-radios-description-one" class="option">One</label>');
-    $this->assertRaw('<div id="edit-radios-description-one--description" class="webform-element-description">This is a description</div>');
-
-    // Check radios with help text display.
-    $this->assertRaw('<input data-drupal-selector="edit-radios-help-one" type="radio" id="edit-radios-help-one" name="radios_help" value="one" class="form-radio" />');
-    $this->assertRaw('<label for="edit-radios-help-one" class="option">One<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;One&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is a description&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check radios displayed as buttons.
-    $this->assertRaw('<div id="edit-radios-buttons" class="js-webform-radios webform-options-display-buttons form-radios"><div class="webform-options-display-buttons-wrapper">');
-    $this->assertRaw('<input data-drupal-selector="edit-radios-buttons-yes" class="visually-hidden form-radio" type="radio" id="edit-radios-buttons-yes" name="radios_buttons" value="Yes" />');
-    $this->assertRaw('<label class="webform-options-display-buttons-label option" for="edit-radios-buttons-yes">Yes</label>');
-
-    // Check radios displayed as buttons with description.
-    $this->assertRaw('<label class="webform-options-display-buttons-label option" for="edit-radios-buttons-description-one"><div class="webform-options-display-buttons-title">One</div><div class="webform-options-display-buttons-description description">This is a description</div></label>');
-
-    // Check radios results does not include description.
-    $edit = [
-      'radios_required' => 'Yes',
-      'radios_required_conditional_trigger' => FALSE,
-      'buttons_required_conditional_trigger' => FALSE,
-      'radios_description' => 'one',
-      'radios_help' => 'two',
-    ];
-    $this->drupalPostForm('webform/test_element_radios', $edit, t('Preview'));
-    $this->assertPattern('#<label>radios_description</label>\s+One#');
-    $this->assertPattern('#<label>radios_help</label>\s+Two#');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementRangeTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementRangeTest.php
deleted file mode 100644
index f89fba07..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementRangeTest.php
+++ /dev/null
@@ -1,61 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for range element.
- *
- * @group Webform
- */
-class WebformElementRangeTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_range'];
-
-  /**
-   * Test range element.
-   */
-  public function testRating() {
-    $this->drupalGet('/webform/test_element_range');
-
-    // Check basic range element.
-    $this->assertRaw('<input data-drupal-selector="edit-range" type="range" id="edit-range" name="range" value="" step="1" min="0" max="100" class="form-range" />');
-
-    // Check advanced range element.
-    $this->assertRaw('<label for="edit-range-advanced">range_advanced</label>');
-    $this->assertRaw('<span class="field-prefix">-100</span>');
-    $this->assertRaw('<input style="width: 400px" data-drupal-selector="edit-range-advanced" type="range" id="edit-range-advanced" name="range_advanced" value="" step="1" min="-100" max="100" class="form-range" />');
-    $this->assertRaw('<span class="field-suffix">100</span>');
-
-    // Check output above range element.
-    $this->assertRaw('<output for="range_output_above" data-display="above"></output>');
-
-    // Check output below with custom range element.
-    $this->assertRaw('<output style="background-color: yellow" for="range_output_below" data-display="below" data-field-prefix="$" data-field-suffix=".00"></output>');
-
-    // Check output left range element.
-    $this->assertRaw('<span class="field-prefix"><div class="js-form-item form-item js-form-type-number form-type-number js-form-item-range-output-left__output form-item-range-output-left__output form-no-label">');
-    $this->assertRaw('<label for="range_output_left__output" class="visually-hidden">range_output_left</label>');
-    $this->assertRaw('<input style="background-color: yellow;width:6em" type="number" id="range_output_left__output" step="100" min="0" max="10000" class="form-number" />');
-
-    // Check output right range element.
-    $this->assertRaw('<span class="field-suffix"><span class="webform-range-output-delimiter"></span><div class="js-form-item form-item js-form-type-number form-type-number js-form-item-range-output-disabled__output form-item-range-output-disabled__output form-no-label form-disabled">');
-    $this->assertRaw('<label for="range_output_right__output" class="visually-hidden">range_output_right</label>');
-    $this->assertRaw('<input style="width:4em" type="number" id="range_output_right__output" step="1" min="0" max="100" class="form-number" />');
-
-    // Check processing.
-    $this->drupalPostForm('webform/test_element_range', [], t('Submit'));
-    $this->assertRaw("range: '50'
-range_advanced: '0'
-range_output_above: '50'
-range_output_below: '50'
-range_output_right: '50'
-range_output_left: '5000'
-range_output_disabled: ''");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementRatingTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementRatingTest.php
deleted file mode 100644
index 4bf0d176..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementRatingTest.php
+++ /dev/null
@@ -1,56 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for rating element.
- *
- * @group Webform
- */
-class WebformElementRatingTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_rating'];
-
-  /**
-   * Test rating element.
-   */
-  public function testRating() {
-    $this->drupalGet('/webform/test_element_rating');
-
-    // Check basic rating display.
-    $this->assertRaw('<label for="edit-rating-basic">rating_basic</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-rating-basic" type="range" id="edit-rating-basic" name="rating_basic" value="0" step="1" min="0" max="5" class="form-webform-rating" />');
-    $this->assertRaw('<div class="rateit svg rateit-medium" data-rateit-min="0" data-rateit-max="5" data-rateit-step="1" data-rateit-resetable="false" data-rateit-readonly="false" data-rateit-backingfld="[data-drupal-selector=&quot;edit-rating-basic&quot;]" data-rateit-value="" data-rateit-starheight="24" data-rateit-starwidth="24">');
-
-    // Check advanced rating display.
-    $this->assertRaw('<label for="edit-rating-advanced">rating_advanced</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-rating-advanced" type="range" id="edit-rating-advanced" name="rating_advanced" value="0" step="0.1" min="0" max="10" class="form-webform-rating" />');
-    $this->assertRaw('<div class="rateit svg rateit-large" data-rateit-min="0" data-rateit-max="10" data-rateit-step="0.1" data-rateit-resetable="true" data-rateit-readonly="false" data-rateit-backingfld="[data-drupal-selector=&quot;edit-rating-advanced&quot;]" data-rateit-value="" data-rateit-starheight="32" data-rateit-starwidth="32">');
-
-    // Check required rating display.
-    $this->assertRaw('<label for="edit-rating-required" class="js-form-required form-required">rating_required</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-rating-required" type="range" id="edit-rating-required" name="rating_required" value="0" step="1" min="0" max="5" class="form-webform-rating required" required="required" aria-required="true" />');
-    $this->assertRaw('<div class="rateit svg rateit-medium" data-rateit-min="0" data-rateit-max="5" data-rateit-step="1" data-rateit-resetable="false" data-rateit-readonly="false" data-rateit-backingfld="[data-drupal-selector=&quot;edit-rating-required&quot;]" data-rateit-value="" data-rateit-starheight="24" data-rateit-starwidth="24"></div>');
-
-    // Check processing.
-    $edit = [
-      'rating_basic' => '1',
-      'rating_advanced' => '2',
-      'rating_required' => '3',
-    ];
-    $this->drupalPostForm('webform/test_element_rating', $edit, t('Submit'));
-    $this->assertRaw("rating_basic: '1'
-rating_advanced: '2'
-rating_required: '3'");
-
-    // Check required validation.
-    $this->drupalPostForm('webform/test_element_rating', [], t('Submit'));
-    $this->assertRaw('rating_required field is required.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementReadonlyTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementReadonlyTest.php
deleted file mode 100644
index c42b321a..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementReadonlyTest.php
+++ /dev/null
@@ -1,31 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform element readonly attribute.
- *
- * @group Webform
- */
-class WebformElementReadonlyTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_readonly'];
-
-  /**
-   * Tests element readonly.
-   */
-  public function testReadonly() {
-    $this->drupalGet('/webform/test_element_readonly');
-
-    $this->assertRaw('<div class="webform-readonly js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-textfield form-item-textfield">');
-    $this->assertRaw('<input readonly="readonly" data-drupal-selector="edit-textfield" type="text" id="edit-textfield" name="textfield" value="" size="60" maxlength="255" class="form-text" />');
-    $this->assertRaw('<div class="webform-readonly js-form-item form-item js-form-type-textarea form-type-textarea js-form-item-textarea form-item-textarea">');
-    $this->assertRaw('<textarea readonly="readonly" data-drupal-selector="edit-textarea" id="edit-textarea" name="textarea" rows="5" cols="60" class="form-textarea resize-vertical"></textarea>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSameTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSameTest.php
deleted file mode 100644
index 10131c9a..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSameTest.php
+++ /dev/null
@@ -1,129 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for same element.
- *
- * @group Webform
- */
-class WebformElementSameTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_same'];
-
-  /**
-   * Test same element.
-   */
-  public function testSame() {
-    $webform = Webform::load('test_element_same');
-
-    // Check same checked.
-    $this->postSubmission($webform);
-    $this->assertRaw("textfield_source: '{some value}'
-textfield_same: 1
-textfield_destination: '{some value}'
-webform_name_source:
-  title: Mr
-  first: John
-  middle: Adam
-  last: Smith
-  suffix: Jr
-  degree: Dr
-webform_name_same: 1
-webform_name_destination:
-  title: Mr
-  first: John
-  middle: Adam
-  last: Smith
-  suffix: Jr
-  degree: Dr
-textfield_multiple_source:
-  - '{one value}'
-  - '{two value}'
-textfield_multiple_same: 1
-textfield_multiple_destination:
-  - '{one value}'
-  - '{two value}'");
-
-    // Check same not checked throw validate errors.
-    $edit = [
-      'textfield_same' => FALSE,
-      'webform_name_same' => FALSE,
-      'textfield_multiple_same' => FALSE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('textfield_destination field is required.');
-    $this->assertRaw('webform_name_destination field is required.');
-    $this->assertRaw('textfield_multiple_destination field is required.');
-
-    // Check same not checked throw validate errors.
-    $edit = [
-      'textfield_same' => FALSE,
-      'textfield_destination' => '{some other value}',
-      'webform_name_same' => FALSE,
-      'webform_name_destination[title][select]' => 'Mrs',
-      'webform_name_destination[first]' => '{first}',
-      'webform_name_destination[middle]' => '{middle}',
-      'webform_name_destination[last]' => '{last}',
-      'webform_name_destination[suffix]' => '{suffix}',
-      'webform_name_destination[degree]' => '{degree}',
-      'textfield_multiple_same' => FALSE,
-      'textfield_multiple_destination[items][0][_item_]' => '{three value}',
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $this->assertRaw("textfield_source: '{some value}'
-textfield_same: 0
-textfield_destination: '{some other value}'
-webform_name_source:
-  title: Mr
-  first: John
-  middle: Adam
-  last: Smith
-  suffix: Jr
-  degree: Dr
-webform_name_same: 0
-webform_name_destination:
-  title: Mrs
-  first: '{first}'
-  middle: '{middle}'
-  last: '{last}'
-  suffix: '{suffix}'
-  degree: '{degree}'
-textfield_multiple_source:
-  - '{one value}'
-  - '{two value}'
-textfield_multiple_same: 0
-textfield_multiple_destination:
-  - '{three value}'");
-
-    $webform_submission = WebformSubmission::load($sid);
-
-    /**************************************************************************/
-
-    // Check textfield source and destination are not equal.
-    $this->assertNotEqual(
-      $webform_submission->getElementData('textfield_source'),
-      $webform_submission->getElementData('textfield_destination')
-    );
-
-    // Set textfield same as to TRUE.
-    // @see \Drupal\webform\Plugin\WebformElement\WebformSame::preSave
-    $webform_submission->setElementData('textfield_same', TRUE);
-    $webform_submission->save();
-
-    // Check textfield source and destination are now equal.
-    $this->assertEqual(
-      $webform_submission->getElementData('textfield_source'),
-      $webform_submission->getElementData('textfield_destination')
-    );
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSectionTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSectionTest.php
deleted file mode 100644
index 5b9b980b..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSectionTest.php
+++ /dev/null
@@ -1,48 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for element section.
- *
- * @group Webform
- */
-class WebformElementSectionTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_section'];
-
-  /**
-   * Test element section.
-   */
-  public function testSection() {
-    $this->drupalGet('/webform/test_element_section');
-
-    // Check section element.
-    $this->assertRaw('<section data-drupal-selector="edit-webform-section" aria-describedby="edit-webform-section--description" id="edit-webform-section" class="required webform-element-help-container--title webform-element-help-container--title-after js-form-item form-item js-form-wrapper form-wrapper webform-section" required="required" aria-required="true">');
-    $this->assertRaw('<h2 class="webform-section-title js-form-required form-required">webform_section<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;webform_section&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;This is help text.&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-    $this->assertRaw('<div class="description"><div id="edit-webform-section--description" class="webform-element-description">This is a description.</div>');
-    $this->assertRaw('<div id="edit-webform-section--more" class="js-webform-element-more webform-element-more">');
-
-    // Check custom h5 title tag.
-    $this->assertRaw('<section data-drupal-selector="edit-webform-section-title-custom" id="edit-webform-section-title-custom" class="js-form-item form-item js-form-wrapper form-wrapper webform-section">');
-    $this->assertRaw('<h5 style="color: red" class="webform-section-title">webform_section_title_custom</h5>');
-
-    // Check section title_display: invisible.
-    $this->assertRaw('<h2 class="visually-hidden webform-section-title">webform_section_title_invisible</h2>');
-
-    // Check change default title tag.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.default_section_title_tag', 'address')
-      ->save();
-
-    $this->drupalGet('/webform/test_element_section');
-    $this->assertNoRaw('<h2 class="webform-section-title js-form-required form-required">');
-    $this->assertRaw('<address class="webform-section-title js-form-required form-required">');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSelectTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSelectTest.php
deleted file mode 100644
index e67083ac..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSelectTest.php
+++ /dev/null
@@ -1,54 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for select element.
- *
- * @group Webform
- */
-class WebformElementSelectTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_select'];
-
-  /**
-   * Test select element.
-   */
-  public function testSelectElement() {
-    // Check default empty option always included.
-    $this->drupalGet('/webform/test_element_select');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-optional" id="edit-select-empty-option-optional" name="select_empty_option_optional" class="form-select"><option value="" selected="selected">- None -</option>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-optional-default-value" id="edit-select-empty-option-optional-default-value" name="select_empty_option_optional_default_value" class="form-select"><option value="">- None -</option>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-required" id="edit-select-empty-option-required" name="select_empty_option_required" class="form-select required" required="required" aria-required="true"><option value="" selected="selected">- Select -</option>');
-
-    // Disable default empty option.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.default_empty_option', FALSE)
-      ->save();
-
-    // Check default empty option is not always included.
-    $this->drupalGet('/webform/test_element_select');
-    $this->assertNoRaw('<select data-drupal-selector="edit-select-empty-option-optional" id="edit-select-empty-option-optional" name="select_empty_option_optional" class="form-select"><option value="" selected="selected">- None -</option>');
-    $this->assertNoRaw('<select data-drupal-selector="edit-select-empty-option-optional-default-value" id="edit-select-empty-option-optional-default-value" name="select_empty_option_optional_default_value" class="form-select"><option value="">- None -</option>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-required" id="edit-select-empty-option-required" name="select_empty_option_required" class="form-select required" required="required" aria-required="true"><option value="" selected="selected">- Select -</option>');
-
-    // Set custom empty option values.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.default_empty_option', TRUE)
-      ->set('element.default_empty_option_required', '{required}')
-      ->set('element.default_empty_option_optional', '{optional}')
-      ->save();
-
-    // Check customize empty option displayed.
-    $this->drupalGet('/webform/test_element_select');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-optional" id="edit-select-empty-option-optional" name="select_empty_option_optional" class="form-select"><option value="" selected="selected">{optional}</option>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-optional-default-value" id="edit-select-empty-option-optional-default-value" name="select_empty_option_optional_default_value" class="form-select"><option value="">{optional}</option>');
-    $this->assertRaw('<select data-drupal-selector="edit-select-empty-option-required" id="edit-select-empty-option-required" name="select_empty_option_required" class="form-select required" required="required" aria-required="true"><option value="" selected="selected">{required}</option>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSignatureTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSignatureTest.php
deleted file mode 100644
index 470b95b5..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSignatureTest.php
+++ /dev/null
@@ -1,65 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for signature element.
- *
- * @group Webform
- */
-class WebformElementSignatureTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_signature'];
-
-  /**
-   * Test signature element.
-   */
-  public function testSignature() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_element_signature');
-
-    $signature_path = '/webform/test_element_signature/signature';
-    $signature_directory = 'public://webform/test_element_signature/signature';
-
-    // Check signature display.
-    $this->drupalGet('/webform/test_element_signature');
-    $this->assertRaw('<input data-drupal-selector="edit-signature" aria-describedby="edit-signature--description" type="hidden" name="signature" value="" class="js-webform-signature form-webform-signature" />');
-    $this->assertRaw('<input type="submit" name="op" value="Reset" class="button js-form-submit form-submit" />');
-    $this->assertRaw('<canvas></canvas>');
-    $this->assertRaw('</div>');
-    $this->assertRaw('<div id="edit-signature--description" class="webform-element-description">Sign above</div>');
-
-    // Check signature preview image.
-    $this->postSubmissionTest($webform, [], t('Preview'));
-    $this->assertRaw("$signature_path/signature-");
-    $this->assertRaw(' alt="Signature" class="webform-signature-image" />');
-    $this->assertEqual(count(file_scan_directory($signature_directory, '/^signature-.*\.png$/')), 1);
-
-    // Check signature saved image.
-    $sid = $this->postSubmissionTest($webform);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertRaw("$signature_path/$sid/signature-");
-    $this->assertTrue(file_exists("$signature_directory/$sid"));
-    $this->assertEqual(count(file_scan_directory($signature_directory, '/^signature-.*\.png$/')), 1);
-
-    // Check deleting the submission deletes submission's signature directory.
-    $webform_submission->delete();
-    $this->assertTrue(file_exists("$signature_directory"));
-    $this->assertFalse(file_exists("$signature_directory/$sid"));
-    $this->assertEqual(count(file_scan_directory($signature_directory, '/^signature-.*\.png$/')), 0);
-
-    // Check deleting the webform deletes webform's signature directory.
-    $webform->delete();
-    $this->assertFalse(file_exists("$signature_directory"));
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementStatesSelectorsTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementStatesSelectorsTest.php
deleted file mode 100644
index 2d28690f..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementStatesSelectorsTest.php
+++ /dev/null
@@ -1,85 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\Core\Form\OptGroup;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform element #states selectors.
- *
- * @group Webform
- */
-class WebformElementStatesSelectorsTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'file', 'language', 'taxonomy', 'node', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_example_elements', 'test_example_elements_composite'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create 'tags' vocabulary.
-    $this->createTags();
-
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('libraries.excluded_libraries', [])
-      ->save();
-
-    // Enable all elements, including password and password_confirm.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('element.excluded_elements', [])
-      ->save();
-  }
-
-  /**
-   * Tests element #states selectors for basic and composite elements.
-   */
-  public function testSelectors() {
-    foreach (['test_example_elements', 'test_example_elements_composite'] as $webform_id) {
-      /** @var \Drupal\webform\WebformInterface $webform */
-      $webform = Webform::load($webform_id);
-      $webform->setStatus(WebformInterface::STATUS_OPEN)->save();
-
-      $this->drupalGet('/webform/' . $webform_id);
-
-      $selectors = OptGroup::flattenOptions($webform->getElementsSelectorOptions());
-      // Ignore text format and captcha selectors which are not available during
-      // this test.
-      unset(
-        $selectors[':input[name="text_format[format]"]'],
-        $selectors[':input[name="captcha"]']
-      );
-      foreach ($selectors as $selector => $name) {
-        // Remove :input since it is a jQuery specific selector.
-        $selector = str_replace(':input', '', $selector);
-        $this->assertCssSelect($selector);
-      }
-    }
-
-    $webform = Webform::load('test_example_elements');
-
-    // Check the value element is excluded.
-    $selectors = $webform->getElementsSelectorOptions();
-    $this->assert(!isset($selectors[':input[name="value"]']));
-
-    // Check the value element is included.
-    $selectors = $webform->getElementsSelectorOptions(['excluded_elements' => []]);
-    $this->assertEqual($selectors[':input[name="value"]'], 'Value [Value]');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementStatesTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementStatesTest.php
deleted file mode 100644
index 7b4f0722..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementStatesTest.php
+++ /dev/null
@@ -1,194 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform element #states.
- *
- * @group Webform
- */
-class WebformElementStatesTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_states'];
-
-  /**
-   * Tests element #states.
-   */
-  public function testElement() {
-
-    /**************************************************************************/
-    // Processing.
-    /**************************************************************************/
-
-    // Check default value handling.
-    $this->drupalPostForm('webform/test_element_states', [], t('Submit'));
-
-    $this->assertRaw("states_basic:
-  enabled:
-    selector_01:
-      checked: true
-  required:
-    'selector_01''':
-      checked: true
-    selector_02:
-      checked: true
-  disabled:
-    - selector_01:
-        checked: true
-    - or
-    - selector_02:
-        checked: true
-states_values:
-  enabled:
-    selector_01:
-      value: '0'
-    selector_02:
-      value: 'false'
-    selector_03:
-      value: ''
-    selector_04:
-      checked: true
-states_custom_selector:
-  required:
-    custom_selector:
-      value: 'Yes'
-states_empty: {  }
-states_single: {  }
-states_unsupported_operator:
-  required:
-    - custom_selector:
-        value: 'Yes'
-    - xxx
-    - custom_selector:
-        value: 'Yes'
-states_unsupported_nesting:
-  required:
-    - selector_01:
-        value: 'Yes'
-      selector_02:
-        value: 'Yes'
-    - or
-    - selector_03:
-        value: 'Yes'
-      selector_04:
-        value: 'Yes'
-states_custom_condition:
-  required:
-    custom_selector:
-      value:
-        pattern: '[a-z0-9]+'");
-
-    /**************************************************************************/
-    // Rendering.
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_states');
-
-    // Check 'States custom selector'.
-    $this->assertRaw('<option value="custom_selector" selected="selected">custom_selector</option>');
-
-    // Check 'States unsupport operator'.
-    $this->assertRaw('Conditional logic (Form API #states) is using the <em class="placeholder">XXX</em> operator. Form API #states must be manually entered.');
-    $this->assertRaw('<textarea data-drupal-selector="edit-states-unsupported-operator-states" aria-describedby="edit-states-unsupported-operator-states--description" class="js-webform-codemirror webform-codemirror yaml form-textarea resize-vertical" data-webform-codemirror-mode="text/x-yaml" id="edit-states-unsupported-operator-states" name="states_unsupported_operator[states]" rows="5" cols="60">');
-
-    // Check 'States unsupport nested multiple selectors'.
-    $this->assertRaw('Conditional logic (Form API #states) is using multiple nested conditions. Form API #states must be manually entered.');
-    $this->assertRaw('<textarea data-drupal-selector="edit-states-unsupported-nesting-states" aria-describedby="edit-states-unsupported-nesting-states--description" class="js-webform-codemirror webform-codemirror yaml form-textarea resize-vertical" data-webform-codemirror-mode="text/x-yaml" id="edit-states-unsupported-nesting-states" name="states_unsupported_nesting[states]" rows="5" cols="60">');
-
-    // Check 'States single' (#multiple: FALSE)
-    $this->assertFieldById('edit-states-empty-actions-add');
-    $this->assertNoFieldById('edit-states-single-actions-add');
-
-    /**************************************************************************/
-    // Validation.
-    /**************************************************************************/
-
-    // Check duplicate states validation.
-    $edit = ['states_basic[states][0][state]' => 'required'];
-    $this->drupalPostForm('webform/test_element_states', $edit, t('Submit'));
-    $this->assertRaw('The <em class="placeholder">Required</em> state is declared more than once. There can only be one declaration per state.');
-
-    // Check duplicate selectors validation.
-    $edit = ['states_basic[states][3][selector]' => 'selector_02'];
-    $this->drupalPostForm('webform/test_element_states', $edit, t('Submit'));
-    $this->assertRaw('The <em class="placeholder">Selector 02 (selector_02)</em> element is used more than once within the <em class="placeholder">Required</em> state. To use multiple values within a trigger try using the pattern trigger.');
-
-    /**************************************************************************/
-    // Processing.
-    /**************************************************************************/
-
-    // Check setting first state and adding new state.
-    $edit = [
-      'states_empty[states][0][state]' => 'required',
-      'states_empty[states][1][selector]' => 'selector_01',
-      'states_empty[states][1][trigger]' => 'value',
-      'states_empty[states][1][value]' => '{value_01}',
-    ];
-    $this->drupalPostAjaxForm(NULL, $edit, 'states_empty_table_add');
-
-    // Check the first state/condition is required and value = {value_01}.
-    $this->assertFieldByName('states_empty[states][0][state]', 'required');
-    $this->assertFieldByName('states_empty[states][1][selector]', 'selector_01');
-    $this->assertFieldByName('states_empty[states][1][trigger]', 'value');
-    $this->assertFieldByName('states_empty[states][1][value]', '{value_01}');
-
-    // Check empty second state/condition.
-    $this->assertFieldByName('states_empty[states][2][state]', '');
-    $this->assertFieldByName('states_empty[states][3][selector]', '');
-    $this->assertFieldByName('states_empty[states][3][trigger]', '');
-    $this->assertFieldByName('states_empty[states][3][value]', '');
-
-    $edit = [
-      'states_empty[states][2][state]' => 'disabled',
-      'states_empty[states][3][selector]' => 'selector_02',
-      'states_empty[states][3][trigger]' => 'value',
-      'states_empty[states][3][value]' => '{value_02}',
-    ];
-    $this->drupalPostAjaxForm(NULL, $edit, 'states_empty_table_remove_1');
-
-    // Check the first condition is removed.
-    $this->assertNoFieldByName('states_empty[states][1][selector]', 'selector_01');
-    $this->assertNoFieldByName('states_empty[states][1][trigger]', 'value');
-    $this->assertNoFieldByName('states_empty[states][1][value]', '{value_01}');
-
-    // Check the second state/condition is required and value = {value_01}.
-    $this->assertFieldByName('states_empty[states][1][state]', 'disabled');
-    $this->assertFieldByName('states_empty[states][2][selector]', 'selector_02');
-    $this->assertFieldByName('states_empty[states][2][trigger]', 'value');
-    $this->assertFieldByName('states_empty[states][2][value]', '{value_02}');
-
-    // Remove state two.
-    $this->drupalPostAjaxForm(NULL, [], 'states_empty_table_remove_1');
-
-    // Check the second state/condition is removed.
-    $this->assertNoFieldByName('states_empty[states][1][state]', 'disabled');
-    $this->assertNoFieldByName('states_empty[states][2][selector]', 'selector_02');
-    $this->assertNoFieldByName('states_empty[states][2][trigger]', 'value');
-    $this->assertNoFieldByName('states_empty[states][2][value]', '{value_02}');
-
-    /**************************************************************************/
-    // Edit source.
-    /**************************************************************************/
-
-    // Check that  'Edit source' button is not available.
-    $this->drupalGet('/webform/test_element_states');
-    $this->assertNoRaw('<input class="button button--danger js-form-submit form-submit" data-drupal-selector="edit-states-basic-actions-source" formnovalidate="formnovalidate" type="submit" id="edit-states-basic-actions-source" name="states_basic_table_source" value="Edit source" />');
-
-    // Check that  'Edit source' button is available.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/webform/test_element_states');
-    $this->assertRaw('<input class="button button--danger js-form-submit form-submit" data-drupal-selector="edit-states-basic-actions-source" formnovalidate="formnovalidate" type="submit" id="edit-states-basic-actions-source" name="states_basic_table_source" value="Edit source" />');
-    $this->assertNoFieldByName('states_basic[states]');
-
-    // Check that 'source' is editable.
-    $this->drupalPostAjaxForm(NULL, [], 'states_basic_table_source');
-    $this->assertRaw('Creating custom conditional logic (Form API #states) with nested conditions or custom selectors will disable the conditional logic builder. This will require that Form API #states be manually entered.');
-    $this->assertFieldByName('states_basic[states]');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsReplaceTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsReplaceTest.php
deleted file mode 100644
index a1a18dda..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsReplaceTest.php
+++ /dev/null
@@ -1,84 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform submission views replace element.
- *
- * @group Webform
- */
-class WebformElementSubmissionViewsReplaceTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['views', 'node', 'webform', 'webform_node'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_submission_views_r'];
-
-  /**
-   * Test webform submission views replace element.
-   */
-  public function testSubmissionViewsReplace() {
-    // Check rendering.
-    $this->drupalGet('/webform/test_element_submission_views_r');
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-global-global-routes" id="edit-webform-submission-views-replace-global-global-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-global-webform-routes" id="edit-webform-submission-views-replace-global-webform-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-global-node-routes" id="edit-webform-submission-views-replace-global-node-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-
-    // Check that the webform replace element is hidden.
-    $this->assertNoRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-webform-routes" id="edit-webform-submission-views-replace-webform-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertNoRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-node-routes" id="edit-webform-submission-views-replace-node-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-
-    // Check processing clears hidden webform_submission_views_replace.
-    $this->drupalPostForm('webform/test_element_submission_views_r', [], t('Submit'));
-    $this->assertRaw("webform_submission_views_replace_global:
-  global_routes:
-    - entity.webform_submission.collection
-  webform_routes:
-    - entity.webform.results_submissions
-  node_routes:
-    - entity.node.webform.results_submissions
-webform_submission_views_replace:
-  webform_routes: {  }
-  node_routes: {  }");
-
-    // Clear default_submission_views_replace.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('settings.default_submission_views_replace', [
-        'global_routes' => [],
-        'webform_routes' => [],
-        'node_routes' => [],
-      ])
-      ->save();
-
-    // Check that the webform replace element is visible.
-    $this->drupalGet('/webform/test_element_submission_views_r');
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-webform-routes" id="edit-webform-submission-views-replace-webform-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-submission-views-replace-node-routes" id="edit-webform-submission-views-replace-node-routes--wrapper" class="fieldgroup form-composite js-form-item form-item js-form-wrapper form-wrapper">');
-
-    // Check processing with webform replace element is visible.
-    $this->drupalPostForm('webform/test_element_submission_views_r', [], t('Submit'));
-    $this->assertRaw("webform_submission_views_replace_global:
-  global_routes:
-    - entity.webform_submission.collection
-  webform_routes:
-    - entity.webform.results_submissions
-  node_routes:
-    - entity.node.webform.results_submissions
-webform_submission_views_replace:
-  webform_routes:
-    - entity.webform.results_submissions
-  node_routes:
-    - entity.node.webform.results_submissions");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsTest.php
deleted file mode 100644
index 725abc82..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSubmissionViewsTest.php
+++ /dev/null
@@ -1,139 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform submission views element.
- *
- * @group Webform
- */
-class WebformElementSubmissionViewsTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['views', 'node', 'webform', 'webform_node'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_submission_views'];
-
-  /**
-   * Test webform submission views element.
-   */
-  public function testSubmissionViews() {
-    // Check global and webform rendering.
-    $this->drupalGet('/webform/test_element_submission_views');
-    $this->assertRaw('<th class="webform_submission_views_global-table--name_title_view webform-multiple-table--name_title_view">');
-    $this->assertRaw('<th class="webform_submission_views_global-table--global_routes webform-multiple-table--global_routes">');
-    $this->assertRaw('<th class="webform_submission_views_global-table--webform_routes webform-multiple-table--webform_routes">');
-    $this->assertRaw('<th class="webform_submission_views_global-table--node_routes webform-multiple-table--node_routes">');
-    $this->assertRaw('<th class="webform_submission_views-table--name_title_view webform-multiple-table--name_title_view">');
-    $this->assertNoRaw('<th class="webform_submission_views-table--global_routes webform-multiple-table--global_routes">');
-    $this->assertRaw('<th class="webform_submission_views-table--webform_routes webform-multiple-table--webform_routes">');
-    $this->assertRaw('<th class="webform_submission_views-table--node_routes webform-multiple-table--node_routes">');
-
-    // Check name validation.
-    $edit = ['webform_submission_views_global[items][0][name]' => ''];
-    $this->drupalPostForm('webform/test_element_submission_views', $edit, t('Submit'));
-    $this->assertRaw('Name is required');
-
-    // Check view validation.
-    $edit = ['webform_submission_views_global[items][0][view]' => ''];
-    $this->drupalPostForm('webform/test_element_submission_views', $edit, t('Submit'));
-    $this->assertRaw('View name/display id is required.');
-
-    // Check title validation.
-    $edit = ['webform_submission_views_global[items][0][title]' => ''];
-    $this->drupalPostForm('webform/test_element_submission_views', $edit, t('Submit'));
-    $this->assertRaw('Title is required.');
-
-    // Check processing.
-    $this->drupalPostForm('webform/test_element_submission_views', [], t('Submit'));
-    $this->assertRaw("webform_submission_views_global:
-  admin:
-    view: 'webform_submissions:embed_administer'
-    title: Admin
-    global_routes:
-      - entity.webform_submission.collection
-    webform_routes:
-      - entity.webform.results_submissions
-    node_routes:
-      - entity.node.webform.results_submissions
-webform_submission_views:
-  admin:
-    view: 'webform_submissions:embed_administer'
-    title: Admin
-    webform_routes:
-      - entity.webform.results_submissions
-    node_routes:
-      - entity.node.webform.results_submissions");
-
-    // Check processing empty record.
-    $edit = [
-      'webform_submission_views_global[items][0][name]' => '',
-      'webform_submission_views_global[items][0][view]' => '',
-      'webform_submission_views_global[items][0][title]' => '',
-      'webform_submission_views_global[items][0][global_routes][entity.webform_submission.collection]' => FALSE,
-      'webform_submission_views_global[items][0][webform_routes][entity.webform.results_submissions]' => FALSE,
-      'webform_submission_views_global[items][0][node_routes][entity.node.webform.results_submissions]' => FALSE,
-    ];
-    $this->drupalPostForm('webform/test_element_submission_views', $edit, t('Submit'));
-    $this->assertNoRaw('Name is required');
-    $this->assertNoRaw('View name/display id is required.');
-    $this->assertNoRaw('Title is required.');
-    $this->assertRaw("webform_submission_views_global: {  }
-webform_submission_views:
-  admin:
-    view: 'webform_submissions:embed_administer'
-    title: Admin
-    webform_routes:
-      - entity.webform.results_submissions
-    node_routes:
-      - entity.node.webform.results_submissions");
-
-    // Uninstall the webform node module.
-    $this->container->get('module_installer')->uninstall(['webform_node']);
-
-    // Check global and webform rendering without node settings.
-    $this->drupalGet('/webform/test_element_submission_views');
-    $this->assertNoRaw('<th class="webform_submission_views_global-table--node_routes webform-multiple-table--node_routes">');
-    $this->assertNoRaw('<th class="webform_submission_views-table--node_routes webform-multiple-table--node_routes">');
-
-    // Check processing removes node settings.
-    $this->drupalPostForm('webform/test_element_submission_views', [], t('Submit'));
-    $this->assertRaw("webform_submission_views_global:
-  admin:
-    view: 'webform_submissions:embed_administer'
-    title: Admin
-    global_routes:
-      - entity.webform_submission.collection
-    webform_routes:
-      - entity.webform.results_submissions
-webform_submission_views:
-  admin:
-    view: 'webform_submissions:embed_administer'
-    title: Admin
-    webform_routes:
-      - entity.webform.results_submissions");
-
-    // Uninstall the views module.
-    $this->container->get('module_installer')->uninstall(['views']);
-
-    // Check that element is completely hidden.
-    $this->drupalGet('/webform/test_element_submission_views');
-    $this->assertNoRaw('<th class="webform_submission_views_global-table--name_title_view webform-multiple-table--name_title_view">');
-    $this->assertNoRaw('<th class="webform_submission_views-table--name_title_view webform-multiple-table--name_title_view">');
-
-    // Check that value is preserved.
-    $this->drupalPostForm('webform/test_element_submission_views', [], t('Submit'));
-    $this->assertRaw("webform_submission_views_global: {  }
-webform_submission_views: {  }");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementSubmittedValueTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementSubmittedValueTest.php
deleted file mode 100644
index fc4efb0d..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementSubmittedValueTest.php
+++ /dev/null
@@ -1,56 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform submission value.
- *
- * @group Webform
- */
-class WebformElementSubmittedValueTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_submitted_value'];
-
-  /**
-   * Tests submitted value.
-   */
-  public function testSubmittedValue() {
-    $this->drupalLogin($this->rootUser);
-
-    // Create a submission.
-    $webform = Webform::load('test_element_submitted_value');
-    $sid = $this->postSubmission($webform);
-
-    // Check the option 'three' is selected.
-    $this->drupalGet("/webform/test_element_submission_value/submissions/$sid/edit");
-    $this->assertRaw('<option value="three" selected="selected">Three</option>');
-    $this->assertOptionSelected('edit-select', 'three');
-    $this->assertOptionSelected('edit-select-multiple', 'three');
-    $this->assertFieldChecked('edit-checkboxes-three');
-
-    // Remove option 'three' from all elements.
-    $elements = $webform->getElementsDecoded();
-    foreach ($elements as &$element) {
-      unset($element['#options']['three']);
-    }
-    $webform->setElements($elements);
-    $webform->save();
-
-    // Check the option 'three' is still available and selected but
-    // the label is now just the value.
-    $this->drupalGet("/webform/test_element_submission_value/submissions/$sid/edit");
-    $this->assertNoRaw('<option value="three" selected="selected">Three</option>');
-    $this->assertRaw('<option value="three" selected="selected">three</option>');
-    $this->assertOptionSelected('edit-select', 'three');
-    $this->assertOptionSelected('edit-select-multiple', 'three');
-    $this->assertFieldChecked('edit-checkboxes-three');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTableTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTableTest.php
deleted file mode 100644
index 40c6bd7d..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTableTest.php
+++ /dev/null
@@ -1,116 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for table elements.
- *
- * @group Webform
- */
-class WebformElementTableTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_table'];
-
-  /**
-   * Tests table elements.
-   */
-  public function testTable() {
-
-    $webform = Webform::load('test_element_table');
-
-    /**************************************************************************/
-    // table
-    /**************************************************************************/
-
-    // Check display elements within a table.
-    $this->drupalGet('/webform/test_element_table');
-    $this->assertRaw('<table class="js-form-wrapper responsive-enabled" data-drupal-selector="edit-table" id="edit-table" data-striping="1">');
-    $this->assertRaw('<th>First Name</th>');
-    $this->assertRaw('<th>Last Name</th>');
-    $this->assertRaw('<th>Gender</th>');
-    $this->assertRaw('<tr data-drupal-selector="edit-table-1" class="odd">');
-    $this->assertRaw('<td><div class="js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-table__1__first-name form-item-table__1__first-name form-no-label">');
-    $this->assertRaw('<input data-drupal-selector="edit-table-1-first-name" type="text" id="edit-table-1-first-name" name="table__1__first_name" value="John" size="20" maxlength="255" class="form-text" />');
-
-    // Check rendering.
-    $this->drupalPostForm('webform/test_element_table', [], t('Preview'));
-    $this->assertRaw('<th>First Name</th>');
-    $this->assertRaw('<th>Last Name</th>');
-    $this->assertRaw('<th>Gender</th>');
-    $this->assertRaw('<th>Markup</th>');
-    $this->assertRaw('<td>John</td>');
-    $this->assertRaw('<td>Smith</td>');
-    $this->assertRaw('<td>Male</td>');
-    $this->assertRaw('<td>{markup_1}</td>');
-    $this->assertRaw('<td>Jane</td>');
-    $this->assertRaw('<td>Doe</td>');
-    $this->assertRaw('<td>Female</td>');
-    $this->assertRaw('<td>{markup_2}</td>');
-
-    /**************************************************************************/
-    // Table select sort.
-    /**************************************************************************/
-
-    // Check processing.
-    $edit = [
-      'webform_tableselect_sort_custom[one][weight]' => '4',
-      'webform_tableselect_sort_custom[two][weight]' => '3',
-      'webform_tableselect_sort_custom[three][weight]' => '2',
-      'webform_tableselect_sort_custom[four][weight]' => '1',
-      'webform_tableselect_sort_custom[five][weight]' => '0',
-      'webform_tableselect_sort_custom[one][checkbox]' => TRUE,
-      'webform_tableselect_sort_custom[two][checkbox]' => TRUE,
-      'webform_tableselect_sort_custom[three][checkbox]' => TRUE,
-      'webform_tableselect_sort_custom[four][checkbox]' => TRUE,
-      'webform_tableselect_sort_custom[five][checkbox]' => TRUE,
-    ];
-    $this->drupalPostForm('webform/test_element_table', $edit, t('Submit'));
-    $this->assertRaw("webform_tableselect_sort_custom:
-  - five
-  - four
-  - three
-  - two
-  - one");
-
-    /**************************************************************************/
-    // Table sort.
-    /**************************************************************************/
-
-    // Check processing.
-    $edit = [
-      'webform_table_sort_custom[one][weight]' => '4',
-      'webform_table_sort_custom[two][weight]' => '3',
-      'webform_table_sort_custom[three][weight]' => '2',
-      'webform_table_sort_custom[four][weight]' => '1',
-      'webform_table_sort_custom[five][weight]' => '0',
-    ];
-    $this->drupalPostForm('webform/test_element_table', $edit, t('Submit'));
-    $this->assertRaw("webform_table_sort_custom:
-  - five
-  - four
-  - three
-  - two
-  - one");
-
-    /**************************************************************************/
-    // Export results.
-    /**************************************************************************/
-
-    $this->drupalLogin($this->rootUser);
-
-    $excluded_columns = $this->getExportColumns($webform);
-    unset($excluded_columns['webform_tableselect_sort_custom']);
-
-    $this->getExport($webform, ['options_single_format' => 'separate', 'options_multiple_format' => 'separate', 'excluded_columns' => $excluded_columns]);
-    $this->assertRaw('"webform_tableselect_sort (custom): one","webform_tableselect_sort (custom): two","webform_tableselect_sort (custom): three","webform_tableselect_sort (custom): four","webform_tableselect_sort (custom): five"');
-    $this->assertRaw('5,4,3,2,1');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTelephoneTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTelephoneTest.php
deleted file mode 100644
index 78fd05c2..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTelephoneTest.php
+++ /dev/null
@@ -1,69 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for telephone element.
- *
- * @group Webform
- */
-class WebformElementTelephoneTest extends WebformElementTestBase {
-
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'telephone_validation'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_telephone'];
-
-  /**
-   * Test telephone element.
-   */
-  public function testRating() {
-    $this->drupalGet('/webform/test_element_telephone');
-
-    // Check basic tel.
-    $this->assertRaw('<input data-drupal-selector="edit-tel-default" type="tel" id="edit-tel-default" name="tel_default" value="" size="30" maxlength="128" class="form-tel" />');
-
-    // Check international tel.
-    $this->assertRaw('<input class="js-webform-telephone-international webform-webform-telephone-international form-tel" data-drupal-selector="edit-tel-international" type="tel" id="edit-tel-international" name="tel_international" value="" size="30" maxlength="128" />');
-
-    // Check international telephone valddation.
-    $this->assertRaw('<input data-drupal-selector="edit-tel-validation-e164" type="tel" id="edit-tel-validation-e164" name="tel_validation_e164" value="" size="30" maxlength="128" class="form-tel" />');
-
-    // Check USE telephone validation.
-    $this->assertRaw('<input data-drupal-selector="edit-tel-validation-national" aria-describedby="edit-tel-validation-national--description" type="tel" id="edit-tel-validation-national" name="tel_validation_national" value="" size="30" maxlength="128" class="form-tel" />');
-
-    // Check telephone validation missing plus sign.
-    $edit = [
-      'tel_validation_e164' => '12024561111',
-      'tel_validation_national' => '12024561111',
-    ];
-    $this->drupalPostForm('webform/test_element_telephone', $edit, t('Submit'));
-    $this->assertRaw('The phone number <em class="placeholder">12024561111</em> is not valid.');
-
-    // Check telephone validation with plus sign.
-    $edit = [
-      'tel_validation_e164' => '+12024561111',
-      'tel_validation_national' => '+12024561111',
-    ];
-    $this->drupalPostForm('webform/test_element_telephone', $edit, t('Submit'));
-    $this->assertNoRaw('The phone number <em class="placeholder">12024561111</em> is not valid.');
-
-    // Check telephone validation with non US number.
-    $edit = [
-      'tel_validation_national' => '+74956970349',
-    ];
-    $this->drupalPostForm('webform/test_element_telephone', $edit, t('Submit'));
-    $this->assertNoRaw('The phone number <em class="placeholder">+74956970349</em> is not valid.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTermReferenceTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTermReferenceTest.php
deleted file mode 100644
index 73f9db42..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTermReferenceTest.php
+++ /dev/null
@@ -1,113 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for term reference elements.
- *
- * @group Webform
- */
-class WebformElementTermReferenceTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['taxonomy'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_term_reference'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create 'tags' vocabulary.
-    $this->createTags();
-  }
-
-  /**
-   * Test term reference element.
-   */
-  public function testTermReference() {
-    $webform = Webform::load('test_element_term_reference');
-
-    /**************************************************************************/
-    // Term checkboxes
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_term_reference');
-
-    // Check term checkboxes tree default.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-term-checkboxes-tree-default" class="js-webform-term-checkboxes webform-term-checkboxes webform-term-checkboxes-scroll webform-term-checkboxes--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-webform-term-checkboxes webform-type-webform-term-checkboxes js-form-item form-item js-form-wrapper form-wrapper" id="edit-webform-term-checkboxes-tree-default--wrapper">');
-    $this->assertRaw('<span class="field-prefix">&nbsp;&nbsp;&nbsp;</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-term-checkboxes-tree-default-2" type="checkbox" id="edit-webform-term-checkboxes-tree-default-2" name="webform_term_checkboxes_tree_default[2]" value="2" class="form-checkbox" />');
-    $this->assertRaw('<label for="edit-webform-term-checkboxes-tree-default-2" class="option">Parent 1: Child 1</label>');
-
-    // Check term checkboxes tree advanced.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-webform-term-checkboxes-tree-advanced" class="js-webform-term-checkboxes webform-term-checkboxes webform-term-checkboxes--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-webform-term-checkboxes webform-type-webform-term-checkboxes js-form-item form-item js-form-wrapper form-wrapper" id="edit-webform-term-checkboxes-tree-advanced--wrapper">');
-    $this->assertRaw('<span class="field-prefix">..</span>');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-term-checkboxes-tree-advanced-2" type="checkbox" id="edit-webform-term-checkboxes-tree-advanced-2" name="webform_term_checkboxes_tree_advanced[2]" value="2" class="form-checkbox" />');
-    $this->assertRaw('<label for="edit-webform-term-checkboxes-tree-advanced-2" class="option">Parent 1: Child 1</label>');
-
-    // Check term checkboxes breadcrumb.
-    $this->assertRaw('<label for="edit-webform-term-checkboxes-breadcrumb-default-2" class="option">Parent 1 › Parent 1: Child 1</label>');
-
-    // Check term checkboxes breadcrumb advanced formatting.
-    $edit = [
-      'webform_term_checkboxes_breadcrumb_advanced[2]' => TRUE,
-      'webform_term_checkboxes_breadcrumb_advanced[3]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit, t('Preview'));
-    $this->assertRaw('<label>webform_term_checkboxes_breadcrumb_advanced</label>');
-    $this->assertRaw('<div class="item-list"><ul><li>Parent 1 › Parent 1: Child 1</li><li>Parent 1 › Parent 1: Child 2</li></ul></div>');
-
-    /**************************************************************************/
-    // Term select.
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_element_term_reference');
-
-    // Check term select tree default.
-    $this->assertRaw('<option value="1">Parent 1</option>');
-    $this->assertRaw('<option value="2">-Parent 1: Child 1</option>');
-    $this->assertRaw('<option value="3">-Parent 1: Child 2</option>');
-    $this->assertRaw('<option value="4">-Parent 1: Child 3</option>');
-
-    // Check term select tree advanced.
-    $this->assertRaw('<option value="1">Parent 1</option>');
-    $this->assertRaw('<option value="2">..Parent 1: Child 1</option>');
-    $this->assertRaw('<option value="3">..Parent 1: Child 2</option>');
-    $this->assertRaw('<option value="4">..Parent 1: Child 3</option>');
-
-    // Check term select breadcrumb default.
-    $this->assertRaw('<option value="1">Parent 1</option>');
-    $this->assertRaw('<option value="2">Parent 1 › Parent 1: Child 1</option>');
-    $this->assertRaw('<option value="3">Parent 1 › Parent 1: Child 2</option>');
-    $this->assertRaw('<option value="4">Parent 1 › Parent 1: Child 3</option>');
-
-    // Check term select breadcrumb advanced.
-    $this->assertRaw('<option value="1">Parent 1</option>');
-    $this->assertRaw('<option value="2">Parent 1 » Parent 1: Child 1</option>');
-    $this->assertRaw('<option value="3">Parent 1 » Parent 1: Child 2</option>');
-    $this->assertRaw('<option value="4">Parent 1 » Parent 1: Child 3</option>');
-
-    // Check term select breadcrumb advanced formatting.
-    $edit = [
-      'webform_term_select_breadcrumb_advanced[]' => [2, 3],
-    ];
-    $this->postSubmission($webform, $edit, t('Preview'));
-    $this->assertRaw('<label>webform_term_select_breadcrumb_advanced</label>');
-    $this->assertRaw('<div class="item-list"><ul><li>Parent 1 › Parent 1: Child 1</li><li>Parent 1 › Parent 1: Child 2</li></ul></div>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTermsOfServiceTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTermsOfServiceTest.php
deleted file mode 100644
index a1f8d3d7..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTermsOfServiceTest.php
+++ /dev/null
@@ -1,67 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform terms of service element.
- *
- * @group Webform
- */
-class WebformElementTermsOfServiceTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_ui'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_terms_of_service'];
-
-  /**
-   * Tests TermsOfService element.
-   */
-  public function testTermsOfService() {
-    // Check rendering.
-    $this->drupalGet('/webform/test_element_terms_of_service');
-
-    // Check modal.
-    $this->assertRaw('<div data-webform-terms-of-service-type="modal" class="form-type-webform-terms-of-service js-form-type-webform-terms-of-service js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-terms-of-service-default form-item-terms-of-service-default">');
-    $this->assertRaw('<input data-drupal-selector="edit-terms-of-service-default" type="checkbox" id="edit-terms-of-service-default" name="terms_of_service_default" value class="form-checkbox required" required="required" aria-required="true" />');
-    $this->assertRaw('<label for="edit-terms-of-service-default" class="option js-form-required form-required">I agree to the <a role="button" href="#terms">terms of service</a>. (default)</label>');
-    $this->assertRaw('<div id="edit-terms-of-service-default--description" class="webform-element-description">');
-    $this->assertRaw('<div id="webform-terms-of-service-terms_of_service_default--description" class="webform-terms-of-service-details js-hide">');
-    $this->assertRaw('<div class="webform-terms-of-service-details--title">terms_of_service_default</div>');
-    $this->assertRaw('<div class="webform-terms-of-service-details--content">These are the terms of service.</div>');
-
-    // Check slideout.
-    $this->assertRaw('<label for="edit-terms-of-service-slideout" class="option">I agree to the <a role="button" href="#terms">terms of service</a>. (slideout)</label>');
-
-    // Check validation.
-    $this->drupalPostForm('webform/test_element_terms_of_service', [], t('Preview'));
-    $this->assertRaw('I agree to the {terms of service}. (default) field is required.');
-
-    // Check preview.
-    $edit = [
-      'terms_of_service_default' => TRUE,
-      'terms_of_service_modal' => TRUE,
-      'terms_of_service_slideout' => TRUE,
-    ];
-    $this->drupalPostForm('webform/test_element_terms_of_service', $edit, t('Preview'));
-    $this->assertRaw('I agree to the terms of service. (default)');
-    $this->assertRaw('I agree to the terms of service. (modal)');
-    $this->assertRaw('I agree to the terms of service. (slideout)');
-
-    // Check default title and auto incremented key.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/admin/structure/webform/manage/test_element_terms_of_service/element/add/webform_terms_of_service');
-    $this->assertFieldByName('key', 'terms_of_service_01');
-    $this->assertFieldByName('properties[title]', 'I agree to the {terms of service}.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTest.php
deleted file mode 100644
index 322816cf..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTest.php
+++ /dev/null
@@ -1,85 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform element.
- *
- * @group Webform
- */
-class WebformElementTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_test_element'];
-
-  /**
-   * Tests webform element.
-   */
-  public function testWebform() {
-    $webform = Webform::load('contact');
-
-    // Check webform render.
-    $this->drupalGet('webform_test_element');
-    $this->assertFieldByName('email', '');
-    $this->assertFieldByName('name', '');
-    $this->assertFieldByName('subject', '');
-    $this->assertFieldByName('message', '');
-
-    // Check webform default data.
-    $this->drupalGet('webform_test_element', ['query' => ['default_data' => 'email: test']]);
-    $this->assertFieldByName('email', 'test');
-
-    // Check webform action.
-    $this->drupalGet('webform_test_element', ['query' => ['action' => 'http://drupal.org']]);
-    $this->assertRaw('action="http://drupal.org"');
-
-    // Check webform submit.
-    $edit = [
-      'email' => 'example@example.com',
-      'name' => '{name}',
-      'subject' => '{subject}',
-      'message' => '{message}',
-    ];
-    $this->drupalPostForm('webform_test_element', $edit, t('Send message'));
-    $this->assertUrl('<front>');
-    $this->assertRaw('Your message has been sent.');
-
-    // Get last submission id.
-    $sid = $this->getLastSubmissionId($webform);
-
-    // Check submission is not render.
-    $this->drupalGet('webform_test_element', ['query' => ['sid' => $sid]]);
-    $this->assertNoFieldByName('email', 'example@example.com');
-
-    // Set webform access denied to display a message, instead of nothing.
-    $webform->setSetting('form_access_denied', WebformInterface::ACCESS_DENIED_MESSAGE);
-    $webform->save();
-
-    // Check submission access denied message is displayed.
-    $this->drupalGet('webform_test_element', ['query' => ['sid' => $sid]]);
-    $this->assertRaw("Please login to access this form.");
-
-    // Login as root.
-    $this->drupalLogin($this->rootUser);
-
-    // Check submission can be edited.
-    $this->drupalGet('webform_test_element', ['query' => ['sid' => $sid]]);
-    $this->assertFieldByName('email', 'example@example.com');
-    $this->assertFieldByName('name', '{name}');
-    $this->assertFieldByName('subject', '{subject}');
-    $this->assertFieldByName('message', '{message}');
-    $this->assertRaw('Submission information');
-
-    // Check submission information is hidden.
-    $this->drupalGet('webform_test_element', ['query' => ['sid' => $sid, 'information' => 'false']]);
-    $this->assertNoRaw('Submission information');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTextFormatTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTextFormatTest.php
deleted file mode 100644
index 4d34a9d4..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTextFormatTest.php
+++ /dev/null
@@ -1,197 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for text format element.
- *
- * @group Webform
- */
-class WebformElementTextFormatTest extends WebformElementTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'file', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_text_format'];
-
-  /**
-   * File usage manager.
-   *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
-   */
-  protected $fileUsage;
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    $this->fileUsage = $this->container->get('file.usage');
-  }
-
-  /**
-   * Test text format element.
-   */
-  public function testTextFormat() {
-    $webform = Webform::load('test_element_text_format');
-
-    // Check that formats and tips are removed and/or hidden.
-    $this->drupalGet('/webform/test_element_text_format');
-    // @todo Remove once Drupal 8.8.x is only supported.
-    if (floatval(\Drupal::VERSION) >= 8.8) {
-      $this->assertRaw('<div class="js-filter-wrapper filter-wrapper js-form-wrapper form-wrapper" data-drupal-selector="edit-text-format-format" style="display: none" id="edit-text-format-format">');
-    }
-    else {
-      $this->assertRaw('<div class="filter-wrapper js-form-wrapper form-wrapper" data-drupal-selector="edit-text-format-format" style="display: none" id="edit-text-format-format">');
-    }
-    $this->assertRaw('<div class="filter-help js-form-wrapper form-wrapper" data-drupal-selector="edit-text-format-format-help" style="display: none" id="edit-text-format-format-help">');
-
-    // Check description + more.
-    $this->assertRaw('<div data-drupal-selector="edit-text-format-description-more" id="edit-text-format-description-more--description" class="description"><div class="webform-element-description">This is a description</div>');
-    $this->assertRaw('<div id="edit-text-format-description-more--more" class="js-webform-element-more webform-element-more">');
-    $this->assertRaw('<div class="webform-element-more--link"><a role="button" href="#edit-text-format-description-more--more--content">More</a></div>');
-    $this->assertRaw('<div id="edit-text-format-description-more--more--content" class="webform-element-more--content">This is more</div>');
-
-    // Check 'text_format' values.
-    $this->drupalGet('/webform/test_element_text_format');
-    $this->assertFieldByName('text_format[value]', 'The quick brown fox jumped over the lazy dog.');
-    $this->assertRaw('No HTML tags allowed.');
-
-    $text_format = [
-      'value' => 'Custom value',
-      'format' => 'custom_format',
-    ];
-    $form = $webform->getSubmissionForm(['data' => ['text_format' => $text_format]]);
-    $this->assertEqual($form['elements']['text_format']['#default_value'], $text_format['value']);
-    $this->assertEqual($form['elements']['text_format']['#format'], $text_format['format']);
-  }
-
-  /**
-   * Tests webform text format element files.
-   */
-  public function testTextFormatFiles() {
-    $this->createFilters();
-
-    $webform = Webform::load('test_element_text_format');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Create three test images.
-    /** @var \Drupal\file\FileInterface[] $images */
-    $images = $this->drupalGetTestFiles('image');
-    $images = array_slice($images, 0, 5);
-    foreach ($images as $index => $image_file) {
-      $images[$index] = File::create((array) $image_file);
-      $images[$index]->save();
-    }
-    // Check that all images are temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Upload the first image.
-    $edit = [
-      'text_format[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/>',
-      'text_format[format]' => 'full_html',
-    ];
-    $sid = $this->postSubmission($webform, $edit);
-    $this->reloadImages($images);
-
-    // Check that first image is not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check create first image file usage.
-    $this->assertIdentical(['editor' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($images[0]), 'The file has 1 usage.');
-
-    // Upload the second image.
-    $edit = [
-      'text_format[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/><img data-entity-type="file" data-entity-uuid="' . $images[1]->uuid() . '"/>',
-      'text_format[format]' => 'full_html',
-    ];
-    $this->drupalPostForm("/admin/structure/webform/manage/test_element_text_format/submission/$sid/edit", $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that first and second image are not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-    $this->assertFalse($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check first and second image file usage.
-    $this->assertIdentical(['editor' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($images[0]), 'The file has 1 usage.');
-    $this->assertIdentical(['editor' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Remove the first image.
-    $edit = [
-      'text_format[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[1]->uuid() . '"/>',
-      'text_format[format]' => 'full_html',
-    ];
-    $this->drupalPostForm("/admin/structure/webform/manage/test_element_text_format/submission/$sid/edit", $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that first is temporary and second image is not temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertFalse($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check first and second image file usage.
-    $this->assertIdentical([], $this->fileUsage->listUsage($images[0]), 'The file has 0 usage.');
-    $this->assertIdentical(['editor' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Duplicate submission.
-    $webform_submission = WebformSubmission::load($sid);
-    $webform_submission_duplicate = $webform_submission->createDuplicate();
-    $webform_submission_duplicate->save();
-
-    // Check second image file usage.
-    $this->assertIdentical(['editor' => ['webform_submission' => [$webform_submission->id() => '1', $webform_submission_duplicate->id() => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 2 usages.');
-
-    // Delete the duplicate webform submission.
-    $webform_submission_duplicate->delete();
-
-    // Check second image file usage.
-    $this->assertIdentical(['editor' => ['webform_submission' => [$sid => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Delete the webform submission.
-    $this->drupalPostForm("/admin/structure/webform/manage/test_element_text_format/submission/$sid/delete", [], t('Delete'));
-    $this->reloadImages($images);
-
-    // Check that first and second image are temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-  }
-
-  /****************************************************************************/
-  // Helper functions.
-  /****************************************************************************/
-
-  /**
-   * Reload images.
-   *
-   * @param array $images
-   *   An array of image files.
-   */
-  protected function reloadImages(array &$images) {
-    \Drupal::entityTypeManager()->getStorage('file')->resetCache();
-    foreach ($images as $index => $image) {
-      $images[$index] = File::load($image->id());
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementTimeTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementTimeTest.php
deleted file mode 100644
index eb151e16..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementTimeTest.php
+++ /dev/null
@@ -1,77 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform time element.
- *
- * @group Webform
- */
-class WebformElementTimeTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_time'];
-
-  /**
-   * Test time element.
-   */
-  public function testTime() {
-    $this->drupalGet('/webform/test_element_time');
-
-    // Check time element.
-    $this->assertRaw('<label for="edit-time-12-hour">time_12_hour</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-time-12-hour" data-webform-time-format="g:i A" type="time" id="edit-time-12-hour" name="time_12_hour" value="14:00" size="12" maxlength="12" class="form-time webform-time" />');
-
-    // Check timepicker elements.
-    $this->assertRaw('<input data-drupal-selector="edit-time-timepicker" data-webform-time-format="g:i A" type="text" id="edit-time-timepicker" name="time_timepicker" value="2:00 PM" size="12" maxlength="12" class="form-time webform-time" />');
-    $this->assertRaw('<input data-drupal-selector="edit-time-timepicker-min-max" aria-describedby="edit-time-timepicker-min-max--description" data-webform-time-format="g:i A" type="text" id="edit-time-timepicker-min-max" name="time_timepicker_min_max" value="2:00 PM" size="12" maxlength="12" min="14:00" max="18:00" class="form-time webform-time" />');
-
-    // Check time processing.
-    $this->drupalPostForm('webform/test_element_time', [], t('Submit'));
-    $time_12_hour_plus_6_hours = date('H:i:00', strtotime('+6 hours'));
-    $this->assertRaw("time_default: '14:00:00'
-time_24_hour: '14:00:00'
-time_12_hour: '14:00:00'
-time_12_hour_plus_6_hours: '$time_12_hour_plus_6_hours'
-time_steps: '14:00:00'
-time_min_max: '14:00:00'
-time_timepicker: '14:00:00'
-time_timepicker_min_max: '14:00:00'");
-
-    // Check time validation.
-    $edit = ['time_24_hour' => 'not-valid'];
-    $this->drupalPostForm('webform/test_element_time', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">time_24_hour</em> must be a valid time.');
-
-    // Check '0' string trigger validation error.
-    $edit = ['time_default' => '0'];
-    $this->drupalPostForm('webform/test_element_time', $edit, t('Submit'));
-    $this->assertRaw('em class="placeholder">time_default</em> must be a valid time.');
-
-    // Check '++' string (faulty relative date) trigger validation error.
-    $edit = ['time_default' => '++'];
-    $this->drupalPostForm('webform/test_element_time', $edit, t('Submit'));
-    $this->assertRaw('em class="placeholder">time_default</em> must be a valid time.');
-
-    // Check empty string trigger does not validation error.
-    $edit = ['time_default' => ''];
-    $this->drupalPostForm('webform/test_element_time', $edit, t('Submit'));
-    $this->assertNoRaw('<em class="placeholder">time_default</em> must be a valid time.');
-    $this->assertRaw("time_default: ''");
-
-    // Check time #max validation.
-    $edit = ['time_min_max' => '12:00'];
-    $this->drupalPostForm('webform/test_element_time', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">time_min_max</em> must be on or after <em class="placeholder">14:00</em>.');
-
-    // Check time #min validation.
-    $edit = ['time_min_max' => '22:00'];
-    $this->drupalPostForm('webform/test_element_time', $edit, t('Submit'));
-    $this->assertRaw('<em class="placeholder">time_min_max</em> must be on or before <em class="placeholder">18:00</em>.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementToggleTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementToggleTest.php
deleted file mode 100644
index a0c6be59..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementToggleTest.php
+++ /dev/null
@@ -1,61 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for toggle element.
- *
- * @group Webform
- */
-class WebformElementToggleTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_toggle'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    $this->config('webform.settings')
-      ->set('libraries.excluded_libraries', [])
-      ->save();
-  }
-
-  /**
-   * Test toggle element.
-   */
-  public function testToggleElement() {
-    $this->drupalGet('/webform/test_element_toggle');
-
-    // Check basic toggle.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-webform-toggle form-type-webform-toggle js-form-item-toggle-basic form-item-toggle-basic">');
-    $this->assertRaw('<input data-drupal-selector="edit-toggle-basic" type="checkbox" id="edit-toggle-basic" name="toggle_basic" value="1" class="form-checkbox" />');
-    $this->assertRaw('<div class="js-webform-toggle webform-toggle toggle toggle-medium toggle-light" data-toggle-height="24" data-toggle-width="48" data-toggle-text-on="" data-toggle-text-off=""></div>');
-    $this->assertRaw('<label for="edit-toggle-basic" class="option">Basic toggle</label>');
-
-    // Check advanced toggle.
-    $this->assertRaw('<div class="js-form-item form-item js-form-type-webform-toggle form-type-webform-toggle js-form-item-toggle-advanced form-item-toggle-advanced">');
-    $this->assertRaw('<label for="edit-toggle-advanced">Advanced toggle</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-toggle-advanced" type="checkbox" id="edit-toggle-advanced" name="toggle_advanced" value="1" class="form-checkbox" />');
-    $this->assertRaw('<div class="js-webform-toggle webform-toggle toggle toggle-large toggle-iphone" data-toggle-height="36" data-toggle-width="108" data-toggle-text-on="Yes" data-toggle-text-off="No"></div>');
-
-    // Check basic toggles.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-toggles-basic" id="edit-toggles-basic--wrapper" class="webform-toggles--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-webform-toggles webform-type-webform-toggles js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="fieldset-legend">Basic toggles</span>');
-    $this->assertRaw('<div id="edit-toggles-basic" class="js-webform-webform-toggles form-checkboxes"><div class="js-form-item form-item js-form-type-webform-toggle form-type-webform-toggle js-form-item-toggles-basic-one form-item-toggles-basic-one">');
-    $this->assertRaw('<input data-drupal-selector="edit-toggles-basic-one" type="checkbox" id="edit-toggles-basic-one" name="toggles_basic[one]" value="one" class="form-checkbox" /><div class="js-webform-toggle webform-toggle toggle toggle-medium toggle-light" data-toggle-height="24" data-toggle-width="48" data-toggle-text-on="" data-toggle-text-off=""></div>');
-    $this->assertRaw('<label for="edit-toggles-basic-one" class="option">One</label>');
-
-    // Check advanced toggles.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-toggles-advanced" id="edit-toggles-advanced--wrapper" class="webform-toggles--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-webform-toggles webform-type-webform-toggles js-form-item form-item js-form-wrapper form-wrapper">');
-    $this->assertRaw('<span class="fieldset-legend">Advanced toggles</span>');
-    $this->assertRaw('<div id="edit-toggles-advanced" class="js-webform-webform-toggles form-checkboxes"><div class="js-form-item form-item js-form-type-webform-toggle form-type-webform-toggle js-form-item-toggles-advanced-one form-item-toggles-advanced-one">');
-    $this->assertRaw('<input data-drupal-selector="edit-toggles-advanced-one" type="checkbox" id="edit-toggles-advanced-one" name="toggles_advanced[one]" value="one" class="form-checkbox" /><div class="js-webform-toggle webform-toggle toggle toggle-large toggle-iphone" data-toggle-height="36" data-toggle-width="108" data-toggle-text-on="Yes" data-toggle-text-off="No"></div>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementValidateMinlengthTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementValidateMinlengthTest.php
deleted file mode 100644
index cd1053db..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementValidateMinlengthTest.php
+++ /dev/null
@@ -1,41 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform validate minlength.
- *
- * @group Webform
- */
-class WebformElementValidateMinlengthTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_validate_minlength'];
-
-  /**
-   * Tests element validate minlength.
-   */
-  public function testValidateMinlength() {
-    $webform = Webform::load('test_element_validate_minlength');
-
-    // Check minlength validation.
-    $this->postSubmission($webform, ['minlength_textfield' => 'X']);
-    $this->assertRaw('<em class="placeholder">minlength_textfield</em> cannot be less than <em class="placeholder">5</em> characters but is currently <em class="placeholder">1</em> characters long.');
-
-    // Check minlength not required validation.
-    $this->postSubmission($webform, ['minlength_textfield' => '']);
-    $this->assertNoRaw('<em class="placeholder">minlength_textfield</em> cannot be less than <em class="placeholder">5</em> characters but is currently <em class="placeholder">0</em> characters long.');
-
-    // Check minlength required validation.
-    $this->postSubmission($webform, ['minlength_textfield_required' => '']);
-    $this->assertNoRaw('<em class="placeholder">minlength_textfield_required</em> cannot be less than <em class="placeholder">5</em> characters but is currently <em class="placeholder">0</em> characters long.');
-    $this->assertRaw('minlength_textfield_required field is required.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementValidateMultipleTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementValidateMultipleTest.php
deleted file mode 100644
index d755be5f..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementValidateMultipleTest.php
+++ /dev/null
@@ -1,60 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-/**
- * Tests for webform validate multiple.
- *
- * @group Webform
- */
-class WebformElementValidateMultipleTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_validate_multiple'];
-
-  /**
-   * Tests element validate multiple.
-   */
-  public function testValidateMultiple() {
-    $this->drupalGet('/webform/test_element_validate_multiple');
-
-    // Check that only three textfields are displayed.
-    $this->assertFieldByName('webform_element_multiple_textfield_three[items][0][_item_]');
-    $this->assertNoFieldByName('webform_element_multiple_textfield_three[items][1][_item_]');
-    $this->assertNoFieldByName('webform_element_multiple_textfield_three[items][2][_item_]');
-    $this->assertNoFieldByName('webform_element_multiple_textfield_three[items][3][_item_]');
-    $this->assertNoFieldByName('webform_element_multiple_textfield_three_table_add');
-
-    // Add 2 more items.
-    $edit = [
-      'webform_element_multiple_textfield_three[add][more_items]' => 2,
-    ];
-    $this->drupalPostAjaxForm(NULL, $edit, 'webform_element_multiple_textfield_three_table_add');
-    $this->assertFieldByName('webform_element_multiple_textfield_three[items][0][_item_]');
-    $this->assertFieldByName('webform_element_multiple_textfield_three[items][1][_item_]');
-    $this->assertFieldByName('webform_element_multiple_textfield_three[items][2][_item_]');
-    $this->assertNoFieldByName('webform_element_multiple_textfield_three[items][3][_item_]');
-    $this->assertNoFieldByName('webform_element_multiple_textfield_three_table_add');
-
-    // Post multiple values to checkboxes and select multiple that exceed
-    // allowed values.
-    $edit = [
-      'webform_element_multiple_checkboxes_two[one]' => 'one',
-      'webform_element_multiple_checkboxes_two[two]' => 'two',
-      'webform_element_multiple_checkboxes_two[three]' => 'three',
-      'webform_element_multiple_select_two[]' => ['one', 'two', 'three'],
-    ];
-    $this->drupalPostForm('webform/test_element_validate_multiple', $edit, t('Submit'));
-
-    // Check checkboxes multiple custom error message.
-    $this->assertRaw('Please check only two options.');
-
-    // Check select multiple default error message.
-    $this->assertRaw('<em class="placeholder">webform_element_multiple_select_two</em>: this element cannot hold more than 2 values.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Element/WebformElementValidateUniqueTest.php b/modules/contrib/webform/src/Tests/Element/WebformElementValidateUniqueTest.php
deleted file mode 100644
index 1b847396..00000000
--- a/modules/contrib/webform/src/Tests/Element/WebformElementValidateUniqueTest.php
+++ /dev/null
@@ -1,110 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Element;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform validate unique.
- *
- * @group Webform
- */
-class WebformElementValidateUniqueTest extends WebformElementTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_validate_unique'];
-
-  /**
-   * Tests element validate unique.
-   */
-  public function testValidateUnique() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_element_validate_unique');
-
-    $edit = [
-      'unique_textfield' => '{unique_textfield}',
-      'unique_textfield_multiple[items][0][_item_]' => '{unique_textfield_multiple}',
-      'unique_user_textfield' => '{unique_user_textfield}',
-      'unique_entity_textfield' => '{unique_entity_textfield}',
-      'unique_error' => '{unique_error}',
-      'unique_multiple[1]' => TRUE,
-    ];
-
-    // Check post submission with default values does not trigger
-    // unique errors.
-    $sid = $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('The value <em class="placeholder">{unique_textfield}</em> has already been submitted once for the <em class="placeholder">unique_textfield</em> element. You may have already submitted this webform, or you need to use a different value.</li>');
-    $this->assertNoRaw('unique_textfield_multiple error message.');
-    $this->assertNoRaw('unique_user_textfield error message.');
-    $this->assertNoRaw('unique_entity_textfield error message.');
-    $this->assertNoRaw('unique_error error message.');
-    $this->assertNoRaw('unique_multiple error message.');
-
-    // Check post duplicate submission with default values does trigger
-    // unique errors.
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('The value <em class="placeholder">{unique_textfield}</em> has already been submitted once for the <em class="placeholder">unique_textfield</em> element. You may have already submitted this webform, or you need to use a different value.</li>');
-    $this->assertRaw('unique_textfield_multiple error message.');
-    $this->assertRaw('unique_user_textfield error message.');
-    $this->assertRaw('unique_entity_textfield error message.');
-    $this->assertRaw('unique_error error message.');
-    $this->assertRaw('unique_multiple error message.');
-
-    // Check #unique element can be updated.
-    $this->drupalPostForm("admin/structure/webform/manage/test_element_validate_unique/submission/$sid/edit", [], t('Save'));
-    $this->assertNoRaw('The value <em class="placeholder">{unique_textfield}</em> has already been submitted once for the <em class="placeholder">unique_textfield</em> element. You may have already submitted this webform, or you need to use a different value.</li>');
-    $this->assertNoRaw('unique_user_textfield error message.');
-    $this->assertNoRaw('unique_entity_textfield error message.');
-    $this->assertNoRaw('unique_error error message.');
-    $this->assertNoRaw('unique_multiple error message.');
-
-    // Check #unique multiple validation within the same element.
-    // @see \Drupal\webform\Plugin\WebformElementBase::validateUniqueMultiple
-    // Add 2 more items.
-    $edit = [
-      'unique_textfield_multiple[add][more_items]' => 2,
-    ];
-    $this->drupalPostAjaxForm('webform/test_element_validate_unique', $edit, 'unique_textfield_multiple_table_add');
-
-    $edit = [
-      'unique_textfield_multiple[items][0][_item_]' => '{same}',
-      'unique_textfield_multiple[items][2][_item_]' => '{same}',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Submit'));
-    $this->assertRaw('unique_textfield_multiple error message.');
-
-    // Purge existing submissions.
-    $this->purgeSubmissions();
-
-    // Check #unique_user triggers for anonymous users.
-    $edit = ['unique_user_textfield' => '{unique_user_textfield}'];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('unique_user_textfield error message.');
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('unique_user_textfield error message.');
-
-    // Create a user that is used as the source entity.
-    $account = $this->drupalCreateUser();
-
-    // Check #unique_entity triggers with source entity.
-    $edit = ['unique_entity_textfield' => '{unique_entity_textfield}'];
-    $options = ['query' => ['source_entity_type' => 'user', 'source_entity_id' => $account->id()]];
-    $this->postSubmission($webform, $edit, NULL, $options);
-    $this->assertNoRaw('unique_entity_textfield error message.');
-    $this->postSubmission($webform, $edit, NULL, $options);
-    $this->assertRaw('unique_entity_textfield error message.');
-
-    // Check #unique_entity triggers without source entity.
-    $edit = ['unique_entity_textfield' => '{unique_entity_textfield}'];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('unique_entity_textfield error message.');
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('unique_entity_textfield error message.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Exporter/WebformExporterExcludedTest.php b/modules/contrib/webform/src/Tests/Exporter/WebformExporterExcludedTest.php
deleted file mode 100644
index 82a3bd37..00000000
--- a/modules/contrib/webform/src/Tests/Exporter/WebformExporterExcludedTest.php
+++ /dev/null
@@ -1,38 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Exporter;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for the webform exporter excluded.
- *
- * @group Webform
- */
-class WebformExporterExcludedTest extends WebformTestBase {
-
-  /**
-   * Test excluded exporters.
-   */
-  public function testExcludeExporters() {
-    $this->drupalLogin($this->rootUser);
-
-    // Check exporter options.
-    $this->drupalGet('/admin/structure/webform/manage/contact/results/download');
-    $this->assertRaw('<option value="delimited"');
-    $this->assertRaw('<option value="table"');
-    $this->assertRaw('<option value="json"');
-    $this->assertRaw('<option value="yaml"');
-
-    // Exclude the delimited exporter.
-    \Drupal::configFactory()->getEditable('webform.settings')->set('export.excluded_exporters', ['delimited' => 'delimited'])->save();
-
-    // Check delimited exporter excluded.
-    $this->drupalGet('/admin/structure/webform/manage/contact/results/download');
-    $this->assertNoRaw('<option value="delimited"');
-    $this->assertRaw('<option value="table"');
-    $this->assertRaw('<option value="json"');
-    $this->assertRaw('<option value="yaml"');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Exporter/WebformExporterOptionsTest.php b/modules/contrib/webform/src/Tests/Exporter/WebformExporterOptionsTest.php
deleted file mode 100644
index 1f26fd72..00000000
--- a/modules/contrib/webform/src/Tests/Exporter/WebformExporterOptionsTest.php
+++ /dev/null
@@ -1,81 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Exporter;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for the webform exporter options.
- *
- * @group Webform
- */
-class WebformExporterOptionsTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_exporter_options'];
-
-  /**
-   * Test exporter options.
-   */
-  public function testExporterOptions() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_exporter_options');
-
-    // Create one submission.
-    $sid = $this->postSubmission($webform);
-
-    // Set default edit export settings.
-    $edit = [
-      // Exclude all columns except sid.
-      'excluded_columns' => 'serial,uuid,token,uri,created,completed,changed,in_draft,current_page,remote_addr,uid,langcode,webform_id,entity_type,entity_id,sticky,locked,notes',
-    ];
-
-    // Check default options.
-    $this->getExport($webform, $edit);
-    $this->assertRaw('"Submission ID","Select single","Select multiple","Select other"');
-    $this->assertRaw($sid . ',One,One;Two;Three,Four');
-
-    // Check manually setting default options.
-    $edit += [
-      'options_single_format' => 'compact',
-      'options_multiple_format' => 'compact',
-      'options_item_format' => 'label',
-    ];
-    $this->getExport($webform, $edit);
-    $this->assertRaw('"Submission ID","Select single","Select multiple","Select other"');
-    $this->assertRaw($sid . ',One,One;Two;Three,Four');
-
-    // Check item format key.
-    $edit['options_item_format'] = 'key';
-    $this->getExport($webform, $edit);
-    $this->assertRaw($sid . ',one,one;two;three,Four');
-
-    // Check options single separate format.
-    $edit['options_single_format'] = 'separate';
-    $edit['options_multiple_format'] = 'compact';
-    $this->getExport($webform, $edit);
-    $this->assertRaw('"Submission ID","Select single: one","Select single: two","Select single: three","Select multiple","Select other: one","Select other: two","Select other: three","Select other: other"');
-    $this->assertRaw($sid . ',X,,,one;two;three,,,,Four');
-
-    // Check options multiple separate format.
-    $edit['options_single_format'] = 'compact';
-    $edit['options_multiple_format'] = 'separate';
-    $this->getExport($webform, $edit);
-    $this->assertRaw('"Submission ID","Select single","Select multiple: one","Select multiple: two","Select multiple: three","Select other"');
-    $this->assertRaw($sid . ',one,X,X,X,Four');
-
-    // Check options single and multiple separate format.
-    $edit['options_single_format'] = 'separate';
-    $edit['options_multiple_format'] = 'separate';
-    $this->getExport($webform, $edit);
-    $this->assertRaw('"Submission ID","Select single: one","Select single: two","Select single: three","Select multiple: one","Select multiple: two","Select multiple: three","Select other: one","Select other: two","Select other: three","Select other: other"');
-    $this->assertRaw($sid . ',X,,,X,X,X,,,,Four');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Form/WebformFormPropertiesTest.php b/modules/contrib/webform/src/Tests/Form/WebformFormPropertiesTest.php
deleted file mode 100644
index 9f42fd5a..00000000
--- a/modules/contrib/webform/src/Tests/Form/WebformFormPropertiesTest.php
+++ /dev/null
@@ -1,57 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Form;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for form properties.
- *
- * @group Webform
- */
-class WebformFormPropertiesTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_properties', 'test_element_invalid'];
-
-  /**
-   * Test form properties.
-   */
-  public function testProperties() {
-    global $base_path;
-
-    // Check invalid elements .
-    $this->drupalGet('/webform/test_element_invalid');
-    $this->assertRaw('Unable to display this webform. Please contact the site administrator.');
-
-    // Check element's root properties moved to the webform's properties.
-    $this->drupalGet('/webform/test_form_properties');
-    $this->assertPattern('/Form prefix<form /');
-    $this->assertPattern('/<\/form>\s+Form suffix/');
-    $this->assertRaw('<form class="webform-submission-form webform-submission-add-form webform-submission-test-form-properties-form webform-submission-test-form-properties-add-form test-form-properties js-webform-details-toggle webform-details-toggle" invalid="invalid" style="border: 10px solid red; padding: 1em;" data-drupal-selector="webform-submission-test-form-properties-add-form" action="https://www.google.com/search" method="get" id="webform-submission-test-form-properties-add-form" accept-charset="UTF-8">');
-
-    // Check editing webform settings style attributes and custom properties
-    // updates the element's root properties.
-    $this->drupalLogin($this->rootUser);
-    $edit = [
-      'attributes[class][select][]' => ['form--inline clearfix', '_other_'],
-      'attributes[class][other]' => 'test-form-properties',
-      'attributes[style]' => 'border: 10px solid green; padding: 1em;',
-      'attributes[attributes]' => '',
-      'method' => '',
-      'action' => '',
-      'custom' => "'suffix': 'Form suffix TEST'
-'prefix': 'Form prefix TEST'",
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/test_form_properties/settings/form', $edit, t('Save'));
-    $this->drupalGet('/webform/test_form_properties');
-    $this->assertPattern('/Form prefix TEST<form /');
-    $this->assertPattern('/<\/form>\s+Form suffix TEST/');
-    $this->assertRaw('<form class="webform-submission-form webform-submission-add-form webform-submission-test-form-properties-form webform-submission-test-form-properties-add-form form--inline clearfix test-form-properties js-webform-details-toggle webform-details-toggle" style="border: 10px solid green; padding: 1em;" data-drupal-selector="webform-submission-test-form-properties-add-form" action="' . $base_path . 'webform/test_form_properties" method="post" id="webform-submission-test-form-properties-add-form" accept-charset="UTF-8">');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Form/WebformFormValidateTest.php b/modules/contrib/webform/src/Tests/Form/WebformFormValidateTest.php
deleted file mode 100644
index 58f659b2..00000000
--- a/modules/contrib/webform/src/Tests/Form/WebformFormValidateTest.php
+++ /dev/null
@@ -1,42 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Form;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform form validation.
- *
- * @group Webform
- */
-class WebformFormValidateTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_validate'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_validate'];
-
-  /**
-   * Tests form (custom) validation.
-   */
-  public function testValidate() {
-    /* Test form#validate webform handling */
-    $webform_validate = Webform::load('test_form_validate');
-    $this->postSubmission($webform_validate, []);
-    $this->assertRaw('Custom element is required.');
-
-    $this->postSubmission($webform_validate, ['custom' => 'value']);
-    $this->assertNoRaw('Custom element is required.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerActionTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerActionTest.php
deleted file mode 100644
index dd639a3c..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerActionTest.php
+++ /dev/null
@@ -1,131 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\WebformSubmissionInterface;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for action webform handler functionality.
- *
- * @group Webform
- */
-class WebformHandlerActionTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_action'];
-
-  /**
-   * Test action handler.
-   */
-  public function testActionHandler() {
-    $this->drupalLogin($this->rootUser);
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_action');
-
-    // Create submission.
-    $sid = $this->postSubmission($webform);
-
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check that submission is not flagged (sticky).
-    $this->assertFalse($webform_submission->isSticky());
-
-    // Check that submission is unlocked.
-    $this->assertFalse($webform_submission->isLocked());
-
-    // Check that submission notes is empty.
-    $this->assertTrue(empty($webform_submission->getNotes()));
-
-    // Check that last note is empty.
-    $this->assertTrue(empty($webform_submission->getElementData('notes_add')));
-
-    // Flag and add new note to the submission.
-    $edit = [
-      'sticky' => 'flag',
-      'notes_add' => 'This is the first note',
-    ];
-    $this->drupalPostForm("admin/structure/webform/manage/test_handler_action/submission/$sid/edit", $edit, t('Save'));
-
-    // Check messages.
-    $this->assertRaw('Submission has been flagged.');
-    $this->assertRaw('Submission notes have been updated.');
-
-    // Reload the webform submission.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check that sticky is set.
-    $this->assertTrue($webform_submission->isSticky());
-
-    // Change that notes_add is empty.
-    $this->assertTrue(empty($webform_submission->getElementData('notes_add')));
-
-    // Check that notes_last is updated.
-    $this->assertEqual($webform_submission->getElementData('notes_last'), 'This is the first note');
-
-    // Unflag and add new note to the submission.
-    $edit = [
-      'sticky' => 'unflag',
-      'notes_add' => 'This is the second note',
-    ];
-    $this->drupalPostForm("admin/structure/webform/manage/test_handler_action/submission/$sid/edit", $edit, t('Save'));
-
-    // Check messages.
-    $this->assertRaw('Submission has been unflagged.');
-    // $this->assertRaw('Submission has been unlocked.');
-    $this->assertRaw('Submission notes have been updated.');
-
-    // Reload the webform submission.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check that sticky is unset.
-    $this->assertFalse($webform_submission->isSticky());
-
-    // Change that notes_add is empty.
-    $this->assertTrue(empty($webform_submission->getElementData('notes_add')));
-
-    // Check that notes updated.
-    $this->assertEqual($webform_submission->getNotes(), 'This is the first note' . PHP_EOL . PHP_EOL . 'This is the second note');
-
-    // Check that notes_last is updated with second note.
-    $this->assertEqual($webform_submission->getElementData('notes_last'), 'This is the second note');
-
-    // Lock submission.
-    $edit = [
-      'lock' => 'locked',
-    ];
-    $this->drupalPostForm("admin/structure/webform/manage/test_handler_action/submission/$sid/edit", $edit, t('Save'));
-
-    // Check locked message.
-    $this->assertRaw('Submission has been locked.');
-
-    // Reload the webform submission.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check that submission is locked.
-    $this->assertTrue($webform_submission->isLocked());
-    $this->assertEqual(WebformSubmissionInterface::STATE_LOCKED, $webform_submission->getState());
-
-    // Check that submission is locked.
-    $this->drupalGet("admin/structure/webform/manage/test_handler_action/submission/$sid/edit");
-    $this->assertRaw('This is submission was automatically locked.');
-
-    // Programmatically unlock the submission.
-    $webform_submission->setElementData('lock', 'unlocked');
-    $webform_submission->save();
-
-    $this->assertFalse($webform_submission->isLocked());
-    $this->assertNotEqual(WebformSubmissionInterface::STATE_LOCKED, $webform_submission->getState());
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerConditionsTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerConditionsTest.php
deleted file mode 100644
index a046433f..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerConditionsTest.php
+++ /dev/null
@@ -1,96 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform handler plugin conditions.
- *
- * @group Webform
- */
-class WebformHandlerConditionsTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_handler'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_conditions'];
-
-  /**
-   * Tests webform handler plugin conditions.
-   */
-  public function testConditions() {
-    $this->drupalLogin($this->rootUser);
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_conditions');
-
-    $this->drupalGet('/webform/test_handler_conditions');
-
-    // Check no triggers.
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-
-    // Check post submission no trigger.
-    $this->postSubmission($webform);
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-
-    // Trigger only A handler.
-    $this->postSubmission($webform, ['trigger_a' => TRUE]);
-
-    // Check non submission hooks are executed.
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-
-    // Check trigger A submission hooks are executed.
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:validateForm');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:submitForm');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preSave');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postSave insert');
-    $this->assertRaw('Test A');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:confirmForm');
-
-    // Trigger only B handler.
-    $this->postSubmission($webform, ['trigger_b' => TRUE]);
-
-    // Check non submission hooks are executed.
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-
-    // Check trigger A submission hooks are no executed.
-    $this->assertNoRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:validateForm');
-    $this->assertNoRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:submitForm');
-    $this->assertNoRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preSave');
-    $this->assertNoRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postSave insert');
-    $this->assertNoRaw('Test A');
-    $this->assertNoRaw('Invoked test_a: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:confirmForm');
-
-    // Check trigger B submission hooks are executed.
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:validateForm');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:submitForm');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preSave');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postSave insert');
-    $this->assertRaw('Test B');
-    $this->assertRaw('Invoked test_b: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:confirmForm');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailAdvancedTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailAdvancedTest.php
deleted file mode 100644
index 7a906eb9..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailAdvancedTest.php
+++ /dev/null
@@ -1,217 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for advanced email webform handler functionality with HTML and attachments.
- *
- * @group Webform
- */
-class WebformHandlerEmailAdvancedTest extends WebformTestBase {
-
-  public static $modules = ['filter', 'file', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_email_advanced'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filter.
-    $this->createFilters();
-  }
-
-  /**
-   * Test advanced email handler.
-   *
-   * Note:
-   * The TestMailCollector extends PhpMail, therefore the HTML body
-   * will still be escaped, which is why we are looking at the params.body.
-   *
-   * @see \Drupal\Core\Mail\Plugin\Mail\TestMailCollector
-   */
-  public function testAdvancedEmailHandler() {
-    global $base_url;
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_email_advanced');
-
-    /**************************************************************************/
-
-    // Generate a test submission with a file upload.
-    $this->drupalLogin($this->rootUser);
-
-    // Check handler's custom reply to and return path.
-    $this->postSubmissionTest($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['headers']['Return-Path'], 'return_path@example.com');
-    $this->assertEqual($sent_email['headers']['Sender'], 'sender_name <sender_mail@example.com>');
-    $this->assertEqual($sent_email['headers']['Reply-to'], 'reply_to@example.com');
-
-    $email_handler = $webform->getHandler('email');
-    $configuration = $email_handler->getConfiguration();
-    $configuration['settings']['reply_to'] = '';
-    $configuration['settings']['return_path'] = '';
-    $configuration['settings']['sender_mail'] = '';
-    $configuration['settings']['sender_name'] = '';
-    $email_handler->setConfiguration($configuration);
-    $webform->save();
-
-    // Check no custom reply to and return path.
-    $this->postSubmissionTest($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertNotEqual($sent_email['headers']['Return-Path'], 'return_path@example.com');
-    $this->assertNotEqual($sent_email['headers']['Sender'], 'sender_name <sender_mail@example.com>');
-    $this->assertNotEqual($sent_email['headers']['Reply-to'], 'reply_to@example.com');
-    $this->assertEqual($sent_email['headers']['Return-Path'], $sent_email['params']['from_mail']);
-    $this->assertEqual($sent_email['headers']['Sender'], $sent_email['params']['from_mail']);
-    $this->assertEqual($sent_email['headers']['Reply-to'], $sent_email['headers']['From']);
-
-    // Check site wide reply to and return path.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('mail.default_reply_to', 'default_reply_to@example.com')
-      ->set('mail.default_return_path', 'default_return_path@example.com')
-      ->save();
-    $this->postSubmissionTest($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['headers']['Return-Path'], 'default_return_path@example.com');
-    $this->assertEqual($sent_email['headers']['Sender'], 'default_return_path@example.com');
-    $this->assertEqual($sent_email['headers']['Reply-to'], 'default_reply_to@example.com');
-
-    // Check site wide reply to and return path using tokens.
-    \Drupal::configFactory()->getEditable('system.site')
-      ->set('mail', 'system_site@example.com')
-      ->save();
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('mail.default_reply_to', '[site:mail]')
-      ->set('mail.default_return_path', '[site:mail]')
-      ->save();
-    $this->postSubmissionTest($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['headers']['Return-Path'], 'system_site@example.com');
-    $this->assertEqual($sent_email['headers']['Sender'], 'system_site@example.com');
-    $this->assertEqual($sent_email['headers']['Reply-to'], 'system_site@example.com');
-
-    // Check site wide sender mail and name.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('mail.default_sender_mail', 'default_sender_mail@example.com')
-      ->set('mail.default_sender_name', 'Default Sender Name')
-      ->save();
-    $this->postSubmissionTest($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['headers']['Sender'], 'Default Sender Name <default_sender_mail@example.com>');
-
-    // Post a new submission using test webform which will automatically
-    // upload file.txt.
-    $edit = [
-      'first_name' => 'John',
-      'last_name' => 'Smith',
-      'email' => 'from@example.com',
-      // Drupal strip_tags() from mail subject.
-      // @see \Drupal\Core\Mail\MailManager::doMail
-      // @see http://cgit.drupalcode.org/drupal/tree/core/lib/Drupal/Core/Mail/MailManager.php#n285
-      'subject' => 'This has <removed>"special" \'chararacters\'',
-      'message[value]' => '<p><em>Please enter a message.</em> Test that double "quotes" are not encoded.</p>',
-      'checkbox' => FALSE,
-    ];
-    $this->postSubmissionTest($webform, $edit);
-    $sid = $this->getLastSubmissionId($webform);
-    $sent_email = $this->getLastEmail();
-
-    // Check email subject with special characters.
-    $this->assertEqual($sent_email['subject'], 'This has "special" \'chararacters\'');
-
-    // Check email body is HTML.
-    $this->assertContains('<b>First name</b><br />John<br /><br />', $sent_email['params']['body']);
-    $this->assertContains('<b>Last name</b><br />Smith<br /><br />', $sent_email['params']['body']);
-    $this->assertContains('<b>Email</b><br /><a href="mailto:from@example.com">from@example.com</a><br /><br />', $sent_email['params']['body']);
-    $this->assertContains('<b>Subject</b><br />This has &lt;removed&gt;&quot;special&quot; &#039;chararacters&#039;<br /><br />', $sent_email['params']['body']);
-    $this->assertContains('<b>Message</b><br /><p><em>Please enter a message.</em> Test that double "quotes" are not encoded.</p><br /><br />', $sent_email['params']['body']);
-    $this->assertContains('<p style="color:yellow"><em>Custom styled HTML markup</em></p>', $sent_email['params']['body']);
-    $this->assertNotContains('<b>Optional</b><br />{Empty}<br /><br />', $sent_email['params']['body']);
-    $this->assertNotContains('<b>Checkbox/b><br />Yes<br /><br />', $sent_email['params']['body']);
-
-    // Check email has attachment.
-    $this->assertEqual($sent_email['params']['attachments'][0]['filecontent'], "this is a sample txt file\nit has two lines\n");
-    $this->assertEqual($sent_email['params']['attachments'][0]['filename'], 'file.txt');
-    $this->assertEqual($sent_email['params']['attachments'][0]['filemime'], 'text/plain');
-
-    // Check resend webform includes link to the attachment.
-    $this->drupalGet("admin/structure/webform/manage/test_handler_email_advanced/submission/$sid/resend");
-    $this->assertRaw('<strong><a href="' . $base_url . '/system/files/webform/test_handler_email_advanced/6/file.txt">file.txt</a></strong> (text/plain) - 43 bytes');
-
-    // Check resend webform with custom message.
-    $this->drupalPostForm("admin/structure/webform/manage/test_handler_email_advanced/submission/$sid/resend", ['message[body][value]' => 'Testing 123…'], t('Resend message'));
-    $sent_email = $this->getLastEmail();
-    $this->assertNotContains('<b>First name</b><br />John<br /><br />', $sent_email['params']['body']);
-    $this->debug($sent_email['params']['body']);
-    $this->assertEqual($sent_email['params']['body'], 'Testing 123…');
-
-    // Check resent email has the same attachment.
-    $this->assertEqual($sent_email['params']['attachments'][0]['filecontent'], "this is a sample txt file\nit has two lines\n");
-    $this->assertEqual($sent_email['params']['attachments'][0]['filename'], 'file.txt');
-    $this->assertEqual($sent_email['params']['attachments'][0]['filemime'], 'text/plain');
-
-    $email_handler = $webform->getHandler('email');
-
-    // Exclude file element.
-    $configuration = $email_handler->getConfiguration();
-    $configuration['settings']['excluded_elements'] = ['file' => 'file'];
-    $email_handler->setConfiguration($configuration);
-    $webform->save();
-
-    // Check excluding files.
-    $this->postSubmissionTest($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertFalse(isset($sent_email['params']['attachments'][0]['filecontent']));
-
-    // Check empty element is excluded.
-    $this->postSubmission($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertNotContains('<b>Optional</b><br />{Empty}<br /><br />', $sent_email['params']['body']);
-
-    // Include empty.
-    $configuration = $email_handler->getConfiguration();
-    $configuration['settings']['exclude_empty'] = FALSE;
-    $configuration['settings']['exclude_empty_checkbox'] = FALSE;
-    $email_handler->setConfiguration($configuration);
-    $webform->save();
-
-    // Check empty included.
-    $this->postSubmission($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertContains('<b>Optional</b><br />{Empty}<br /><br />', $sent_email['params']['body']);
-    $this->assertContains('<b>Checkbox</b><br />No<br /><br />', $sent_email['params']['body']);
-
-    // Logut and use anonymous user account.
-    $this->drupalLogout();
-
-    // Check that private is include in email because 'ignore_access' is TRUE.
-    $this->postSubmission($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertContains('<b>Notes</b><br />These notes are private.<br /><br />', $sent_email['params']['body']);
-
-    // Disable ignore_access.
-    $email_handler = $webform->getHandler('email');
-    $configuration = $email_handler->getConfiguration();
-    $configuration['settings']['ignore_access'] = FALSE;
-    $email_handler->setConfiguration($configuration);
-    $webform->save();
-
-    // Check that private is excluded from email because 'ignore_access' is FALSE.
-    $this->postSubmission($webform);
-    $sent_email = $this->getLastEmail();
-    $this->assertNotContains('<b>Notes</b><br />These notes are private.<br /><br />', $sent_email['params']['body']);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailBasicTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailBasicTest.php
deleted file mode 100644
index fd54eaee..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailBasicTest.php
+++ /dev/null
@@ -1,149 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Element\WebformSelectOther;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for basic email webform handler functionality.
- *
- * @group Webform
- */
-class WebformHandlerEmailBasicTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_email'];
-
-  /**
-   * Test basic email handler.
-   */
-  public function testBasicEmailHandler() {
-    $admin_user = $this->drupalCreateUser([
-      'administer webform',
-    ]);
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_email');
-
-    /**************************************************************************/
-
-    // Create a submission using the test webform's default values.
-    $this->postSubmission($webform);
-
-    // Check sending a basic email via a submission.
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['key'], 'test_handler_email_email');
-    $this->assertEqual($sent_email['reply-to'], "John Smith <from@example.com>");
-    $this->assertContains('Submitted by: Anonymous', $sent_email['body']);
-    $this->assertContains('First name: John', $sent_email['body']);
-    $this->assertContains('Last name: Smith', $sent_email['body']);
-    $this->assertEqual($sent_email['headers']['From'], 'John Smith <from@example.com>');
-    $this->assertEqual($sent_email['headers']['Cc'], 'cc@example.com');
-    $this->assertEqual($sent_email['headers']['Bcc'], 'bcc@example.com');
-
-    // Check sending a basic email via a submission.
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['reply-to'], "John Smith <from@example.com>");
-
-    // Check sending with the saving of results disabled.
-    $webform->setSetting('results_disabled', TRUE)->save();
-    $this->postSubmission($webform, ['first_name' => 'Jane', 'last_name' => 'Doe']);
-    $sent_email = $this->getLastEmail();
-    $this->assertContains('First name: Jane', $sent_email['body']);
-    $this->assertContains('Last name: Doe', $sent_email['body']);
-    $webform->setSetting('results_disabled', FALSE)->save();
-
-    // Check sending a custom email using tokens.
-    $this->drupalLogin($admin_user);
-    $body = implode(PHP_EOL, [
-      'full name: [webform_submission:values:first_name] [webform_submission:values:last_name]',
-      'uuid: [webform_submission:uuid]',
-      'sid: [webform_submission:sid]',
-      'date: [webform_submission:created]',
-      'ip-address: [webform_submission:ip-address]',
-      'user: [webform_submission:user]',
-      'url: [webform_submission:url]',
-      'edit-url: [webform_submission:url:edit-form]',
-      'Test that "double quotes" are not encoded.',
-    ]);
-
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_email/handlers/email/edit', ['settings[body]' => WebformSelectOther::OTHER_OPTION, 'settings[body_custom_text]' => $body], t('Save'));
-
-    $sid = $this->postSubmission($webform);
-    /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
-    $webform_submission = WebformSubmission::load($sid);
-
-    $sent_email = $this->getLastEmail();
-    $this->assertContains('full name: John Smith', $sent_email['body']);
-    $this->assertContains('uuid: ' . $webform_submission->uuid->value, $sent_email['body']);
-    $this->assertContains('sid: ' . $sid, $sent_email['body']);
-    $date_value = \Drupal::service('date.formatter')->format($webform_submission->created->value, 'medium');
-    $this->assertContains('date: ' . $date_value, $sent_email['body']);
-    $this->assertContains('ip-address: ' . $webform_submission->remote_addr->value, $sent_email['body']);
-    $this->assertContains('user: ' . $admin_user->label(), $sent_email['body']);
-    $this->assertContains("url:", $sent_email['body']);
-    $this->assertContains($webform_submission->toUrl('canonical', ['absolute' => TRUE])
-      ->toString(), $sent_email['body']);
-    $this->assertContains("edit-url:", $sent_email['body']);
-    $this->assertContains($webform_submission->toUrl('edit-form', ['absolute' => TRUE])
-      ->toString(), $sent_email['body']);
-    $this->assertContains('Test that "double quotes" are not encoded.', $sent_email['body']);
-
-    // Create a submission using HTML is subject and message.
-    $edit = [
-      'settings[subject][select]' => '[webform_submission:values:subject:raw]',
-      'settings[body]' => '_other_',
-      'settings[body_custom_text]' => '[webform_submission:values][webform_submission:values:message:value]',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_email/handlers/email/edit', $edit, t('Save'));
-
-    // Check special characters in message value.
-    $edit = [
-      'first_name' => '"<first_name>"',
-      'last_name' => '"<last_name>"',
-      // Drupal strip_tags() from mail subject.
-      // @see \Drupal\Core\Mail\MailManager::doMail
-      // @see http://cgit.drupalcode.org/drupal/tree/core/lib/Drupal/Core/Mail/MailManager.php#n285
-      'subject' => 'This has <removed> & "special" \'characters\'',
-      'message' => 'This has <not_removed> & "special" \'characters\'',
-    ];
-    $this->postSubmission($webform, $edit);
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['reply-to'], '"first_name\\" \\"last_name" <from@example.com>');
-    $this->assertEqual($sent_email['subject'], 'This has  & "special" \'characters\'');
-    // NOTE:
-    // Drupal's PhpMail::format function calls
-    // MailFormatHelper::htmlToText which strips out all unrecognized HTML tags.
-    // @see \Drupal\Core\Mail\Plugin\Mail\PhpMail
-    //
-    // The Webform module provides its own Mail handler which does
-    // convert and strip HTML tags.
-    // @see \Drupal\webform\Plugin\Mail\WebformPhpMail
-    $this->assertEqual($sent_email['body'], 'First name: ""
-Last name: ""
-Email: from@example.com
-Subject: This has  & "special" \'characters\'
-Message:
-This has  & "special" \'characters\'
-
-This has  & "special" \'characters\'
-');
-    // Instead we are going to check params body.
-    $this->assertEqual($sent_email['params']['body'], 'First name: "<first_name>"
-Last name: "<last_name>"
-Email: from@example.com
-Subject: This has <removed> & "special" \'characters\'
-Message:
-This has <not_removed> & "special" \'characters\'
-
-This has <not_removed> & "special" \'characters\'');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailMappingTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailMappingTest.php
deleted file mode 100644
index 7165b443..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailMappingTest.php
+++ /dev/null
@@ -1,73 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for email webform handler #options mapping functionality.
- *
- * @group Webform
- */
-class WebformHandlerEmailMappingTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_email_mapping'];
-
-  /**
-   * Test email mapping handler.
-   */
-  public function testEmailMapping() {
-    $site_name = \Drupal::config('system.site')->get('name');
-    $site_mail = \Drupal::config('system.site')->get('mail');
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_email_mapping');
-
-    $this->postSubmission($webform);
-
-    // Check that empty select menu email sent.
-    $this->assertText("Select empty sent to empty@example.com from $site_name [$site_mail].");
-
-    // Check that default select menu email sent.
-    $this->assertText("Select default sent to default@default.com from $site_name [$site_mail].");
-
-    // Check that no email sent.
-    $this->assertText('Email not sent for Select yes option handler because a To, CC, or BCC email was not provided.');
-    $this->assertText('Email not sent for Checkboxes handler because a To, CC, or BCC email was not provided.');
-    $this->assertText('Email not sent for Radios other handler because a To, CC, or BCC email was not provided.');
-
-    // Check that single select menu option email sent.
-    $edit = [
-      'select' => 'Yes',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertText("Select yes option sent to yes@example.com from $site_name [$site_mail].");
-    $this->assertText("Select default sent to default@default.com from $site_name [$site_mail].");
-    $this->assertNoText("'Select empty' sent to empty@example.com from $site_name [$site_mail].");
-
-    // Check that multiple radios checked email sent.
-    $edit = [
-      'checkboxes[Saturday]' => TRUE,
-      'checkboxes[Sunday]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertText("Checkboxes sent to saturday@example.com,sunday@example.com from $site_name [$site_mail].");
-    $this->assertNoText('Email not sent for Checkboxes handler because a To, CC, or BCC email was not provided.');
-
-    // Check that checkboxes other option email sent.
-    $edit = [
-      'radios_other[radios]' => '_other_',
-      'radios_other[other]' => '{Other}',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertText("Radios other sent to other@example.com from $site_name [$site_mail].");
-    $this->assertNoText('Email not sent for Radios other handler because a To, CC, or BCC email was not provided.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRenderingTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRenderingTest.php
deleted file mode 100644
index 642dd843..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRenderingTest.php
+++ /dev/null
@@ -1,88 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for email webform handler rendering functionality.
- *
- * @group Webform
- */
-class WebformHandlerEmailRenderingTest extends WebformTestBase {
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Make sure we are using distinct default and administrative themes for
-    // the duration of these tests.
-    \Drupal::service('theme_handler')->install(['webform_test_bartik', 'seven']);
-    $this->config('system.theme')
-      ->set('default', 'webform_test_bartik')
-      ->set('admin', 'seven')
-      ->save();
-  }
-
-  /**
-   * Test email handler rendering.
-   */
-  public function testEmailRendering() {
-    $this->drupalLogin($this->rootUser);
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('contact');
-
-    // Check that we are currently using the bartik.theme.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('core/themes/bartik/css/base/elements.css');
-
-    // Post submission and send emails.
-    $edit = [
-      'name' => 'Dixisset',
-      'email' => 'test@test.com',
-      'subject' => 'Testing contact webform from [site:name]',
-      'message' => 'Please ignore this email.',
-    ];
-    $this->postSubmission($webform, $edit);
-
-    // Check submitting contact form and sending emails using the
-    // default bartik.theme.
-    $sent_emails = $this->drupalGetMails();
-    $this->assertContains('HEADER 1 (CONTACT_EMAIL_CONFIRMATION)', $sent_emails[0]['body']);
-    $this->assertContains('Please ignore this email.', $sent_emails[0]['body']);
-    $this->assertContains('address (contact_email_confirmation)', $sent_emails[0]['body']);
-    $this->assertContains('HEADER 1 (GLOBAL)', $sent_emails[1]['body']);
-    $this->assertContains('Please ignore this email.', $sent_emails[1]['body']);
-    $this->assertContains('address (global)', $sent_emails[1]['body']);
-
-    // Disable dedicated page which will cause the form to now use the
-    // seven.theme.
-    // @see \Drupal\webform\Theme\WebformThemeNegotiator
-    $webform->setSetting('page', FALSE);
-    $webform->save();
-
-    // Check that we are now using the seven.theme.
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('core/themes/bartik/css/base/elements.css');
-
-    // Post submission and send emails.
-    $this->postSubmission($webform, $edit);
-
-    // Check submitting contact form and sending emails using the
-    // seven.theme but the rendered the emails still use the default
-    // bartik.theme.
-    // @see \Drupal\webform\Plugin\WebformHandler\EmailWebformHandler::getMessage
-    $sent_emails = $this->drupalGetMails();
-    $this->assertContains('HEADER 1 (CONTACT_EMAIL_CONFIRMATION)', $sent_emails[2]['body']);
-    $this->assertContains('Please ignore this email.', $sent_emails[2]['body']);
-    $this->assertContains('address (contact_email_confirmation)', $sent_emails[2]['body']);
-    $this->assertContains('HEADER 1 (GLOBAL)', $sent_emails[3]['body']);
-    $this->assertContains('Please ignore this email.', $sent_emails[3]['body']);
-    $this->assertContains('address (global)', $sent_emails[3]['body']);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRolesTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRolesTest.php
deleted file mode 100644
index db8ae409..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailRolesTest.php
+++ /dev/null
@@ -1,84 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for email webform handler email roles functionality.
- *
- * @group Webform
- */
-class WebformHandlerEmailRolesTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_email_roles'];
-
-  /**
-   * Test email roles handler.
-   */
-  public function testEmailRoles() {
-    // Enable all authenticated roles.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('mail.roles', ['authenticated'])
-      ->save();
-
-    // IMPORTANT: Simpletest create 'administrators' role while Drupal
-    // creates 'administrator' role.
-    // WORKAROUND: Create 'administrator' role so that SimpleTest and Drupal
-    // are in-sync.
-    $this->drupalCreateRole([], 'administrator');
-
-    $webform = Webform::load('test_handler_email_roles');
-
-    $authenticated_user = $this->drupalCreateUser();
-    $authenticated_user->set('mail', 'authenticated@example.com');
-    $authenticated_user->save();
-
-    $blocked_user = $this->drupalCreateUser();
-    $blocked_user->set('mail', 'blocked@example.com');
-    $blocked_user->block();
-    $blocked_user->save();
-
-    $admin_user = $this->drupalCreateUser();
-    $admin_user->set('mail', 'administrator@example.com');
-    $admin_user->addRole('administrator');
-    $admin_user->save();
-
-    // Check email all authenticated users.
-    $this->postSubmission($webform, ['role' => 'authenticated']);
-    $this->assertRaw('<em class="placeholder">Webform submission from: </em> sent to <em class="placeholder">admin@example.com,administrator@example.com,authenticated@example.com</em> from <em class="placeholder">Drupal</em> [<em class="placeholder">simpletest@example.com</em>].');
-
-    // Check that blocked user is never emailed.
-    $this->assertNoRaw('blocked@example.com');
-
-    // Check that unblocked user is never emailed.
-    $blocked_user->activate()->save();
-    $this->postSubmission($webform, ['role' => 'authenticated']);
-    $this->assertRaw('blocked@example.com');
-
-    // Check email administrator user.
-    $this->postSubmission($webform, ['role' => 'administrator']);
-    $this->assertRaw('<em class="placeholder">Webform submission from: </em> sent to <em class="placeholder">administrator@example.com</em> from <em class="placeholder">Drupal</em> [<em class="placeholder">simpletest@example.com</em>].');
-
-    // Check that missing 'other' role does not send any emails.
-    $this->postSubmission($webform, ['role' => 'other']);
-    $this->assertRaw('<em class="placeholder">Test: Handler: Email roles</em>: Email not sent for <em class="placeholder">Email</em> handler because a <em>To</em>, <em>CC</em>, or <em>BCC</em> email was not provided.');
-
-    // Check that authenticated role is no longer available.
-    // Enable only administrator role.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('mail.roles', ['administrator'])
-      ->save();
-    $this->postSubmission($webform, ['role' => 'authenticated']);
-    $this->assertRaw('<em class="placeholder">Test: Handler: Email roles</em>: Email not sent for <em class="placeholder">Email</em> handler because a <em>To</em>, <em>CC</em>, or <em>BCC</em> email was not provided.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailStatesTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailStatesTest.php
deleted file mode 100644
index 81616110..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailStatesTest.php
+++ /dev/null
@@ -1,96 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for email webform handler email states.
- *
- * @group Webform
- */
-class WebformHandlerEmailStatesTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_email_states'];
-
-  /**
-   * Test email states handler.
-   */
-  public function testEmailStates() {
-    $webform = Webform::load('test_handler_email_states');
-
-    // Check draft saved email.
-    $this->drupalPostForm('webform/test_handler_email_states', [], t('Save Draft'));
-    $this->assertRaw('Debug: Email: Draft saved');
-
-    // Check completed email.
-    $sid = $this->postSubmission($webform);
-    $this->assertRaw('Debug: Email: Submission completed');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check converted email.
-    $email = $this->getLastEmail();
-    $this->assertEqual($email['id'], 'webform_test_handler_email_states_email_converted');
-
-    // Check updated email.
-    $this->drupalPostForm("/admin/structure/webform/manage/test_handler_email_states/submission/$sid/edit", [], t('Save'));
-
-    /**************************************************************************/
-    // @todo Fix random test failure that can't be reproduced locally.
-    // $this->assertRaw('Debug: Email: Submission updated');
-    /**************************************************************************/
-
-    // Check that custom (aka no states) is only visible on the 'Resend' tab.
-    $this->drupalGet("/admin/structure/webform/manage/test_handler_email_states/submission/$sid/resend");
-    $this->assertRaw('<b>Subject:</b> Draft saved<br />');
-    $this->assertRaw('<b>Subject:</b> Submission converted<br />');
-    $this->assertRaw('<b>Subject:</b> Submission completed<br />');
-    $this->assertRaw('<b>Subject:</b> Submission updated<br />');
-    $this->assertRaw('<b>Subject:</b> Submission locked<br />');
-    $this->assertRaw('<b>Subject:</b> Submission deleted<br />');
-    $this->assertRaw('<b>Subject:</b> Submission custom<br />');
-
-    // Check locked email.
-    $this->drupalPostForm("/admin/structure/webform/manage/test_handler_email_states/submission/$sid/notes", ['locked' => TRUE], t('Save'));
-    $this->assertRaw('Debug: Email: Submission locked');
-
-    // Check deleted email.
-    $this->drupalPostForm("/admin/structure/webform/manage/test_handler_email_states/submission/$sid/delete", [], t('Delete'));
-    $this->assertRaw('Debug: Email: Submission deleted');
-
-    // Check that 'Send when…' is visible.
-    $this->drupalGet('/admin/structure/webform/manage/test_handler_email_states/handlers/email_draft/edit');
-    $this->assertRaw('<span class="fieldset-legend">Send email</span>');
-
-    // Check states hidden when results are disabled.
-    $webform->setSetting('results_disabled', TRUE)->save();
-    $this->drupalGet('/admin/structure/webform/manage/test_handler_email_states/handlers/email_draft/edit');
-    $this->assertNoRaw('<span class="fieldset-legend js-form-required form-required">Send email</span>');
-
-    // Check that only completed email is triggered when states are disabled.
-    $this->postSubmission($webform);
-    $this->assertNoRaw('Debug: Email: Draft saved');
-    $this->assertRaw('Debug: Email: Submission completed');
-    $this->assertNoRaw('Debug: Email: Submission updated');
-    $this->assertNoRaw('Debug: Email: Submission deleted');
-    $this->assertNoRaw('Debug: Email: Submission custom');
-
-    // Check that resave draft handler automatically switches
-    // states to completed.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_email_states/handlers/email_draft/edit', [], t('Save'));
-    $this->postSubmission($webform);
-    $this->assertRaw('Debug: Email: Draft saved');
-    $this->assertRaw('Debug: Email: Submission completed');
-    $this->assertNoRaw('Debug: Email: Submission updated');
-    $this->assertNoRaw('Debug: Email: Submission deleted');
-    $this->assertNoRaw('Debug: Email: Submission custom');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailTwigTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailTwigTest.php
deleted file mode 100644
index 66fbe3c4..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerEmailTwigTest.php
+++ /dev/null
@@ -1,47 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for email webform handler Twig functionality.
- *
- * @group Webform
- */
-class WebformHandlerEmailTwigTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_email_twig'];
-
-  /**
-   * Test email twig handler.
-   */
-  public function testEmailTwigHandler() {
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_email_twig');
-
-    // Create a submission using the test webform's default values.
-    $this->postSubmission($webform);
-
-    // Check sending a basic email via a submission.
-    $sent_email = $this->getLastEmail();
-    $this->assertEqual($sent_email['params']['body'], '<p>Submitted values are:</p>
-  <b>First name</b><br />John<br /><br />
-
-  <b>Last name</b><br />Smith<br /><br />
-
-  <b>Email</b><br /><a href="mailto:from@example.com">from@example.com</a><br /><br />
-
-  <b>Subject</b><br />{subject}<br /><br />
-
-  <b>Message</b><br />{message}<br /><br />');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerExcludedTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerExcludedTest.php
deleted file mode 100644
index 489e103f..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerExcludedTest.php
+++ /dev/null
@@ -1,73 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for the webform handler excluded.
- *
- * @group Webform
- */
-class WebformHandlerExcludedTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    $this->drupalPlaceBlock('local_actions_block');
-  }
-
-  /**
-   * Test excluded handlers.
-   */
-  public function testExcludeHandlers() {
-    $this->drupalLogin($this->rootUser);
-
-    /** @var \Drupal\webform\Plugin\WebformHandlerManagerInterface $handler_manager */
-    $handler_manager = $this->container->get('plugin.manager.webform.handler');
-
-    // Check add mail and handler plugin.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers');
-    $this->assertLink('Add email');
-    $this->assertLink('Add handler');
-
-    // Check add mail accessible.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers/add/email');
-    $this->assertResponse(200);
-
-    // Exclude the email handler.
-    \Drupal::configFactory()->getEditable('webform.settings')->set('handler.excluded_handlers', ['email' => 'email'])->save();
-
-    // Check add mail hidden.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers');
-    $this->assertNoLink('Add email');
-    $this->assertLink('Add handler');
-
-    // Check add mail access denied.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers/add/email');
-    $this->assertResponse(403);
-
-    // Exclude the email handler.
-    \Drupal::configFactory()->getEditable('webform.settings')->set('handler.excluded_handlers', ['action' => 'action', 'broken' => 'broken', 'debug' => 'debug', 'email' => 'email', 'remote_post' => 'remote_post', 'settings' => 'settings'])->save();
-
-    // Check add mail and handler hidden.
-    $this->drupalGet('/admin/structure/webform/manage/contact/handlers');
-    $this->assertNoLink('Add email');
-    $this->assertNoLink('Add handler');
-
-    // Check handler definitions.
-    $definitions = $handler_manager->getDefinitions();
-    $definitions = $handler_manager->removeExcludeDefinitions($definitions);
-    $this->assertEqual(array_keys($definitions), []);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerInvokeAlterHookTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerInvokeAlterHookTest.php
deleted file mode 100644
index 5f8d1489..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerInvokeAlterHookTest.php
+++ /dev/null
@@ -1,43 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for the webform handler invoke alter hook.
- *
- * @group Webform
- */
-class WebformHandlerInvokeAlterHookTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_handler_invoke_alter'];
-
-  /**
-   * Tests webform handler invoke alter hook.
-   */
-  public function testWebformHandlerInvokeAlterHook() {
-    // Check invoke alter hooks.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_confirmation::pre_create"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_pre_create_alter() for "contact:email_confirmation"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_notification::pre_create"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_pre_create_alter() for "contact:email_notification"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_confirmation::alter_elements"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_notification::alter_elements"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_confirmation::alter_elements"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_notification::alter_elements"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_confirmation::post_create"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_notification::post_create"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_confirmation::override_settings"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_notification::override_settings"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_confirmation::alter_form"');
-    $this->assertRaw('Invoking hook_webform_handler_invoke_alter() for "contact:email_notification::alter_form"');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerPluginTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerPluginTest.php
deleted file mode 100644
index 8a5d861d..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerPluginTest.php
+++ /dev/null
@@ -1,60 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for the webform handler plugin.
- *
- * @group Webform
- */
-class WebformHandlerPluginTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_handler'];
-
-  /**
-   * Tests webform handler plugin.
-   */
-  public function testWebformHandler() {
-    $webform = Webform::load('contact');
-
-    // Check initial dependencies.
-    $this->assertEqual($webform->getDependencies(), ['module' => ['webform']]);
-
-    /** @var \Drupal\webform\Plugin\WebformHandlerManagerInterface $handler_manager */
-    $handler_manager = $this->container->get('plugin.manager.webform.handler');
-
-    // Add 'test' handler provided by the webform_test.module.
-    $webform_handler_configuration = [
-      'id' => 'test',
-      'label' => 'test',
-      'handler_id' => 'test',
-      'status' => 1,
-      'weight' => 2,
-      'settings' => [],
-    ];
-    $webform_handler = $handler_manager->createInstance('test', $webform_handler_configuration);
-    $webform->addWebformHandler($webform_handler);
-    $webform->save();
-
-    // Check that handler has been added to the dependencies.
-    $this->assertEqual($webform->getDependencies(), ['module' => ['webform_test_handler', 'webform']]);
-
-    // Uninstall the webform_test.module which will also remove the
-    // debug handler.
-    $this->container->get('module_installer')->uninstall(['webform_test_handler']);
-    $webform = Webform::load('contact');
-
-    // Check that handler was removed from the dependencies.
-    $this->assertNotEqual($webform->getDependencies(), ['module' => ['webform_test_handler', 'webform']]);
-    $this->assertEqual($webform->getDependencies(), ['module' => ['webform']]);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerRemotePostTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerRemotePostTest.php
deleted file mode 100644
index af270ae5..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerRemotePostTest.php
+++ /dev/null
@@ -1,296 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for remote post webform handler functionality.
- *
- * @group Webform
- */
-class WebformHandlerRemotePostTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform', 'webform_test_handler_remote_post'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_handler_remote_post',
-    'test_handler_remote_put',
-    'test_handler_remote_get',
-    'test_handler_remote_post_file',
-  ];
-
-  /**
-   * Test remote post handler.
-   */
-  public function testRemotePostHandler() {
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    // POST.
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_remote_post');
-
-    // Check 'completed' operation.
-    $sid = $this->postSubmission($webform);
-
-    // Check POST response.
-    $this->assertRaw("method: post
-status: success
-message: 'Processed completed request.'
-options:
-  headers:
-    Accept-Language: en
-    custom_header: 'true'
-  form_params:
-    custom_completed: true
-    custom_data: true
-    response_type: '200'
-    first_name: John
-    last_name: Smith");
-
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertRaw("form_params:
-  custom_completed: true
-  custom_data: true
-  response_type: '200'
-  first_name: John
-  last_name: Smith");
-    $this->assertRaw('Processed completed request.');
-
-    // Check confirmation number is set via the
-    // [webform:handler:remote_post:completed:confirmation_number] token.
-    $this->assertRaw('Your confirmation number is ' . $webform_submission->getElementData('confirmation_number') . '.');
-
-    // Check custom header.
-    $this->assertRaw('{&quot;headers&quot;:{&quot;Accept-Language&quot;:&quot;en&quot;,&quot;custom_header&quot;:&quot;true&quot;}');
-
-    // Sleep for 1 second to make sure submission timestamp is updated.
-    sleep(1);
-
-    // Check 'updated' operation.
-    $this->drupalPostForm("admin/structure/webform/manage/test_handler_remote_post/submission/$sid/edit", [], t('Save'));
-    $this->assertRaw("form_params:
-  custom_updated: true
-  custom_data: true
-  response_type: '200'
-  first_name: John
-  last_name: Smith");
-    $this->assertRaw('Processed updated request.');
-
-    // Check 'deleted`' operation.
-    $this->drupalPostForm("admin/structure/webform/manage/test_handler_remote_post/submission/$sid/delete", [], t('Delete'));
-    $this->assertRaw("form_params:
-  custom_deleted: true
-  custom_data: true
-  first_name: John
-  last_name: Smith
-  response_type: '200'");
-    $this->assertRaw('Processed deleted request.');
-
-    // Switch anonymous user.
-    $this->drupalLogout();
-
-    // Check 'draft' operation.
-    $this->postSubmission($webform, [], t('Save Draft'));
-    $this->assertRaw("form_params:
-  custom_draft_created: true
-  custom_data: true
-  response_type: '200'
-  first_name: John
-  last_name: Smith");
-    $this->assertRaw('Processed draft_created request.');
-
-    // Login root user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check 'convert' operation.
-    $this->assertRaw("form_params:
-  custom_converted: true
-  custom_data: true
-  first_name: John
-  last_name: Smith
-  response_type: '200'");
-    $this->assertRaw('Processed converted request.');
-    $this->assertNoRaw('Unable to process this submission. Please contact the site administrator.');
-
-    // Check excluded data.
-    $handler = $webform->getHandler('remote_post');
-    $configuration = $handler->getConfiguration();
-    $configuration['settings']['excluded_data'] = [
-      'last_name' => 'last_name',
-    ];
-    $handler->setConfiguration($configuration);
-    $webform->save();
-    $sid = $this->postSubmission($webform);
-    $this->assertRaw('first_name: John');
-    $this->assertNoRaw('last_name: Smith');
-    $this->assertRaw("sid: '$sid'");
-    $this->assertNoRaw('Unable to process this submission. Please contact the site administrator.');
-
-    // Check 500 Internal Server Error.
-    $this->postSubmission($webform, ['response_type' => '500']);
-    $this->assertRaw('Failed to process completed request.');
-    $this->assertRaw('Unable to process this submission. Please contact the site administrator.');
-
-    // Check default custom response message.
-    $handler = $webform->getHandler('remote_post');
-    $configuration = $handler->getConfiguration();
-    $configuration['settings']['message'] = 'This is a custom response message';
-    $handler->setConfiguration($configuration);
-    $webform->save();
-    $this->postSubmission($webform, ['response_type' => '500']);
-    $this->assertRaw('Failed to process completed request.');
-    $this->assertNoRaw('Unable to process this submission. Please contact the site administrator.');
-    $this->assertRaw('This is a custom response message');
-
-    // Check 404 Not Found with custom message.
-    $this->postSubmission($webform, ['response_type' => '404']);
-    $this->assertRaw('File not found');
-    $this->assertNoRaw('Unable to process this submission. Please contact the site administrator.');
-    $this->assertRaw('This is a custom 404 not found message.');
-
-    // Check 401 Unauthorized with custom message and token.
-    $this->postSubmission($webform, ['response_type' => '401']);
-    $this->assertRaw('Unauthorized');
-    $this->assertNoRaw('Unable to process this submission. Please contact the site administrator.');
-    $this->assertRaw('This is a message token <strong>Unauthorized to process completed request.</strong>');
-
-    // Disable saving of results.
-    $webform->setSetting('results_disabled', TRUE);
-    $webform->save();
-
-    // Check confirmation number when results disabled.
-    $sid = $this->postSubmission($webform);
-    $this->assertNull($sid);
-
-    // Get confirmation number from JSON packet.
-    preg_match('/&quot;confirmation_number&quot;:&quot;([a-zA-z0-9]+)&quot;/', $this->getRawContent(), $match);
-    $this->assertRaw('Your confirmation number is ' . $match[1] . '.');
-
-    // Set remote post error URL to homepage.
-    $handler = $webform->getHandler('remote_post');
-    $configuration = $handler->getConfiguration();
-    $configuration['settings']['error_url'] = $webform->toUrl('canonical', ['query' => ['error' => '1']])->toString();
-    $handler->setConfiguration($configuration);
-    $webform->save();
-
-    // Check 404 Not Found with custom error uri.
-    $this->postSubmission($webform, ['response_type' => '404']);
-    $this->assertNoRaw('This is a custom 404 not found message.');
-    $this->assertUrl($webform->toUrl('canonical', ['query' => ['error' => '1']])->setAbsolute()->toString());
-
-    /**************************************************************************/
-    // PUT.
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_remote_put');
-
-    $this->postSubmission($webform);
-
-    // Check PUT response.
-    $this->assertRaw("method: put
-status: success
-message: 'Processed completed request.'
-options:
-  headers:
-    custom_header: 'true'
-  form_params:
-    custom_completed: true
-    custom_data: true
-    response_type: '200'
-    first_name: John
-    last_name: Smith");
-
-    /**************************************************************************/
-    // GET.
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_remote_get');
-
-    $this->postSubmission($webform);
-
-    // Check GET response.
-    $this->assertRaw("method: get
-status: success
-message: 'Processed completed request.'
-options:
-  headers:
-    custom_header: 'true'");
-
-    // Check request URL contains query string.
-    $this->assertRaw("http://webform-test-handler-remote-post/completed?custom_completed=1&amp;custom_data=1&amp;response_type=200&amp;first_name=John&amp;last_name=Smith");
-
-    // Check response data.
-    $this->assertRaw("message: 'Processed completed request.'");
-
-    // Get confirmation number from JSON packet.
-    preg_match('/&quot;confirmation_number&quot;:&quot;([a-zA-z0-9]+)&quot;/', $this->getRawContent(), $match);
-    $this->assertRaw('Your confirmation number is ' . $match[1] . '.');
-
-    /**************************************************************************/
-    // POST File.
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_handler_remote_post_file');
-
-    $sid = $this->postSubmissionTest($webform);
-    $webform_submission = WebformSubmission::load($sid);
-
-    $file_data = $webform_submission->getElementData('file');
-    $file = File::load($file_data);
-    $file_id = $file->id();
-    $file_uuid = $file->uuid();
-
-    $files_data = $webform_submission->getElementData('files');
-    $file = File::load(reset($files_data));
-    $files_id = $file->id();
-    $files_uuid = $file->uuid();
-
-    // Check the file name, uri, and data is appended to form params.
-    $this->assertRaw("form_params:
-  file: 1
-  files:
-    - 2
-  _file:
-    id: $file_id
-    name: file.txt
-    uri: 'private://webform/test_handler_remote_post_file/$sid/file.txt'
-    mime: text/plain
-    uuid: $file_uuid
-    data: dGhpcyBpcyBhIHNhbXBsZSB0eHQgZmlsZQppdCBoYXMgdHdvIGxpbmVzCg==
-  file__id: $file_id
-  file__name: file.txt
-  file__uri: 'private://webform/test_handler_remote_post_file/$sid/file.txt'
-  file__mime: text/plain
-  file__uuid: $file_uuid
-  file__data: dGhpcyBpcyBhIHNhbXBsZSB0eHQgZmlsZQppdCBoYXMgdHdvIGxpbmVzCg==
-  _files:
-    -
-      id: $files_id
-      name: files.txt
-      uri: 'private://webform/test_handler_remote_post_file/$sid/files.txt'
-      mime: text/plain
-      uuid: $files_uuid
-      data: dGhpcyBpcyBhIHNhbXBsZSB0eHQgZmlsZQppdCBoYXMgdHdvIGxpbmVzCg==");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerSettingsTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerSettingsTest.php
deleted file mode 100644
index dfda99cf..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerSettingsTest.php
+++ /dev/null
@@ -1,77 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for settings webform handler functionality.
- *
- * @group Webform
- */
-class WebformHandlerSettingsTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_settings'];
-
-  /**
-   * Test settings handler.
-   */
-  public function testSettingsHandler() {
-    // NOTE: Using message indentation to make sure the message is matched
-    // and not the input value.
-    $message_indentation = '                    ';
-
-    // Check custom save draft message.
-    $edit = [
-      'preview' => TRUE,
-      'confirmation' => TRUE,
-      'custom' => TRUE,
-    ];
-    $this->drupalPostForm('webform/test_handler_settings', $edit, t('Save Draft'));
-    $this->assertRaw($message_indentation . '{Custom draft saved message}');
-
-    // Check custom save load message.
-    $this->drupalGet('/webform/test_handler_settings');
-    // NOTE: Adding indentation to make sure the message is matched and not input value.
-    $this->assertRaw($message_indentation . '{Custom draft loaded message}');
-
-    // Check custom preview title and message.
-    $this->drupalPostForm('webform/test_handler_settings', [], t('Preview'));
-    $this->assertRaw('<li class="messages__item">{Custom preview message}</li>');
-    $this->assertRaw('<h1 class="page-title">{Custom preview title}</h1>');
-
-    // Check custom confirmation title and message.
-    $this->drupalPostForm('webform/test_handler_settings', [], t('Submit'));
-    $this->assertRaw('<h1 class="page-title">{Custom confirmation title}</h1>');
-    $this->assertRaw('<div class="webform-confirmation__message">{Custom confirmation message}</div>');
-
-    // Check no custom save draft message.
-    $edit = [
-      'preview' => FALSE,
-      'confirmation' => FALSE,
-      'custom' => FALSE,
-    ];
-    $this->drupalPostForm('webform/test_handler_settings', $edit, t('Save Draft'));
-    $this->assertNoRaw($message_indentation . '{Custom draft saved message}');
-
-    // Check no custom save load message.
-    $this->drupalGet('/webform/test_handler_settings');
-    $this->assertNoRaw($message_indentation . '{Custom draft loaded message}');
-
-    // Check no custom preview title and message.
-    $this->drupalPostForm('webform/test_handler_settings', [], t('Preview'));
-    $this->assertNoRaw('<h1 class="page-title">{Custom confirmation title}</h1>');
-    $this->assertNoRaw('<div class="webform-confirmation__message">{Custom confirmation message}</div>');
-
-    // Check no custom confirmation title and message.
-    $this->drupalPostForm('webform/test_handler_settings', [], t('Submit'));
-    $this->assertNoRaw('{Custom confirmation title}');
-    $this->assertNoRaw('{Custom confirmation message}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Handler/WebformHandlerTest.php b/modules/contrib/webform/src/Tests/Handler/WebformHandlerTest.php
deleted file mode 100644
index 1a5c8317..00000000
--- a/modules/contrib/webform/src/Tests/Handler/WebformHandlerTest.php
+++ /dev/null
@@ -1,276 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Handler;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform handler plugin.
- *
- * @group Webform
- */
-class WebformHandlerTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_handler'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_handler_test'];
-
-  /**
-   * Tests webform handler plugin.
-   */
-  public function testWebformHandler() {
-    $this->drupalLogin($this->rootUser);
-
-    // Get the webform test handler.
-    /** @var \Drupal\webform\WebformInterface $webform_handler_test */
-    $webform_handler_test = Webform::load('test_handler_test');
-
-    // Check new submission plugin invoking.
-    $this->drupalGet('/webform/test_handler_test');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-
-    // Check validate submission plugin invoked and displaying an error.
-    $this->postSubmission($webform_handler_test, ['element' => 'a value']);
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:validateForm');
-    $this->assertRaw('The element must be empty. You entered <em class="placeholder">a value</em>.');
-    $this->assertNoRaw('One two one two this is just a test');
-
-    // Check submit submission plugin invoking.
-    $sid = $this->postSubmission($webform_handler_test);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:validateForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:submitForm');
-    $this->assertRaw('One two one two this is just a test');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:confirmForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preSave');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postSave insert');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postLoad');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preprocessConfirmation');
-    $this->assertRaw('<div class="webform-confirmation__message">::preprocessConfirmation</div>');
-
-    // Check confirmation with token.
-    $this->drupalGet('/webform/test_handler_test/confirmation', ['query' => ['token' => $webform_submission->getToken()]]);
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preSave');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postLoad');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preprocessConfirmation');
-    $this->assertRaw('<div class="webform-confirmation__message">::preprocessConfirmation</div>');
-
-    // Check confirmation with out token.
-    $this->drupalGet('/webform/test_handler_test/confirmation');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postLoad');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preprocessConfirmation');
-    $this->assertRaw('<div class="webform-confirmation__message">::preprocessConfirmation</div>');
-
-    // Check update submission plugin invoking.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_handler_test/submission/' . $sid . '/edit', [], t('Save'));
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postSave update');
-
-    // Check delete submission plugin invoking.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_handler_test/submission/' . $sid . '/delete', [], t('Delete'));
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postLoad');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preDelete');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postDelete');
-    $this->assertRaw('<em class="placeholder">Test: Handler: Test invoke methods: Submission #' . $webform_submission->serial() . '</em> has been deleted.');
-
-    // Check configuration settings.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test/handlers/test/edit', ['settings[message]' => '{message}'], t('Save'));
-    $this->postSubmission($webform_handler_test);
-    $this->assertRaw('{message}');
-
-    // Check disabling a handler.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test/handlers/test/edit', ['status' => FALSE], t('Save'));
-    $this->drupalGet('/webform/test_handler_test');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-
-    // Enable the handler and disable the saving of results.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test/handlers/test/edit', ['status' => TRUE], t('Save'));
-    $webform_handler_test->setSettings(['results_disabled' => TRUE]);
-    $webform_handler_test->save();
-
-    // Check webform disabled with saving of results is disabled and handler does
-    // not process results.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_handler_test');
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertNoRaw('This webform is not saving or handling any submissions. All submitted data will be lost.');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-
-    // Check admin can still post submission.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/webform/test_handler_test');
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertRaw('This webform is currently not saving any submitted data.');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-
-    // Check submit submission plugin invoking when saving results is disabled.
-    $webform_handler_test->setSetting('results_disabled', TRUE);
-    $webform_handler_test->save();
-    $this->postSubmission($webform_handler_test);
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:validateForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:submitForm');
-    $this->assertRaw('One two one two this is just a test');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:confirmForm');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preSave');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postSave insert');
-    // Check that post load is not executed when saving results is disabled.
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postLoad');
-
-    /**************************************************************************/
-    // Handler.
-    /**************************************************************************/
-
-    // Check update handler.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test/handlers/test/edit', [], t('Save'));
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:updateHandler');
-    $this->assertRaw('The webform handler was successfully updated.');
-
-    // Check delete handler.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test/handlers/test/delete', [], t('Delete'));
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:deleteHandler');
-
-    // Check create handler.
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test/handlers/add/test', ['handler_id' => 'test'], t('Save'));
-    $this->assertRaw('The webform handler was successfully added.');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:createHandler');
-
-    /**************************************************************************/
-    // Single handler.
-    /**************************************************************************/
-
-    // Check test handler is executed.
-    $this->drupalGet('/webform/test_handler_test/test');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterForm');
-
-    // Check test handler is enabled and debug handler is disabled.
-    $this->drupalPostForm('webform/test_handler_test/test', ['element' => ''], t('Submit'));
-    $this->assertRaw('One two one two this is just a test');
-    $this->assertNoRaw("element: ''");
-
-    // Check test handler is disabled.
-    $this->drupalGet('/webform/test_handler_test/test', ['query' => ['_webform_handler' => 'debug']]);
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:preCreate');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:postCreate');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:alterElements');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:overrideSettings');
-    $this->assertRaw('Testing the <em class="placeholder">Test: Handler: Test invoke methods</em> webform <em class="placeholder">Debug</em> handler. <strong>All other emails/handlers are disabled.</strong>');
-
-    // Check test handler is now disabled and debug handler is enabled.
-    $this->drupalPostForm('webform/test_handler_test/test', ['element' => ''], t('Submit'), ['query' => ['_webform_handler' => 'debug']]);
-    $this->assertNoRaw('One two one two this is just a test');
-    $this->assertRaw("element: ''");
-
-    // Check 403 access denied for missing handler.
-    $this->drupalGet('/webform/test_handler_test/test', ['query' => ['_webform_handler' => 'missing']]);
-    $this->assertResponse(403);
-    $this->assertRaw('The <em class="placeholder">missing</em> email/handler for the <em class="placeholder">Test: Handler: Test invoke methods</em> webform does not exist.');
-  }
-
-  /**
-   * Tests webform handler element plugin.
-   */
-  public function testWebformHandlerElement() {
-    $this->drupalLogin($this->rootUser);
-
-    // Check CRUD methods invoked.
-    $edit = [
-      'elements' => "element:
-  '#type': textfield
-  '#title': 'Empty element'
-  '#description': 'Entering any value will throw an error'",
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test', $edit, t('Save'));
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:createElement');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:updateElement');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:deleteElement');
-
-    // Check create element.
-    $edit = [
-      'elements' => "element:
-  '#type': textfield
-  '#title': 'Empty element'
-  '#description': 'Entering any value will throw an error'
-test:
-  '#type': textfield",
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test', $edit, t('Save'));
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:createElement');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:updateElement');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:deleteElement');
-
-    // Check update element.
-    $edit = [
-      'elements' => "element:
-  '#type': textfield
-  '#title': 'Empty element'
-  '#description': 'Entering any value will throw an error'
-test:
-  '#type': textfield
-  '#title': Test",
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test', $edit, t('Save'));
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:createElement');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:updateElement');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:deleteElement');
-
-    // Check delete element.
-    $edit = [
-      'elements' => "element:
-  '#type': textfield
-  '#title': 'Empty element'
-  '#description': 'Entering any value will throw an error'",
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_handler_test', $edit, t('Save'));
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:createElement');
-    $this->assertNoRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:updateElement');
-    $this->assertRaw('Invoked test: Drupal\webform_test_handler\Plugin\WebformHandler\TestWebformHandler:deleteElement');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAccessDeniedTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsAccessDeniedTest.php
deleted file mode 100644
index cf8161a6..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAccessDeniedTest.php
+++ /dev/null
@@ -1,178 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\Core\Url;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for access denied webform and submissions.
- *
- * @group Webform
- */
-class WebformSettingsAccessDeniedTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_access_denied'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Place blocks.
-    $this->placeBlocks();
-  }
-
-  /**
-   * Tests webform access denied setting.
-   */
-  public function testWebformAccessDenied() {
-    $webform = Webform::load('test_form_access_denied');
-    $webform_edit_route_url = Url::fromRoute('entity.webform.edit_form', [
-      'webform' => $webform->id(),
-    ]);
-
-    /**************************************************************************/
-    // Redirect.
-    /**************************************************************************/
-
-    // Set access denied to redirect with message.
-    $webform->setSetting('form_access_denied', WebformInterface::ACCESS_DENIED_LOGIN);
-    $webform->save();
-
-    // Check form message is displayed and user is redirected to the login form.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_access_denied');
-    $this->assertRaw('Please login to access <b>Test: Webform: Access Denied</b>.');
-    $route_options = [
-      'query' => [
-        'destination' => $webform_edit_route_url->toString(),
-      ],
-    ];
-    $this->assertUrl(Url::fromRoute('user.login', [], $route_options));
-
-    /**************************************************************************/
-    // Default.
-    /**************************************************************************/
-
-    // Set default access denied page.
-    $webform->setSetting('form_access_denied', WebformInterface::ACCESS_DENIED_DEFAULT);
-    $webform->save();
-
-    // Check default access denied page.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_access_denied');
-    $this->assertRaw('You are not authorized to access this page.');
-    $this->assertNoRaw('Please login to access <b>Test: Webform: Access Denied</b>.');
-
-    /**************************************************************************/
-    // Page.
-    /**************************************************************************/
-
-    // Set access denied to display a dedicated page.
-    $webform->setSetting('form_access_denied', WebformInterface::ACCESS_DENIED_PAGE);
-    $webform->setSetting('form_access_denied_title', 'Webform: Access denied');
-    $webform->setSetting('form_access_denied_attributes', ['style' => 'border: 1px solid red', 'class' => [], 'attributes' => []]);
-    $webform->save();
-
-    // Check custom access denied page.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_access_denied');
-    $this->assertRaw('<h1 class="page-title">Webform: Access denied</h1>');
-    $this->assertRaw('<div style="border: 1px solid red" class="webform-access-denied">Please login to access <b>Test: Webform: Access Denied</b>.</div>');
-
-    /**************************************************************************/
-    // Message via a block.
-    /**************************************************************************/
-
-    // Place block.
-    $this->drupalPlaceBlock('webform_block', [
-      'webform_id' => 'test_form_access_denied',
-    ]);
-
-    // Set access denied to default.
-    $webform->setSetting('form_access_denied', WebformInterface::ACCESS_DENIED_DEFAULT);
-    $webform->save();
-
-    // Check block does not displays access denied message.
-    $this->drupalGet('/<front>');
-    $this->assertNoRaw('<div style="border: 1px solid red" class="webform-access-denied">Please login to access <b>Test: Webform: Access Denied</b>.</div>');
-
-    // Set access denied to display a message.
-    $webform->setSetting('form_access_denied', WebformInterface::ACCESS_DENIED_MESSAGE);
-    $webform->save();
-
-    // Check block displays access denied message.
-    $this->drupalGet('/<front>');
-    $this->assertRaw('<div style="border: 1px solid red" class="webform-access-denied">Please login to access <b>Test: Webform: Access Denied</b>.</div>');
-
-    // Login.
-    $this->drupalLogin($this->rootUser);
-
-    // Check block displays wth webform.
-    $this->drupalGet('/<front>');
-    $this->assertNoRaw('<div class="webform-access-denied">Please login to access <b>Test: Webform: Access Denied</b>.</div>');
-    $this->assertRaw('id="webform-submission-test-form-access-denied-user-1-add-form"');
-  }
-
-  /**
-   * Tests webform submission access denied setting.
-   */
-  public function testWebformSubmissionAccessDenied() {
-    // Create a webform submission.
-    $this->drupalLogin($this->rootUser);
-    $webform = Webform::load('test_form_access_denied');
-    $sid = $this->postSubmission($webform);
-    $this->drupalLogout();
-
-    /**************************************************************************/
-    // Redirect.
-    /**************************************************************************/
-
-    // Check submission message is displayed.
-    $this->drupalGet("admin/structure/webform/manage/test_form_access_denied/submission/$sid");
-    $this->assertRaw("Please login to access <b>Test: Webform: Access Denied: Submission #$sid</b>.");
-
-    /**************************************************************************/
-    // Default.
-    /**************************************************************************/
-
-    // Set default access denied page.
-    $webform->setSetting('submission_access_denied', WebformInterface::ACCESS_DENIED_DEFAULT);
-    $webform->save();
-
-    // Check default access denied page.
-    $this->drupalGet("admin/structure/webform/manage/test_form_access_denied/submission/$sid");
-    $this->assertRaw('You are not authorized to access this page.');
-    $this->assertNoRaw("Please login to access <b>Test: Webform: Access Denied: Submission #$sid</b>.");
-
-    /**************************************************************************/
-    // Page.
-    /**************************************************************************/
-
-    // Set access denied to display a dedicated page.
-    $webform->setSetting('submission_access_denied', WebformInterface::ACCESS_DENIED_PAGE);
-    $webform->setSetting('submission_access_denied_title', 'Webform submission: Access denied');
-    $webform->setSetting('submission_access_denied_attributes', ['style' => 'border: 1px solid red', 'class' => [], 'attributes' => []]);
-    $webform->save();
-
-    // Check custom access denied page.
-    $this->drupalGet("admin/structure/webform/manage/test_form_access_denied/submission/$sid");
-    $this->assertNoRaw('You are not authorized to access this page.');
-    $this->assertRaw('<h1 class="page-title">Webform submission: Access denied</h1>');
-    $this->assertRaw('<div style="border: 1px solid red" class="webform-submission-access-denied">Please login to access <b>Test: Webform: Access Denied: Submission #' . $sid . '</b>.</div>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAdminTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsAdminTest.php
deleted file mode 100644
index 407e9189..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAdminTest.php
+++ /dev/null
@@ -1,131 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\Utility\WebformYaml;
-
-/**
- * Tests for webform entity.
- *
- * @group Webform
- */
-class WebformSettingsAdminTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'captcha', 'node', 'views', 'webform', 'webform_ui', 'webform_node'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    $this->drupalPlaceBlock('local_actions_block');
-  }
-
-  /**
-   * Tests webform admin settings.
-   */
-  public function testAdminSettings() {
-    global $base_path;
-
-    $this->drupalLogin($this->rootUser);
-
-    /* Settings Webform */
-
-    // Get 'webform.settings'.
-    $original_data = \Drupal::configFactory()->getEditable('webform.settings')->getRawData();
-
-    // Update 'settings.default_form_close_message'.
-    $types = [
-      'forms' => 'admin/structure/webform/config',
-      'elements' => 'admin/structure/webform/config/elements',
-      'submissions' => 'admin/structure/webform/config/submissions',
-      'handlers' => 'admin/structure/webform/config/handlers',
-      'exporters' => 'admin/structure/webform/config/exporters',
-      'libraries' => 'admin/structure/webform/config/libraries',
-      'advanced' => 'admin/structure/webform/config/advanced',
-    ];
-    foreach ($types as $path) {
-      $this->drupalPostForm($path, [], t('Save configuration'));
-      \Drupal::configFactory()->reset('webform.settings');
-      $updated_data = \Drupal::configFactory()->getEditable('webform.settings')->getRawData();
-      $this->ksort($updated_data);
-
-      // Check the updating 'Settings' via the UI did not lose or change any data.
-      $this->assertEqual($updated_data, $original_data, 'Updated admin settings via the UI did not lose or change any data');
-
-      // DEBUG:
-      $original_yaml = WebformYaml::encode($original_data);
-      $updated_yaml = WebformYaml::encode($updated_data);
-      $this->verbose('<pre>' . $original_yaml . '</pre>');
-      $this->verbose('<pre>' . $updated_yaml . '</pre>');
-      $this->debug(array_diff(explode(PHP_EOL, $original_yaml), explode(PHP_EOL, $updated_yaml)));
-    }
-
-    /* Elements */
-
-    // Check that description is 'after' the element.
-    $this->drupalGet('/webform/test_element');
-    $this->assertPattern('#\{item title\}.+\{item markup\}.+\{item description\}#ms');
-
-    // Set the default description display to 'before'.
-    $this->drupalPostForm('admin/structure/webform/config/elements', ['element[default_description_display]' => 'before'], t('Save configuration'));
-
-    // Check that description is 'before' the element.
-    $this->drupalGet('/webform/test_element');
-    $this->assertNoPattern('#\{item title\}.+\{item markup\}.+\{item description\}#ms');
-    $this->assertPattern('#\{item title\}.+\{item description\}.+\{item markup\}#ms');
-
-    /* UI disable dialog */
-
-    // Check that dialogs are enabled.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/add" class="webform-ajax-link button button-action" data-dialog-type="modal" data-dialog-options="{&quot;width&quot;:700,&quot;dialogClass&quot;:&quot;webform-ui-dialog&quot;}" data-drupal-link-system-path="admin/structure/webform/add">Add webform</a>');
-
-    // Disable dialogs.
-    $this->drupalPostForm('admin/structure/webform/config/advanced', ['ui[dialog_disabled]' => TRUE], t('Save configuration'));
-
-    // Check that dialogs are disabled. (i.e. use-ajax is not included)
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertNoRaw('<a href="' . $base_path . 'admin/structure/webform/add" class="webform-ajax-link button button-action" data-dialog-type="modal" data-dialog-options="{&quot;width&quot;:700,&quot;dialogClass&quot;:&quot;webform-ui-dialog&quot;}" data-drupal-link-system-path="admin/structure/webform/add">Add webform</a>');
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/add" class="button button-action" data-drupal-link-system-path="admin/structure/webform/add">Add webform</a>');
-
-    /* UI description help */
-
-    // Check moving #description to #help for webform admin routes.
-    $this->drupalPostForm('admin/structure/webform/config/advanced', ['ui[description_help]' => TRUE], t('Save configuration'));
-    $this->assertRaw('<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Display element description as help text (tooltip)&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;If checked, all element descriptions will be moved to help text (tooltip).&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-
-    // Check moving #description to #help for webform admin routes.
-    $this->drupalPostForm('admin/structure/webform/config/advanced', ['ui[description_help]' => FALSE], t('Save configuration'));
-    $this->assertNoRaw('<span class="webform-element-help" role="tooltip" tabindex="0" data-webform-help="&lt;div class=&quot;webform-element-help--title&quot;&gt;Display element description as help text (tooltip)&lt;/div&gt;&lt;div class=&quot;webform-element-help--content&quot;&gt;If checked, all element descriptions will be moved to help text (tooltip).&lt;/div&gt;"><span aria-hidden="true">?</span></span>');
-  }
-
-  /**
-   * Sort a nested associative array by key.
-   *
-   * @param array $array
-   *   A nested associative array.
-   */
-  protected function ksort(array &$array) {
-    ksort($array);
-    foreach ($array as &$value) {
-      if (is_array($value)) {
-        ksort($value);
-      }
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAjaxTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsAjaxTest.php
deleted file mode 100644
index 93889d0f..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAjaxTest.php
+++ /dev/null
@@ -1,56 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form ajax.
- *
- * @group Webform
- */
-class WebformSettingsAjaxTest extends WebformTestBase {
-
-  /**
-   * Test webform submission form Ajax setting.
-   */
-  public function testAjax() {
-    $webform = Webform::load('contact');
-
-    // Check that Ajax is not enabled.
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('<div id="webform_submission_contact_add_form-ajax" class="webform-ajax-form-wrapper" data-effect="fade" data-progress-type="throbber">');
-
-    // Set 'Use Ajax' for the individual webform.
-    $webform->setSetting('ajax', TRUE);
-    $webform->save();
-
-    // Check that Ajax is enabled for the individual webform.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('<div id="webform_submission_contact_add_form-ajax" class="webform-ajax-form-wrapper" data-effect="fade" data-progress-type="throbber">');
-    $this->assertRaw('"effect":"fade","speed":500');
-
-    // Unset 'Use Ajax' for the individual webform.
-    $webform->setSetting('ajax', FALSE);
-    $webform->save();
-
-    // Check that Ajax is not enabled for the individual webform.
-    $this->drupalGet('/webform/contact');
-    $this->assertNoRaw('<div id="webform_submission_contact_add_form-ajax" class="webform-ajax-form-wrapper" data-effect="fade" data-progress-type="throbber">');
-
-    // Globally enable Ajax for all webforms.
-   \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_ajax', TRUE)
-      ->set('settings.default_ajax_progress_type', 'fullscreen')
-      ->set('settings.default_ajax_effect', 'slide')
-      ->set('settings.default_ajax_speed', 1500)
-      ->save();
-
-    // Check that Ajax is enabled for all webforms.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('<div id="webform_submission_contact_add_form-ajax" class="webform-ajax-form-wrapper" data-effect="slide" data-progress-type="fullscreen">');
-    $this->assertRaw('"effect":"slide","speed":1500');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsArchivedTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsArchivedTest.php
deleted file mode 100644
index 0a57da35..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsArchivedTest.php
+++ /dev/null
@@ -1,83 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform archived.
- *
- * @group Webform
- */
-class WebformSettingsArchivedTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_node', 'webform_templates', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_archived'];
-
-  /**
-   * Test webform submission form archived.
-   */
-  public function testArchived() {
-    global $base_path;
-
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_form_archived');
-
-    // Check that archived webform is removed from webforms manage page.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertRaw('<td><a href="' . $base_path . 'form/contact">Contact</a></td>');
-    $this->assertNoRaw('<td><a href="' . $base_path . 'form/test-form-archived">Test: Webform: Archive</a></td>');
-
-    // Check that archived webform appears when archived filter selected.
-    $this->drupalGet('/admin/structure/webform', ['query' => ['state' => 'archived']]);
-    $this->assertNoRaw('<td><a href="' . $base_path . 'form/contact">Contact</a></td>');
-    $this->assertRaw('<td><a href="' . $base_path . 'form/test-form-archived">Test: Webform: Archive</a></td>');
-
-    // Check that archived webform displays archive message.
-    $this->drupalGet('/form/test-form-archived');
-    $this->assertRaw('This webform is <a href="' . $base_path . 'admin/structure/webform/manage/test_form_archived/settings">archived</a>');
-
-    // Check that archived webform is remove webform select menu.
-    $this->drupalGet('/node/add/webform');
-    $this->assertRaw('<option value="contact">Contact</option>');
-    $this->assertNoRaw('Test: Webform: Archive');
-
-    // Check that selected archived webform is preserved in webform select menu.
-    $this->drupalGet('/node/add/webform', ['query' => ['webform_id' => 'test_form_archived']]);
-    $this->assertRaw('<option value="contact">Contact</option>');
-    $this->assertRaw('<optgroup label="Archived"><option value="test_form_archived" selected="selected">Test: Webform: Archive</option></optgroup>');
-
-    // Change the archived webform to be a template.
-    $webform->set('template', TRUE);
-    $webform->save();
-
-    // Change archived webform to template.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertRaw('Contact');
-    $this->assertNoRaw('Test: Webform: Archive');
-
-    // Check that archived template with (Template) label appears when archived filter selected.
-    $this->drupalGet('/admin/structure/webform', ['query' => ['state' => 'archived']]);
-    $this->assertNoRaw('Contact');
-    $this->assertRaw('<td><a href="' . $base_path . 'form/test-form-archived">Test: Webform: Archive</a> <b>(Template)</b></td>');
-
-    // Check that archived template displays archive message
-    // (not template message).
-    $this->drupalGet('/form/test-form-archived');
-    $this->assertRaw('This webform is <a href="' . $base_path . 'admin/structure/webform/manage/test_form_archived/settings">archived</a>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAssetsTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsAssetsTest.php
deleted file mode 100644
index 6283df5e..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAssetsTest.php
+++ /dev/null
@@ -1,53 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform assets settings.
- *
- * @group Webform
- */
-class WebformSettingsAssetsTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_assets'];
-
-  /**
-   * Tests webform assets.
-   */
-  public function testAssets() {
-    $webform_assets = Webform::load('test_form_assets');
-
-    // Check has CSS (href) and JavaScript (src).
-    $this->drupalGet('/webform/test_form_assets');
-    $this->assertRaw('href="' . base_path() . 'webform/css/test_form_assets?');
-    $this->assertRaw('src="' . base_path() . 'webform/javascript/test_form_assets?');
-
-    // Clear CSS (href) and JavaScript (src).
-    $webform_assets->setCss('')->setJavaScript('')->save();
-
-    // Check has no CSS (href) and JavaScript (src).
-    $this->drupalGet('/webform/test_form_assets');
-    $this->assertNoRaw('href="' . base_path() . 'webform/css/test_form_assets?');
-    $this->assertNoRaw('src="' . base_path() . 'webform/javascript/test_form_assets?');
-
-    // Add global CSS and JS on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('assets.css', '/**/')
-      ->set('assets.javascript', '/**/')
-      ->save();
-
-    // Check has global CSS (href) and JavaScript (src).
-    $this->drupalGet('/webform/test_form_assets');
-    $this->assertRaw('href="' . base_path() . 'webform/css/test_form_assets?');
-    $this->assertRaw('src="' . base_path() . 'webform/javascript/test_form_assets?');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAutofillTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsAutofillTest.php
deleted file mode 100644
index fe2a483c..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsAutofillTest.php
+++ /dev/null
@@ -1,76 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form autofill.
- *
- * @group Webform
- */
-class WebformSettingsAutofillTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_autofill'];
-
-  /**
-   * Test webform submission form autofill.
-   */
-  public function testAutofill() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_form_autofill');
-
-    // Check that elements are both blank.
-    $this->drupalGet('/webform/test_form_autofill');
-    $this->assertNoRaw('This submission has been autofilled with your previous submission.');
-    $this->assertFieldByName('textfield_autofill', '');
-    $this->assertFieldByName('textfield_excluded', '');
-
-    // Create a submission.
-    $edit = [
-      'textfield_autofill' => '{textfield_autofill}',
-      'textfield_excluded' => '{textfield_excluded}',
-    ];
-    $this->postSubmission($webform, $edit);
-
-    // Check that 'textfield_autofill' is autofilled and 'textfield_excluded'
-    // is empty.
-    $this->drupalGet('/webform/test_form_autofill');
-    $this->assertFieldByName('textfield_autofill', '{textfield_autofill}');
-    $this->assertNoFieldByName('textfield_autofill', '{textfield_excluded}');
-    $this->assertFieldByName('textfield_excluded', '');
-
-    // Check that default configuration message is displayed.
-    $this->drupalGet('/webform/test_form_autofill');
-    $this->assertFieldByName('textfield_autofill', '{textfield_autofill}');
-    $this->assertRaw('This submission has been autofilled with your previous submission.');
-
-    // Clear default autofill message.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_autofill_message', '')
-      ->save();
-
-    // Check no autofill message is displayed.
-    $this->drupalGet('/webform/test_form_autofill');
-    $this->assertFieldByName('textfield_autofill', '{textfield_autofill}');
-    $this->assertNoRaw('This submission has been autofilled with your previous submission.');
-
-    // Set custom automfill message.
-    $webform
-      ->setSetting('autofill_message', '{autofill_message}')
-      ->save();
-
-    // Check custom autofill message is displayed.
-    $this->drupalGet('/webform/test_form_autofill');
-    $this->assertFieldByName('textfield_autofill', '{textfield_autofill}');
-    $this->assertRaw('{autofill_message}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsBehaviorsTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsBehaviorsTest.php
deleted file mode 100644
index f2f9ab5c..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsBehaviorsTest.php
+++ /dev/null
@@ -1,383 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform settings behaviors.
- *
- * @group Webform
- */
-class WebformSettingsBehaviorsTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_form_submit_once',
-    'test_form_disable_back',
-    'test_form_submit_back',
-    'test_form_unsaved',
-    'test_form_disable_autocomplete',
-    'test_form_novalidate',
-    'test_form_disable_inline_errors',
-    'test_form_required',
-    'test_form_autofocus',
-    'test_form_details_toggle',
-  ];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    // Disable description help icon.
-    $this->config('webform.settings')->set('ui.description_help', FALSE)->save();
-  }
-
-  /**
-   * Tests webform setting including confirmation.
-   */
-  public function testSettings() {
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    /* Test webform submit once (form_submit_once) */
-    /**************************************************************************/
-
-    $webform_form_submit_once = Webform::load('test_form_submit_once');
-
-    // Check webform has webform.form.submit_once.js.
-    $this->drupalGet('/webform/test_form_submit_once');
-    $this->assertRaw('webform.form.submit_once.js');
-
-    // Disable YAML specific form_submit_once setting.
-    $webform_form_submit_once->setSetting('form_submit_once', FALSE);
-    $webform_form_submit_once->save();
-
-    // Check submit once checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_submit_once/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-submit-once" aria-describedby="edit-form-submit-once--description" type="checkbox" id="edit-form-submit-once" name="form_submit_once" value class="form-checkbox" />');
-
-    // Check webform no longer has webform.form.submit_once.js.
-    $this->drupalGet('/webform/test_form_submit_once');
-    $this->assertNoRaw('webform.form.submit_once.js');
-
-    // Enable default (global) submit_once on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_submit_once', TRUE)
-      ->save();
-
-    // Check submit_once checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_submit_once/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-submit-once-disabled" aria-describedby="edit-form-submit-once-disabled--description" disabled="disabled" type="checkbox" id="edit-form-submit-once-disabled" name="form_submit_once_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Submit button is disabled immediately after it is clicked for all forms.');
-
-    // Check webform has webform.form.submit_once.js.
-    $this->drupalGet('/webform/test_form_submit_once');
-    $this->assertRaw('webform.form.submit_once.js');
-
-    /**************************************************************************/
-    /* Test webform disable back button (form_disable_back) */
-    /**************************************************************************/
-
-    $webform_form_disable_back = Webform::load('test_form_disable_back');
-
-    // Check webform has webform.form.disable_back.js.
-    $this->drupalGet('/webform/test_form_disable_back');
-    $this->assertRaw('webform.form.disable_back.js');
-
-    // Disable webform specific form_disable_back setting.
-    $webform_form_disable_back->setSetting('form_disable_back', FALSE);
-    $webform_form_disable_back->save();
-
-    // Check disable_back checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_disable_back/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-disable-back" aria-describedby="edit-form-disable-back--description" type="checkbox" id="edit-form-disable-back" name="form_disable_back" value class="form-checkbox" />');
-
-    // Check webform no longer has webform.form.disable_back.js.
-    $this->drupalGet('/webform/test_form_disable_back');
-    $this->assertNoRaw('webform.form.disable_back.js');
-
-    // Enable default (global) disable_back on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_disable_back', TRUE)
-      ->save();
-
-    // Check disable_back checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_disable_back/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-disable-back-disabled" aria-describedby="edit-form-disable-back-disabled--description" disabled="disabled" type="checkbox" id="edit-form-disable-back-disabled" name="form_disable_back_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Back button is disabled for all forms.');
-
-    // Check webform has webform.form.disable_back.js.
-    $this->drupalGet('/webform/test_form_disable_back');
-    $this->assertRaw('webform.form.disable_back.js');
-
-    /**************************************************************************/
-    /* Test webform submit back button (test_form_submit_back) */
-    /**************************************************************************/
-
-    $webform_form_submit_back = Webform::load('test_form_submit_back');
-
-    // Check webform has webform.form.submit_back.js.
-    $this->drupalGet('/webform/test_form_submit_back');
-    $this->assertRaw('webform.form.submit_back.js');
-
-    // Disable YAML specific form_submit_back setting.
-    $webform_form_submit_back->setSetting('form_submit_back', FALSE);
-    $webform_form_submit_back->save();
-
-    // Check submit_back checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_submit_back/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-submit-back" aria-describedby="edit-form-submit-back--description" type="checkbox" id="edit-form-submit-back" name="form_submit_back" value class="form-checkbox" />');
-
-    // Check webform no longer has webform.form.submit_back.js.
-    $this->drupalGet('/webform/test_form_submit_back');
-    $this->assertNoRaw('webform.form.submit_back.js');
-
-    // Enable default (global) submit_back on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_submit_back', TRUE)
-      ->save();
-
-    // Check submit_back checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_submit_back/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-submit-back-disabled" aria-describedby="edit-form-submit-back-disabled--description" disabled="disabled" type="checkbox" id="edit-form-submit-back-disabled" name="form_submit_back_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Browser back button submits the previous page for all forms.');
-
-    // Check webform has webform.form.submit_back.js.
-    $this->drupalGet('/webform/test_form_submit_back');
-    $this->assertRaw('webform.form.submit_back.js');
-
-    // Enable Ajax support.
-    $webform_form_submit_back->setSetting('ajax', TRUE);
-    $webform_form_submit_back->save();
-
-    // Check webform does have webform.form.submit_back.js when
-    // Ajax is enabled.
-    $this->drupalGet('/webform/test_form_submit_back');
-    $this->assertNoRaw('webform.form.submit_back.js');
-
-    /**************************************************************************/
-    /* Test webform (client-side) unsaved (form_unsaved) */
-    /**************************************************************************/
-
-    $webform_form_unsaved = Webform::load('test_form_unsaved');
-
-    // Check webform has .js-webform-unsaved class.
-    $this->drupalGet('/webform/test_form_unsaved');
-    $this->assertCssSelect('form.js-webform-unsaved', t('Form has .js-webform-unsaved class.'));
-
-    // Disable YAML specific webform unsaved setting.
-    $webform_form_unsaved->setSetting('form_unsaved', FALSE);
-    $webform_form_unsaved->save();
-
-    // Check novalidate checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_unsaved/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-unsaved" aria-describedby="edit-form-unsaved--description" type="checkbox" id="edit-form-unsaved" name="form_unsaved" value class="form-checkbox" />');
-
-    // Check webform no longer has .js-webform-unsaved class.
-    $this->drupalGet('/webform/test_form_novalidate');
-    $this->assertNoCssSelect('webform.js-webform-unsaved', t('Webform does not have .js-webform-unsaved class.'));
-
-    // Enable default (global) unsaved on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_unsaved', TRUE)
-      ->save();
-
-    // Check unsaved checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_unsaved/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-unsaved-disabled" aria-describedby="edit-form-unsaved-disabled--description" disabled="disabled" type="checkbox" id="edit-form-unsaved-disabled" name="form_unsaved_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Unsaved warning is enabled for all forms.');
-
-    // Check unsaved attribute added to webform.
-    $this->drupalGet('/webform/test_form_unsaved');
-    $this->assertCssSelect('form.js-webform-unsaved', t('Form has .js-webform-unsaved class.'));
-
-    /**************************************************************************/
-    /* Test webform disable autocomplete (form_disable_autocomplete) */
-    /**************************************************************************/
-
-    // Check webform has autocomplete=off attribute.
-    $this->drupalGet('/webform/test_form_disable_autocomplete');
-    $this->assertCssSelect('form[autocomplete="off"]', t('Form has autocomplete=off attribute.'));
-
-    /**************************************************************************/
-    /* Test webform (client-side) novalidate (form_novalidate) */
-    /**************************************************************************/
-
-    $webform_form_novalidate = Webform::load('test_form_novalidate');
-
-    // Check webform has novalidate attribute.
-    $this->drupalGet('/webform/test_form_novalidate');
-    $this->assertCssSelect('form[novalidate="novalidate"]', t('Form has the proper novalidate attribute.'));
-
-    // Disable YAML specific webform client-side validation setting.
-    $webform_form_novalidate->setSetting('form_novalidate', FALSE);
-    $webform_form_novalidate->save();
-
-    // Check novalidate checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_novalidate/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-novalidate" aria-describedby="edit-form-novalidate--description" type="checkbox" id="edit-form-novalidate" name="form_novalidate" value class="form-checkbox" />');
-    $this->assertRaw('If checked, the <a href="http://www.w3schools.com/tags/att_form_novalidate.asp">novalidate</a> attribute, which disables client-side validation, will be added to this form.');
-
-    // Check webform no longer has novalidate attribute.
-    $this->drupalGet('/webform/test_form_novalidate');
-    $this->assertNoCssSelect('form[novalidate="novalidate"]', t('Webform have client-side validation enabled.'));
-
-    // Enable default (global) disable client-side validation on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_novalidate', TRUE)
-      ->save();
-
-    // Check novalidate checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_novalidate/settings/form');
-    $this->assertNoRaw('If checked, the <a href="http://www.w3schools.com/tags/att_form_novalidate.asp">novalidate</a> attribute, which disables client-side validation, will be added to this form.');
-    $this->assertRaw('<input data-drupal-selector="edit-form-novalidate-disabled" aria-describedby="edit-form-novalidate-disabled--description" disabled="disabled" type="checkbox" id="edit-form-novalidate-disabled" name="form_novalidate_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Client-side validation is disabled for all forms.');
-
-    // Check novalidate attribute added to webform.
-    $this->drupalGet('/webform/test_form_novalidate');
-    $this->assertCssSelect('form[novalidate="novalidate"]', t('Form has the proper novalidate attribute.'));
-
-    /**************************************************************************/
-    /* Test required indicator (form_required) */
-    /**************************************************************************/
-
-    $webform_form_required = Webform::load('test_form_required');
-
-    // Check webform has required indicator.
-    $this->drupalGet('/webform/test_form_required');
-    $this->assertRaw('Indicates required field');
-
-    // Disable required indicator.
-    $webform_form_required->setSetting('form_required', FALSE);
-    $webform_form_required->save();
-
-    // Check webform does not have have required indicator.
-    $this->drupalGet('/webform/test_form_required');
-    $this->assertNoRaw('Indicates required field');
-
-    // Enable default (global) required indicator on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_required', TRUE)
-      ->set('settings.default_form_required_label', 'Custom required field')
-      ->save();
-
-    // Check required checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_required/settings/form');
-    $this->assertRaw('Required indicator is displayed on all forms.');
-    $this->assertRaw('<input data-drupal-selector="edit-form-required-disabled" aria-describedby="edit-form-required-disabled--description" disabled="disabled" type="checkbox" id="edit-form-required-disabled" name="form_required_disabled" value="1" checked="checked" class="form-checkbox" />');
-
-    // Check global required indicator added to webform.
-    $this->drupalGet('/webform/test_form_required');
-    $this->assertRaw('Custom required field');
-
-    $elements = $webform_form_required->getElementsDecoded();
-    unset($elements['textfield']['#required']);
-    $webform_form_required->setElements($elements);
-    $webform_form_required->save();
-
-    // Check required indicator not added to webform with no required elements.
-    $this->drupalGet('/webform/test_form_required');
-    $this->assertNoRaw('Custom required field');
-
-    /**************************************************************************/
-    /* Test autofocus (form_autofocus) */
-    /**************************************************************************/
-
-    // Check webform has autofocus class.
-    $this->drupalGet('/webform/test_form_autofocus');
-    $this->assertCssSelect('.js-webform-autofocus');
-
-    /**************************************************************************/
-    /* Test webform details toggle (form_details_toggle) */
-    /**************************************************************************/
-
-    $webform_form_details_toggle = Webform::load('test_form_details_toggle');
-
-    // Check webform has .webform-details-toggle class.
-    $this->drupalGet('/webform/test_form_details_toggle');
-    $this->assertCssSelect('form.webform-details-toggle', t('Form has the .webform-details-toggle class.'));
-
-    // Check details toggle checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_details_toggle/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-details-toggle-disabled" aria-describedby="edit-form-details-toggle-disabled--description" disabled="disabled" type="checkbox" id="edit-form-details-toggle-disabled" name="form_details_toggle_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Expand/collapse all (details) link is automatically added to all forms.');
-
-    // Disable default (global) details toggle on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_details_toggle', FALSE)
-      ->save();
-
-    // Check .webform-details-toggle class still added to webform.
-    $this->drupalGet('/webform/test_form_details_toggle');
-    $this->assertCssSelect('form.webform-details-toggle', t('Form has the .webform-details-toggle class.'));
-
-    // Check details toggle checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_details_toggle/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-details-toggle" aria-describedby="edit-form-details-toggle--description" type="checkbox" id="edit-form-details-toggle" name="form_details_toggle" value checked="checked" class="form-checkbox" />');
-    $this->assertRaw('If checked, an expand/collapse all (details) link will be added to this webform when there are two or more details elements available on the webform.');
-
-    // Disable YAML specific webform details toggle setting.
-    $webform_form_details_toggle->setSetting('form_details_toggle', FALSE);
-    $webform_form_details_toggle->save();
-
-    // Check webform does not hav .webform-details-toggle class.
-    $this->drupalGet('/webform/test_form_details_toggle');
-    $this->assertNoCssSelect('webform.webform-details-toggle', t('Webform does not have the .webform-details-toggle class.'));
-
-    /**************************************************************************/
-    /* Test webform disable inline form errors (test_form_disable_inline_errors) */
-    /**************************************************************************/
-
-    $webform_form_inline_errors = Webform::load('test_form_disable_inline_errors');
-
-    // Check that error message is displayed at the top of the page.
-    $this->postSubmission($webform_form_inline_errors);
-    $this->assertPattern('#<h2 class="visually-hidden">Error message</h2>\s+textfield field is required.#m');
-
-    // Enable the inline form errors module.
-    \Drupal::service('module_installer')->install(['inline_form_errors']);
-
-    // Check that error message is still displayed at the top of the page.
-    $this->postSubmission($webform_form_inline_errors);
-    $this->assertPattern('#<h2 class="visually-hidden">Error message</h2>\s+textfield field is required.#m');
-
-    // Allow inline error message for this form.
-    $webform_form_inline_errors->setSetting('form_disable_inline_errors', FALSE);
-    $webform_form_inline_errors->save();
-
-    // Check that error message is not displayed at the top of the page.
-    $this->postSubmission($webform_form_inline_errors);
-    $this->assertNoPattern('#<h2 class="visually-hidden">Error message</h2>\s+textfield field is required.#m');
-
-    // Check that error message is displayed inline.
-    $this->assertRaw('1 error has been found: <div class="item-list--comma-list item-list"><ul class="item-list__comma-list"><li><a href="#edit-textfield">textfield</a></li></ul>');
-    $this->assertRaw('<strong>textfield field is required.</strong>');
-
-    // Check disable inline errors checkbox is enabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_disable_inline_errors/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-disable-inline-errors" aria-describedby="edit-form-disable-inline-errors--description" type="checkbox" id="edit-form-disable-inline-errors" name="form_disable_inline_errors" value class="form-checkbox" />');
-    $this->assertRaw('If checked, <a href="https://www.drupal.org/docs/8/core/modules/inline-form-errors/inline-form-errors-module-overview">inline form errors</a> will be disabled for this form.');
-
-    // Enable default (global) disable inline form errors on all webforms.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_form_disable_inline_errors', TRUE)
-      ->save();
-
-    // Check novalidate checkbox is disabled.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_disable_inline_errors/settings/form');
-    $this->assertRaw('<input data-drupal-selector="edit-form-disable-inline-errors-disabled" aria-describedby="edit-form-disable-inline-errors-disabled--description" disabled="disabled" type="checkbox" id="edit-form-disable-inline-errors-disabled" name="form_disable_inline_errors_disabled" value="1" checked="checked" class="form-checkbox" />');
-    $this->assertRaw('Inline form errors is disabled for all forms.');
-
-    // Check that error message is not displayed inline.
-    $this->assertNoRaw('1 error has been found: <div class="item-list--comma-list item-list"><ul class="item-list__comma-list"><li><a href="#edit-textfield">textfield</a></li></ul>');
-    $this->assertNoRaw('<strong>textfield field is required.</strong>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfidentialTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfidentialTest.php
deleted file mode 100644
index 5cd560d8..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfidentialTest.php
+++ /dev/null
@@ -1,85 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\user\Entity\Role;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for confidential webform submissions.
- *
- * @group Webform
- */
-class WebformSettingsConfidentialTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_confidential'];
-
-  /**
-   * Tests webform confidential setting.
-   */
-  public function testConfidential() {
-    /** @var \Drupal\user\RoleInterface $anonymous_role */
-    $anonymous_role = Role::load('anonymous');
-    $anonymous_role->grantPermission('view own webform submission')
-      ->grantPermission('edit own webform submission')
-      ->grantPermission('delete own webform submission')
-      ->save();
-
-    /**************************************************************************/
-
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_form_confidential');
-
-    // Check logout warning when accessing webform.
-    $this->drupalGet('/webform/test_form_confidential');
-    $this->assertNoFieldById('edit-name');
-    $this->assertRaw('This form is confidential.');
-
-    // Check no logout warning when testing webform.
-    $this->drupalGet('/webform/test_form_confidential/test');
-    $this->assertFieldById('edit-name');
-    $this->assertNoRaw('This form is confidential.');
-
-    // Check that test submission does not record the IP address.
-    $sid = $this->postSubmissionTest($webform, ['name' => 'John']);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getRemoteAddr(), t('(unknown)'));
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    // Check anonymous access to webform.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_form_confidential');
-    $this->assertFieldById('edit-name');
-    $this->assertNoRaw('This form is confidential.');
-
-    // Check that submission does not track the requests IP address.
-    $sid = $this->postSubmission($webform, ['name' => 'John']);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getRemoteAddr(), t('(unknown)'));
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    // Check that previous submissions are visible.
-    $this->drupalGet('/webform/test_form_confidential');
-    $this->assertRaw('View your previous submission');
-
-    // Check that anonymous submission is not converted to authenticated.
-    // @see \Drupal\webform\WebformSubmissionStorage::userLogin
-    $this->drupalLogin($this->rootUser);
-    $webform_submission = $this->loadSubmission($sid);
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    // Check that previous submissions $_SESSION was unset after login/logout.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_form_confidential');
-    $this->assertNoRaw('View your previous submission.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfirmationTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfirmationTest.php
deleted file mode 100644
index 3ccda188..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsConfirmationTest.php
+++ /dev/null
@@ -1,189 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form confirmation.
- *
- * @group Webform
- */
-class WebformSettingsConfirmationTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_confirmation_message',
-    'test_confirmation_modal',
-    'test_confirmation_inline',
-    'test_confirmation_page',
-    'test_confirmation_page_custom',
-    'test_confirmation_url',
-    'test_confirmation_url_message',
-    'test_confirmation_none',
-  ];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Set page.front (aka <front>) to /node instead of /user/login.
-    \Drupal::configFactory()->getEditable('system.site')->set('page.front', '/node')->save();
-  }
-
-  /**
-   * Tests webform submission form confirmation.
-   */
-  public function testConfirmation() {
-    // Login the admin user.
-    $this->drupalLogin($this->rootUser);
-
-    /* Test confirmation message (confirmation_type=message) */
-
-    $webform_confirmation_message = Webform::load('test_confirmation_message');
-
-    // Check confirmation message.
-    $this->postSubmission($webform_confirmation_message);
-    $this->assertRaw('This is a <b>custom</b> confirmation message.');
-    $this->assertNoRaw('New submission added to <em class="placeholder">Test: Confirmation: Message</em>');
-    $this->assertUrl('webform/test_confirmation_message');
-
-    // Check confirmation page with custom query parameters.
-    $sid = $this->postSubmission($webform_confirmation_message, [], NULL, ['query' => ['custom' => 'param']]);
-    $this->assertUrl('webform/test_confirmation_message', ['query' => ['custom' => 'param']]);
-
-    // Sleep for 1 second to ensure the submission's timestamp indicates
-    // it was update.
-    sleep(1);
-
-    // Check default message when submission is updated.
-    $this->drupalPostForm("/admin/structure/webform/manage/test_confirmation_message/submission/$sid/edit", [], t('Save'));
-    $this->assertNoRaw('This is a <b>custom</b> confirmation message. (test: )');
-    $this->assertRaw('Submission updated in <em class="placeholder">Test: Confirmation: Message</em>.');
-
-    // Set display confirmation when submission is updated.
-    $webform_confirmation_message->setSetting('confirmation_update', TRUE)
-      ->save();
-
-    // Check default message when submission is updated.
-    $this->drupalPostForm("/admin/structure/webform/manage/test_confirmation_message/submission/$sid/edit", [], t('Save'));
-    $this->assertRaw('This is a <b>custom</b> confirmation message. (test: )');
-    $this->assertNoRaw('Submission updated in <em class="placeholder">Test: Confirmation: Message</em>.');
-
-    /* Test confirmation message (confirmation_type=modal) */
-
-    $webform_confirmation_modal = Webform::load('test_confirmation_modal');
-
-    // Check confirmation modal.
-    $this->postSubmission($webform_confirmation_modal, ['test' => 'value']);
-    $this->assertRaw('This is a <b>custom</b> confirmation modal.');
-    $this->assertRaw('<div class="js-hide webform-confirmation-modal js-webform-confirmation-modal webform-message js-webform-message js-form-wrapper form-wrapper" data-drupal-selector="edit-webform-confirmation-modal" id="edit-webform-confirmation-modal">');
-    $this->assertRaw('<div role="contentinfo" aria-label="Status message" class="messages messages--status">');
-    $this->assertRaw('<b class="webform-confirmation-modal--title">Custom confirmation modal</b><br />');
-    $this->assertRaw('<div class="webform-confirmation-modal--content">This is a <b>custom</b> confirmation modal. (test: value)</div>');
-    $this->assertUrl('webform/test_confirmation_modal');
-
-    /* Test confirmation inline (confirmation_type=inline) */
-
-    $webform_confirmation_inline = Webform::load('test_confirmation_inline');
-
-    // Check confirmation inline.
-    $this->drupalPostForm('webform/test_confirmation_inline', [], t('Submit'));
-    $this->assertRaw('<a href="' . $webform_confirmation_inline->toUrl('canonical', ['absolute' => TRUE])->toString() . '" rel="prev" title="Back to form">Back to form</a>');
-    $this->assertUrl('webform/test_confirmation_inline');
-
-    // Check confirmation inline with custom query parameters.
-    $this->drupalPostForm('webform/test_confirmation_inline', [], t('Submit'), ['query' => ['custom' => 'param']]);
-    $this->assertRaw('<a href="' . $webform_confirmation_inline->toUrl('canonical', ['absolute' => TRUE, 'query' => ['custom' => 'param']])->toString() . '" rel="prev" title="Back to form">Back to form</a>');
-    $this->assertUrl('webform/test_confirmation_inline', ['query' => ['custom' => 'param']]);
-
-    /* Test confirmation page (confirmation_type=page) */
-
-    $webform_confirmation_page = Webform::load('test_confirmation_page');
-
-    // Check confirmation page.
-    $sid = $this->postSubmission($webform_confirmation_page);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertRaw('This is a custom confirmation page.');
-    $this->assertRaw('<a href="' . $webform_confirmation_page->toUrl('canonical', ['absolute' => TRUE])->toString() . '" rel="prev" title="Back to form">Back to form</a>');
-    $this->assertUrl('webform/test_confirmation_page/confirmation', ['query' => ['token' => $webform_submission->getToken()]]);
-
-    // Check that the confirmation page's 'Back to form 'link includes custom
-    // query parameters.
-    $this->drupalGet('/webform/test_confirmation_page/confirmation', ['query' => ['custom' => 'param']]);
-
-    // Check confirmation page with custom query parameters.
-    $sid = $this->postSubmission($webform_confirmation_page, [], NULL, ['query' => ['custom' => 'param']]);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertUrl('webform/test_confirmation_page/confirmation', ['query' => ['custom' => 'param', 'token' => $webform_submission->getToken()]]);
-
-    // Check confirmation page with token excluded.
-    $webform_confirmation_page->setSetting('confirmation_exclude_token', TRUE);
-    $webform_confirmation_page->save();
-    $this->postSubmission($webform_confirmation_page, [], NULL, ['query' => ['custom' => 'param']]);
-    $this->assertUrl('webform/test_confirmation_page/confirmation', ['query' => ['custom' => 'param']]);
-
-    // Check confirmation page with token and query excluded.
-    $webform_confirmation_page->setSetting('confirmation_exclude_query', TRUE);
-    $webform_confirmation_page->save();
-    $this->postSubmission($webform_confirmation_page);
-    $this->assertUrl('webform/test_confirmation_page/confirmation');
-
-    // TODO: (TESTING) Figure out why the inline confirmation link is not including the query string parameters.
-    // $this->assertRaw('<a href="' . $webform_confirmation_page->toUrl()->toString() . '?custom=param">Back to form</a>');.
-
-    /* Test confirmation page custom (confirmation_type=page) */
-
-    $webform_confirmation_page_custom = Webform::load('test_confirmation_page_custom');
-
-    // Check custom confirmation page.
-    $this->postSubmission($webform_confirmation_page_custom);
-    $this->assertRaw('<h1 class="page-title">Custom confirmation page title</h1>');
-    $this->assertRaw('<div style="border: 10px solid red; padding: 1em;" class="webform-confirmation">');
-    $this->assertRaw('<a href="' . $webform_confirmation_page_custom->toUrl()->setAbsolute()->toString() . '" rel="prev" title="Custom back to link" class="button">Custom back to link</a>');
-
-    // Check back link is hidden.
-    $webform_confirmation_page_custom->setSetting('confirmation_back', FALSE);
-    $webform_confirmation_page_custom->save();
-    $this->postSubmission($webform_confirmation_page_custom);
-    $this->assertNoRaw('<a href="' . $webform_confirmation_page_custom->toUrl()->toString() . '" rel="prev" title="Custom back to link" class="button">Custom back to link</a>');
-
-    /* Test confirmation URL (confirmation_type=url) */
-
-    $webform_confirmation_url = Webform::load('test_confirmation_url');
-
-    // Check confirmation URL.
-    $this->postSubmission($webform_confirmation_url);
-    $this->assertNoRaw('<h2 class="visually-hidden">Status message</h2>');
-    $this->assertUrl('<front>');
-
-    /* Test confirmation URL (confirmation_type=url_message) */
-
-    $webform_confirmation_url_message = Webform::load('test_confirmation_url_message');
-
-    // Check confirmation URL.
-    $this->postSubmission($webform_confirmation_url_message);
-    $this->assertRaw('<h2 class="visually-hidden">Status message</h2>');
-    $this->assertRaw('This is a custom confirmation message.');
-    $this->assertUrl('<front>');
-
-    /* Test confirmation none (confirmation_type=none) */
-
-    $this->drupalLogout();
-    $webform_confirmation_url_message = Webform::load('test_confirmation_none');
-
-    // Check no confirmation message.
-    $this->postSubmission($webform_confirmation_url_message);
-    $this->assertNoRaw('<h2 class="visually-hidden">Status message</h2>');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsDraftTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsDraftTest.php
deleted file mode 100644
index 707e22de..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsDraftTest.php
+++ /dev/null
@@ -1,363 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form draft.
- *
- * @group Webform
- */
-class WebformSettingsDraftTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_draft_authenticated', 'test_form_draft_anonymous', 'test_form_draft_multiple', 'test_form_preview'];
-
-  /**
-   * Test webform submission form draft.
-   */
-  public function testDraft() {
-    $normal_user = $this->drupalCreateUser(['view own webform submission']);
-
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /**************************************************************************/
-    // Draft access.
-    /**************************************************************************/
-
-    // Check access denied to review drafts when disabled.
-    $this->drupalGet('/webform/contact/drafts');
-    $this->assertResponse(403);
-
-    // Check access denied to review authenticated drafts.
-    $this->drupalGet('/webform/test_form_draft_authenticated/drafts');
-    $this->assertResponse(403);
-
-    // Check access allowed to review anonymous drafts.
-    $this->drupalGet('/webform/test_form_draft_anonymous/drafts');
-    $this->assertResponse(200);
-
-    /**************************************************************************/
-    // Autosave for anonymous draft to authenticated draft.
-    /**************************************************************************/
-
-    $webform_ids = [
-      'test_form_draft_authenticated' => 'Test: Webform: Draft authenticated',
-      'test_form_draft_anonymous' => 'Test: Webform: Draft anonymous',
-    ];
-    foreach ($webform_ids as $webform_id => $webform_title) {
-      $is_authenticated = ($webform_id == 'test_form_draft_authenticated') ? TRUE : FALSE;
-
-      // Login draft account.
-      ($is_authenticated) ? $this->drupalLogin($normal_user) : $this->drupalLogout();
-
-      $webform = Webform::load($webform_id);
-
-      // Save a draft.
-      $sid = $this->postSubmission($webform, ['name' => 'John Smith'], t('Save Draft'));
-      /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
-      $webform_submission = WebformSubmission::load($sid);
-
-      // Check saved draft message.
-      $this->assertRaw('Your draft has been saved');
-      $this->assertNoRaw('You have an existing draft');
-
-      // Check access allowed to review drafts.
-      $this->drupalGet("webform/$webform_id/drafts");
-      $this->assertResponse(200);
-
-      // Check loaded draft message.
-      $this->drupalGet("webform/$webform_id");
-      $this->assertNoRaw('Your draft has been saved');
-      $this->assertRaw('You have an existing draft');
-      $this->assertFieldByName('name', 'John Smith');
-
-      // Check no draft message when webform is closed.
-      $webform->setStatus(FALSE)->save();
-      $this->drupalGet("webform/$webform_id");
-      $this->assertNoRaw('You have an existing draft');
-      $this->assertNoFieldByName('name', 'John Smith');
-      $this->assertRaw('Sorry… This form is closed to new submissions.');
-      $webform->setStatus(TRUE)->save();
-
-      // Login admin account.
-      $this->drupalLogin($admin_submission_user);
-
-      // Check submission.
-      $this->drupalGet("admin/structure/webform/manage/$webform_id/submission/$sid");
-      $this->assertRaw('<div><b>Is draft:</b> Yes</div>');
-
-      // Login draft account.
-      ($is_authenticated) ? $this->drupalLogin($normal_user) : $this->drupalLogout();
-
-      // Check update draft and bypass validation.
-      $this->drupalPostForm("webform/$webform_id", [
-        'name' => '',
-        'comment' => 'Hello World!',
-      ], t('Save Draft'));
-      $this->assertRaw('Your draft has been saved');
-      $this->assertNoRaw('You have an existing draft');
-      $this->assertFieldByName('name', '');
-      $this->assertFieldByName('comment', 'Hello World!');
-
-      // Check preview of draft with valid data.
-      $this->drupalPostForm("webform/$webform_id", [
-        'name' => 'John Smith',
-        'comment' => 'Hello World!',
-      ], t('Preview'));
-      $this->assertNoRaw('Your draft has been saved');
-      $this->assertNoRaw('You have an existing draft');
-      $this->assertNoFieldByName('name', '');
-      $this->assertNoFieldByName('comment', 'Hello World!');
-      $this->assertRaw('<label>Name</label>');
-      $this->assertRaw('<label>Comment</label>');
-      $this->assertRaw('Please review your submission. Your submission is not complete until you press the "Submit" button!');
-
-      // Check submit.
-      $this->drupalPostForm("webform/$webform_id", [], t('Submit'));
-      $this->assertRaw("New submission added to $webform_title.");
-
-      // Check submission not in draft.
-      $this->drupalGet("webform/$webform_id");
-      $this->assertNoRaw('Your draft has been saved');
-      $this->assertNoRaw('You have an existing draft');
-      $this->assertFieldByName('name', '');
-      $this->assertFieldByName('comment', '');
-    }
-
-    /**************************************************************************/
-    // Convert anonymous draft to authenticated draft.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_form_draft_anonymous');
-
-    // Save a draft.
-    $sid = $this->postSubmission($webform, ['name' => 'John Smith'], t('Save Draft'));
-    $this->assertRaw('Your draft has been saved');
-
-    // Check that submission is owned anonymous.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    // Check loaded draft message.
-    $this->drupalGet('/webform/test_form_draft_anonymous');
-    $this->assertRaw('You have an existing draft');
-    $this->assertFieldByName('name', 'John Smith');
-
-    // Login the normal user.
-    $this->drupalLogin($normal_user);
-
-    // Check that submission is now owned by the normal user.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getOwnerId(), $normal_user->id());
-
-    // Check that drafts are not convert when form_convert_anonymous = FALSE.
-    $this->drupalLogout();
-    $webform->setSetting('form_convert_anonymous', FALSE)->save();
-
-    $sid = $this->postSubmission($webform, ['name' => 'John Smith']);
-    $this->drupalLogin($normal_user);
-
-    // Check that submission is still owned by anonymous user.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    // Logout.
-    $this->drupalLogout();
-
-    // Change 'test_form_draft_anonymous' to be confidential.
-    $webform->setSetting('form_confidential', TRUE);
-
-    // Save a draft.
-    $sid = $this->postSubmission($webform, ['name' => 'John Smith'], t('Save Draft'));
-    $this->assertRaw('Your draft has been saved');
-
-    // Check that submission is owned anonymous.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    // Check loaded draft message does NOT appear on confidential submissions.
-    $this->drupalGet('/webform/test_form_draft_anonymous');
-    $this->assertRaw('You have an existing draft');
-
-    // Login the normal user.
-    $this->drupalLogin($normal_user);
-
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    // Check that submission is NOT owned by the normal user.
-    $this->assertNotEqual($webform_submission->getOwnerId(), $normal_user->id());
-
-    // Check that submission is still anonymous.
-    $this->assertEqual($webform_submission->getOwnerId(), 0);
-
-    /**************************************************************************/
-    // Export.
-    /**************************************************************************/
-
-    $this->drupalLogin($admin_submission_user);
-
-    // Check export with draft settings.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_draft_authenticated/results/download');
-    $this->assertFieldByName('state', 'all');
-
-    // Check export without draft settings.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_preview/results/download');
-    $this->assertNoFieldByName('state', 'all');
-
-    // Check autosave on submit with validation errors.
-    $this->drupalPostForm('webform/test_form_draft_authenticated', [], t('Submit'));
-    $this->assertRaw('Name field is required.');
-    $this->drupalGet('/webform/test_form_draft_authenticated');
-    $this->assertRaw('You have an existing draft');
-
-    // Check autosave on preview.
-    $this->drupalPostForm('webform/test_form_draft_authenticated', ['name' => 'John Smith'], t('Preview'));
-    $this->assertRaw('Please review your submission.');
-    $this->drupalGet('/webform/test_form_draft_authenticated');
-    $this->assertRaw('You have an existing draft');
-    $this->assertRaw('<label>Name</label>' . PHP_EOL . '        John Smith');
-
-    /**************************************************************************/
-    // Test webform draft multiple.
-    /**************************************************************************/
-
-    $config = \Drupal::configFactory()->getEditable('webform.settings');
-    $this->drupalLogin($normal_user);
-
-    $webform = Webform::load('test_form_draft_multiple');
-
-    // Save first draft.
-    $sid_1 = $this->postSubmission($webform, ['name' => 'John Smith'], t('Save Draft'));
-    $this->assertRaw('Submission saved. You may return to this form later and it will restore the current values.');
-    $webform_submission_1 = WebformSubmission::load($sid_1);
-
-    // Check restore first draft.
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have saved drafts.');
-    $this->assertRaw('You have a pending draft for this webform.');
-    $this->assertFieldByName('name', '');
-
-    // Check customizing default draft previous message.
-    $default_draft_pending_single_message = $config->get('settings.default_draft_pending_single_message');
-    $config->set('settings.default_draft_pending_single_message', '{default_draft_pending_single_message}')->save();
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have a pending draft for this webform.');
-    $this->assertRaw('{default_draft_pending_single_message}');
-    $config->set('settings.default_draft_pending_single_message', $default_draft_pending_single_message)->save();
-
-    // Check customizing draft previous message.
-    $webform->setSetting('draft_pending_single_message', '{draft_pending_single_message}')->save();
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have a pending draft for this webform.');
-    $this->assertRaw('{draft_pending_single_message}');
-    $webform->setSetting('draft_pending_single_message', '')->save();
-
-    // Check load pending draft using token.
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->clickLink('Load your pending draft');
-    $this->assertFieldByName('name', 'John Smith');
-    $this->drupalGet('/webform/test_form_draft_multiple', ['query' => ['token' => $webform_submission_1->getToken()]]);
-    $this->assertFieldByName('name', 'John Smith');
-
-    // Check user drafts.
-    $this->drupalGet('/webform/test_form_draft_multiple/drafts');
-    $this->assertRaw('token=' . $webform_submission_1->getToken());
-
-    // Save second draft.
-    $sid_2 = $this->postSubmission($webform, ['name' => 'John Smith'], t('Save Draft'));
-    $webform_submission_2 = WebformSubmission::load($sid_2);
-    $this->assertRaw('Submission saved. You may return to this form later and it will restore the current values.');
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have a pending draft for this webform.');
-    $this->assertRaw('You have pending drafts for this webform. <a href="' . base_path() . 'webform/test_form_draft_multiple/drafts">View your pending drafts</a>.');
-
-    // Check customizing default drafts previous message.
-    $default_draft_pending_multiple_message = $config->get('settings.default_draft_pending_multiple_message');
-    $config->set('settings.default_draft_pending_multiple_message', '{default_draft_pending_multiple_message}')->save();
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have pending drafts for this webform.');
-    $this->assertRaw('{default_draft_pending_multiple_message}');
-    $config->set('settings.default_draft_pending_multiple_message', $default_draft_pending_multiple_message)->save();
-
-    // Check customizing drafts previous message.
-    $webform->setSetting('draft_pending_multiple_message', '{draft_pending_multiple_message}')->save();
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have pending drafts for this webform.');
-    $this->assertRaw('{draft_pending_multiple_message}');
-    $webform->setSetting('draft_pending_multiple_message', '')->save();
-
-    // Check user drafts now has second draft.
-    $this->drupalGet('/webform/test_form_draft_multiple/drafts');
-    $this->assertRaw('token=' . $webform_submission_1->getToken());
-    $this->assertRaw('token=' . $webform_submission_2->getToken());
-
-    // Check that anonymous user can't load drafts.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_form_draft_multiple', ['query' => ['token' => $webform_submission_1->getToken()]]);
-    $this->assertFieldByName('name', '');
-
-    // Save third anonymous draft.
-    $this->postSubmission($webform, ['name' => 'Jane Doe'], t('Save Draft'));
-    $this->assertRaw('Submission saved. You may return to this form later and it will restore the current values.');
-
-    // Check restore third anonymous draft.
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->assertNoRaw('You have saved drafts.');
-    $this->assertRaw('You have a pending draft for this webform.');
-    $this->assertFieldByName('name', '');
-
-    $this->drupalGet('/webform/test_form_draft_multiple');
-    $this->clickLink('Load your pending draft');
-    $this->assertFieldByName('name', 'Jane Doe');
-
-    /**************************************************************************/
-    // Test webform submission form reset draft.
-    /**************************************************************************/
-
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_form_draft_authenticated');
-
-    // Check saved draft.
-    $sid = $this->postSubmission($webform, ['name' => 'John Smith'], t('Save Draft'));
-    $this->assertNotNull($sid);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($sid, $webform_submission->id());
-
-    // Check reset delete's the draft.
-    $this->postSubmission($webform, [], t('Reset'));
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertNull($webform_submission);
-
-    // Check submission with comment.
-    $sid = $this->postSubmission($webform, ['name' => 'John Smith', 'comment' => 'This is a comment'], t('Save Draft'));
-    $this->postSubmission($webform);
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual('This is a comment', $webform_submission->getElementData('comment'));
-
-    // Check submitted draft is not delete on reset.
-    $this->drupalPostForm('/admin/structure/webform/manage/test_form_draft_authenticated/submission/' . $sid . '/edit', ['comment' => 'This is ignored'], t('Reset'));
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($sid, $webform_submission->id());
-    $this->assertEqual('This is a comment', $webform_submission->getElementData('comment'));
-    $this->assertNotEqual('This is ignored', $webform_submission->getElementData('comment'));
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsFormTitleTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsFormTitleTest.php
deleted file mode 100644
index 51c41e2b..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsFormTitleTest.php
+++ /dev/null
@@ -1,89 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\Core\Serialization\Yaml;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform form title.
- *
- * @group Webform
- */
-class WebformSettingsFormTitleTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'node'];
-
-  /**
-   * Tests form title.
-   */
-  public function testTitle() {
-    $node = $this->drupalCreateNode(['title' => 'test_node']);
-
-    $webform = Webform::create([
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => 'test_webform',
-      'title' => 'test_webform',
-      'elements' => Yaml::encode([
-        'test' => ['#markup' => 'test'],
-      ]),
-      'settings' => [
-        'form_prepopulate_source_entity' => TRUE,
-      ],
-    ]);
-    $webform->save();
-
-    $options = ['query' => ['source_entity_type' => 'node', 'source_entity_id' => $node->id()]];
-
-    /**************************************************************************/
-
-    // Check webform title.
-    $this->drupalGet('/webform/test_webform');
-    $this->assertRaw('<title>test_webform | Drupal</title>');
-
-    // Check (default) both title.
-    $this->drupalGet('/webform/test_webform', $options);
-    $this->assertRaw('<title>test_node: test_webform | Drupal</title>');
-
-    // Check webform and source entity title.
-    $webform
-      ->setSetting('form_title', WebformInterface::TITLE_WEBFORM_SOURCE_ENTITY)
-      ->save();
-    $this->drupalGet('/webform/test_webform', $options);
-    $this->assertRaw('<title>test_webform: test_node | Drupal</title>');
-
-    // Check source entity title.
-    $webform
-      ->setSetting('form_title', WebformInterface::TITLE_SOURCE_ENTITY)
-      ->save();
-    $this->drupalGet('/webform/test_webform', $options);
-    $this->assertRaw('<title>test_node | Drupal</title>');
-
-    // Check webform title.
-    $webform
-      ->setSetting('form_title', WebformInterface::TITLE_WEBFORM)
-      ->save();
-    $this->drupalGet('/webform/test_webform', $options);
-    $this->assertRaw('<title>test_webform | Drupal</title>');
-
-    // Check duplicate titles.
-    $webform
-      ->setSetting('form_title', WebformInterface::TITLE_SOURCE_ENTITY_WEBFORM)
-      ->save();
-    $this->drupalGet('/webform/test_webform', $options);
-    $this->assertRaw('<title>test_node: test_webform | Drupal</title>');
-    $webform->set('title', 'test_node')
-      ->save();
-    $this->drupalGet('/webform/test_webform', $options);
-    $this->assertRaw('<title>test_node | Drupal</title>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitUniqueTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitUniqueTest.php
deleted file mode 100644
index 19bb3e94..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitUniqueTest.php
+++ /dev/null
@@ -1,164 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform submission form unique limit.
- *
- * @group Webform
- */
-class WebformSettingsLimitUniqueTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_node'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_limit_total_unique', 'test_form_limit_user_unique'];
-
-  /**
-   * Tests webform submission form unique limit.
-   */
-  public function testLimitUnique() {
-    $admin_user = $this->drupalCreateUser(['administer webform']);
-
-    $webform_total_unique = Webform::load('test_form_limit_total_unique');
-    $webform_user_unique = Webform::load('test_form_limit_user_unique');
-
-    /**************************************************************************/
-    // Total unique. (webform)
-    /**************************************************************************/
-
-    // Check that name is empty for new submission for admin user.
-    $this->drupalLogin($admin_user);
-    $this->drupalGet('/webform/test_form_limit_total_unique');
-    $this->assertFieldByName('name', '');
-
-    // Check that 'Test' form is available and display a message.
-    $this->drupalGet('/webform/test_form_limit_total_unique/test');
-    $this->assertRaw(' The below webform has been prepopulated with custom/random test data. When submitted, this information <strong>will still be saved</strong> and/or <strong>sent to designated recipients</strong>');
-
-    // Check that name is empty for new submission for root user.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/webform/test_form_limit_total_unique');
-    $this->assertFieldByName('name', '');
-
-    // Check that name is set to 'John Smith' and 'Submission information' is
-    // visible for admin user.
-    $this->drupalLogin($admin_user);
-    $sid = $this->postSubmission($webform_total_unique, ['name' => 'John Smith']);
-    $this->drupalGet('/webform/test_form_limit_total_unique');
-    $this->assertFieldByName('name', 'John Smith');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    // Check that name is set to 'John Smith' and 'Submission information' is
-    // visible for root user.
-    $this->drupalGet('/webform/test_form_limit_total_unique');
-    $this->assertFieldByName('name', 'John Smith');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    // Check that 'Test' form also has name set to 'John Smith'
-    // and does not display a message.
-    $this->drupalGet('/webform/test_form_limit_total_unique/test');
-    $this->assertFieldByName('name', 'John Smith');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-    $this->assertNoRaw(' The below webform has been prepopulated with custom/random test data. When submitted, this information <strong>will still be saved</strong> and/or <strong>sent to designated recipients</strong>');
-
-    /**************************************************************************/
-    // Total unique. (node)
-    /**************************************************************************/
-
-    // Create webform node.
-    $node_total_unique = $this->createWebformNode('test_form_limit_total_unique');
-
-    $this->drupalLogin($admin_user);
-
-    // Check that name is empty for new submission for admin user.
-    $this->drupalGet('/node/' . $node_total_unique->id());
-    $this->assertFieldByName('name', '');
-
-    // Check that name is set to 'John Lennon' and 'Submission information' is
-    // visible for admin user.
-    $sid = $this->postNodeSubmission($node_total_unique, ['name' => 'John Lennon']);
-    $this->drupalGet('/webform/test_form_limit_total_unique');
-    $this->assertFieldByName('name', 'John Lennon');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    // Check that 'Test' form also has name set to 'John Lennon'
-    // and does not display a message.
-    $this->drupalGet('/node/' . $node_total_unique->id() . '/webform/test');
-    $this->assertFieldByName('name', 'John Lennon');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    // Check that 'Test' form also has name set to 'John Lennon'
-    // and does not display a message for root user.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/node/' . $node_total_unique->id() . '/webform/test');
-    $this->assertFieldByName('name', 'John Lennon');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    /**************************************************************************/
-    // User unique. (webform)
-    /**************************************************************************/
-
-    // Check that name is empty for new submission for admin user.
-    $this->drupalLogin($admin_user);
-    $this->drupalGet('/webform/test_form_limit_user_unique');
-    $this->assertFieldByName('name', '');
-
-    // Check that 'Test' form is available and display a message.
-    $this->drupalGet('/webform/test_form_limit_user_unique/test');
-    $this->assertRaw(' The below webform has been prepopulated with custom/random test data. When submitted, this information <strong>will still be saved</strong> and/or <strong>sent to designated recipients</strong>');
-
-    // Check that name is empty for new submission for root user.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/webform/test_form_limit_user_unique');
-    $this->assertFieldByName('name', '');
-
-    // Check that name is set to 'John Smith' and 'Submission information' is
-    // visible for admin user.
-    $this->drupalLogin($admin_user);
-    $sid = $this->postSubmission($webform_user_unique, ['name' => 'John Smith']);
-    $this->drupalGet('/webform/test_form_limit_user_unique');
-    $this->assertFieldByName('name', 'John Smith');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    // Check that 'Test' form also has name set to 'John Smith'
-    // and does not display a message.
-    $this->drupalGet('/webform/test_form_limit_user_unique/test');
-    $this->assertFieldByName('name', 'John Smith');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    /**************************************************************************/
-
-    // Check that name is still empty for new submission for root user.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/webform/test_form_limit_user_unique');
-    $this->assertFieldByName('name', '');
-
-    // Check that name is set to 'John Smith' and 'Submission information' is
-    // visible for root user.
-    $sid = $this->postSubmission($webform_user_unique, ['name' => 'Jane Doe']);
-    $this->drupalGet('/webform/test_form_limit_user_unique');
-    $this->assertFieldByName('name', 'Jane Doe');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-    // Check that 'Test' form also has name set to 'Jane Doe'
-    // and does not display a message.
-    $this->drupalGet('/webform/test_form_limit_user_unique/test');
-    $this->assertFieldByName('name', 'Jane Doe');
-    $this->assertRaw("<div><b>Submission ID:</b> $sid</div>");
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitsTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitsTest.php
deleted file mode 100644
index 585fdcd0..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsLimitsTest.php
+++ /dev/null
@@ -1,195 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\user\Entity\Role;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form limits.
- *
- * @group Webform
- */
-class WebformSettingsLimitsTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'block'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_limit', 'test_form_limit_wait'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Place webform test blocks.
-    $this->placeWebformBlocks('webform_test_block_submission_limit');
-  }
-
-  /**
-   * Tests webform submission form limits.
-   */
-  public function testFormLimits() {
-    $own_submission_user = $this->drupalCreateUser([
-      'view own webform submission',
-      'edit own webform submission',
-      'delete own webform submission',
-      'access webform submission user',
-    ]);
-
-    $webform_limit = Webform::load('test_form_limit');
-
-    /**************************************************************************/
-
-    $this->drupalGet('/webform/test_form_limit');
-
-    // Check webform available.
-    $this->assertFieldByName('op', 'Submit');
-
-    // Check submission limit blocks.
-    $this->assertRaw('0 user submission(s)');
-    $this->assertRaw('1 user limit (every minute)');
-    $this->assertRaw('0 webform submission(s)');
-    $this->assertRaw('4 webform limit (every minute)');
-
-    // Check submission limit tokens.
-    $this->assertRaw('limit:webform: 4');
-    $this->assertRaw('remaining:webform: 4');
-    $this->assertRaw('limit:user: 1');
-    $this->assertRaw('remaining:user: 1');
-
-    $this->drupalLogin($own_submission_user);
-
-    // Check that draft does not count toward limit.
-    $this->postSubmission($webform_limit, [], t('Save Draft'));
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertRaw('A partially-completed form was found. Please complete the remaining portions.');
-    $this->assertNoRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Check submission limit blocks do not count draft.
-    $this->assertRaw('0 user submission(s)');
-    $this->assertRaw('0 webform submission(s)');
-
-    // Check limit reached and webform not available for authenticated user.
-    $sid = $this->postSubmission($webform_limit);
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Check submission limit blocks do count submission.
-    $this->assertRaw('1 user submission(s)');
-    $this->assertRaw('1 webform submission(s)');
-
-    // Check authenticated user can edit own submission.
-    $this->drupalGet("admin/structure/webform/manage/test_form_limit/submission/$sid/edit");
-    $this->assertNoRaw('You are only allowed to have 1 submission for this webform.');
-    $this->assertFieldByName('op', 'Save');
-
-    $this->drupalLogout();
-
-    // Check admin post submission.
-    $this->drupalLogin($this->rootUser);
-    $sid = $this->postSubmission($webform_limit);
-    $this->drupalGet("admin/structure/webform/manage/test_form_limit/submission/$sid/edit");
-    $this->assertFieldByName('op', 'Save');
-    $this->assertNoRaw('No more submissions are permitted.');
-
-    // Check submission limit tokens do count submission.
-    $this->assertRaw('remaining:webform: 2');
-    $this->assertRaw('remaining:user: 0');
-
-    // Check submission limit blocks.
-    $this->assertRaw('1 user submission(s)');
-    $this->assertRaw('2 webform submission(s)');
-
-    $this->drupalLogout();
-
-    // Allow anonymous users to edit own submission.
-    $role = Role::load('anonymous');
-    $role->grantPermission('edit own webform submission');
-    $role->save();
-
-    // Check webform is still available for anonymous users.
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertNoRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Add 1 more submissions as an anonymous user making the total number of
-    // submissions equal to 3.
-    $sid = $this->postSubmission($webform_limit);
-
-    // Check submission limit blocks.
-    $this->assertRaw('1 user submission(s)');
-    $this->assertRaw('3 webform submission(s)');
-
-    // Check limit reached and webform not available for anonymous user.
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Check authenticated user can edit own submission.
-    $this->drupalGet("admin/structure/webform/manage/test_form_limit/submission/$sid/edit");
-    $this->assertNoRaw('You are only allowed to have 1 submission for this webform.');
-    $this->assertFieldByName('op', 'Save');
-
-    // Add 1 more submissions as an root user making the total number of
-    // submissions equal to 4.
-    $this->drupalLogin($this->rootUser);
-    $this->postSubmission($webform_limit);
-    $this->drupalLogout();
-
-    // Check total limit.
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertRaw('Only 4 submissions are allowed.');
-    $this->assertNoRaw('You are only allowed to have 1 submission for this webform.');
-
-    // Check submission limit blocks.
-    $this->assertRaw('0 user submission(s)');
-    $this->assertRaw('4 webform submission(s)');
-
-    // Check admin can still post submissions.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertRaw('Only 4 submissions are allowed.');
-    $this->assertRaw('Only submission administrators are allowed to access this webform and create new submissions.');
-
-    // Check submission limit blocks.
-    $this->assertRaw('2 user submission(s)');
-    $this->assertRaw('4 webform submission(s)');
-
-    // Change submission completed to 1 hour ago.
-    \Drupal::database()->query('UPDATE {webform_submission} SET completed = :completed', [':completed' => strtotime('-1 minute')]);
-
-    // Check submission limit blocks are removed because the submission
-    // intervals have passed.
-    $this->drupalGet('/webform/test_form_limit');
-    $this->assertRaw('0 user submission(s)');
-    $this->assertRaw('0 webform submission(s)');
-
-    /**************************************************************************/
-    // Wait.
-    /**************************************************************************/
-
-    $webform_limit_wait = Webform::load('test_form_limit_wait');
-
-    $this->postSubmission($webform_limit_wait);
-
-    $this->drupalGet('/webform/test_form_limit_wait');
-    $this->assertPattern('/webform_submission:interval:user:wait =&gt; \d+ seconds/');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPathTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsPathTest.php
deleted file mode 100644
index 7176b7a6..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPathTest.php
+++ /dev/null
@@ -1,198 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\Core\Serialization\Yaml;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform path and page.
- *
- * @group Webform
- */
-class WebformSettingsPathTest extends WebformTestBase {
-
-  public static $modules = ['path', 'webform', 'node'];
-
-  /**
-   * Tests YAML page and title.
-   */
-  public function testPaths() {
-    /** @var \Drupal\Core\Path\AliasStorageInterface $alias_storage */
-    $alias_storage = $this->container->get('path.alias_storage');
-
-    $node = $this->drupalCreateNode();
-
-    /**************************************************************************/
-    // With paths.
-    /**************************************************************************/
-
-    $webform = Webform::create([
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => 'test_paths',
-      'title' => 'test_paths',
-      'elements' => Yaml::encode([
-        'test' => ['#markup' => 'test'],
-      ]),
-    ]);
-    $webform->setSetting('draft', WebformInterface::DRAFT_ALL);
-    $webform->save();
-    $webform_path = '/webform/' . $webform->id();
-    $form_path = '/form/' . str_replace('_', '-', $webform->id());
-
-    // Check paths.
-    $this->drupalLogin($this->rootUser);
-
-    // Check that aliases exist.
-    $this->assert(is_array($alias_storage->load(['alias' => $form_path])));
-    $this->assert(is_array($alias_storage->load(['alias' => "$form_path/confirmation"])));
-    $this->assert(is_array($alias_storage->load(['alias' => "$form_path/drafts"])));
-    $this->assert(is_array($alias_storage->load(['alias' => "$form_path/submissions"])));
-
-    // Check default system submit path.
-    $this->drupalGet($webform_path);
-    $this->assertResponse(200, 'Submit system path exists');
-
-    // Check default alias submit path.
-    $this->drupalGet($form_path);
-    $this->assertResponse(200, 'Submit URL alias exists');
-
-    // Check default alias confirm path.
-    $this->drupalGet("$form_path/confirmation");
-    $this->assertResponse(200, 'Confirm URL alias exists');
-
-    // Check default alias drafts path.
-    $this->drupalGet("$form_path/drafts");
-    $this->assertResponse(200, 'Drafts URL alias exists');
-
-    // Check default alias submissions path.
-    $this->drupalGet("$form_path/submissions");
-    $this->assertResponse(200, 'Submissions URL alias exists');
-
-    $this->drupalLogout();
-
-    // Disable paths for the webform.
-    $webform->setSettings(['page' => FALSE])->save();
-
-    // Check that aliases do not exist.
-    $this->assertFalse($alias_storage->load(['alias' => $form_path]));
-    $this->assertFalse($alias_storage->load(['alias' => "$form_path/confirmation"]));
-    $this->assertFalse($alias_storage->load(['alias' => "$form_path/drafts"]));
-    $this->assertFalse($alias_storage->load(['alias' => "$form_path/submissions"]));
-
-    // Check page hidden (i.e. access denied).
-    $this->drupalGet($webform_path);
-    $this->assertResponse(403, 'Submit system path access denied');
-    $this->assertNoRaw('Only webform administrators are allowed to access this page and create new submissions.');
-    $this->drupalGet($form_path);
-    $this->assertResponse(404, 'Submit URL alias does not exist');
-
-    // Check page hidden with source entity.
-    $this->drupalGet($webform_path, ['query' => ['source_entity_type' => 'node', 'source_entity_id' => $node->id()]]);
-    $this->assertResponse(403, 'Submit system path access denied');
-
-    // Check page visible with source entity.
-    $webform->setSettings(['form_prepopulate_source_entity' => TRUE])->save();
-    $this->drupalGet($webform_path, ['query' => ['source_entity_type' => 'node', 'source_entity_id' => $node->id()]]);
-    $this->assertResponse(200, 'Submit system path exists');
-
-    // Check hidden page visible to admin.
-    $this->drupalLogin($this->rootUser);
-    $this->drupalGet($webform_path);
-    $this->assertResponse(200, 'Submit system path access permitted');
-    $this->assertRaw('Only webform administrators are allowed to access this page and create new submissions.');
-    $this->drupalLogout();
-
-    // Check custom submit and confirm path.
-    $webform->setSettings(['page' => TRUE, 'page_submit_path' => 'page_submit_path', 'page_confirm_path' => 'page_confirm_path'])->save();
-    $this->drupalGet('/page_submit_path');
-    $this->assertResponse(200, 'Submit system path access permitted');
-    $this->drupalGet('/page_confirm_path');
-    $this->assertResponse(200, 'Submit URL alias access permitted');
-
-    // Check custom base path.
-    $webform->setSettings(['page_submit_path' => '', 'page_confirm_path' => ''])->save();
-    $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm('admin/structure/webform/config', ['page_settings[default_page_base_path]' => 'base/path'], t('Save configuration'));
-    $this->drupalGet('/base/path/' . str_replace('_', '-', $webform->id()));
-    $this->assertResponse(200, 'Submit URL alias with custom base path exists');
-    $this->drupalGet('/base/path/' . str_replace('_', '-', $webform->id()) . '/confirmation');
-    $this->assertResponse(200, 'Confirm URL alias with custom base path exists');
-
-    // Check custom base path delete if accessing webform as page is disabled.
-    $webform->setSettings(['page' => FALSE])->save();
-    $this->drupalGet('/base/path/' . str_replace('_', '-', $webform->id()));
-    $this->assertResponse(404, 'Submit URL alias does not exist.');
-    $this->drupalGet('/base/path/' . str_replace('_', '-', $webform->id()) . '/confirmation');
-    $this->assertResponse(404, 'Confirm URL alias does not exist.');
-
-    // Disable automatic generation of paths.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_page_base_path', '')
-      ->save();
-
-    /**************************************************************************/
-    // Without paths.
-    /**************************************************************************/
-
-    $webform = Webform::create([
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => 'test_no_paths',
-      'title' => 'test_no_paths',
-      'elements' => Yaml::encode([
-        'test' => ['#markup' => 'test'],
-      ]),
-    ]);
-    $webform->save();
-    $webform_path = '/webform/' . $webform->id();
-    $form_path = '/form/' . str_replace('_', '-', $webform->id());
-
-    // Check default system submit path.
-    $this->drupalGet($webform_path);
-    $this->assertResponse(200, 'Submit system path exists');
-
-    // Check no default alias submit path.
-    $this->drupalGet($form_path);
-    $this->assertResponse(404, 'Submit URL alias does not exist');
-
-    /**************************************************************************/
-    // Admin theme.
-    /**************************************************************************/
-
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::create([
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => 'test_admin_theme',
-      'title' => 'test_admin_theme',
-      'elements' => Yaml::encode([
-        'test' => ['#markup' => 'test'],
-      ]),
-    ]);
-    $webform->save();
-
-    // Check that admin theme is not applied
-    $this->drupalGet('/webform/test_admin_theme');
-    $this->assertNoRaw('seven');
-
-    // Install Seven and set it as the default admin theme.
-    \Drupal::service('theme_handler')->install(['seven']);
-
-    $edit = [
-      'admin_theme' => 'seven',
-      'use_admin_theme' => TRUE,
-    ];
-    $this->drupalPostForm('admin/appearance', $edit, t('Save configuration'));
-    $webform->setSetting('page_admin_theme', TRUE)->save();
-
-    // Check that admin theme is applied
-    $this->drupalGet('/webform/test_admin_theme');
-    $this->assertRaw('seven');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPrepopulateTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsPrepopulateTest.php
deleted file mode 100644
index edecbe1e..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPrepopulateTest.php
+++ /dev/null
@@ -1,147 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform prepopulate settings.
- *
- * @group Webform
- */
-class WebformSettingsPrepopulateTest extends WebformTestBase {
-
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_prepopulate'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-    $this->placeBlocks();
-  }
-
-  /**
-   * Tests webform setting including confirmation.
-   */
-  public function testPrepopulate() {
-
-    /**************************************************************************/
-    /* Test webform prepopulate (form_prepopulate) */
-    /**************************************************************************/
-
-    $webform_prepopulate = Webform::load('test_form_prepopulate');
-
-    // Check prepopulation of an element.
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['name' => 'John', 'colors' => ['red', 'white']]]);
-    $this->assertFieldByName('name', 'John');
-    $this->assertFieldChecked('edit-colors-red');
-    $this->assertFieldChecked('edit-colors-white');
-    $this->assertNoFieldChecked('edit-colors-blue');
-
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['name' => 'John', 'colors' => 'red']]);
-    $this->assertFieldByName('name', 'John');
-    $this->assertFieldChecked('edit-colors-red');
-    $this->assertNoFieldChecked('edit-colors-white');
-    $this->assertNoFieldChecked('edit-colors-blue');
-
-    // Check disabling prepopulation of an element.
-    $webform_prepopulate->setSetting('form_prepopulate', FALSE);
-    $webform_prepopulate->save();
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['name' => 'John']]);
-    $this->assertFieldByName('name', '');
-
-    /**************************************************************************/
-    /* Test webform prepopulate source entity (form_prepopulate_source_entity) */
-    /**************************************************************************/
-
-    // Check prepopulating source entity.
-    $this->drupalPostForm('webform/test_form_prepopulate', [], t('Submit'), ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']]);
-    $sid = $this->getLastSubmissionId($webform_prepopulate);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertNotNull($webform_submission->getSourceEntity());
-    if ($webform_submission->getSourceEntity()) {
-      $this->assertEqual($webform_submission->getSourceEntity()->getEntityTypeId(), 'webform');
-      $this->assertEqual($webform_submission->getSourceEntity()->id(), 'contact');
-    }
-
-    // Check disabling prepopulation source entity.
-    $webform_prepopulate->setSetting('form_prepopulate_source_entity', FALSE);
-    $webform_prepopulate->save();
-    $this->drupalPostForm('webform/test_form_prepopulate', [], t('Submit'), ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']]);
-    $sid = $this->getLastSubmissionId($webform_prepopulate);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assert(!$webform_submission->getSourceEntity());
-
-    // Set prepopulated source entity required.
-    $webform_prepopulate->setSetting('form_prepopulate_source_entity', TRUE);
-    $webform_prepopulate->setSetting('form_prepopulate_source_entity_required', TRUE);
-    $webform_prepopulate->save();
-
-    // Check required prepopulated source entity displays error when no source
-    // entity is defined.
-    $this->drupalGet('/webform/test_form_prepopulate');
-    $this->assertRaw('This webform is not available. Please contact the site administrator.');
-
-    // Check required prepopulated source entity displays error when invalid
-    // source entity is defined.
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'DOES_NOT_EXIST']]);
-    $this->assertRaw('This webform is not available. Please contact the site administrator.');
-
-    // Check required prepopulated source entity loads when source entity is
-    // valid.
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']]);
-    $this->assertNoRaw('This webform is not available. Please contact the site administrator.');
-
-    // Check that required prepopulated source entity can be updated (edit).
-    $this->drupalLogin($this->rootUser);
-    $sid = $this->postSubmission($webform_prepopulate, [], t('Submit'), ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']]);
-    $this->drupalGet("/admin/structure/webform/manage/test_form_prepopulate/submission/$sid/edit");
-    $this->assertNoRaw('This webform is not available. Please contact the site administrator.');
-    $this->drupalLogout();
-
-    // Set prepopulated source entity type to user.
-    $webform_prepopulate->setSetting('form_prepopulate_source_entity_type', 'user');
-    $webform_prepopulate->save();
-
-    // Check invalid source entity type displays error.
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']]);
-    $this->assertRaw('This webform is not available. Please contact the site administrator.');
-
-    // Set prepopulated source entity type to webform.
-    $webform_prepopulate->setSetting('form_prepopulate_source_entity_type', 'webform');
-    $webform_prepopulate->save();
-
-    // Check invalid source entity type displays error.
-    $this->drupalGet('/webform/test_form_prepopulate', ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']]);
-    $this->assertNoRaw('This webform is not available. Please contact the site administrator.');
-
-    /**************************************************************************/
-    /* Test webform_menu_local_tasks_alter() */
-    /**************************************************************************/
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check query string parameters be be transfered from canonical to test.
-    // @see webform_menu_local_tasks_alter
-    $route_options = ['query' => ['source_entity_type' => 'webform', 'source_entity_id' => 'contact']];
-    $this->drupalGet('webform/test_form_prepopulate', $route_options);
-    $this->assertLinkByHref($webform_prepopulate->toUrl('canonical', $route_options)->toString());
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviewTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviewTest.php
deleted file mode 100644
index afdaf8c4..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviewTest.php
+++ /dev/null
@@ -1,185 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form preview.
- *
- * @group Webform
- */
-class WebformSettingsPreviewTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_preview'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Exclude Progress tracker so that the default progress bar is displayed.
-    // The default progress bar is most likely never going to change.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('libraries.excluded_libraries', ['progress-tracker'])
-      ->save();
-  }
-
-  /**
-   * Tests webform webform submission form preview.
-   */
-  public function testPreview() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform_preview = Webform::load('test_form_preview');
-
-    // Check webform with optional preview.
-    $this->drupalGet('/webform/test_form_preview');
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertFieldByName('op', 'Preview');
-
-    // Check default preview with values.
-    $this->drupalPostForm('webform/test_form_preview', ['name' => 'test', 'email' => 'example@example.com', 'checkbox' => TRUE], t('Preview'));
-
-    $this->assertRaw('<h1 class="page-title">Test: Webform: Preview: Preview</h1>');
-
-    $this->assertRaw('<b>Preview</b></li>');
-
-    $this->assertRaw('Please review your submission. Your submission is not complete until you press the "Submit" button!');
-
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertFieldByName('op', '< Previous');
-
-    $this->assertRaw('<div class="webform-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-preview" id="edit-preview">');
-    $this->assertRaw('<div data-drupal-selector="edit-submission" class="webform-submission-data webform-submission-data--webform-test-form-preview webform-submission-data--view-mode-preview">');
-    $this->assertRaw('<fieldset class="format-attributes-class webform-container webform-container-type-fieldset js-form-item form-item js-form-wrapper form-wrapper" id="test_form_preview--fieldset">');
-    $this->assertRaw('<div class="format-attributes-class webform-element webform-element-type-textfield js-form-item form-item js-form-type-item form-type-item js-form-item-name form-item-name" id="test_form_preview--name">');
-    $this->assertRaw('<label>Name</label>' . PHP_EOL . '        test');
-
-    $this->assertRaw('<section class="format-attributes-class js-form-item form-item js-form-wrapper form-wrapper webform-section" id="test_form_preview--container">');
-    $this->assertRaw('<div class="format-attributes-class webform-element webform-element-type-email js-form-item form-item js-form-type-item form-type-item js-form-item-email form-item-email" id="test_form_preview--email">');
-    $this->assertRaw('<label>Email</label>' . PHP_EOL . '        <a href="mailto:example@example.com">example@example.com</a>');
-
-    $this->assertRaw('<div class="format-attributes-class webform-element webform-element-type-checkbox js-form-item form-item js-form-type-item form-type-item js-form-item-checkbox form-item-checkbox" id="test_form_preview--checkbox">');
-    $this->assertRaw('<section class="format-attributes-class js-form-item form-item js-form-wrapper form-wrapper webform-section" id="test_form_preview--section">');
-    $this->assertRaw('<label>Checkbox</label>' . PHP_EOL . '        Yes');
-    $this->assertRaw('<div class="webform-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-preview" id="edit-preview">');
-
-    // Check default preview without values.
-    $this->drupalPostForm('webform/test_form_preview', [], t('Preview'));
-    $this->assertNoRaw('<label>Name</label>');
-    $this->assertNoRaw('<label>Email</label>');
-    $this->assertNoRaw('<label>Checkbox</label>');
-
-    // Check submission view without values.
-    $sid = $this->postSubmission($webform_preview);
-    $this->drupalGet("admin/structure/webform/manage/test_form_preview/submission/$sid");
-    $this->assertNoRaw('<label>Name</label>');
-    $this->assertNoRaw('<label>Email</label>');
-    $this->assertNoRaw('<label>Checkbox</label>');
-
-    // Check submission table without values.
-    $this->drupalGet("admin/structure/webform/manage/test_form_preview/submission/$sid/table");
-    $this->assertNoRaw('<th>Name</th>');
-    $this->assertNoRaw('<th>Email</th>');
-    $this->assertNoRaw('<th>Checkbox</th>');
-    $this->assertNoRaw('<td>No</td>');
-
-    // Clear default preview message.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_preview_message', '')
-      ->save();
-
-    // Check blank preview message is not displayed.
-    $this->drupalPostForm('webform/test_form_preview', ['name' => 'test', 'email' => 'example@example.com'], t('Preview'));
-    $this->assertNoRaw('Please review your submission. Your submission is not complete until you press the "Submit" button!');
-
-    // Set preview and submission to include empty.
-    $webform_preview->setSetting('preview_exclude_empty', FALSE);
-    $webform_preview->setSetting('preview_exclude_empty_checkbox', FALSE);
-    $webform_preview->setSetting('submission_exclude_empty', FALSE);
-    $webform_preview->setSetting('submission_exclude_empty_checkbox', FALSE);
-    $webform_preview->save();
-
-    // Check empty elements are included in preview.
-    $this->drupalPostForm('webform/test_form_preview', ['name' => '', 'email' => '', 'checkbox' => FALSE], t('Preview'));
-    $this->assertRaw('<label>Name</label>' . PHP_EOL . '        {Empty}');
-    $this->assertRaw('<div class="format-attributes-class webform-element webform-element-type-email js-form-item form-item js-form-type-item form-type-item js-form-item-email form-item-email" id="test_form_preview--email">');
-    $this->assertRaw('<label>Email</label>' . PHP_EOL . '        {Empty}');
-    $this->assertRaw('<label>Checkbox</label>' . PHP_EOL . '        No');
-
-    // Check empty elements are included in submission view.
-    $sid = $this->postSubmission($webform_preview);
-    $this->drupalGet("admin/structure/webform/manage/test_form_preview/submission/$sid");
-    $this->assertRaw('<label>Name</label>');
-    $this->assertRaw('<label>Email</label>');
-    $this->assertRaw('<label>Checkbox</label>');
-
-    // Check submission table without values.
-    $this->drupalGet("admin/structure/webform/manage/test_form_preview/submission/$sid/table");
-    $this->assertRaw('<th>Name</th>');
-    $this->assertRaw('<th>Email</th>');
-    $this->assertRaw('<th>Checkbox</th>');
-    $this->assertRaw('<td>No</td>');
-
-    // Add special character to title.
-    $webform_preview->set('title', "This has special characters. '<>\"&");
-    $webform_preview->save();
-
-    // Check special characters in form page title.
-    $this->drupalGet('/webform/test_form_preview');
-    $this->assertRaw('<title>This has special characters. \'"& | Drupal</title>');
-    $this->assertRaw('<h1 class="page-title">This has special characters. &#039;&lt;&gt;&quot;&amp;</h1>');
-
-    // Check special characters in preview page title.
-    $this->drupalPostForm('webform/test_form_preview', ['name' => 'test'], t('Preview'));
-    $this->assertRaw('<title>This has special characters. \'"&: Preview | Drupal</title>');
-    $this->assertRaw('<h1 class="page-title">This has special characters. &#039;&lt;&gt;&quot;&amp;: Preview</h1>');
-
-    // Check required preview with custom settings.
-    $webform_preview->setSettings([
-      'preview' => DRUPAL_REQUIRED,
-      'preview_label' => '{Label}',
-      'preview_title' => '{Title}',
-      'preview_message' => '{Message}',
-      'preview_attributes' => ['class' => ['preview-custom']],
-      'preview_excluded_elements' => ['email' => 'email'],
-    ]);
-
-    // Add 'webform_actions' element.
-    $webform_preview->setElementProperties('actions', [
-      '#type' => 'webform_actions',
-      '#preview_next__label' => '{Preview}',
-      '#preview_prev__label' => '{Back}',
-    ]);
-    $webform_preview->save();
-
-    // Check custom preview.
-    $this->drupalPostForm('webform/test_form_preview', ['name' => 'test'], t('{Preview}'));
-    $this->assertRaw('<h1 class="page-title">{Title}</h1>');
-    $this->assertRaw('<b>{Label}</b></li>');
-    $this->assertRaw('{Message}');
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertFieldByName('op', '{Back}');
-    $this->assertRaw('<label>Name</label>' . PHP_EOL . '        test');
-    $this->assertNoRaw('<label>Email</label>');
-    $this->assertRaw('<div class="preview-custom webform-preview js-form-wrapper form-wrapper" data-drupal-selector="edit-preview" id="edit-preview">');
-
-    $this->drupalGet('/webform/test_form_preview');
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertFieldByName('op', '{Preview}');
-
-    // Check empty element is excluded from preview.
-    $this->drupalPostForm('webform/test_form_preview', ['name' => 'test', 'email' => ''], t('{Preview}'));
-    $this->assertRaw('<label>Name</label>' . PHP_EOL . '        test');
-    $this->assertNoRaw('<label>Email</label>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviousTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviousTest.php
deleted file mode 100644
index 800ad06c..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsPreviousTest.php
+++ /dev/null
@@ -1,76 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission form previous.
- *
- * @group Webform
- */
-class WebformSettingsPreviousTest extends WebformTestBase {
-
-  /**
-   * Test webform submission form previous submission(s).
-   */
-  public function testPrevious() {
-    global $base_path;
-
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('contact');
-
-    /**************************************************************************/
-    // Previous submission message.
-    /**************************************************************************/
-
-    // Create single submission.
-    $sid_1 = $this->postSubmissionTest($webform);
-
-    // Check default global previous submission message.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw("You have already submitted this webform. <a href=\"{$base_path}webform/contact/submissions/{$sid_1}\">View your previous submission</a>.");
-
-    // Check custom global previous submission message.
-    $this->config('webform.settings')
-      ->set('settings.default_previous_submission_message', '{default_previous_submission}')
-      ->save();
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('{default_previous_submission}');
-
-    // Check custom webform previous submission message.
-    $webform
-      ->setSetting('previous_submission_message', '{custom_previous_submission}')
-      ->save();
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('{custom_previous_submission}');
-
-    /**************************************************************************/
-    // Previous submissions message.
-    /**************************************************************************/
-
-    // Create second submission.
-    $sid_2 = $this->postSubmissionTest($webform);
-
-    // Check default global previous submissions message.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw("You have already submitted this webform. <a href=\"{$base_path}webform/contact/submissions\">View your previous submissions</a>.");
-
-    // Check custom global previous submissions message.
-    $this->config('webform.settings')
-      ->set('settings.default_previous_submissions_message', '{default_previous_submissions}')
-      ->save();
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('{default_previous_submissions}');
-
-    // Check custom webform previous submissions message.
-    $webform
-      ->setSetting('previous_submissions_message', '{custom_previous_submissions}')
-      ->save();
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw('{custom_previous_submissions}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsRemoteAddrTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsRemoteAddrTest.php
deleted file mode 100644
index 81c70d49..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsRemoteAddrTest.php
+++ /dev/null
@@ -1,36 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for disable tracking of remote IP address.
- *
- * @group Webform
- */
-class WebformSettingsRemoteAddrTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_remote_addr'];
-
-  /**
-   * Tests webform disable remote IP address.
-   */
-  public function testRemoteAddr() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('test_form_remote_addr');
-    $sid = $this->postSubmission($webform, ['name' => 'John']);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getRemoteAddr(), t('(unknown)'));
-    $this->assertEqual($webform_submission->getOwnerId(), 1);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsScheduleTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsScheduleTest.php
deleted file mode 100644
index 6f8551f8..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsScheduleTest.php
+++ /dev/null
@@ -1,111 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform submission form settings.
- *
- * @group Webform
- */
-class WebformSettingsScheduleTest extends WebformTestBase {
-
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_form_opening',
-    'test_form_closed',
-  ];
-
-  /**
-   * Tests webform settings opening and closed schedule.
-   */
-  public function testSchedule() {
-
-    /**************************************************************************/
-    /* Test webform opening (status=scheduled) */
-    /**************************************************************************/
-
-    $webform_opening = Webform::load('test_form_opening');
-
-    // Check webform open message is displayed.
-    $this->assertTrue($webform_opening->isClosed());
-    $this->assertTrue($webform_opening->isOpening());
-    $this->drupalGet('/webform/test_form_opening');
-    $this->assertNoRaw('This message should not be displayed)');
-    $this->assertRaw('This form is opening soon.');
-
-    // Check webform closed message is displayed.
-    $webform_opening->setSetting('form_open_message', '');
-    $webform_opening->save();
-    $this->drupalGet('/webform/test_form_opening');
-    $this->assertNoRaw('This form is opening soon.');
-    $this->assertRaw('This form has not yet been opened to submissions.');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check webform is not closed for admins and warning is displayed.
-    $this->drupalGet('/webform/test_form_opening');
-    $this->assertRaw('This message should not be displayed');
-    $this->assertNoRaw('This form has not yet been opened to submissions.');
-    $this->assertRaw('Only submission administrators are allowed to access this webform and create new submissions.');
-
-    // Check webform opening message is not displayed.
-    $webform_opening->set('status', WebformInterface::STATUS_OPEN);
-    $webform_opening->save();
-    $this->assertFalse($webform_opening->isClosed());
-    $this->assertTrue($webform_opening->isOpen());
-    $this->drupalGet('/webform/test_form_opening');
-    $this->assertRaw('This message should not be displayed');
-    $this->assertNoRaw('This form has not yet been opened to submissions.');
-    $this->assertNoRaw('Only submission administrators are allowed to access this webform and create new submissions.');
-
-    /**************************************************************************/
-    /* Test webform closed (status=closed) */
-    /**************************************************************************/
-
-    $webform_closed = Webform::load('test_form_closed');
-
-    $this->drupalLogout();
-
-    // Check webform closed message is displayed.
-    $this->assertTrue($webform_closed->isClosed());
-    $this->assertFalse($webform_closed->isOpen());
-    $this->drupalGet('/webform/test_form_closed');
-    $this->assertNoRaw('This message should not be displayed)');
-    $this->assertRaw('This form is closed.');
-
-    // Check webform closed message is displayed.
-    $webform_closed->setSetting('form_close_message', '');
-    $webform_closed->save();
-    $this->drupalGet('/webform/test_form_closed');
-    $this->assertNoRaw('This form is closed.');
-    $this->assertRaw('Sorry… This form is closed to new submissions.');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check webform is not closed for admins and warning is displayed.
-    $this->drupalGet('/webform/test_form_closed');
-    $this->assertRaw('This message should not be displayed');
-    $this->assertNoRaw('This form is closed.');
-    $this->assertRaw('Only submission administrators are allowed to access this webform and create new submissions.');
-
-    // Check webform closed message is not displayed.
-    $webform_closed->set('status', WebformInterface::STATUS_OPEN);
-    $webform_closed->save();
-    $this->assertFalse($webform_closed->isClosed());
-    $this->assertTrue($webform_closed->isOpen());
-    $this->drupalGet('/webform/test_form_closed');
-    $this->assertRaw('This message should not be displayed');
-    $this->assertNoRaw('This form is closed.');
-    $this->assertNoRaw('Only submission administrators are allowed to access this webform and create new submissions.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsSerialTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsSerialTest.php
deleted file mode 100644
index e07e6ce3..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsSerialTest.php
+++ /dev/null
@@ -1,38 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission serial number.
- *
- * @group Webform
- */
-class WebformSettingsSerialTest extends WebformTestBase {
-
-  /**
-   * Tests webform submission serial number.
-   */
-  public function testSettings() {
-    // Login the admin user.
-    $this->drupalLogin($this->rootUser);
-
-    $webform_contact = Webform::load('contact');
-
-    // Set next serial to 99.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/settings/submissions', ['next_serial' => 99], t('Save'));
-
-    // Check next serial is 99.
-    $sid = $this->postSubmissionTest($webform_contact);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->serial(), 99);
-
-    // Check that next serial is set to max serial.
-    $this->drupalPostForm('admin/structure/webform/manage/contact/settings/submissions', ['next_serial' => 1], t('Save'));
-    $this->assertRaw('The next submission number was increased to 100 to make it higher than existing submissions.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Settings/WebformSettingsStatusTest.php b/modules/contrib/webform/src/Tests/Settings/WebformSettingsStatusTest.php
deleted file mode 100644
index c5a6f964..00000000
--- a/modules/contrib/webform/src/Tests/Settings/WebformSettingsStatusTest.php
+++ /dev/null
@@ -1,47 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Settings;
-
-use Drupal\webform\Tests\WebformTestBase;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform default status.
- *
- * @group Webform
- */
-class WebformSettingsStatusTest extends WebformTestBase {
-
-  /**
-   * Tests default status.
-   */
-  public function testStatus() {
-    $this->drupalLogin($this->rootUser);
-
-    // Check add form status = open.
-    $this->drupalGet('/admin/structure/webform/add');
-    $this->assertFieldChecked('edit-status-open');
-    $this->assertNoFieldChecked('edit-status-closed');
-
-    // Check duplicate form status = open.
-    $this->drupalGet('/admin/structure/webform/manage/contact/duplicate');
-    $this->assertFieldChecked('edit-status-open');
-    $this->assertNoFieldChecked('edit-status-closed');
-
-    // Set default status to closed.
-    $this->config('webform.settings')
-      ->set('settings.default_status', WebformInterface::STATUS_CLOSED)
-      ->save();
-
-    // Check add form status = closed.
-    $this->drupalGet('/admin/structure/webform/add');
-    $this->assertNoFieldChecked('edit-status-open');
-    $this->assertFieldChecked('edit-status-closed');
-
-    // Check duplicate form status = closed.
-    $this->drupalGet('/admin/structure/webform/manage/contact/duplicate');
-    $this->assertNoFieldChecked('edit-status-open');
-    $this->assertFieldChecked('edit-status-closed');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/States/WebformStatesHiddenTest.php b/modules/contrib/webform/src/Tests/States/WebformStatesHiddenTest.php
deleted file mode 100644
index 7c8d758c..00000000
--- a/modules/contrib/webform/src/Tests/States/WebformStatesHiddenTest.php
+++ /dev/null
@@ -1,72 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\States;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform states hidden.
- *
- * @group Webform
- */
-class WebformStatesHiddenTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_states_server_hidden'];
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'file', 'webform'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filters.
-    $this->createFilters();
-  }
-
-  /**
-   * Tests states hidden..
-   */
-  public function testFormStatesHidden() {
-    $this->drupalGet('webform/test_states_server_hidden');
-
-    // Text field.
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-dependent-textfield form-item-dependent-textfield">');
-
-    // Text field multiple.
-    $this->assertRaw('<div class="js-form-wrapper js-webform-states-hidden" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}"><div id="dependent_textfield_multiple_table">');
-
-    // Checkbox.
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-checkbox form-type-checkbox js-form-item-dependent-checkbox form-item-dependent-checkbox">');
-
-    // Radios.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-dependent-radios" class="js-webform-states-hidden radios--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-radios webform-type-radios js-form-item form-item js-form-wrapper form-wrapper" id="edit-dependent-radios--wrapper" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">');
-
-    // Select other.
-    $this->assertRaw('<fieldset data-drupal-selector="edit-dependent-select-other" class="js-webform-select-other webform-select-other js-webform-states-hidden js-form-item webform-select-other--wrapper fieldgroup form-composite webform-composite-visible-title js-webform-type-webform-select-other webform-type-webform-select-other form-item js-form-wrapper form-wrapper" id="edit-dependent-select-other" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">');
-
-    // Managed file.
-    $this->assertRaw('<div class="js-form-wrapper js-webform-states-hidden" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">');
-
-    // Address composite states wrapper.
-    $this->assertRaw('<div class="js-form-wrapper js-webform-states-hidden" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}"><fieldset data-drupal-selector="edit-dependent-address" class="webform-address--wrapper fieldgroup form-composite webform-composite-hidden-title js-webform-type-webform-address webform-type-webform-address js-form-item form-item js-form-wrapper form-wrapper" id="edit-dependent-address--wrapper">');
-
-    // Table select sort states wrapper.
-    $this->assertRaw('<div class="js-form-wrapper js-webform-states-hidden" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}"><table class="webform-tableselect-sort responsive-enabled webform-tableselect js-webform-tableselect js-tableselect-sort tableselect-sort" data-drupal-selector="edit-dependent-tableselect-sort" id="edit-dependent-tableselect-sort" data-striping="1">');
-
-    // Details.
-    $this->assertRaw('<details data-webform-states-no-clear data-webform-key="dependent_details" class="js-webform-states-hidden js-form-wrapper form-wrapper" data-drupal-selector="edit-dependent-details" id="edit-dependent-details" data-drupal-states="{&quot;visible&quot;:{&quot;.webform-submission-test-states-server-hidden-add-form :input[name=\u0022trigger_checkbox\u0022]&quot;:{&quot;checked&quot;:true}}}">    <summary role="button" aria-controls="edit-dependent-details" aria-expanded="false" aria-pressed="false">dependent_details</summary><div class="details-wrapper">');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/States/WebformStatesPreviewTest.php b/modules/contrib/webform/src/Tests/States/WebformStatesPreviewTest.php
deleted file mode 100644
index b0c69904..00000000
--- a/modules/contrib/webform/src/Tests/States/WebformStatesPreviewTest.php
+++ /dev/null
@@ -1,95 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\States;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform states preview.
- *
- * @group Webform
- */
-class WebformStatesPreviewTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_states_server_preview',
-    'test_states_server_save',
-    'test_states_server_clear',
-  ];
-
-  /**
-   * Tests visible conditions (#states) validator for elements .
-   */
-  public function testStatesValidatorElementVisible() {
-    $webform_preview = Webform::load('test_states_server_preview');
-
-    // Check trigger unchecked and elements are conditionally hidden.
-    $this->postSubmission($webform_preview, [], t('Preview'));
-    $this->assertRaw('trigger_checkbox');
-    $this->assertNoRaw('dependent_checkbox');
-    $this->assertNoRaw('dependent_markup');
-    $this->assertNoRaw('dependent_message');
-    $this->assertNoRaw('dependent_fieldset');
-    $this->assertNoRaw('nested_textfield');
-
-    // Check trigger checked and elements are conditionally visible.
-    $this->postSubmission($webform_preview, ['trigger_checkbox' => TRUE], t('Preview'));
-    $this->assertRaw('trigger_checkbox');
-    $this->assertRaw('dependent_checkbox');
-    $this->assertRaw('dependent_markup');
-    $this->assertRaw('dependent_message');
-    $this->assertRaw('dependent_fieldset');
-    $this->assertRaw('nested_textfield');
-
-    $webform_save = Webform::load('test_states_server_save');
-
-    // Check trigger unchecked and saved.
-    $this->postSubmission($webform_save, ['trigger_checkbox' => FALSE], t('Submit'));
-    $this->assertRaw("trigger_checkbox: 0
-dependent_hidden: ''
-dependent_checkbox: ''
-dependent_value: ''
-dependent_textfield: ''
-dependent_textfield_multiple: {  }
-dependent_details_textfield: ''");
-
-    // Check trigger checked and saved.
-    $this->postSubmission($webform_save, ['trigger_checkbox' => TRUE], t('Submit'));
-    $this->assertRaw("trigger_checkbox: 1
-dependent_hidden: '{dependent_hidden}'
-dependent_checkbox: 0
-dependent_value: '{value}'
-dependent_textfield: '{dependent_textfield}'
-dependent_textfield_multiple:
-  - '{dependent_textfield}'
-dependent_details_textfield: '{dependent_details_textfield}'");
-
-    $webform_clear = Webform::load('test_states_server_clear');
-
-    // Check trigger unchecked and not cleared.
-    $this->postSubmission($webform_clear, ['trigger_checkbox' => FALSE], t('Submit'));
-    $this->assertRaw("trigger_checkbox: 0
-dependent_hidden: '{dependent_hidden}'
-dependent_checkbox: 1
-dependent_radios: One
-dependent_value: '{value}'
-dependent_textfield: '{dependent_textfield}'
-dependent_textfield_multiple:
-  - '{dependent_textfield}'
-dependent_webform_name:
-  - title: ''
-    first: John
-    middle: ''
-    last: Smith
-    suffix: ''
-    degree: ''
-dependent_details_textfield: '{dependent_details_textfield}'");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/States/WebformStatesServerTest.php b/modules/contrib/webform/src/Tests/States/WebformStatesServerTest.php
deleted file mode 100644
index cc6d263c..00000000
--- a/modules/contrib/webform/src/Tests/States/WebformStatesServerTest.php
+++ /dev/null
@@ -1,510 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\States;
-
-use Drupal\Component\Utility\Crypt;
-use Drupal\webform\Element\WebformOtherBase;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform submission conditions (#states) validator.
- *
- * @group Webform
- */
-class WebformStatesServerTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_states_crosspage',
-    'test_states_server_custom',
-    'test_states_server_comp',
-    'test_states_server_nested',
-    'test_states_server_multiple',
-    'test_states_server_containers',
-    'test_states_server_required',
-  ];
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'webform'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filters.
-    $this->createFilters();
-
-    $this->drupalLogin($this->rootUser);
-  }
-
-  /**
-   * Tests webform submission conditions (#states) validator required.
-   */
-  public function testFormStatesValidatorRequired() {
-
-    /**************************************************************************/
-    // required.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_server_required');
-
-    // Check no #states required errors.
-    $this->postSubmission($webform);
-    $this->assertRaw('New submission added to Test: Form API #states server-side required validation.');
-
-    /**************************************************************************/
-    // multiple_triggers.
-    /**************************************************************************/
-
-    // Check required multiple dependents 'AND' and 'OR' operator.
-    $edit = [
-      'trigger_checkbox' => TRUE,
-      'trigger_textfield' => '{value}',
-      'trigger_select' => 'option',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('dependent_textfield_required_and field is required.');
-    $this->assertRaw('dependent_textfield_required_or field is required.');
-    $this->assertNoRaw('dependent_textfield_required_xor field is required.');
-
-    /**************************************************************************/
-    // multiple_dependents.
-    /**************************************************************************/
-
-    // Check required multiple dependents 'OR' operator.
-    $edit = [
-      'trigger_checkbox' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('dependent_textfield_required_and field is required.');
-    $this->assertRaw('dependent_textfield_required_or field is required.');
-
-    // Check required multiple dependents 'XOR' operator.
-    $edit = [
-      'trigger_checkbox' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('dependent_textfield_required_xor field is required.');
-
-    $edit = [
-      'trigger_checkbox' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('dependent_textfield_required_xor field is required.');
-
-    /**************************************************************************/
-    // required_hidden_trigger.
-    /**************************************************************************/
-
-    $edit = [
-      'required_hidden_trigger' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('required_hidden_dependent_required field is required.');
-
-    /**************************************************************************/
-    // minlength_hidden_trigger.
-    /**************************************************************************/
-
-    $edit = [
-      'minlength_hidden_trigger' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('<em class="placeholder">minlength_hidden_dependent</em> cannot be less than <em class="placeholder">5</em> characters');
-
-    $edit = [
-      'minlength_hidden_trigger' => TRUE,
-      'minlength_hidden_dependent' => 'X',
-    ];
-    $this->postSubmission($webform, $edit);
-    // $this->assertRaw('<em class="placeholder">minlength_hidden_dependent</em> cannot be less than <em class="placeholder">5</em> characters');
-
-    /**************************************************************************/
-    // checkboxes_trigger.
-    /**************************************************************************/
-
-    // Check required checkboxes.
-    $edit = [
-      'checkboxes_trigger[one]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('checkboxes_dependent_required field is required.');
-
-    /**************************************************************************/
-    // checkboxes_other_trigger.
-    /**************************************************************************/
-
-    // Check required checkboxes other checkbox.
-    $edit = [
-      'checkboxes_other_trigger[checkboxes][one]' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('checkboxes_other_dependent_required field is required.');
-
-    // Check required checkboxes other text field.
-    $edit = [
-      'checkboxes_other_trigger[checkboxes][_other_]' => TRUE,
-      'checkboxes_other_trigger[other]' => 'filled',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('checkboxes_other_dependent_required field is required.');
-
-    /**************************************************************************/
-    // text_format_trigger.
-    /**************************************************************************/
-
-    // Check required text_format.
-    $edit = [
-      'text_format_trigger[format]' => 'full_html',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('text_format_dependent_required field is required.');
-
-    /**************************************************************************/
-    // select_other_trigger.
-    /**************************************************************************/
-
-    // Check required webform_select_other select #options.
-    $edit = [
-      'select_other_trigger[select]' => 'one',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('select_other_dependent_required field is required.');
-
-    // Check required webform_select_other other textfield.
-    $edit = [
-      'select_other_trigger[select]' => WebformOtherBase::OTHER_OPTION,
-      'select_other_trigger[other]' => '{value}',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('select_other_dependent_required field is required.');
-
-    /**************************************************************************/
-    // select_other_multiple_trigger.
-    /**************************************************************************/
-
-    // Check required webform_select_other_multiple select #options.
-    $edit = [
-      'select_other_multiple_trigger[select][]' => 'one',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('select_other_multiple_dependent_required field is required.');
-
-    /**************************************************************************/
-    // select_values_trigger.
-    /**************************************************************************/
-
-    // Check required select_values_trigger select option 'one'.
-    $edit = [
-      'select_values_trigger' => 'one',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('select_values_trigger_dependent_required field is required.');
-
-    // Check required select_values_trigger select option 'two'.
-    $edit = [
-      'select_values_trigger' => 'two',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('select_values_trigger_dependent_required field is required.');
-
-    /**************************************************************************/
-    // email_confirm_trigger.
-    /**************************************************************************/
-
-    // Check required webform_email_confirm.
-    $edit = [
-      'email_confirm_trigger[mail_1]' => 'example@example.com',
-      'email_confirm_trigger[mail_2]' => 'example@example.com',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('email_confirm_dependent_required field is required.');
-
-    /**************************************************************************/
-    // likert_trigger.
-    /**************************************************************************/
-
-    // Check required webform_likert.
-    $edit = [
-      'likert_trigger[q1]' => 'a1',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('likert_dependent_required field is required.');
-
-    /**************************************************************************/
-    // datelist_trigger.
-    /**************************************************************************/
-
-    // Check required datelist.
-    $edit = [
-      'datelist_trigger[year]' => date('Y'),
-      'datelist_trigger[month]' => 1,
-      'datelist_trigger[day]' => 1,
-      'datelist_trigger[hour]' => 1,
-      'datelist_trigger[minute]' => 1,
-      'datelist_trigger[second]' => 1,
-      'datelist_trigger[ampm]' => 'am',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('datelist_dependent_required field is required.');
-
-    /**************************************************************************/
-    // datetime_trigger.
-    /**************************************************************************/
-
-    // Check required datetime.
-    $edit = [
-      'datetime_trigger[date]' => date('2001-01-01'),
-      'datetime_trigger[time]' => date('12:12:12'),
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('datetime_dependent_required field is required.');
-
-    /**************************************************************************/
-    // currency_trigger.
-    /**************************************************************************/
-
-    // Check required currency input mask.
-    $edit = [
-      'currency_trigger' => TRUE,
-      'currency_dependent_required' => '$ 0.00',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('currency_dependent_required field is required.');
-
-    /**************************************************************************/
-    // address_trigger.
-    /**************************************************************************/
-
-    // Check required address.
-    $edit = [
-      'address_trigger[address]' => '{value}',
-      'address_trigger[address_2]' => '{value}',
-      'address_trigger[city]' => '{value}',
-      'address_trigger[state_province]' => 'Alabama',
-      'address_trigger[postal_code]' => '11111',
-      'address_trigger[country]' => 'Afghanistan',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('address_dependent_required field is required.');
-
-    /**************************************************************************/
-    // composite_required.
-    /**************************************************************************/
-
-    // Check required composite.
-    $edit = [
-      'composite_required_trigger' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('composite_required_dependent field is required.');
-
-    // Check required composite subelements.
-    $edit = [
-      'composite_sub_elements_required_trigger' => 'a',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('address_a field is required.');
-    $this->assertRaw('city_a field is required.');
-    $this->assertRaw('state_province_a field is required.');
-    $this->assertRaw('postal_code_a field is required.');
-    $this->assertRaw('country_a field is required.');
-    $this->assertNoRaw('address_b field is required.');
-    $this->assertNoRaw('city_b field is required.');
-    $this->assertNoRaw('state_province_b field is required.');
-    $this->assertNoRaw('postal_code_b field is required.');
-    $this->assertNoRaw('country_b field is required.');
-
-    $edit = [
-      'composite_sub_elements_required_trigger' => 'b',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('address_a field is required.');
-    $this->assertNoRaw('city_a field is required.');
-    $this->assertNoRaw('state_province_a field is required.');
-    $this->assertNoRaw('postal_code_a field is required.');
-    $this->assertNoRaw('country_a field is required.');
-    $this->assertRaw('address_b field is required.');
-    $this->assertRaw('city_b field is required.');
-    $this->assertRaw('state_province_b field is required.');
-    $this->assertRaw('postal_code_b field is required.');
-    $this->assertRaw('country_b field is required.');
-
-    /**************************************************************************/
-    // custom.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_server_custom');
-
-    // Check no #states required errors.
-    $this->postSubmission($webform);
-    $this->assertRaw('New submission added to Test: Form API #states custom pattern, less, and greater condition validation');
-
-    $edit = [
-      'trigger_pattern' => 'abc',
-      'trigger_not_pattern' => 'ABC',
-      'trigger_less' => 1,
-      'trigger_greater' => 11,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('New submission added to Test: Form API #states custom pattern, less, and greater condition validation');
-    $this->assertRaw('dependent_pattern field is required.');
-    $this->assertRaw('dependent_not_pattern field is required.');
-    $this->assertRaw('dependent_less field is required.');
-    $this->assertRaw('dependent_greater field is required.');
-
-    /**************************************************************************/
-    // multiple element.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_server_multiple');
-
-    $edit = [
-      'trigger_required' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-
-    // Check multiple error.
-    $this->assertRaw('textfield_multiple field is required.');
-
-    /**************************************************************************/
-    // composite element.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_server_comp');
-
-    $edit = [
-      'webform_name_trigger' => TRUE,
-      'webform_name_multiple_trigger' => TRUE,
-      'webform_name_multiple_header_trigger' => TRUE,
-      'webform_name_nested_trigger' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-
-    // Check basic composite.
-    $this->assertRaw('First field is required.');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-name-first" type="text" id="edit-webform-name-first" name="webform_name[first]" value="" size="60" maxlength="255" class="form-text error" aria-invalid="true" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-comp-add-form :input[name=\u0022webform_name_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-
-    // Check multiple composite with custom error.
-    $this->assertRaw("Custom error message for &#039;last&#039; element.");
-    $this->assertRaw('<input data-drupal-selector="edit-webform-name-multiple-items-0-item-last" type="text" id="edit-webform-name-multiple-items-0-item-last" name="webform_name_multiple[items][0][_item_][last]" value="" size="60" maxlength="255" class="form-text error" aria-invalid="true" data-drupal-states="{&quot;required&quot;:{&quot;:input[name=\u0022webform_name_multiple_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-
-    // Check multiple table composite.
-    $this->assertRaw('Last field is required.');
-    $this->assertRaw('<input data-drupal-selector="edit-webform-name-multiple-header-items-0-last" type="text" id="edit-webform-name-multiple-header-items-0-last" name="webform_name_multiple_header[items][0][last]" value="" size="60" maxlength="255" class="form-text error" aria-invalid="true" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-comp-add-form :input[name=\u0022webform_name_multiple_header_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-
-    // Check single nested composite.
-    $this->assertRaw('webform_name_nested_first field is required.');
-    $this->assertRaw('webform_name_nested_last field is required.');
-    $this->assertRaw(' <input data-drupal-selector="edit-webform-name-nested-last" type="text" id="edit-webform-name-nested-last" name="webform_name_nested[last]" value="" size="60" maxlength="255" class="form-text error" aria-invalid="true" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-comp-add-form :input[name=\u0022webform_name_nested_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-
-    /**************************************************************************/
-    // nested containers.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_server_containers');
-
-    // Check sub elements.
-    $this->drupalGet('/webform/test_states_server_containers');
-    $this->assertRaw('<input data-drupal-selector="edit-visible-textfield" type="text" id="edit-visible-textfield" name="visible_textfield" value="" size="60" maxlength="255" class="form-text" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-    $this->assertRaw('<input data-drupal-selector="edit-visible-custom-textfield" type="text" id="edit-visible-custom-textfield" name="visible_custom_textfield" value="" size="60" maxlength="255" class="form-text" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_trigger\u0022]&quot;:{&quot;checked&quot;:true},&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_textfield\u0022]&quot;:{&quot;filled&quot;:true}}}" />');
-    $this->assertRaw('<input data-drupal-selector="edit-visible-slide-textfield" type="text" id="edit-visible-slide-textfield" name="visible_slide_textfield" value="" size="60" maxlength="255" class="form-text" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-    $this->assertRaw('<input data-drupal-selector="edit-visible-slide-custom-textfield" type="text" id="edit-visible-slide-custom-textfield" name="visible_slide_custom_textfield" value="" size="60" maxlength="255" class="form-text" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_trigger\u0022]&quot;:{&quot;checked&quot;:true},&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_slide_textfield\u0022]&quot;:{&quot;filled&quot;:true}}}" />');
-    $this->assertRaw('<input data-drupal-selector="edit-visible-composite-items-0-textfield" type="text" id="edit-visible-composite-items-0-textfield" name="visible_composite[items][0][textfield]" value="" size="60" maxlength="255" class="form-text" data-drupal-states="{&quot;required&quot;:{&quot;.webform-submission-test-states-server-containers-add-form :input[name=\u0022visible_trigger\u0022]&quot;:{&quot;checked&quot;:true}}}" />');
-
-    // Check nested element is required.
-    $edit = [
-      'visible_trigger' => TRUE,
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('visible_textfield field is required.');
-    $this->assertNoRaw('visible_custom_textfield field is required.');
-    $this->assertRaw('visible_slide_textfield field is required.');
-    $this->assertNoRaw('visible_slide_custom_textfield field is required.');
-    $this->assertRaw('textfield field is required.');
-    $this->assertRaw('select_other field is required.');
-
-    // Check nested element is not required.
-    $edit = [];
-    $this->postSubmission($webform, $edit);
-    $this->assertNoRaw('visible_textfield field is required.');
-    $this->assertNoRaw('visible_custom_textfield field is required.');
-    $this->assertNoRaw('visible_slide_textfield field is required.');
-    $this->assertNoRaw('visible_slide_custom_textfield field is required.');
-    $this->assertNoRaw('textfield field is required.');
-    $this->assertNoRaw('select_other field is required.');
-
-    // Check custom states element validation.
-    $edit = [
-      'visible_trigger' => TRUE,
-      'visible_textfield' => '{value}',
-      'visible_slide_textfield' => '{value}',
-    ];
-    $this->postSubmission($webform, $edit);
-    $this->assertRaw('visible_custom_textfield field is required.');
-    $this->assertRaw('visible_slide_custom_textfield field is required.');
-
-    /**************************************************************************/
-    // nested conditions.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_server_nested');
-
-    // Check a and b sets target required page 1.
-    $edit = ['a' => TRUE, 'b' => TRUE, 'c' => FALSE];
-    $this->drupalPostForm('webform/test_states_server_nested', $edit, t('Next Page >'));
-    $this->assertRaw('page_1_target: [a and b] or c = required field is required.');
-
-    // Check c sets target required page 1.
-    $edit = ['a' => FALSE, 'b' => TRUE, 'c' => TRUE];
-    $this->drupalPostForm('webform/test_states_server_nested', $edit, t('Next Page >'));
-    $this->assertRaw('page_1_target: [a and b] or c = required field is required.');
-
-    // Check none sets target not required page 1.
-    $edit = ['a' => FALSE, 'b' => FALSE, 'c' => FALSE];
-    $this->drupalPostForm('webform/test_states_server_nested', $edit, t('Next Page >'));
-    $this->assertNoRaw('page_1_target: [a and b] or c = required field is required.');
-
-    // Check none sets target not required page 2.
-    $this->assertRaw('<label for="edit-page-2-target">page_2_target: [a and b] or c = required</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-page-2-target" type="text" id="edit-page-2-target" name="page_2_target" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check a and b sets target required page 2.
-    $edit = ['a' => TRUE, 'b' => TRUE, 'c' => FALSE, 'page_1_target' => '{value}'];
-    $this->drupalPostForm('webform/test_states_server_nested', $edit, t('Next Page >'));
-    $this->assertNoRaw('<input data-drupal-selector="edit-page-2-target" type="text" id="edit-page-2-target" name="page_2_target" value="" size="60" maxlength="255" class="form-text" />');
-    $this->assertRaw('<label for="edit-page-2-target" class="js-form-required form-required">page_2_target: [a and b] or c = required</label>');
-    $this->assertRaw('<input data-drupal-selector="edit-page-2-target" type="text" id="edit-page-2-target" name="page_2_target" value="" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-
-    /**************************************************************************/
-    // test_states_crosspage.
-    /**************************************************************************/
-
-    $webform = Webform::load('test_states_crosspage');
-
-    $trigger_1_name = 'webform_states_' . Crypt::hashBase64('.webform-submission-test-states-crosspage-add-form :input[name="trigger_1"]');
-    $trigger_2_name = 'webform_states_' . Crypt::hashBase64('.webform-submission-test-states-crosspage-add-form :input[name="trigger_2"]');
-
-    // Check cross page states attribute and input on page 1.
-    $this->drupalGet('/webform/test_states_crosspage');
-    $this->assertRaw(':input[name=\u0022' . $trigger_2_name . '\u0022]');
-    $this->assertFieldByName($trigger_2_name);
-
-    // Check cross page states attribute and input on page 2.
-    $this->postSubmission($webform, ['trigger_1' => TRUE], t('Next Page >'));
-    $this->assertRaw(':input[name=\u0022' . $trigger_1_name . '\u0022]');
-    $this->assertFieldByName($trigger_1_name);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/States/WebformStatesWizardTest.php b/modules/contrib/webform/src/Tests/States/WebformStatesWizardTest.php
deleted file mode 100644
index b2dfe9a3..00000000
--- a/modules/contrib/webform/src/Tests/States/WebformStatesWizardTest.php
+++ /dev/null
@@ -1,207 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\States;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform states wizard server.
- *
- * @group Webform
- */
-class WebformStatesWizardTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = [
-    'test_states_server_wizard',
-  ];
-
-  /**
-   * Tests webform submission conditions (#states) validator wizard cross-page conditions.
-   */
-  public function testFormStatesValidatorWizard() {
-    $webform = Webform::load('test_states_server_wizard');
-
-    /**************************************************************************/
-
-    // Go to default #states for page 02 with trigger-checkbox unchecked.
-    $this->postSubmission($webform, [], t('Next Page >'));
-
-    $this->assertRaw("page_01_trigger_checkbox: 0
-page_01_textfield_required: '{default_value}'
-page_01_textfield_optional: '{default_value}'
-page_01_textfield_disabled: ''
-page_01_textfield_enabled: ''
-page_01_textfield_visible: ''
-page_01_textfield_invisible: ''
-page_01_checkbox_checked: 0
-page_01_checkbox_unchecked: 0
-page_02_textfield_required: '{default_value}'
-page_02_textfield_optional: '{default_value}'
-page_02_textfield_disabled: ''
-page_02_textfield_enabled: ''
-page_02_textfield_visible: '{default_value}'
-page_02_textfield_visible_slide: '{default_value}'
-page_02_textfield_invisible: '{default_value}'
-page_02_textfield_invisible_slide: '{default_value}'
-page_02_checkbox_checked: 0
-page_02_checkbox_unchecked: 0");
-
-    // Check trigger-checkbox value is No.
-    $this->assertRaw('<input data-drupal-selector="edit-page-01-trigger-checkbox-computed" type="hidden" name="page_01_trigger_checkbox_computed" value="No" />');
-
-    // Check page_02_textfield_required is not required.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-required" aria-describedby="edit-page-02-textfield-required--description" type="text" id="edit-page-02-textfield-required" name="page_02_textfield_required" value="{default_value}" size="60" maxlength="255" class="form-text" />');
-
-    // Check page_02_textfield_optional is required.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-optional" aria-describedby="edit-page-02-textfield-optional--description" type="text" id="edit-page-02-textfield-optional" name="page_02_textfield_optional" value="{default_value}" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-
-    // Check page_02_textfield_disabled is not disabled.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-disabled" aria-describedby="edit-page-02-textfield-disabled--description" type="text" id="edit-page-02-textfield-disabled" name="page_02_textfield_disabled" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check page_02_textfield_enabled is disabled.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-enabled" aria-describedby="edit-page-02-textfield-enabled--description" disabled="disabled" type="text" id="edit-page-02-textfield-enabled" name="page_02_textfield_enabled" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check page_02_textfield_visible is hidden via .js-webform-states-hidden.
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-page-02-textfield-visible form-item-page-02-textfield-visible">');
-
-    // Check page_02_textfield_visible_slide is hidden via .js-webform-states-hidden.
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-page-02-textfield-visible-slide form-item-page-02-textfield-visible-slide">');
-
-    // Check page_02_textfield_invisible is visible.
-    $this->assertFieldByName('page_02_textfield_invisible', '{default_value}');
-
-    // Check page_02_textfield_invisible_slide is visible.
-    $this->assertFieldByName('page_02_textfield_invisible_slide', '{default_value}');
-
-    // Check page_02_checkbox_checked is not checked.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-checkbox-checked" aria-describedby="edit-page-02-checkbox-checked--description" type="checkbox" id="edit-page-02-checkbox-checked" name="page_02_checkbox_checked" value="1" class="form-checkbox" />');
-
-    // Check page_02_checkbox_unchecked is checked.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-checkbox-unchecked" aria-describedby="edit-page-02-checkbox-unchecked--description" type="checkbox" id="edit-page-02-checkbox-unchecked" name="page_02_checkbox_unchecked" value="1" checked="checked" class="form-checkbox" />');
-
-    // Check page_02_details_expanded is not open.
-    $this->assertRaw('<details data-webform-details-nosave data-webform-key="page_02_details_expanded" data-drupal-selector="edit-page-02-details-expanded" aria-describedby="edit-page-02-details-expanded--description" id="edit-page-02-details-expanded" class="js-form-wrapper form-wrapper"> ');
-
-    // Check page_02_details_collapsed is open.
-    $this->assertRaw('<details data-webform-details-nosave data-webform-key="page_02_details_collapsed" data-drupal-selector="edit-page-02-details-collapsed" aria-describedby="edit-page-02-details-collapsed--description" id="edit-page-02-details-collapsed" class="js-form-wrapper form-wrapper" open="open">');
-
-    // Check submission data.
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $this->assertRaw("page_01_trigger_checkbox: 0
-page_01_textfield_required: '{default_value}'
-page_01_textfield_optional: '{default_value}'
-page_01_textfield_disabled: ''
-page_01_textfield_enabled: ''
-page_01_textfield_visible: ''
-page_01_textfield_invisible: ''
-page_01_checkbox_checked: 0
-page_01_checkbox_unchecked: 0
-page_02_textfield_required: '{default_value}'
-page_02_textfield_optional: '{default_value}'
-page_02_textfield_disabled: ''
-page_02_textfield_enabled: ''
-page_02_textfield_visible: ''
-page_02_textfield_visible_slide: ''
-page_02_textfield_invisible: '{default_value}'
-page_02_textfield_invisible_slide: '{default_value}'
-page_02_checkbox_checked: 0
-page_02_checkbox_unchecked: 1");
-
-    /**************************************************************************/
-
-    // Go to default #states for page 02 with trigger_checkbox checked.
-    $this->postSubmission($webform, ['page_01_trigger_checkbox' => TRUE], t('Next Page >'));
-
-    $this->assertRaw("page_01_trigger_checkbox: 1
-page_01_textfield_required: '{default_value}'
-page_01_textfield_optional: '{default_value}'
-page_01_textfield_disabled: ''
-page_01_textfield_enabled: ''
-page_01_textfield_visible: ''
-page_01_textfield_invisible: ''
-page_01_checkbox_checked: 0
-page_01_checkbox_unchecked: 0
-page_02_textfield_required: '{default_value}'
-page_02_textfield_optional: '{default_value}'
-page_02_textfield_disabled: ''
-page_02_textfield_enabled: ''
-page_02_textfield_visible: '{default_value}'
-page_02_textfield_visible_slide: '{default_value}'
-page_02_textfield_invisible: '{default_value}'
-page_02_textfield_invisible_slide: '{default_value}'
-page_02_checkbox_checked: 0
-page_02_checkbox_unchecked: 0");
-
-    // Check trigger-checkbox value is Yes.
-    $this->assertRaw('<input data-drupal-selector="edit-page-01-trigger-checkbox-computed" type="hidden" name="page_01_trigger_checkbox_computed" value="Yes" />');
-
-    // Check page_02_textfield_required is required.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-required" aria-describedby="edit-page-02-textfield-required--description" type="text" id="edit-page-02-textfield-required" name="page_02_textfield_required" value="{default_value}" size="60" maxlength="255" class="form-text required" required="required" aria-required="true" />');
-
-    // Check page_02_textfield_optional is not required.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-optional" aria-describedby="edit-page-02-textfield-optional--description" type="text" id="edit-page-02-textfield-optional" name="page_02_textfield_optional" value="{default_value}" size="60" maxlength="255" class="form-text" />');
-
-    // Check page_02_textfield_disabled is disabled.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-disabled" aria-describedby="edit-page-02-textfield-disabled--description" disabled="disabled" type="text" id="edit-page-02-textfield-disabled" name="page_02_textfield_disabled" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check page_02_textfield_enabled is not disabled.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-textfield-enabled" aria-describedby="edit-page-02-textfield-enabled--description" type="text" id="edit-page-02-textfield-enabled" name="page_02_textfield_enabled" value="" size="60" maxlength="255" class="form-text" />');
-
-    // Check page_02_textfield_visible is visible.
-    $this->assertFieldByName('page_02_textfield_visible', '{default_value}');
-
-    // Check page_02_textfield_visible_slide is visible.
-    $this->assertFieldByName('page_02_textfield_visible_slide', '{default_value}');
-
-    // Check page_02_textfield_invisible is hidden with no default value.
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-page-02-textfield-invisible form-item-page-02-textfield-invisible">');
-    $this->assertNoFieldByName('page_02_textfield_invisible', '{default_value}');
-    $this->assertFieldByName('page_02_textfield_invisible', '');
-
-    // Check page_02_textfield_invisible_slides is hidden with no default value.
-    $this->assertRaw('<div class="js-webform-states-hidden js-form-item form-item js-form-type-textfield form-type-textfield js-form-item-page-02-textfield-invisible-slide form-item-page-02-textfield-invisible-slide">');
-    $this->assertNoFieldByName('page_02_textfield_invisible_slide', '{default_value}');
-    $this->assertFieldByName('page_02_textfield_invisible_slide', '');
-
-    // Check page_02_checkbox_checked is checked.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-checkbox-checked" aria-describedby="edit-page-02-checkbox-checked--description" type="checkbox" id="edit-page-02-checkbox-checked" name="page_02_checkbox_checked" value="1" checked="checked" class="form-checkbox" />');
-
-    // Check page_02_checkbox_unchecked is not checked.
-    $this->assertRaw('<input data-drupal-selector="edit-page-02-checkbox-unchecked" aria-describedby="edit-page-02-checkbox-unchecked--description" type="checkbox" id="edit-page-02-checkbox-unchecked" name="page_02_checkbox_unchecked" value="1" class="form-checkbox" />');
-
-    // Check page_02_details_expanded is open.
-    $this->assertRaw('<details data-webform-details-nosave data-webform-key="page_02_details_expanded" data-drupal-selector="edit-page-02-details-expanded" aria-describedby="edit-page-02-details-expanded--description" id="edit-page-02-details-expanded" class="js-form-wrapper form-wrapper" open="open">');
-
-    // Check page_02_details_collapsed is not open.
-    $this->assertRaw('<details data-webform-details-nosave data-webform-key="page_02_details_collapsed" data-drupal-selector="edit-page-02-details-collapsed" aria-describedby="edit-page-02-details-collapsed--description" id="edit-page-02-details-collapsed" class="js-form-wrapper form-wrapper">');
-
-    // Check submission data.
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $this->assertRaw("page_01_trigger_checkbox: 1
-page_01_textfield_required: '{default_value}'
-page_01_textfield_optional: '{default_value}'
-page_01_textfield_disabled: ''
-page_01_textfield_enabled: ''
-page_01_textfield_visible: ''
-page_01_textfield_invisible: ''
-page_01_checkbox_checked: 0
-page_01_checkbox_unchecked: 0
-page_02_textfield_required: '{default_value}'
-page_02_textfield_optional: '{default_value}'
-page_02_textfield_disabled: ''
-page_02_textfield_enabled: ''
-page_02_textfield_visible: '{default_value}'
-page_02_textfield_visible_slide: '{default_value}'
-page_02_textfield_invisible: ''
-page_02_textfield_invisible_slide: ''
-page_02_checkbox_checked: 1
-page_02_checkbox_unchecked: 0");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Token/WebformTokenSubmissionValueTest.php b/modules/contrib/webform/src/Tests/Token/WebformTokenSubmissionValueTest.php
deleted file mode 100644
index 9714b833..00000000
--- a/modules/contrib/webform/src/Tests/Token/WebformTokenSubmissionValueTest.php
+++ /dev/null
@@ -1,174 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Token;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform token submission value.
- *
- * @group Webform
- */
-class WebformTokenSubmissionValueTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['taxonomy'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_token_submission_value'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create 'tags' vocabulary.
-    $this->createTags();
-  }
-
-  /**
-   * Test webform token submission value.
-   */
-  public function testWebformTokenSubmissionValue() {
-    $webform = Webform::load('test_token_submission_value');
-
-    // Check anonymous token handling.
-    $this->postSubmission($webform);
-    $tokens = [
-      // Element.
-      'webform:element:email' => 'email',
-      'webform:element:email:title' => 'email',
-      'webform:element:email:description' => '<em>This is an email address</em>',
-      'webform:element:not_element:description' => '[webform:element:not_element:description]',
-      'webform:element:email:not_property' => '[webform:element:email:not_property]',
-
-      // Emails.
-      'webform_submission:values:email' => 'example@example.com',
-      'webform_submission:values:emails:0' => 'one@example.com',
-      'webform_submission:values:emails:1' => 'two@example.com',
-      'webform_submission:values:emails:2' => 'three@example.com',
-      'webform_submission:values:emails:value:comma' => 'one@example.com, two@example.com, three@example.com',
-      'webform_submission:values:emails:html' => '<div class="item-list"><ul><li><a href="mailto:one@example.com">one@example.com</a></li><li><a href="mailto:two@example.com">two@example.com</a></li><li><a href="mailto:three@example.com">three@example.com</a></li></ul></div>',
-      'webform_submission:values:emails:0:html' => '<a href="mailto:one@example.com">one@example.com</a>',
-      'webform_submission:values:emails:1:html' => '<a href="mailto:two@example.com">two@example.com</a>',
-      'webform_submission:values:emails:2:html' => '<a href="mailto:three@example.com">three@example.com</a>',
-      'webform_submission:values:emails:99:html' => '',
-
-      // Users.
-      'webform_submission:values:user' => 'admin (1)',
-      'webform_submission:values:users' => 'admin (1)',
-      'webform_submission:values:user:entity:mail' => 'admin@example.com',
-      'webform_submission:values:users:0:entity:account-name' => 'admin',
-      'webform_submission:values:users:99:entity:account-name' => '',
-
-      // Current users.
-      'current-user:display-name' => '',
-      'current-user:missing' => '',
-
-      // Terms.
-      'webform_submission:values:term' => 'Parent 1 (1)',
-      'webform_submission:values:terms' => 'Parent 1 (1), Parent 1: Child 1 (2)',
-      'webform_submission:values:term:entity:name' => 'Parent 1',
-      'webform_submission:values:terms:entity:name' => 'Parent 1',
-      'webform_submission:values:terms:1:entity:name' => 'Parent 1: Child 1',
-
-      // Names.
-      'webform_submission:values:name' => 'John Smith',
-      'webform_submission:values:names' => '- John Smith
-- Jane Doe',
-      'webform_submission:values:names:0' => 'John Smith',
-      'webform_submission:values:names:1' => 'Jane Doe',
-      'webform_submission:values:names:99' => '',
-
-      // Contacts.
-      'webform_submission:values:contact' => 'John Smith
-10 Main Street
-Springfield, Alabama. 12345
-United States
-john@example.com',
-      'webform_submission:values:contacts' => '- John Smith
-  10 Main Street
-  Springfield, Alabama. 12345
-  United States
-  john@example.com
-- Jane Doe
-  10 Main Street
-  Springfield, Alabama. 12345
-  United States
-  jane@example.com',
-      'webform_submission:values:contacts:html' => '<div class="item-list"><ul><li>John Smith<br />10 Main Street<br />Springfield, Alabama. 12345<br />United States<br /><a href="mailto:john@example.com">john@example.com</a></li><li>Jane Doe<br />10 Main Street<br />Springfield, Alabama. 12345<br />United States<br /><a href="mailto:jane@example.com">jane@example.com</a></li></ul></div>',
-      'webform_submission:values:contacts:0:html' => 'John Smith<br />10 Main Street<br />Springfield, Alabama. 12345<br />United States<br /><a href="mailto:john@example.com">john@example.com</a>',
-      'webform_submission:values:contacts:0:name' => 'John Smith',
-      'webform_submission:values:contacts:1:name' => 'Jane Doe',
-      'webform_submission:values:contacts:0:email:html' => '<a href="mailto:john@example.com">john@example.com</a>',
-      'webform_submission:values:contacts:1:email:raw:html' => 'jane@example.com',
-
-      // Containers.
-      'webform_submission:values:fieldset' => '<pre>fieldset
---------
-first_name: John
-last_name: Smith
-</pre>',
-
-      // Submission limits.
-      'webform_submission:limit:webform' => '100',
-      'webform_submission:total:webform' => '1',
-      'webform_submission:limit:user' => '10',
-      'webform_submission:total:user' => '1',
-      'webform_submission:limit:webform:source_entity' => '50',
-      'webform_submission:total:webform:source_entity' => '',
-      'webform_submission:limit:user:source_entity' => '5',
-      'webform_submission:total:user:source_entity' => '',
-
-      // Clear.
-      'webform_submission:values:missing' => '[webform_submission:values:missing]',
-      'webform_submission:values:missing:clear' => '',
-      'webform:random:missing' => '[webform:random:missing]',
-      'webform:random:missing:clear' => '',
-
-      // HTML decode.
-      'webform_submission:values:markup' => '&lt;b&gt;Bold&lt;/b&gt; &amp;amp; UPPERCASE',
-      'webform_submission:values:markup:htmldecode' => '<b>Bold</b> &amp; UPPERCASE',
-      'webform_submission:values:markup:htmldecode:striptags' => 'Bold &amp; UPPERCASE',
-      'webform_submission:values:script' => '&lt;script&gt;alert(&#039;hi&#039;);&lt;/script&gt;',
-      'webform_submission:values:script:htmldecode' => 'alert(&#039;hi&#039;);',
-
-      // URL encode.
-      'webform_submission:values:url' => 'http://example.com?query=param',
-      'webform_submission:values:url:urlencode' => 'http%3A%2F%2Fexample.com%3Fquery%3Dparam',
-    ];
-    foreach ($tokens as $token => $value) {
-      $this->assertRaw("<tr><th width=\"50%\">$token</th><td width=\"50%\">$value</td></tr>");
-    }
-
-    // Check containers.
-    $this->assertRaw('<tr><th width="50%">webform_submission:values:fieldset</th><td width="50%"><pre>fieldset');
-    $this->assertRaw('<tr><th width="50%">webform_submission:values:fieldset:html</th><td width="50%"><fieldset class="webform-container webform-container-type-fieldset js-form-item form-item js-form-wrapper form-wrapper" id="test_token_submission_value--fieldset">');
-    $this->assertRaw('<tr><th width="50%">webform_submission:values:fieldset:header:html</th><td width="50%"><section class="js-form-item form-item js-form-wrapper form-wrapper webform-section" id="test_token_submission_value--fieldset">');
-    $this->assertRaw('<tr><th width="50%">webform_submission:values:fieldset:details:html</th><td width="50%"><details class="webform-container webform-container-type-details js-form-wrapper form-wrapper" data-webform-element-id="test_token_submission_value--fieldset" id="test_token_submission_value--fieldset" open="open">');
-    $this->assertRaw('<tr><th width="50%">webform_submission:values:fieldset:fieldset:html</th><td width="50%"><fieldset class="webform-container webform-container-type-fieldset js-form-item form-item js-form-wrapper form-wrapper" id="test_token_submission_value--fieldset">');
-
-    // Check authenticated token handling.
-    $this->drupalLogin($this->rootUser);
-    $this->postSubmission($webform);
-    $tokens = [
-      // Current users.
-      'current-user:display-name' => 'admin',
-      'current-user:missing' => '',
-    ];
-    foreach ($tokens as $token => $value) {
-      $this->assertRaw("<tr><th width=\"50%\">$token</th><td width=\"50%\">$value</td></tr>");
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Token/WebformTokenSuffixesTest.php b/modules/contrib/webform/src/Tests/Token/WebformTokenSuffixesTest.php
deleted file mode 100644
index 32cc3fe1..00000000
--- a/modules/contrib/webform/src/Tests/Token/WebformTokenSuffixesTest.php
+++ /dev/null
@@ -1,100 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Token;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform token suffixes.
- *
- * @group Webform
- */
-class WebformTokenSuffixesTest extends WebformTestBase {
-
-  /**
-   * Test webform token suffixes.
-   */
-  public function testTokenSuffixes() {
-    /** @var \Drupal\webform\WebformTokenManagerInterface $token_manager */
-    $token_manager = \Drupal::service('webform.token_manager');
-
-    $tests = [
-      // Default.
-      [
-        'site_name' => 'Testing',
-        'text' => '[site:name]',
-        'expected' => 'Testing',
-        'message' => 'Basic token',
-      ],
-      // :clear.
-      [
-        'text' => '[missing]',
-        'expected' => '[missing]',
-        'message' => 'Missing token',
-      ],
-      [
-        'text' => '[missing:clear]',
-        'expected' => '',
-        'message' => 'Missing token cleared',
-      ],
-      [
-        'text' => '[missing:clear]',
-        'expected' => '[missing:clear]',
-        'message' => 'Clear disabled',
-        'options' => ['suffixes' => ['clear' => FALSE]],
-      ],
-      // :htmldecode.
-      [
-        'site_name' => '<b>Testing</b>',
-        'text' => '[site:name]',
-        'expected' => '&lt;b&gt;Testing&lt;/b&gt;',
-        'message' => 'Basic token with encoded HTML markup',
-      ],
-      [
-        'site_name' => '<b>Testing</b>',
-        'text' => '[site:name:htmldecode]',
-        'expected' => '<b>Testing</b>',
-        'message' => 'Basic token with decoded HTML markup',
-      ],
-      // :striptags.
-      [
-        'site_name' => '<b>Testing</b>',
-        'text' => '[site:name:htmldecode:striptags]',
-        'expected' => 'Testing',
-        'message' => 'Basic token with decoded HTML markup',
-        'options' => [],
-      ],
-      // :xmlencode.
-      [
-        'site_name' => '<b>Testing</b>',
-        'text' => '[site:name:xmlencode]',
-        'expected' => '&amp;lt;b&amp;gt;Testing&amp;lt;/b&amp;gt;',
-        'message' => 'XML encode',
-      ],
-      [
-        'site_name' => '<b>Testing</b>',
-        'text' => '[site:name:htmldecode:xmlencode]',
-        'expected' => '&lt;b&gt;Testing&lt;/b&gt;',
-        'message' => 'HTML decode and then XML encode',
-      ],
-    ];
-    foreach ($tests as $test) {
-      // Set default options.
-      $test += [
-        'options' => [],
-      ];
-
-      // Set site name.
-      if (!empty($test['site_name'])) {
-        \Drupal::configFactory()
-          ->getEditable('system.site')
-          ->set('name', $test['site_name'])
-          ->save();
-      }
-      $result = $token_manager->replace($test['text'], NULL, [], $test['options']);
-      $this->assertEqual($result, $test['expected'], $test['message']);
-    }
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Token/WebformTokenValidateTest.php b/modules/contrib/webform/src/Tests/Token/WebformTokenValidateTest.php
deleted file mode 100644
index 28778069..00000000
--- a/modules/contrib/webform/src/Tests/Token/WebformTokenValidateTest.php
+++ /dev/null
@@ -1,37 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Token;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests for webform token element validation.
- *
- * @group Webform
- */
-class WebformTokenValidateTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['token'];
-
-  /**
-   * Test webform token element validation.
-   */
-  public function testWebformTokenValidate() {
-    $this->drupalLogin($this->rootUser);
-
-    // Check invalid token validation.
-    $this->drupalPostForm('/admin/structure/webform/config', ['form_settings[default_form_open_message][value]' => '[webform:invalid]'], t('Save configuration'));
-    $this->assertRaw('invalid tokens');
-    $this->assertRaw('<em class="placeholder">Default open message</em> is using the following invalid tokens: [webform:invalid].');
-
-    // Check valid token validation.
-    $this->drupalPostForm('/admin/structure/webform/config', ['form_settings[default_form_open_message][value]' => '[webform:title]'], t('Save configuration'));
-    $this->assertNoRaw('invalid tokens');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Views/WebformViewsBulkFormTest.php b/modules/contrib/webform/src/Tests/Views/WebformViewsBulkFormTest.php
deleted file mode 100644
index 7da8a42f..00000000
--- a/modules/contrib/webform/src/Tests/Views/WebformViewsBulkFormTest.php
+++ /dev/null
@@ -1,100 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Views;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Tests a webform submission bulk form.
- *
- * @group webform
- * @see \Drupal\webform\Plugin\views\field\WebformSubmissionBulkForm
- */
-class WebformViewsBulkFormTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_views'];
-
-  /**
-   * Tests the webform views bulk form.
-   */
-  public function testViewsBulkForm() {
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /**************************************************************************/
-
-    $this->drupalLogin($admin_submission_user);
-
-    // Check no submissions.
-    $this->drupalGet('/admin/structure/webform/test/views_bulk_form');
-    $this->assertRaw('No submissions available.');
-
-    // Create a test submission.
-    $this->drupalLogin($this->rootUser);
-    $webform = Webform::load('contact');
-    $sid = $this->postSubmissionTest($webform);
-    $webform_submission = $this->loadSubmission($sid);
-
-    $this->drupalLogin($admin_submission_user);
-
-    // Check make sticky action.
-    $this->assertFalse($webform_submission->isSticky(), 'Webform submission is not sticky');
-    $edit = [
-      'webform_submission_bulk_form[0]' => TRUE,
-      'action' => 'webform_submission_make_sticky_action',
-    ];
-    $this->drupalPostForm('admin/structure/webform/test/views_bulk_form', $edit, t('Apply to selected items'));
-    $webform_submission = $this->loadSubmission($webform_submission->id());
-    $this->assertTrue($webform_submission->isSticky(), 'Webform submission has been made sticky');
-
-    // Check make unsticky action.
-    $edit = [
-      'webform_submission_bulk_form[0]' => TRUE,
-      'action' => 'webform_submission_make_unsticky_action',
-    ];
-    $this->drupalPostForm('admin/structure/webform/test/views_bulk_form', $edit, t('Apply to selected items'));
-    $webform_submission = $this->loadSubmission($webform_submission->id());
-    $this->assertFalse($webform_submission->isSticky(), 'Webform submission is not sticky anymore');
-
-    // Check make lock action.
-    $this->assertFalse($webform_submission->isLocked(), 'Webform submission is not locked');
-    $edit = [
-      'webform_submission_bulk_form[0]' => TRUE,
-      'action' => 'webform_submission_make_lock_action',
-    ];
-    $this->drupalPostForm('admin/structure/webform/test/views_bulk_form', $edit, t('Apply to selected items'));
-    $webform_submission = $this->loadSubmission($webform_submission->id());
-    $this->assertTrue($webform_submission->isLocked(), 'Webform submission has been locked');
-
-    // Check make locked action.
-    $edit = [
-      'webform_submission_bulk_form[0]' => TRUE,
-      'action' => 'webform_submission_make_unlock_action',
-    ];
-    $this->drupalPostForm('admin/structure/webform/test/views_bulk_form', $edit, t('Apply to selected items'));
-    $webform_submission = $this->loadSubmission($webform_submission->id());
-    $this->assertFalse($webform_submission->isLocked(), 'Webform submission is not locked anymore');
-
-    // Check delete action.
-    $edit = [
-      'webform_submission_bulk_form[0]' => TRUE,
-      'action' => 'webform_submission_delete_action',
-    ];
-    $this->drupalPostForm('admin/structure/webform/test/views_bulk_form', $edit, t('Apply to selected items'));
-    $this->drupalPostForm(NULL, [], t('Delete'));
-    $webform_submission = $this->loadSubmission($webform_submission->id());
-    $this->assertNull($webform_submission, '1: Webform submission has been deleted');
-
-    // Check no submissions.
-    $this->drupalGet('/admin/structure/webform/test/views_bulk_form');
-    $this->assertRaw('No submissions available.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformAlterHooksTest.php b/modules/contrib/webform/src/Tests/WebformAlterHooksTest.php
deleted file mode 100644
index 1224b701..00000000
--- a/modules/contrib/webform/src/Tests/WebformAlterHooksTest.php
+++ /dev/null
@@ -1,49 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform_node\Tests\WebformNodeTestBase;
-
-/**
- * Tests for webform alter hooks.
- *
- * @group Webform
- */
-class WebformAlterHooksTest extends WebformNodeTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_node', 'webform_test_alter_hooks'];
-
-  /**
-   * Tests webform alter hooks.
-   */
-  public function testWebformAlterHooks() {
-    // Check webform alter hooks.
-    $this->drupalGet('/webform/contact');
-    $this->assertRaw("hook_webform_submission_form_alter(): 'webform_submission_contact_add_form' executed.");
-    $this->assertRaw("hook_form_alter(): 'webform_submission_contact_add_form' executed.");
-    $this->assertRaw("hook_form_webform_submission_BASE_FORM_ID_form_alter(): 'webform_submission_contact_add_form' executed.");
-    $this->assertRaw("hook_form_webform_submission_FORM_ID_form_alter(): 'webform_submission_contact_add_form' executed.");
-
-    // Check webform element alter hooks.
-    $this->assertRaw("hook_webform_element_alter(): 'name' executed.");
-    $this->assertRaw("hook_webform_element_alter(): 'email' executed.");
-    $this->assertRaw("hook_webform_element_ELEMENT_TYPE_alter(): 'email' executed.");
-    $this->assertRaw("hook_webform_element_alter(): 'subject' executed.");
-    $this->assertRaw("hook_webform_element_alter(): 'message' executed.");
-
-    // Check webform node alter hooks.
-    $webform_node = $this->createWebformNode('contact');
-    $nid = $webform_node->id();
-    $this->drupalGet("node/$nid");
-    $this->assertRaw("hook_webform_submission_form_alter(): 'webform_submission_contact_node_{$nid}_add_form' executed.");
-    $this->assertRaw("hook_form_alter(): 'webform_submission_contact_node_{$nid}_add_form' executed.");
-    $this->assertRaw("hook_form_webform_submission_BASE_FORM_ID_form_alter(): 'webform_submission_contact_node_{$nid}_add_form' executed.");
-    $this->assertRaw("hook_form_webform_submission_FORM_ID_form_alter(): 'webform_submission_contact_node_{$nid}_add_form' executed.");
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformEditorTest.php b/modules/contrib/webform/src/Tests/WebformEditorTest.php
deleted file mode 100644
index 95f40e4f..00000000
--- a/modules/contrib/webform/src/Tests/WebformEditorTest.php
+++ /dev/null
@@ -1,258 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform editor.
- *
- * @group Webform
- */
-class WebformEditorTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['file', 'webform'];
-
-  /**
-   * File usage manager.
-   *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
-   */
-  protected $fileUsage;
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    $this->fileUsage = $this->container->get('file.usage');
-  }
-
-  /**
-   * Tests webform entity settings files.
-   */
-  public function testWebformSettingsFiles() {
-    $this->drupalLogin($this->rootUser);
-
-    // Create three test images.
-    /** @var \Drupal\file\FileInterface[] $images */
-    $images = $this->drupalGetTestFiles('image');
-    $images = array_slice($images, 0, 5);
-    foreach ($images as $index => $image_file) {
-      $images[$index] = File::create((array) $image_file);
-      $images[$index]->save();
-    }
-
-    // Check that all images are temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Upload the first image.
-    $edit = [
-      'description[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that first image is not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check create first image file usage.
-    $this->assertIdentical(['editor' => ['webform' => ['contact' => '1']]], $this->fileUsage->listUsage($images[0]), 'The file has 1 usage.');
-
-    // Upload the second image.
-    $edit = [
-      'description[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/><img data-entity-type="file" data-entity-uuid="' . $images[1]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that first and second image are not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-    $this->assertFalse($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check first and second image file usage.
-    $this->assertIdentical(['editor' => ['webform' => ['contact' => '1']]], $this->fileUsage->listUsage($images[0]), 'The file has 1 usage.');
-    $this->assertIdentical(['editor' => ['webform' => ['contact' => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Remove the first image.
-    $edit = [
-      'description[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[1]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that first is temporary and second image is not temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertFalse($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check first and second image file usage.
-    $this->assertIdentical([], $this->fileUsage->listUsage($images[0]), 'The file has 0 usage.');
-    $this->assertIdentical(['editor' => ['webform' => ['contact' => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Set all files back to temporary.
-    $edit = [
-      'description[value]' => '',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that first and second image are temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Stop marking unused files as temporary.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('html_editor.make_unused_managed_files_temporary', FALSE)
-      ->save();
-    $this->assertTrue($images[0]->isTemporary());
-
-    // Check uploaded file is NOT temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $edit = [
-      'description[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-    $this->assertFalse($images[0]->isTemporary());
-
-    // Check unused file is NOT temporary.
-    $edit = [
-      'description[value]' => '',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-    $this->assertFalse($images[0]->isTemporary());
-
-    // Start marking unused files as temporary.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('html_editor.make_unused_managed_files_temporary', TRUE)
-      ->save();
-
-    $edit = [
-      'description[value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
-    $this->reloadImages($images);
-
-    // Check that upload file is not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-
-    // Delete the webform.
-    Webform::load('contact')->delete();
-    $this->reloadImages($images);
-
-    // Check that file is temporary after the webform is deleted.
-    $this->assertTrue($images[0]->isTemporary());
-  }
-
-  /**
-   * Tests webform configuration files.
-   */
-  public function testWebformConfigurationFiles() {
-    $this->drupalLogin($this->rootUser);
-
-    // Create three test images.
-    /** @var \Drupal\file\FileInterface[] $images */
-    $images = $this->drupalGetTestFiles('image');
-    $images = array_slice($images, 0, 5);
-    foreach ($images as $index => $image_file) {
-      $images[$index] = File::create((array) $image_file);
-      $images[$index]->save();
-    }
-
-    // Check that all images are temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Upload the first image.
-    $edit = [
-      'form_settings[default_form_open_message][value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/config', $edit, t('Save configuration'));
-    $this->reloadImages($images);
-
-    // Check that first image is not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check create first image file usage.
-    $this->assertIdentical(['editor' => ['config' => ['webform.settings' => '1']]], $this->fileUsage->listUsage($images[0]), 'The file has 1 usage.');
-
-    // Upload the second image.
-    $edit = [
-      'form_settings[default_form_open_message][value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[0]->uuid() . '"/><img data-entity-type="file" data-entity-uuid="' . $images[1]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/config', $edit, t('Save configuration'));
-    $this->reloadImages($images);
-
-    // Check that first and second image are not temporary.
-    $this->assertFalse($images[0]->isTemporary());
-    $this->assertFalse($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check first and second image file usage.
-    $this->assertIdentical(['editor' => ['config' => ['webform.settings' => '1']]], $this->fileUsage->listUsage($images[0]), 'The file has 1 usage.');
-    $this->assertIdentical(['editor' => ['config' => ['webform.settings' => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Remove the first image.
-    $edit = [
-      'form_settings[default_form_open_message][value]' => '<img data-entity-type="file" data-entity-uuid="' . $images[1]->uuid() . '"/>',
-    ];
-    $this->drupalPostForm('/admin/structure/webform/config', $edit, t('Save configuration'));
-    $this->reloadImages($images);
-
-    // Check that first is temporary and second image is not temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertFalse($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-
-    // Check first and second image file usage.
-    $this->assertIdentical([], $this->fileUsage->listUsage($images[0]), 'The file has 0 usage.');
-    $this->assertIdentical(['editor' => ['config' => ['webform.settings' => '1']]], $this->fileUsage->listUsage($images[1]), 'The file has 1 usage.');
-
-    // Simulate deleting webform.settings.yml during webform uninstall.
-    // @see webform_uninstall()
-    $config = \Drupal::configFactory()->get('webform.settings');
-    _webform_config_delete($config);
-    $this->reloadImages($images);
-
-    // Check that first and second image are temporary.
-    $this->assertTrue($images[0]->isTemporary());
-    $this->assertTrue($images[1]->isTemporary());
-    $this->assertTrue($images[2]->isTemporary());
-  }
-
-  /****************************************************************************/
-  // Helper functions.
-  /****************************************************************************/
-
-  /**
-   * Reload images.
-   *
-   * @param array $images
-   *   An array of image files.
-   */
-  protected function reloadImages(array &$images) {
-    \Drupal::entityTypeManager()->getStorage('file')->resetCache();
-    foreach ($images as $index => $image) {
-      $images[$index] = File::load($image->id());
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformEmailProviderTest.php b/modules/contrib/webform/src/Tests/WebformEmailProviderTest.php
deleted file mode 100644
index 084f177a..00000000
--- a/modules/contrib/webform/src/Tests/WebformEmailProviderTest.php
+++ /dev/null
@@ -1,82 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-/**
- * Tests for webform email provider.
- *
- * @group Webform
- */
-class WebformEmailProviderTest extends WebformTestBase {
-
-  /**
-   * Test webform email provider.
-   */
-  public function testEmailProvider() {
-    // Revert system.mail back to  php_mail.
-    $this->container->get('config.factory')
-      ->getEditable('system.mail')
-      ->set('interface.default', 'php_mail')
-      ->save();
-
-    /** @var \Drupal\webform\WebformEmailProviderInterface $email_provider */
-    $email_provider = \Drupal::service('webform.email_provider');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check Default PHP mailer is enabled because we manually changed the
-    // system.mail configuration.
-    $this->drupalGet('/admin/reports/status');
-    $this->assertRaw('Provided by php_mail mail plugin.');
-    $this->assertNoRaw("Webform PHP mailer: Sends the message as plain text or HTML, using PHP's native mail() function.");
-    $this->assertRaw('Default PHP mailer: Sends the message as plain text, using PHP\'s native mail() function.');
-
-    // Check Webform PHP mailer enabled after email provider check.
-    $email_provider->check();
-    $this->drupalGet('/admin/reports/status');
-    $this->assertRaw('Provided by the Webform module.');
-    $this->assertRaw("Webform PHP mailer: Sends the message as plain text or HTML, using PHP's native mail() function.");
-
-    /**************************************************************************/
-    // Mail System.
-    /**************************************************************************/
-
-    // Install mailsystem.module.
-    \Drupal::service('module_installer')->install(['mailsystem']);
-
-    // Check Mail System: Default PHP mailer after mailsystem.module installed.
-    $this->drupalGet('/admin/reports/status');
-    $this->assertRaw('Provided by the Mail System module.');
-    $this->assertNoRaw("Webform PHP mailer: Sends the message as plain text or HTML, using PHP's native mail() function.");
-    $this->assertRaw('Default PHP mailer: Sends the message as plain text, using PHP\'s native mail() function.');
-
-    // Check Webform PHP mailer enabled after mailsystem module uninstalled.
-    \Drupal::service('module_installer')->uninstall(['mailsystem']);
-    $this->drupalGet('/admin/reports/status');
-    $this->assertRaw("Webform PHP mailer: Sends the message as plain text or HTML, using PHP's native mail() function.");
-
-    // Uninstall mailsystem.module.
-    \Drupal::service('module_installer')->uninstall(['mailsystem']);
-
-    /**************************************************************************/
-    // SMTP.
-    /**************************************************************************/
-
-    // Install smtp.module.
-    \Drupal::service('module_installer')->install(['smtp']);
-
-    // Check Webform: Default PHP mailer after smtp.module installed
-    // but still turned off.
-    $this->drupalGet('/admin/reports/status');
-    $this->assertRaw('Provided by the Webform module.');
-
-    // Turn on the smtp.module via the UI.
-    // @see webform_form_smtp_admin_settings_alter()
-    $this->drupalPostForm('/admin/config/system/smtp', ['smtp_on' => TRUE], t('Save configuration'));
-
-    // Check SMTP: Default PHP mailer after smtp.module turned on.
-    $this->drupalGet('/admin/reports/status');
-    $this->assertNoRaw('Provided by the SMTP module.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformEntityReferenceItemNormalizerTest.php b/modules/contrib/webform/src/Tests/WebformEntityReferenceItemNormalizerTest.php
deleted file mode 100644
index 7664af70..00000000
--- a/modules/contrib/webform/src/Tests/WebformEntityReferenceItemNormalizerTest.php
+++ /dev/null
@@ -1,47 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\node\Entity\Node;
-
-/**
- * Tests the normalization of webform entity reference items.
- *
- * @group Webform
- */
-class WebformEntityReferenceItemNormalizerTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['rest', 'serialization', 'hal', 'webform', 'webform_node'];
-
-  /**
-   * Tests the normalization of a node with a webform entity reference.
-   */
-  public function testWebformEntityReferenceItemNormalization() {
-    // Create node.
-    $node = $this->drupalCreateNode(['type' => 'webform']);
-    $webform_field = 'webform';
-
-    // Set webform field to reference the contact webform and add data.
-    $node->{$webform_field}->target_id = 'contact';
-    $node->{$webform_field}->default_data = 'name: Please enter your name\r\nemail: Please enter a valid email address';
-    $node->{$webform_field}->status = 1;
-    $node->save();
-
-    // Normalize the node.
-    $serializer = $this->container->get('serializer');
-    $normalized = $serializer->normalize($node, 'hal_json');
-    $this->assertEqual($node->{$webform_field}->default_data, $normalized[$webform_field][0]['default_data']);
-    $this->assertEqual($node->{$webform_field}->status, $normalized[$webform_field][0]['status']);
-
-    // Denormalize the node.
-    $new_node = $serializer->denormalize($normalized, Node::class, 'hal_json');
-    $this->assertEqual($node->{$webform_field}->default_data, $new_node->{$webform_field}->default_data);
-    $this->assertEqual($node->{$webform_field}->status, $new_node->{$webform_field}->status);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformEntityStorageTest.php b/modules/contrib/webform/src/Tests/WebformEntityStorageTest.php
deleted file mode 100644
index 17b8908d..00000000
--- a/modules/contrib/webform/src/Tests/WebformEntityStorageTest.php
+++ /dev/null
@@ -1,34 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-/**
- * Tests for webform storage tests.
- *
- * @group Webform
- */
-class WebformEntityStorageTest extends WebformTestBase {
-
-  /**
-   * Test webform storage.
-   */
-  public function testWebformEntityStorage() {
-    // Check webform entity storage caching.
-    // @see \Drupal\webform\WebformEntityStorage::load
-    /** @var \Drupal\webform\WebformEntityStorage $storage */
-    $storage = \Drupal::entityTypeManager()->getStorage('webform');
-
-    $webform = $storage->load('contact');
-    $webform->cached = TRUE;
-
-    // Check that load (single) has the custom 'cached' property.
-    $this->assertEqual($webform->cached, $storage->load('contact')->cached);
-
-    // Check that loadMultiple does not have the custom 'cached' property.
-    // The below test will fail when and if
-    // 'Issue #1885830: Enable static caching for config entities.'
-    // is resolved.
-    $this->assert(!isset($storage->loadMultiple(['contact'])->cached));
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformEntityTest.php b/modules/contrib/webform/src/Tests/WebformEntityTest.php
deleted file mode 100644
index c6b33cdb..00000000
--- a/modules/contrib/webform/src/Tests/WebformEntityTest.php
+++ /dev/null
@@ -1,82 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform entity.
- *
- * @group Webform
- */
-class WebformEntityTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'webform', 'webform_test_submissions'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submissions'];
-
-  /**
-   * Webform submission storage.
-   *
-   * @var \Drupal\webform\WebformSubmissionStorageInterface
-   */
-  protected $submissionStorage;
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Storage.
-    $this->submissionStorage = \Drupal::entityTypeManager()->getStorage('webform_submission');
-  }
-
-  /**
-   * Tests webform entity.
-   */
-  public function testWebform() {
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_submissions');
-
-    // Check get elements.
-    $elements = $webform->getElementsInitialized();
-    $this->assert(is_array($elements));
-
-    // Check getElements.
-    $columns = $webform->getElementsInitializedFlattenedAndHasValue();
-    $this->assertEqual(array_keys($columns), ['first_name', 'last_name', 'sex', 'dob', 'node', 'colors', 'likert', 'address']);
-
-    // Set invalid elements.
-    $webform->set('elements', "not\nvalid\nyaml")->save();
-
-    // Check invalid elements.
-    $this->assertFalse($webform->getElementsInitialized());
-
-    // Check invalid element columns.
-    $this->assertEqual($webform->getElementsInitializedFlattenedAndHasValue(), []);
-
-    // Check for 3 submissions..
-    $this->assertEqual($this->submissionStorage->getTotal($webform), 4);
-
-    // Check delete.
-    $webform->delete();
-
-    // Check all 3 submissions deleted.
-    $this->assertEqual($this->submissionStorage->getTotal($webform), 0);
-
-    // Check that 'test' state was deleted with the webform.
-    $this->assertEqual(\Drupal::state()->get('webform.webform.' . $webform->id()), NULL);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformEntityTranslationTest.php b/modules/contrib/webform/src/Tests/WebformEntityTranslationTest.php
deleted file mode 100644
index fef62cc8..00000000
--- a/modules/contrib/webform/src/Tests/WebformEntityTranslationTest.php
+++ /dev/null
@@ -1,286 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\Core\Serialization\Yaml;
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform translation.
- *
- * @group Webform
- */
-class WebformEntityTranslationTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'webform', 'webform_ui', 'webform_test_translation'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Place blocks.
-    $this->placeBlocks();
-  }
-
-  /**
-   * Tests webform translate.
-   */
-  public function testTranslate() {
-    // Login admin user.
-    $this->drupalLogin($this->rootUser);
-
-    // Set [site:name] to 'Test Website' and translate it into Spanish.
-    $this->drupalPostForm('/admin/config/system/site-information', ['site_name' => 'Test Website'], t('Save configuration'));
-    $this->drupalPostForm('/admin/config/system/site-information/translate/es/add', ['translation[config_names][system.site][name]' => 'Sitio web de prueba'], t('Save translation'));
-
-    /** @var \Drupal\webform\WebformTranslationManagerInterface $translation_manager */
-    $translation_manager = \Drupal::service('webform.translation_manager');
-
-    $webform = Webform::load('test_translation');
-    $elements_raw = \Drupal::config('webform.webform.test_translation')->get('elements');
-    $elements = Yaml::decode($elements_raw);
-
-    // Check translate tab.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation');
-    $this->assertRaw('>Translate<');
-
-    // Check translations.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation/translate');
-    $this->assertRaw('<a href="' . base_path() . 'webform/test_translation"><strong>English (original)</strong></a>');
-    $this->assertRaw('<a href="' . base_path() . 'es/webform/test_translation" hreflang="es">Spanish</a>');
-    $this->assertNoRaw('<a href="' . base_path() . 'fr/webform/test_translation" hreflang="fr">French</a>');
-    $this->assertRaw('<a href="' . base_path() . 'admin/structure/webform/manage/test_translation/translate/es/edit">Edit</a>');
-
-    // Check Spanish translation.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation/translate/es/edit');
-    $this->assertFieldByName('translation[config_names][webform.webform.test_translation][title]', 'Prueba: Traducción');
-    $this->assertField('translation[config_names][webform.webform.test_translation][elements]');
-
-    // Check form builder is not translated.
-    $this->drupalGet('/es/admin/structure/webform/manage/test_translation');
-    $this->assertLink('Text field');
-    $this->assertNoLink('Campo de texto');
-
-    // Check form builder is not translated when reset.
-    $this->drupalPostAjaxForm('es/admin/structure/webform/manage/test_translation', [], ['op' => t('Reset')]);
-    $this->assertLink('Text field');
-    $this->assertNoLink('Campo de texto');
-
-    // Check element edit form is not translated.
-    $this->drupalGet('/es/admin/structure/webform/manage/test_translation/element/textfield/edit');
-    $this->assertFieldByName('properties[title]', 'Text field');
-    $this->assertNoFieldByName('properties[title]', 'Campo de texto');
-
-    // Check translated webform options.
-    $this->drupalGet('/es/webform/test_translation');
-    $this->assertRaw('<label for="edit-textfield">Campo de texto</label>');
-    $this->assertRaw('<option value="1">Uno</option>');
-    $this->assertRaw('<option value="4">Las cuatro</option>');
-
-    // Check translated webform custom composite.
-    $this->drupalGet('/es/webform/test_translation');
-    $this->assertRaw('<label>Compuesto</label>');
-    $this->assertRaw('<th class="composite-table--first_name webform-multiple-table--first_name">Nombre</th>');
-    $this->assertRaw('<th class="composite-table--last_name webform-multiple-table--last_name">Apellido</th>');
-    $this->assertRaw('<th class="composite-table--age webform-multiple-table--age">Edad</th>');
-    $this->assertRaw('<span class="field-suffix">años. antiguo</span>');
-
-    // Check translated webform address.
-    $this->drupalGet('/es/webform/test_translation');
-    $this->assertRaw('<span class="visually-hidden fieldset-legend">Dirección</span>');
-    $this->assertRaw('<label for="edit-address-address">Dirección</label>');
-    $this->assertRaw('<label for="edit-address-address-2">Dirección 2</label>');
-    $this->assertRaw('<label for="edit-address-city">Ciudad / Pueblo</label>');
-    $this->assertRaw('<label for="edit-address-state-province">Estado / Provincia</label>');
-    $this->assertRaw('<label for="edit-address-postal-code">ZIP / Código Postal</label>');
-    $this->assertRaw('<label for="edit-address-country">Acciones de país</label>');
-
-    // Check translated webform token.
-    $this->assertRaw('Site name: Sitio web de prueba');
-
-    // Check that webform is not translated into French.
-    $this->drupalGet('/fr/webform/test_translation');
-    $this->assertRaw('<label for="edit-textfield">Text field</label>');
-    $this->assertRaw('<option value="1">One</option>');
-    $this->assertRaw('<option value="4">Four</option>');
-    $this->assertRaw('Site name: Test Website');
-
-    // Check that French config elements returns the default languages elements.
-    // Please note: This behavior might change.
-    $translation_element = $translation_manager->getElements($webform, 'fr', TRUE);
-    $this->assertEqual($elements, $translation_element);
-
-    // Translate [site:name] into French.
-    $this->drupalPostForm('/admin/config/system/site-information/translate/fr/add', ['translation[config_names][system.site][name]' => 'Site Web de test'], t('Save translation'));
-
-    // Check default elements.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation/translate/fr/add');
-    $this->assertRaw('<textarea lang="fr" data-drupal-selector="edit-translation-config-names-webformwebformtest-translation-elements" aria-describedby="edit-translation-config-names-webformwebformtest-translation-elements--description" class="js-webform-codemirror webform-codemirror yaml form-textarea resize-vertical" data-webform-codemirror-mode="text/x-yaml" id="edit-translation-config-names-webformwebformtest-translation-elements" name="translation[config_names][webform.webform.test_translation][elements]" rows="48" cols="60">textfield:
-  &#039;#title&#039;: &#039;Text field&#039;
-select_options:
-  &#039;#title&#039;: &#039;Select (options)&#039;
-select_custom:
-  &#039;#title&#039;: &#039;Select (custom)&#039;
-  &#039;#options&#039;:
-    4: Four
-    5: Five
-    6: Six
-  &#039;#other__option_label&#039;: &#039;Custom number…&#039;
-details:
-  &#039;#title&#039;: Details
-markup:
-  &#039;#markup&#039;: &#039;This is some HTML markup.&#039;
-composite:
-  &#039;#title&#039;: Composite
-  &#039;#element&#039;:
-    first_name:
-      &#039;#title&#039;: &#039;First name&#039;
-    last_name:
-      &#039;#title&#039;: &#039;Last name&#039;
-    age:
-      &#039;#title&#039;: Age
-      &#039;#field_suffix&#039;: &#039; yrs. old&#039;
-address:
-  &#039;#title&#039;: Address
-  &#039;#address__title&#039;: Address
-  &#039;#address_2__title&#039;: &#039;Address 2&#039;
-  &#039;#city__title&#039;: City/Town
-  &#039;#state_province__title&#039;: State/Province
-  &#039;#postal_code__title&#039;: &#039;ZIP/Postal Code&#039;
-  &#039;#country__title&#039;: Country
-token:
-  &#039;#title&#039;: &#039;Computed (token)&#039;
-actions:
-  &#039;#title&#039;: &#039;Submit button(s)&#039;
-  &#039;#submit__label&#039;: &#039;Send message&#039;</textarea>
-</div>');
-
-    // Create French translation.
-    $translation_elements = [
-      'textfield' => [
-        '#title' => 'French',
-        '#custom' => 'custom',
-      ],
-      'custom' => [
-        '#title' => 'Custom',
-      ],
-    ] + $elements;
-    $edit = [
-      'translation[config_names][webform.webform.test_translation][elements]' => Yaml::encode($translation_elements),
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_translation/translate/fr/add', $edit, t('Save translation'));
-
-    // Check French translation.
-    $this->drupalGet('/fr/webform/test_translation');
-    $this->assertRaw('<label for="edit-textfield">French</label>');
-    $this->assertRaw('Site name: Site Web de test');
-
-    // Check translations.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation/translate');
-    $this->assertRaw('<a href="' . base_path() . 'webform/test_translation"><strong>English (original)</strong></a>');
-    $this->assertRaw('<a href="' . base_path() . 'es/webform/test_translation" hreflang="es">Spanish</a>');
-    $this->assertRaw('<a href="' . base_path() . 'fr/webform/test_translation" hreflang="fr">French</a>');
-
-    // Check French config elements only contains translated properties and
-    // custom properties are removed.
-    $translation_element = $translation_manager->getElements($webform, 'fr', TRUE);
-    $this->assertEqual(['textfield' => ['#title' => 'French']], $translation_element);
-
-    /**************************************************************************/
-    // Submissions.
-    /**************************************************************************/
-
-    // Check English table headers are not translated.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation/results/submissions');
-    $this->assertRaw('>Text field<');
-    $this->assertRaw('>Select (options)<');
-    $this->assertRaw('>Select (custom)<');
-    $this->assertRaw('>Composite<');
-
-    // Check Spanish table headers are translated.
-    $this->drupalGet('/es/admin/structure/webform/manage/test_translation/results/submissions');
-    $this->assertRaw('>Campo de texto<');
-    $this->assertRaw('>Seleccione (opciones)<');
-    $this->assertRaw('>Seleccione (personalizado)<');
-    $this->assertRaw('>Compuesto<');
-
-    // Create translated submissions.
-    $this->drupalPostForm('webform/test_translation', ['textfield' => 'English Submission'], 'Send message');
-    $this->drupalPostForm('es/webform/test_translation', ['textfield' => 'Spanish Submission'], 'Enviar mensaje');
-    $this->drupalPostForm('fr/webform/test_translation', ['textfield' => 'French Submission'], 'Send message');
-
-    // Check computed token is NOT translated for each language because only
-    // one language can be loaded for a config translation.
-    $this->drupalGet('/admin/structure/webform/manage/test_translation/results/submissions');
-    $this->assertRaw('Site name: Test Website');
-    $this->assertNoRaw('Site name: Sitio web de prueba');
-    $this->assertNoRaw('Site name: Sitio web de prueba');
-
-    /**************************************************************************/
-    // Site wide language.
-    /**************************************************************************/
-
-    // Make sure the site language is English (en).
-    \Drupal::configFactory()->getEditable('system.site')->set('default_langcode', 'en')->save();
-
-    $language_manager = \Drupal::languageManager();
-
-    $this->drupalGet('/webform/test_translation', ['language' => $language_manager->getLanguage('en')]);
-    $this->assertRaw('<label for="edit-textfield">Text field</label>');
-
-    // Check Spanish translation.
-    $this->drupalGet('/webform/test_translation', ['language' => $language_manager->getLanguage('es')]);
-    $this->assertRaw('<label for="edit-textfield">Campo de texto</label>');
-
-    // Check French translation.
-    $this->drupalGet('/webform/test_translation', ['language' => $language_manager->getLanguage('fr')]);
-    $this->assertRaw('<label for="edit-textfield">French</label>');
-
-    // Change site language to French (fr).
-    \Drupal::configFactory()->getEditable('system.site')->set('default_langcode', 'fr')->save();
-
-    // Check English translation.
-    $this->drupalGet('/webform/test_translation', ['language' => $language_manager->getLanguage('en')]);
-    $this->assertRaw('<label for="edit-textfield">Text field</label>');
-
-    // Check Spanish translation.
-    $this->drupalGet('/webform/test_translation', ['language' => $language_manager->getLanguage('es')]);
-    $this->assertRaw('<label for="edit-textfield">Campo de texto</label>');
-
-    // Check French translation.
-    $this->drupalGet('/webform/test_translation', ['language' => $language_manager->getLanguage('fr')]);
-    $this->assertRaw('<label for="edit-textfield">French</label>');
-
-    /**************************************************************************/
-
-    // Make sure the site language is English (en).
-    \Drupal::configFactory()->getEditable('system.site')->set('default_langcode', 'en')->save();
-
-    // Duplicate translated webform.
-    $edit = [
-      'title' => 'DUPLICATE',
-      'id' => 'duplicate',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_translation/duplicate', $edit, t('Save'));
-
-    // Check duplicate English translation.
-    $this->drupalGet('/webform/duplicate', ['language' => $language_manager->getLanguage('en')]);
-    $this->assertRaw('<label for="edit-textfield">Text field</label>');
-
-    // Check duplicate Spanish translation.
-    $this->drupalGet('/webform/duplicate', ['language' => $language_manager->getLanguage('es')]);
-    $this->assertRaw('<label for="edit-textfield">Campo de texto</label>');
-
-    // Check duplicate French translation.
-    $this->drupalGet('/webform/duplicate', ['language' => $language_manager->getLanguage('fr')]);
-    $this->assertRaw('<label for="edit-textfield">French</label>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformHelpTest.php b/modules/contrib/webform/src/Tests/WebformHelpTest.php
deleted file mode 100644
index c5c62fdd..00000000
--- a/modules/contrib/webform/src/Tests/WebformHelpTest.php
+++ /dev/null
@@ -1,69 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-/**
- * Tests for webform help.
- *
- * @group Webform
- */
-class WebformHelpTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['block', 'help', 'webform_test_message_custom'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    $this->drupalPlaceBlock('help_block');
-  }
-
-  /**
-   * Tests webform help.
-   */
-  public function testHelp() {
-    $this->drupalLogin($this->rootUser);
-
-    // Check notifications, promotion, and welcome messages displayed.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertRaw('This is a warning notification.');
-    $this->assertRaw('This is an info notification.');
-    $this->assertRaw('If you enjoy and value Drupal and the Webform module,');
-
-    // Close all notifications, promotion, and welcome messages.
-    $this->drupalGet('/admin/structure/webform');
-    $this->clickLink('×', 0);
-    $this->drupalGet('/admin/structure/webform');
-    $this->clickLink('×', 0);
-    $this->drupalGet('/admin/structure/webform');
-    $this->clickLink('×', 0);
-
-    // Check notifications, promotion, and welcome messages closed.
-    $this->drupalGet('/admin/structure/webform');
-    $this->assertNoRaw('This is a warning notification.');
-    $this->assertNoRaw('This is an info notification.');
-    $this->assertNoRaw('If you enjoy and value Drupal and the Webform module,');
-
-    // Check that help is enabled.
-    $this->drupalGet('/admin/structure/webform/config/advanced');
-    $this->assertRaw('block block-help block-help-block');
-    $this->assertRaw('The <strong>Advanced configuration</strong> page allows an administrator to enable/disable UI behaviors, manage requirements and define data used for testing webforms.');
-
-    // Disable help via the UI which will clear the cached help block.
-    $this->drupalPostForm('admin/structure/webform/config/advanced', ['ui[help_disabled]' => TRUE], t('Save configuration'));
-
-    // Check that help is disabled.
-    $this->drupalGet('/admin/structure/webform/config/advanced');
-    $this->assertNoRaw('block block-help block-help-block');
-    $this->assertNoRaw('The <strong>Advanced configuration</strong> page allows an administrator to enable/disable UI behaviors, manage requirements and define data used for testing webforms.');
-
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformLibrariesTest.php b/modules/contrib/webform/src/Tests/WebformLibrariesTest.php
deleted file mode 100644
index ebf65a7c..00000000
--- a/modules/contrib/webform/src/Tests/WebformLibrariesTest.php
+++ /dev/null
@@ -1,160 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-/**
- * Tests for webform libraries.
- *
- * @group Webform
- */
-class WebformLibrariesTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform_ui'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_libraries_optional'];
-
-  /**
-   * Tests webform libraries.
-   */
-  public function testLibraries() {
-    $optional_properties = [
-      'icheck' => 'properties[icheck]',
-      'input_mask' => 'properties[input_mask][select]',
-      'international_telephone' => 'properties[international]',
-      'international_telephone_composite' => 'properties[phone__international]',
-      'word_counter' => 'properties[counter_type]',
-      'select2' => 'properties[select2]',
-    ];
-
-    $this->drupalLogin($this->rootUser);
-
-    // Enable choices, jquery.chosen, and jquery.icheck.
-    $edit = [
-      'excluded_libraries[choices]' => TRUE,
-      'excluded_libraries[jquery.chosen]' => TRUE,
-      'excluded_libraries[jquery.icheck]' => TRUE,
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/libraries', $edit, t('Save configuration'));
-
-    // Check optional libraries are included.
-    $this->drupalGet('/webform/test_libraries_optional');
-    $this->assertRaw('/select2.min.js');
-    $this->assertRaw('/choices.min.js');
-    $this->assertRaw('/chosen.jquery.min.js');
-    $this->assertRaw('/textcounter.min.js');
-    $this->assertRaw('/intlTelInput.min.js');
-    $this->assertRaw('/jquery.inputmask.bundle.min.js');
-    $this->assertRaw('/icheck.js');
-    $this->assertRaw('/codemirror.js');
-    $this->assertRaw('/jquery.timepicker.min.js');
-
-    // Check optional libraries are properties accessible (#access = TRUE).
-    foreach ($optional_properties as $element_name => $input_name) {
-      $this->drupalGet("/admin/structure/webform/manage/test_libraries_optional/element/$element_name/edit");
-      $this->assertFieldByName($input_name);
-    }
-
-    // Exclude optional libraries.
-    $edit = [
-      'excluded_libraries[ckeditor.fakeobjects]' => FALSE,
-      'excluded_libraries[ckeditor.image]' => FALSE,
-      'excluded_libraries[ckeditor.link]' => FALSE,
-      'excluded_libraries[codemirror]' => FALSE,
-      'excluded_libraries[choices]' => FALSE,
-      'excluded_libraries[jquery.icheck]' => FALSE,
-      'excluded_libraries[jquery.inputmask]' => FALSE,
-      'excluded_libraries[jquery.intl-tel-input]' => FALSE,
-      'excluded_libraries[jquery.select2]' => FALSE,
-      'excluded_libraries[jquery.chosen]' => FALSE,
-      'excluded_libraries[jquery.timepicker]' => FALSE,
-      'excluded_libraries[jquery.textcounter]' => FALSE,
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/libraries', $edit, t('Save configuration'));
-
-    // Check optional libraries are excluded.
-    $this->drupalGet('/webform/test_libraries_optional');
-    $this->assertNoRaw('/select2.min.js');
-    $this->assertNoRaw('/choices.min.js');
-    $this->assertNoRaw('/chosen.jquery.min.js');
-    $this->assertNoRaw('/textcounter.min.js');
-    $this->assertNoRaw('/intlTelInput.min.js');
-    $this->assertNoRaw('/jquery.inputmask.bundle.min.js');
-    $this->assertNoRaw('/icheck.js');
-    $this->assertNoRaw('/codemirror.js');
-    $this->assertNoRaw('/jquery.timepicker.min.js');
-
-    // Check optional libraries are properties hidden (#access = FALSE).
-    foreach ($optional_properties as $element_name => $input_name) {
-      $this->drupalGet("admin/structure/webform/manage/test_libraries_optional/element/$element_name/edit");
-      $this->assertNoFieldByName($input_name);
-    }
-
-    // Check that status report excludes optional libraries.
-    $this->drupalGet('/admin/reports/status');
-    $this->assertNoText('CKEditor: Fakeobjects library ');
-    $this->assertNoText('CKEditor: Image library ');
-    $this->assertNoText('CKEditor: Link library ');
-    $this->assertNoText('Code Mirror library ');
-    $this->assertNoText('jQuery: iCheck library ');
-    $this->assertNoText('jQuery: Input Mask library ');
-    $this->assertNoText('jQuery: Select2 library ');
-    $this->assertNoText('jQuery: Choices library ');
-    $this->assertNoText('jQuery: Chosen library ');
-    $this->assertNoText('jQuery: Timepicker library ');
-    $this->assertNoText('jQuery: Text Counter library ');
-
-    // Issue #2934542: Fix broken Webform.Drupal\webform\Tests\WebformLibrariesTest
-    // @see https://www.drupal.org/project/webform/issues/2934542
-    /*
-    // Exclude element types that require libraries.
-    $edit = [
-      'excluded_elements[webform_location_geocomplete]' => FALSE,
-      'excluded_elements[webform_rating]' => FALSE,
-      'excluded_elements[webform_signature]' => FALSE,
-      'excluded_elements[webform_toggle]' => FALSE,
-      'excluded_elements[webform_toggles]' => FALSE,
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/elements', $edit, t('Save configuration'));
-
-    // Check that status report excludes libraries required by element types.
-    $this->drupalGet('/admin/reports/status');
-    $this->assertNoText('jQuery: Geocoding and Places Autocomplete Plugin library');
-    $this->assertNoText('jQuery: Image Picker library');
-    $this->assertNoText('jQuery: RateIt library');
-    $this->assertNoText('jQuery: Toggles library');
-    $this->assertNoText('Signature Pad library');
-    */
-
-    // Check that choices, chosen, and select2 using webform's CDN URLs.
-    $edit = [
-      'excluded_libraries[jquery.select2]' => TRUE,
-      'excluded_libraries[jquery.chosen]' => TRUE,
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/libraries', $edit, t('Save configuration'));
-    $this->drupalGet('/webform/test_libraries_optional');
-    $this->assertRaw('https://cdnjs.cloudflare.com/ajax/libs/chosen');
-    $this->assertRaw('https://cdnjs.cloudflare.com/ajax/libs/select2');
-
-    // Install chosen and select2 modules.
-    \Drupal::service('module_installer')->install(['chosen', 'chosen_lib', 'select2']);
-    drupal_flush_all_caches();
-
-    // Check that chosen and select2 using module's path and not CDN.
-    $this->drupalGet('/webform/test_libraries_optional');
-    $this->assertNoRaw('https://cdnjs.cloudflare.com/ajax/libs/chosen');
-    $this->assertNoRaw('https://cdnjs.cloudflare.com/ajax/libs/select2');
-    $this->assertRaw('/modules/contrib/chosen/css/chosen-drupal.css');
-    $this->assertRaw('/libraries/select2/dist/css/select2.min.css');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformOptionsTest.php b/modules/contrib/webform/src/Tests/WebformOptionsTest.php
deleted file mode 100644
index b113381a..00000000
--- a/modules/contrib/webform/src/Tests/WebformOptionsTest.php
+++ /dev/null
@@ -1,134 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\Core\Serialization\Yaml;
-use Drupal\webform\Entity\WebformOptions;
-
-/**
- * Tests for webform option entity.
- *
- * @group Webform
- */
-class WebformOptionsTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_options'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_options'];
-
-  /**
-   * Tests webform options entity.
-   */
-  public function testWebformOptions() {
-    $normal_user = $this->drupalCreateUser();
-
-    $admin_user = $this->drupalCreateUser([
-      'access site reports',
-      'administer site configuration',
-      'administer webform',
-      'create webform',
-      'administer users',
-    ]);
-
-    /**************************************************************************/
-
-    $this->drupalLogin($normal_user);
-
-    // Check get element options.
-    $yes_no_options = ['Yes' => 'Yes', 'No' => 'No'];
-    $element = ['#options' => $yes_no_options];
-    $this->assertEqual(WebformOptions::getElementOptions($element), $yes_no_options);
-    $element = ['#options' => 'yes_no'];
-    $this->assertEqual(WebformOptions::getElementOptions($element), $yes_no_options);
-    $element = ['#options' => 'not-found'];
-    $this->assertEqual(WebformOptions::getElementOptions($element), []);
-
-    $color_options = [
-      'red' => 'Red',
-      'white' => 'White',
-      'blue' => 'Blue',
-    ];
-
-    // Check get element options for manually defined options.
-    $element = ['#options' => $color_options];
-    $this->assertEqual(WebformOptions::getElementOptions($element), $color_options);
-
-    /** @var \Drupal\webform\WebformOptionsInterface $webform_options */
-    $webform_options = WebformOptions::create([
-      'langcode' => 'en',
-      'status' => TRUE,
-      'id' => 'test_flag',
-      'title' => 'Test flag',
-      'options' => Yaml::encode($color_options),
-    ]);
-    $webform_options->save();
-
-    // Check get options.
-    $this->assertEqual($webform_options->getOptions(), $color_options);
-
-    // Set invalid options.
-    $webform_options->set('options', "not\nvalid\nyaml")->save();
-
-    // Check invalid options.
-    $this->assertFalse($webform_options->getOptions());
-
-    // Check hook_webform_options_alter() && hook_webform_options_WEBFORM_OPTIONS_ID_alter().
-    // Check that the default value can be set from the alter hook.
-    $this->drupalGet('/webform/test_options');
-    $this->assertRaw('<select data-drupal-selector="edit-custom" id="edit-custom" name="custom" class="form-select"><option value="">- None -</option><option value="one" selected="selected">One</option><option value="two">Two</option><option value="three">Three</option></select>');
-    $this->assertRaw('<select data-drupal-selector="edit-test" id="edit-test" name="test" class="form-select"><option value="" selected="selected">- None -</option><option value="four">Four</option><option value="five">Five</option><option value="six">Six</option></select>');
-
-    // Check hook_webform_options_WEBFORM_OPTIONS_ID_alter() is not executed
-    // when options are altered.
-    $webform_test_options = WebformOptions::load('test');
-    $webform_test_options->set('options', Yaml::encode($color_options));
-    $webform_test_options->save();
-    $this->debug($webform_test_options->getOptions());
-
-    $this->drupalGet('/webform/test_options');
-    $this->assertRaw('<select data-drupal-selector="edit-test" id="edit-test" name="test" class="form-select"><option value="" selected="selected">- None -</option><option value="red">Red</option><option value="white">White</option><option value="blue">Blue</option><option value="four">Four</option><option value="five">Five</option><option value="six">Six</option></select>');
-
-    // Check custom options set via alter hook().
-    $this->drupalGet('/webform/test_options');
-    $this->assertRaw('<select data-drupal-selector="edit-test" id="edit-test" name="test" class="form-select"><option value="" selected="selected">- None -</option><option value="red">Red</option><option value="white">White</option><option value="blue">Blue</option><option value="four">Four</option><option value="five">Five</option><option value="six">Six</option></select>');
-
-    // Check that 'Afghanistan' is the first option.
-    $element = ['#options' => 'country_names'];
-    $options = WebformOptions::getElementOptions($element);
-    $this->assertEqual(reset($options), 'Afghanistan');
-
-    // Check that custom options can be customized.
-    $country_names_options = WebformOptions::load('country_names');
-    $country_names_options->set('options', Yaml::encode(['Switzerland' => 'Switzerland'] + $country_names_options->getOptions()));
-    $country_names_options->save();
-
-    // Check that 'Switzerland' is the now first option.
-    $element = ['#options' => 'country_names'];
-    $options = WebformOptions::getElementOptions($element);
-    $this->assertEqual(reset($options), 'Switzerland');
-
-    // Check admin user access denied.
-    $this->drupalGet('/admin/structure/webform/config/options/manage');
-    $this->assertResponse(403);
-    $this->drupalGet('/admin/structure/webform/config/options/manage/add');
-    $this->assertResponse(403);
-
-    // Check admin user access.
-    $this->drupalLogin($admin_user);
-    $this->drupalGet('/admin/structure/webform/config/options/manage');
-    $this->assertResponse(200);
-    $this->drupalGet('/admin/structure/webform/config/options/manage/add');
-    $this->assertResponse(200);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformRenderingTest.php b/modules/contrib/webform/src/Tests/WebformRenderingTest.php
deleted file mode 100644
index 1e6e31ed..00000000
--- a/modules/contrib/webform/src/Tests/WebformRenderingTest.php
+++ /dev/null
@@ -1,111 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform token submission value.
- *
- * @group Webform
- */
-class WebformRenderingTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_rendering'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filters.
-    $this->createFilters();
-
-    $this->drupalLogin($this->rootUser);
-  }
-
-  /**
-   * Test text format element.
-   */
-  public function testRendering() {
-    $webform = Webform::load('test_rendering');
-
-    /**************************************************************************/
-    // Preview.
-    /**************************************************************************/
-
-    $this->drupalPostForm('webform/test_rendering', [], t('Preview'));
-
-    // Check preview submission_label.
-    $this->assertRaw('submission &lt;em&gt;label&lt;/em&gt; (&amp;&gt;&lt;#)');
-
-    // Check preview textfield_plain_text.
-    $this->assertRaw('{prefix}{default_value}{suffix}');
-
-    // Check preview textfield_markup.
-    $this->assertRaw('<label><em>textfield_markup</em></label>');
-    $this->assertRaw('<em>{prefix}</em>{default_value}<em>{suffix}</em>');
-
-    // Check preview textfield_special_characters.
-    $this->assertRaw('<label>textfield_special_characters (&amp;&gt;&lt;#)</label>');
-    $this->assertRaw('(&amp;&gt;&lt;#){default_value}(&amp;&gt;&lt;#)');
-
-    // Check preview text_format_basic_html.
-    $this->assertRaw('<p><em>{default_value}</em></p>');
-
-    // Create a submission.
-    $sid = $this->postSubmission($webform);
-
-    /**************************************************************************/
-    // Emails.
-    /**************************************************************************/
-
-    // Get sent emails.
-    $sent_emails = $this->drupalGetMails();
-    $html_email = $sent_emails[0];
-    $text_email = $sent_emails[1];
-
-    // Check HTML email.
-    $this->assertEqual($html_email['subject'], 'submission label (&>');
-    $this->assertEqual($html_email['params']['subject'], 'submission <em>label</em> (&><#)');
-    $this->assertContains('<b>submission_label</b><br />submission &lt;em&gt;label&lt;/em&gt; (&amp;&gt;&lt;#)<br /><br />', $html_email['params']['body']);
-    $this->assertContains('<b>textfield_plain_text</b><br />{prefix}{default_value}{suffix}<br /><br />', $html_email['params']['body']);
-    $this->assertContains('<b><em>textfield_markup</em></b><br /><em>{prefix}</em>{default_value}<em>{suffix}</em><br /><br />', $html_email['params']['body']);
-    $this->assertContains('<b>textfield_special_characters (&amp;&gt;&lt;#)</b><br />(&amp;&gt;&lt;#){default_value}(&amp;&gt;&lt;#)<br /><br />', $html_email['params']['body']);
-    $this->assertContains('<b>text_format_basic_html</b><br /><p><em>{default_value}</em></p><br /><br />', $html_email['params']['body']);
-
-    // Check plain text email.
-    $this->assertEqual($text_email['subject'], 'submission label (&>');
-    $this->assertEqual($text_email['params']['subject'], 'submission <em>label</em> (&><#)');
-    $this->assertContains('submission_label: submission <em>label</em> (&><#)', $text_email['params']['body']);
-    $this->assertContains('textfield_plain_text: {prefix}{default_value}{suffix}', $text_email['params']['body']);
-    $this->assertContains('textfield_markup: {prefix}{default_value}{suffix}', $text_email['params']['body']);
-    $this->assertContains('textfield_special_characters (&>: (&>{default_value}(&>', $text_email['params']['body']);
-    $this->assertContains('text_format_basic_html:', $text_email['params']['body']);
-    $this->assertContains('/{default_value}/', $text_email['params']['body']);
-
-    /**************************************************************************/
-    // Submission.
-    /**************************************************************************/
-
-    // Check view submission.
-    $this->drupalGet("admin/structure/webform/manage/test_rendering/submission/$sid");
-
-    // Check submission label token replacements.
-    $this->assertRaw('<h1 class="page-title">submission &lt;em&gt;label&lt;/em&gt; (&amp;&gt;&lt;#)</h1>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformResultsDisabledTest.php b/modules/contrib/webform/src/Tests/WebformResultsDisabledTest.php
deleted file mode 100644
index b1e28c8e..00000000
--- a/modules/contrib/webform/src/Tests/WebformResultsDisabledTest.php
+++ /dev/null
@@ -1,105 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform results disabled.
- *
- * @group Webform
- */
-class WebformResultsDisabledTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_results_disabled'];
-
-  /**
-   * Tests webform setting including confirmation.
-   */
-  public function testSettings() {
-    $this->drupalLogin($this->rootUser);
-
-    // Check results disabled.
-    $webform_results_disabled = Webform::load('test_form_results_disabled');
-    $webform_submission = $this->postSubmission($webform_results_disabled);
-    $this->assertFalse($webform_submission, 'Submission not saved to the database.');
-
-    // Check that error message is displayed and form is available for admins.
-    $this->drupalGet('/webform/test_form_results_disabled');
-    $this->assertRaw(t('This webform is currently not saving any submitted data.'));
-    $this->assertFieldByName('op', 'Submit');
-    $this->assertNoRaw(t('Unable to display this webform. Please contact the site administrator.'));
-
-    // Check that error message not displayed and form is disabled for everyone.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_form_results_disabled');
-    $this->assertNoRaw(t('This webform is currently not saving any submitted data.'));
-    $this->assertNoFieldByName('op', 'Submit');
-    $this->assertRaw(t('Unable to display this webform. Please contact the site administrator.'));
-
-    // Enabled ignore disabled results.
-    $webform_results_disabled->setSetting('results_disabled_ignore', TRUE);
-    $webform_results_disabled->save();
-    $this->drupalLogin($this->rootUser);
-
-    // Check that no error message is displayed and form is available for admins.
-    $this->drupalGet('/webform/test_form_results_disabled');
-    $this->assertNoRaw(t('This webform is currently not saving any submitted data.'));
-    $this->assertNoRaw(t('Unable to display this webform. Please contact the site administrator.'));
-    $this->assertFieldByName('op', 'Submit');
-
-    // Check that results tab is not accessible.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_results_disabled/results/submissions');
-    $this->assertResponse(403);
-
-    // Check that error message not displayed and form is enabled for everyone.
-    $this->drupalLogout();
-    $this->drupalGet('/webform/test_form_results_disabled');
-    $this->assertNoRaw(t('This webform is currently not saving any submitted data.'));
-    $this->assertNoRaw(t('Unable to display this webform. Please contact the site administrator.'));
-    $this->assertFieldByName('op', 'Submit');
-
-    // Unset disabled results.
-    $webform_results_disabled->setSetting('results_disabled', FALSE);
-    $webform_results_disabled->save();
-
-    // Login admin.
-    $this->drupalLogin($this->rootUser);
-
-    // Check that results tab is accessible.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_results_disabled/results/submissions');
-    $this->assertResponse(200);
-
-    // Post a submission.
-    $sid = $this->postSubmissionTest($webform_results_disabled);
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check that submission is available.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_results_disabled/results/submissions');
-    $this->assertNoRaw('This webform is currently not saving any submitted data');
-    $this->assertRaw('>' . $webform_submission->serial() . '<');
-
-    // Set disabled results.
-    $webform_results_disabled->setSetting('results_disabled', TRUE);
-    $webform_results_disabled->save();
-
-    // Check that submission is still available with warning.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_results_disabled/results/submissions');
-    $this->assertRaw('This webform is currently not saving any submitted data');
-    $this->assertRaw('>' . $webform_submission->serial() . '<');
-
-    // Delete the submission.
-    $webform_submission->delete();
-
-    // Check that results tab is not accessible.
-    $this->drupalGet('/admin/structure/webform/manage/test_form_results_disabled/results/submissions');
-    $this->assertResponse(403);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformResultsExportDownloadTest.php b/modules/contrib/webform/src/Tests/WebformResultsExportDownloadTest.php
deleted file mode 100644
index 63033e32..00000000
--- a/modules/contrib/webform/src/Tests/WebformResultsExportDownloadTest.php
+++ /dev/null
@@ -1,111 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\Core\Archiver\ArchiveTar;
-use Drupal\file\Entity\File;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform results export download.
- *
- * @group Webform
- */
-class WebformResultsExportDownloadTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'locale', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element_managed_file'];
-
-  /**
-   * Tests download files.
-   */
-  public function testDownloadFiles() {
-    $this->drupalLogin($this->rootUser);
-
-    /** @var \Drupal\webform\WebformInterface $webform_managed_file */
-    $webform_managed_file = Webform::load('test_element_managed_file');
-
-    /** @var \Drupal\webform\WebformSubmissionExporterInterface $submission_exporter */
-    $submission_exporter = \Drupal::service('webform_submission.exporter');
-    $submission_exporter->setWebform($webform_managed_file);
-    $submission_exporter->setExporter();
-
-    $sids = [];
-    $sids[] = $this->postSubmissionTest($webform_managed_file);
-    $sids[] = $this->postSubmissionTest($webform_managed_file);
-    $sids[] = $this->postSubmissionTest($webform_managed_file);
-
-    /* Download CSV */
-
-    // Download tar ball archive with CSV.
-    $edit = ['files' => TRUE];
-    $this->drupalPostForm('admin/structure/webform/manage/test_element_managed_file/results/download', $edit, t('Download'));
-
-    // Load the tar and get a list of files.
-    $tar = new ArchiveTar($submission_exporter->getArchiveFilePath(), 'gz');
-    $files = [];
-    $content_list = $tar->listContent();
-    foreach ($content_list as $file) {
-      $files[$file['filename']] = $file['filename'];
-    }
-
-    // Check that CSV file exists.
-    $this->assert(isset($files['test_element_managed_file/test_element_managed_file.csv']));
-
-    // Check submission file directories.
-    /** @var \Drupal\webform\WebformSubmissionInterface[] $submissions */
-    $submissions = WebformSubmission::loadMultiple($sids);
-    foreach ($submissions as $submission) {
-      $serial = $submission->serial();
-      $fid = $submission->getElementData('managed_file_single');
-      $filename = File::load($fid)->getFilename();
-
-      $this->assert(isset($files["submission-$serial/$filename"]));
-    }
-
-    /* Download YAML */
-
-    // Download tar ball archive with YAML documents.
-    $edit = [
-      'files' => TRUE,
-      'exporter' => 'yaml',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/test_element_managed_file/results/download', $edit, t('Download'));
-
-    // Load the tar and get a list of files.
-    $tar = new ArchiveTar($submission_exporter->getArchiveFilePath(), 'gz');
-    $files = [];
-    $content_list = $tar->listContent();
-    foreach ($content_list as $file) {
-      $files[$file['filename']] = $file['filename'];
-    }
-
-    // Check that CSV file does not exists.
-    $this->assert(!isset($files['test_element_managed_file/test_element_managed_file.csv']));
-
-    // Check submission file directories.
-    /** @var \Drupal\webform\WebformSubmissionInterface[] $submissions */
-    $submissions = WebformSubmission::loadMultiple($sids);
-    foreach ($submissions as $submission) {
-      $serial = $submission->serial();
-      $fid = $submission->getElementData('managed_file_single');
-      $filename = File::load($fid)->getFilename();
-
-      $this->assert(isset($files["submission-$serial.yml"]));
-      $this->assert(isset($files["submission-$serial/$filename"]));
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformResultsExportOptionsTest.php b/modules/contrib/webform/src/Tests/WebformResultsExportOptionsTest.php
deleted file mode 100644
index ccd11509..00000000
--- a/modules/contrib/webform/src/Tests/WebformResultsExportOptionsTest.php
+++ /dev/null
@@ -1,226 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform results export.
- *
- * @group Webform
- */
-class WebformResultsExportOptionsTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'locale', 'webform', 'webform_test_submissions'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submissions'];
-
-  /**
-   * Tests export options.
-   */
-  public function testExportOptions() {
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /**************************************************************************/
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_submissions');
-    /** @var \Drupal\webform\WebformSubmissionInterface[] $submissions */
-    $submissions = array_values(\Drupal::entityTypeManager()->getStorage('webform_submission')->loadByProperties(['webform_id' => 'test_submissions']));
-    /** @var \Drupal\node\NodeInterface[] $node */
-    $nodes = array_values(\Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['type' => 'webform_test_submissions']));
-
-    $this->drupalLogin($admin_submission_user);
-
-    // Check default options.
-    $this->getExport($webform);
-    $this->assertRaw('"First name","Last name"');
-    $this->assertRaw('George,Washington');
-    $this->assertRaw('Abraham,Lincoln');
-    $this->assertRaw('Hillary,Clinton');
-
-    // Check special characters.
-    $this->assertRaw("quotes' \"\"", "html <markup>");
-
-    // Check delimiter.
-    $this->getExport($webform, ['delimiter' => '|']);
-    $this->assertRaw('"First name"|"Last name"');
-    $this->assertRaw('George|Washington');
-
-    // Check header keys = label.
-    $this->getExport($webform, ['header_format' => 'label']);
-    $this->assertRaw('"First name","Last name"');
-
-    // Check header keys = key.
-    $this->getExport($webform, ['header_format' => 'key']);
-    $this->assertRaw('first_name,last_name');
-
-    // Check options format compact.
-    $this->getExport($webform, ['options_single_format' => 'compact', 'options_multiple_format' => 'compact']);
-    $this->assertRaw('"Flag colors"');
-    $this->assertRaw('Red;White;Blue');
-
-    // Check options format separate.
-    $this->getExport($webform, ['options_single_format' => 'separate', 'options_multiple_format' => 'separate']);
-    $this->assertRaw('"Flag colors: Red","Flag colors: White","Flag colors: Blue"');
-    $this->assertNoRaw('"Flag colors"');
-    $this->assertRaw('X,X,X');
-    $this->assertNoRaw('Red;White;Blue');
-
-    // Check options item format label.
-    $this->getExport($webform, ['options_item_format' => 'label']);
-    $this->assertRaw('Red;White;Blue');
-
-    // Check options item format key.
-    $this->getExport($webform, ['options_item_format' => 'key']);
-    $this->assertNoRaw('Red;White;Blue');
-    $this->assertRaw('red;white;blue');
-
-    // Check multiple delimiter.
-    $this->getExport($webform, ['multiple_delimiter' => '|']);
-    $this->assertRaw('Red|White|Blue');
-    $this->getExport($webform, ['multiple_delimiter' => ',']);
-    $this->assertRaw('"Red,White,Blue"');
-
-    // Check entity reference format link.
-    $this->getExport($webform, ['entity_reference_items' => 'id,title,url']);
-    $this->assertRaw('"Favorite node: ID","Favorite node: Title","Favorite node: URL"');
-    $this->assertRaw('' . $nodes[0]->id() . ',"' . $nodes[0]->label() . '",' . $nodes[0]->toUrl('canonical', ['absolute' => TRUE])->toString());
-
-    // Check entity reference format title and url.
-    $this->getExport($webform, ['entity_reference_items' => 'id']);
-    $this->getExport($webform, ['entity_reference_items' => 'title,url']);
-    $this->assertNoRaw('"Favorite node: ID","Favorite node: Title","Favorite node: URL"');
-    $this->assertNoRaw('' . $nodes[0]->id() . ',"' . $nodes[0]->label() . '",' . $nodes[0]->toUrl('canonical', ['absolute' => TRUE])->toString());
-    $this->assertRaw('"Favorite node: Title","Favorite node: URL"');
-    $this->assertRaw('"' . $nodes[0]->label() . '",' . $nodes[0]->toUrl('canonical', ['absolute' => TRUE])->toString());
-
-    // Check likert questions format label.
-    $this->getExport($webform, ['header_format' => 'label']);
-    $this->assertRaw('"Likert: Question 1","Likert: Question 2","Likert: Question 3"');
-
-    // Check likert questions format key.
-    $this->getExport($webform, ['header_format' => 'key']);
-    $this->assertNoRaw('"Likert: Question 1","Likert: Question 2","Likert: Question 3"');
-    $this->assertRaw('likert__q1,likert__q2,likert__q3');
-
-    // Check likert answers format label.
-    $this->getExport($webform, ['likert_answers_format' => 'label']);
-    $this->assertRaw('"Answer 1","Answer 1","Answer 1"');
-
-    // Check likert answers format key.
-    $this->getExport($webform, ['likert_answers_format' => 'key']);
-    $this->assertNoRaw('"Option 1","Option 1","Option 1"');
-    $this->assertRaw('1,1,1');
-
-    // Check composite w/o header prefix.
-    $this->getExport($webform, ['header_format' => 'label', 'header_prefix' => TRUE]);
-    $this->assertRaw('"Address: Address","Address: Address 2","Address: City/Town","Address: State/Province","Address: ZIP/Postal Code","Address: Country"');
-
-    // Check composite w header prefix.
-    $this->getExport($webform, ['header_format' => 'label', 'header_prefix' => FALSE]);
-    $this->assertRaw('Address,"Address 2",City/Town,State/Province,"ZIP/Postal Code",Country');
-
-    // Check limit.
-    $this->getExport($webform, ['range_type' => 'latest', 'range_latest' => 2]);
-    $this->assertRaw('Hillary,Clinton');
-    $this->assertNoRaw('George,Washington');
-    $this->assertNoRaw('Abraham,Lincoln');
-
-    // Check sort ASC.
-    $this->getExport($webform, ['order' => 'asc']);
-    $this->assertPattern('/George.*Abraham.*Hillary/ms');
-
-    // Check sort DESC.
-    $this->getExport($webform, ['order' => 'desc']);
-    $this->assertPattern('/Hillary.*Abraham.*George/ms');
-
-    // Check sid start.
-    $this->getExport($webform, ['range_type' => 'sid', 'range_start' => $submissions[1]->id()]);
-    $this->assertNoRaw('George,Washington');
-    $this->assertRaw('Abraham,Lincoln');
-    $this->assertRaw('Hillary,Clinton');
-
-    // Check sid range.
-    $this->getExport($webform, ['range_type' => 'sid', 'range_start' => $submissions[1]->id(), 'range_end' => $submissions[1]->id()]);
-    $this->assertNoRaw('George,Washington');
-    $this->assertRaw('Abraham,Lincoln');
-    $this->assertNoRaw('Hillary,Clinton');
-
-    // Check date range.
-    $this->getExport($webform, ['range_type' => 'date', 'range_start' => '2000-01-01', 'range_end' => '2001-01-01']);
-    $this->assertRaw('George,Washington');
-    $this->assertRaw('Abraham,Lincoln');
-    $this->assertNoRaw('Hillary,Clinton');
-
-    // Check entity type and id hidden.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/download');
-    $this->assertNoFieldById('edit-entity-type');
-
-    // Change submission 0 & 1 to be submitted user account.
-    $submissions[0]->set('entity_type', 'user')->set('entity_id', '1')->save();
-    $submissions[1]->set('entity_type', 'user')->set('entity_id', '2')->save();
-
-    // Check entity type and id visible.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/download');
-    $this->assertFieldById('edit-entity-type');
-
-    // Check entity type limit.
-    $this->getExport($webform, ['entity_type' => 'user']);
-    $this->assertRaw('George,Washington');
-    $this->assertRaw('Abraham,Lincoln');
-    $this->assertNoRaw('Hillary,Clinton');
-
-    // Check entity type and id limit.
-    $this->getExport($webform, ['entity_type' => 'user', 'entity_id' => '1']);
-    $this->assertRaw('George,Washington');
-    $this->assertNoRaw('Abraham,Lincoln');
-    $this->assertNoRaw('Hillary,Clinton');
-
-    $this->drupalLogin($this->rootUser);
-
-    // Check changing default exporter to 'table' settings.
-    $edit = [
-      'exporter' => 'table',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/download', $edit, t('Download'));
-    $this->assertRaw('<body><table border="1"><thead><tr bgcolor="#cccccc" valign="top"><th>Serial number</th>');
-    $this->assertPattern('#<td>George</td>\s+<td>Washington</td>\s+<td>Male</td>#ms');
-
-    // Check changing default export (delimiter) settings.
-    $edit = [
-      'exporter' => 'delimited',
-      'exporters[delimited][delimiter]' => '|',
-    ];
-    $this->drupalPostForm('admin/structure/webform/config/exporters', $edit, t('Save configuration'));
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/download', [], t('Download'));
-    $this->assertRaw('"Submission ID"|"Submission URI"');
-
-    // Check saved webform export (delimiter) settings.
-    $edit = [
-      'exporter' => 'delimited',
-      'exporters[delimited][delimiter]' => '.',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/download', $edit, t('Save settings'));
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/download', [], t('Download'));
-    $this->assertRaw('"Submission ID"."Submission URI"');
-
-    // Check delete webform export (delimiter) settings.
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/download', [], t('Reset settings'));
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/download', [], t('Download'));
-    $this->assertRaw('"Submission ID"|"Submission URI"');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionApiTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionApiTest.php
deleted file mode 100644
index e8d138fb..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionApiTest.php
+++ /dev/null
@@ -1,187 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Utility\WebformElementHelper;
-use Drupal\webform\WebformSubmissionForm;
-use Drupal\webform\WebformSubmissionInterface;
-
-/**
- * Tests for webform submission API.
- *
- * @group Webform
- */
-class WebformSubmissionApiTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_advanced', 'test_form_limit'];
-
-  /**
-   * Test webform API.
-   */
-  public function testApi() {
-    $normal_user = $this->drupalCreateUser();
-
-    $contact_webform = Webform::load('contact');
-
-    /**************************************************************************/
-    // Basic form.
-    /**************************************************************************/
-
-    // Check submitting a simple webform.
-    $values = [
-      'webform_id' => 'contact',
-      'data' => [
-        'name' => 'Dixisset',
-        'company' => 'Dixisset',
-        'email' => 'test@test.com',
-        'subject' => 'Testing contact webform from [site:name]',
-        'message' => 'Please ignore this email.',
-      ],
-    ];
-    $webform_submission = WebformSubmissionForm::submitFormValues($values);
-    $this->assertEqual($webform_submission->id(), $this->getLastSubmissionId($contact_webform));
-
-    // Check validating a simple webform.
-    $values = [
-      'webform_id' => 'contact',
-      'data' => [
-        'email' => 'invalid',
-      ],
-    ];
-    $errors = WebformSubmissionForm::validateFormValues($values);
-    WebformElementHelper::convertRenderMarkupToStrings($errors);
-    $this->assertEqual($errors, [
-      'name' => 'Your Name field is required.',
-      'email' => 'The email address <em class="placeholder">invalid</em> is not valid.',
-      'subject' => 'Subject field is required.',
-      'message' => 'Message field is required.',
-    ]);
-
-    // Check validation occurs for drafts simple webform.
-    $values = [
-      'webform_id' => 'contact',
-      'in_draft' => TRUE,
-      'data' => [],
-    ];
-    $errors = WebformSubmissionForm::validateFormValues($values);
-    if ($errors) {
-      WebformElementHelper::convertRenderMarkupToStrings($errors);
-    }
-    $this->assertEqual($errors, [
-      'name' => 'Your Name field is required.',
-      'email' => 'Your Email field is required.',
-      'subject' => 'Subject field is required.',
-      'message' => 'Message field is required.',
-    ]);
-
-    // Check validation is skipped when saving drafts simple webform.
-    $values = [
-      'webform_id' => 'contact',
-      'in_draft' => TRUE,
-      'data' => [],
-    ];
-    $webform_submission = WebformSubmissionForm::submitFormValues($values);
-    $this->assert($webform_submission instanceof WebformSubmissionInterface);
-
-    /**************************************************************************/
-    // Multistep form.
-    /**************************************************************************/
-
-    $test_form_wizard_advanced_webform = Webform::load('test_form_wizard_advanced');
-
-    // Check submitting a multi-step form with required fields.
-    $values = [
-      'webform_id' => 'test_form_wizard_advanced',
-      'data' => [
-        'first_name' => 'Ringo',
-        'last_name' => 'Starr',
-        'gender' => 'Male',
-        'email' => 'example@example.com',
-        'phone' => '123-456-7890',
-        'comments' => 'Huius, Lyco, oratione locuples, rebus ipsis ielunior. Duo Reges: constructio interrete. Sed haec in pueris; Sed utrum hortandus es nobis, Luci, inquit, an etiam tua sponte propensus es? Sapiens autem semper beatus est et est aliquando in dolore; Immo videri fortasse. Paulum, cum regem Persem captum adduceret, eodem flumine invectio? Et ille ridens: Video, inquit, quid agas;',
-      ],
-    ];
-    $webform_submission = WebformSubmissionForm::submitFormValues($values);
-    $this->assertEqual($webform_submission->id(), $this->getLastSubmissionId($test_form_wizard_advanced_webform));
-
-    // Check validating a multi-step form with required fields.
-    $values = [
-      'webform_id' => 'test_form_wizard_advanced',
-      'data' => [
-        'email' => 'invalid',
-      ],
-    ];
-    $errors = WebformSubmissionForm::validateFormValues($values);
-    WebformElementHelper::convertRenderMarkupToStrings($errors);
-    // $this->debug($errors);
-    $this->assertEqual($errors, [
-      'email' => 'The email address <em class="placeholder">invalid</em> is not valid.',
-    ]);
-
-    // Check validating a multi-step form with invalid #options.
-    $values = [
-      'webform_id' => 'test_form_wizard_advanced',
-      'data' => [
-        'first_name' => 'Ringo',
-        'last_name' => 'Starr',
-        'gender' => 'INVALID',
-        'email' => 'example@example.com',
-        'phone' => '123-456-7890',
-        'comments' => 'Huius, Lyco, oratione locuples, rebus ipsis ielunior. Duo Reges: constructio interrete. Sed haec in pueris; Sed utrum hortandus es nobis, Luci, inquit, an etiam tua sponte propensus es? Sapiens autem semper beatus est et est aliquando in dolore; Immo videri fortasse. Paulum, cum regem Persem captum adduceret, eodem flumine invectio? Et ille ridens: Video, inquit, quid agas;',
-      ],
-    ];
-    $errors = WebformSubmissionForm::validateFormValues($values);
-    WebformElementHelper::convertRenderMarkupToStrings($errors);
-    // $this->debug($errors);
-    $this->assertEqual($errors, [
-      'gender' => 'An illegal choice has been detected. Please contact the site administrator.',
-    ]);
-
-    /**************************************************************************/
-    // Submission limit form.
-    /**************************************************************************/
-
-    $this->drupalLogin($normal_user);
-
-    $test_form_limit_webform = Webform::load('test_form_limit');
-
-    // Check that the form is open.
-    $this->assertTrue(WebformSubmissionForm::isOpen($test_form_limit_webform));
-
-    // Check submitting a form limited to 1 submission per user.
-    $values = [
-      'webform_id' => 'test_form_limit',
-      'data' => [
-        'name' => 'Oratione',
-      ],
-    ];
-    $webform_submission = WebformSubmissionForm::submitFormValues($values);
-    $this->assertEqual($webform_submission->id(), $this->getLastSubmissionId($test_form_limit_webform));
-
-    // Check that user limit is reached.
-    $result = WebformSubmissionForm::isOpen($test_form_limit_webform);
-    $this->assertEqual($result['#markup'], 'You are only allowed to have 1 submission for this webform.');
-
-    // Submit the form 3 more times to trigger the form total limit.
-    $this->drupalLogin($this->rootUser);
-    WebformSubmissionForm::submitFormValues($values);
-    WebformSubmissionForm::submitFormValues($values);
-    WebformSubmissionForm::submitFormValues($values);
-
-    // Check that total limit is reached.
-    $result = WebformSubmissionForm::isOpen($test_form_limit_webform);
-    $this->assertEqual($result['#markup'], 'Only 4 submissions are allowed.');
-
-    // Check form closed message.
-    $test_form_limit_webform->setStatus(FALSE)->save();
-    $result = WebformSubmissionForm::isOpen($test_form_limit_webform);
-    $this->assertEqual($result['#markup'], 'Sorry… This form is closed to new submissions.');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionGenerateTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionGenerateTest.php
deleted file mode 100644
index 809b305c..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionGenerateTest.php
+++ /dev/null
@@ -1,65 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform submission generator.
- *
- * @group Webform
- */
-class WebformSubmissionGenerateTest extends WebformTestBase {
-
-  /**
-   * Tests webform submission entity.
-   */
-  public function testWebformSubmissionGenerate() {
-    $this->drupalLogin($this->rootUser);
-
-    $webform = Webform::load('contact');
-
-    /**************************************************************************/
-    // Test tab.
-    /**************************************************************************/
-
-    // Check test form.
-    $sid = $this->postSubmissionTest($webform);
-    $webform_submission = WebformSubmission::load($sid);
-    // Note that only 'message' and 'subject' have predefined #test values.
-    $test_data = [
-      'message' => 'Please ignore this email.',
-      'subject' => 'Testing contact webform from Drupal',
-    ];
-    $data = $webform_submission->getData();
-    $this->assertEqual($data['message'], $test_data['message']);
-    $this->assertEqual($data['subject'], $test_data['subject']);
-
-    // Check test form classes and values.
-    $this->drupalGet('/webform/contact/test');
-    $this->assertCssSelect('.webform-submission-form.webform-submission-test-form.webform-submission-contact-form.webform-submission-contact-test-form');
-    foreach ($test_data as $name => $value) {
-      $this->assertFieldByName($name, $value);
-    }
-
-    /**************************************************************************/
-    // Test querystring parameter.
-    /**************************************************************************/
-
-    // Check add form classes and empty values.
-    $this->drupalGet('/webform/contact');
-    $this->assertCssSelect('.webform-submission-form.webform-submission-add-form.webform-submission-contact-form.webform-submission-contact-add-form');
-    foreach ($test_data as $name => $value) {
-      $this->assertNoFieldByName($name, $value);
-    }
-
-    // Check add form classes and values with querystring parameter.
-    $this->drupalGet('/webform/contact', ['query' => ['_webform_test' => 'contact']]);
-    $this->assertCssSelect('.webform-submission-form.webform-submission-test-form.webform-submission-contact-form.webform-submission-contact-test-form');
-    foreach ($test_data as $name => $value) {
-      $this->assertFieldByName($name, $value);
-    }
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionListBuilderTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionListBuilderTest.php
deleted file mode 100644
index 200a6100..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionListBuilderTest.php
+++ /dev/null
@@ -1,250 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform submission list builder.
- *
- * @group Webform
- */
-class WebformSubmissionListBuilderTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'webform', 'webform_test_submissions'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submissions'];
-
-  /**
-   * Tests results.
-   */
-  public function testResults() {
-    global $base_path;
-
-    $admin_user = $this->drupalCreateUser([
-      'administer webform',
-    ]);
-
-    $own_submission_user = $this->drupalCreateUser([
-      'view own webform submission',
-      'edit own webform submission',
-      'delete own webform submission',
-      'access webform submission user',
-    ]);
-
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_submissions');
-
-    /** @var \Drupal\webform\WebformSubmissionInterface[] $submissions */
-    $submissions = array_values(\Drupal::entityTypeManager()->getStorage('webform_submission')->loadByProperties(['webform_id' => 'test_submissions']));
-
-    /**************************************************************************/
-
-    // Login the own submission user.
-    $this->drupalLogin($own_submission_user);
-
-    // Make the second submission to be starred (aka sticky).
-    $submissions[1]->setSticky(TRUE)->save();
-
-    // Make the third submission to be locked.
-    $submissions[2]->setLocked(TRUE)->save();
-
-    $this->drupalLogin($admin_submission_user);
-
-    /* Filter */
-
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-
-    // Check state options with totals.
-    $this->assertRaw('<select data-drupal-selector="edit-state" id="edit-state" name="state" class="form-select"><option value="" selected="selected">All [4]</option><option value="starred">Starred [1]</option><option value="unstarred">Unstarred [3]</option><option value="locked">Locked [1]</option><option value="unlocked">Unlocked [3]</option></select>');
-
-    // Check results with no filtering.
-    $this->assertLinkByHref($submissions[0]->toUrl()->toString());
-    $this->assertLinkByHref($submissions[1]->toUrl()->toString());
-    $this->assertLinkByHref($submissions[2]->toUrl()->toString());
-    $this->assertRaw($submissions[0]->getElementData('first_name'));
-    $this->assertRaw($submissions[1]->getElementData('first_name'));
-    $this->assertRaw($submissions[2]->getElementData('first_name'));
-    $this->assertNoFieldById('edit-reset', 'reset');
-
-    // Check results filtered by uuid.
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/submissions', ['search' => $submissions[0]->get('uuid')->value], t('Filter'));
-    $this->assertUrl('admin/structure/webform/manage/' . $webform->id() . '/results/submissions?search=' . $submissions[0]->get('uuid')->value);
-    $this->assertRaw($submissions[0]->getElementData('first_name'));
-    $this->assertNoRaw($submissions[1]->getElementData('first_name'));
-    $this->assertNoRaw($submissions[2]->getElementData('first_name'));
-
-    // Check results filtered by key(word).
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/submissions', ['search' => $submissions[0]->getElementData('first_name')], t('Filter'));
-    $this->assertUrl('admin/structure/webform/manage/' . $webform->id() . '/results/submissions?search=' . $submissions[0]->getElementData('first_name'));
-    $this->assertRaw($submissions[0]->getElementData('first_name'));
-    $this->assertNoRaw($submissions[1]->getElementData('first_name'));
-    $this->assertNoRaw($submissions[2]->getElementData('first_name'));
-    $this->assertFieldById('edit-reset', 'Reset');
-
-    // Check results filtered by state:starred.
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/submissions', ['state' => 'starred'], t('Filter'));
-    $this->assertUrl('admin/structure/webform/manage/' . $webform->id() . '/results/submissions?state=starred');
-    $this->assertRaw('<option value="starred" selected="selected">Starred [1]</option>');
-    $this->assertNoRaw($submissions[0]->getElementData('first_name'));
-    $this->assertRaw($submissions[1]->getElementData('first_name'));
-    $this->assertNoRaw($submissions[2]->getElementData('first_name'));
-    $this->assertFieldById('edit-reset', 'Reset');
-
-    // Check results filtered by state:starred.
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/submissions', ['state' => 'locked'], t('Filter'));
-    $this->assertUrl('admin/structure/webform/manage/' . $webform->id() . '/results/submissions?state=locked');
-    $this->assertRaw('<option value="locked" selected="selected">Locked [1]</option>');
-    $this->assertNoRaw($submissions[0]->getElementData('first_name'));
-    $this->assertNoRaw($submissions[1]->getElementData('first_name'));
-    $this->assertRaw($submissions[2]->getElementData('first_name'));
-    $this->assertFieldById('edit-reset', 'Reset');
-
-    /**************************************************************************/
-    // Customize submission results.
-    /**************************************************************************/
-
-    // Check that access is denied to custom results table.
-    $this->drupalLogin($admin_submission_user);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions/custom');
-    $this->assertResponse(403);
-
-    // Check that access is allowed to custom results table.
-    $this->drupalLogin($admin_user);
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions/custom');
-    $this->assertResponse(200);
-
-    // Check that created is visible and changed is hidden.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-    $this->assertRaw('sort by Created');
-    $this->assertNoRaw('sort by Changed');
-
-    // Check that first name is before last name.
-    $this->assertPattern('#First name.+Last name#s');
-
-    // Check that no pager is being displayed.
-    $this->assertNoRaw('<nav class="pager" role="navigation" aria-labelledby="pagination-heading">');
-
-    // Check that table is sorted by created.
-    $this->assertRaw('<th specifier="created" class="priority-medium is-active" aria-sort="descending">');
-
-    // Check the table results order by sid.
-    $this->assertPattern('#Hillary.+Abraham.+George#ms');
-
-    // Check the table links to canonical view.
-    $this->assertRaw('data-webform-href="' . $submissions[0]->toUrl()->toString() . '"');
-    $this->assertRaw('data-webform-href="' . $submissions[1]->toUrl()->toString() . '"');
-    $this->assertRaw('data-webform-href="' . $submissions[2]->toUrl()->toString() . '"');
-
-    // Customize to results table.
-    $edit = [
-      'columns[created][checkbox]' => FALSE,
-      'columns[changed][checkbox]' => TRUE,
-      'columns[element__first_name][weight]' => '8',
-      'columns[element__last_name][weight]' => '7',
-      'sort' => 'element__first_name',
-      'direction' => 'desc',
-      'limit' => 20,
-      'link_type' => 'table',
-    ];
-    $this->drupalPostForm('admin/structure/webform/manage/' . $webform->id() . '/results/submissions/custom', $edit, t('Save'));
-    $this->assertRaw('The customized table has been saved.');
-
-    // Check that table now link to table.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-    $this->assertRaw('data-webform-href="' . $submissions[0]->toUrl('table')->toString() . '"');
-    $this->assertRaw('data-webform-href="' . $submissions[1]->toUrl('table')->toString() . '"');
-    $this->assertRaw('data-webform-href="' . $submissions[2]->toUrl('table')->toString() . '"');
-
-    // Check that sid is hidden and changed is visible.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-    $this->assertNoRaw('sort by Created');
-    $this->assertRaw('sort by Changed');
-
-    // Check that first name is now after last name.
-    $this->assertPattern('#Last name.+First name#ms');
-
-    // Check the table results order by first name.
-    $this->assertPattern('#Hillary.+George.+Abraham#ms');
-
-    // Manually set the limit to 1.
-    $webform->setState('results.custom.limit', 1);
-
-    // Check that only one result (Hillary #2) is displayed with pager.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-    $this->assertNoRaw('George');
-    $this->assertNoRaw('Abraham');
-    $this->assertNoRaw('Hillary');
-    $this->assertRaw('quotes&#039; &quot;');
-    $this->assertRaw('<nav class="pager" role="navigation" aria-labelledby="pagination-heading">');
-
-    // Reset the limit to 20.
-    $webform->setState('results.custom.limit', 20);
-
-    // Check Header label and element value display.
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-
-    // Check user header and value.
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/manage/' . $webform->id() . '/results/submissions?sort=asc&amp;order=User" title="sort by User">User</a>');
-    $this->assertRaw('<td class="priority-medium">Anonymous</td>');
-
-    // Check date of birth.
-    $this->assertRaw('<th specifier="element__dob"><a href="' . $base_path . 'admin/structure/webform/manage/' . $webform->id() . '/results/submissions?sort=asc&amp;order=Date%20of%20birth" title="sort by Date of birth">Date of birth</a></th>');
-    $this->assertRaw('<td>Sunday, October 26, 1947</td>');
-
-    // Display Header key and element raw.
-    $webform->setState('results.custom.format', [
-      'header_format' => 'key',
-      'element_format' => 'raw',
-    ]);
-
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/submissions');
-
-    // Check user header and value.
-    $this->assertRaw('<a href="' . $base_path . 'admin/structure/webform/manage/' . $webform->id() . '/results/submissions?sort=asc&amp;order=uid" title="sort by uid">uid</a>');
-    $this->assertRaw('<td class="priority-medium">0</td>');
-
-    // Check date of birth.
-    $this->assertRaw('<th specifier="element__dob"><a href="' . $base_path . 'admin/structure/webform/manage/' . $webform->id() . '/results/submissions?sort=asc&amp;order=dob" title="sort by dob">dob</a></th>');
-    $this->assertRaw('<td>1947-10-26</td>');
-
-    /**************************************************************************/
-    // Customize user results.
-    /**************************************************************************/
-
-    $this->drupalLogin($own_submission_user);
-
-    // Check view own submissions.
-    $this->drupalget('/webform/' . $webform->id() . '/submissions');
-    $this->assertRaw('<th specifier="serial">');
-    $this->assertRaw('<th specifier="created" class="priority-medium is-active" aria-sort="descending">');
-    $this->assertRaw('<th specifier="remote_addr" class="priority-low">');
-
-    // Display only first name and last name columns.
-    $webform->setSetting('submission_user_columns', ['element__first_name', 'element__last_name'])
-      ->save();
-
-    // Check view own submissions only include first name and last name.
-    $this->drupalget('/webform/' . $webform->id() . '/submissions');
-    $this->assertNoRaw('<th specifier="serial">');
-    $this->assertNoRaw('<th specifier="created" class="priority-medium is-active" aria-sort="descending">');
-    $this->assertNoRaw('<th specifier="remote_addr" class="priority-low">');
-    $this->assertRaw('<th specifier="element__first_name" aria-sort="ascending" class="is-active">');
-    $this->assertRaw('<th specifier="element__last_name">');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionStorageTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionStorageTest.php
deleted file mode 100644
index 98ac360b..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionStorageTest.php
+++ /dev/null
@@ -1,106 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\Core\Serialization\Yaml;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\WebformInterface;
-
-/**
- * Tests for webform storage tests.
- *
- * @group Webform
- */
-class WebformSubmissionStorageTest extends WebformTestBase {
-
-  /**
-   * Test webform submission storage.
-   */
-  public function testSubmissionStorage() {
-    /** @var \Drupal\webform\WebformSubmissionStorageInterface $storage */
-    $storage = \Drupal::entityTypeManager()->getStorage('webform_submission');
-
-    // Create new webform.
-    $id = $this->randomMachineName(8);
-    $webform = Webform::create([
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => $id,
-      'title' => $id,
-      'elements' => Yaml::encode(['test' => ['#markup' => 'test']]),
-    ]);
-    $webform->save();
-
-    // Create 3 submissions for user1.
-    $user1 = $this->drupalCreateUser(['view own webform submission']);
-    $this->drupalLogin($user1);
-    $user1_submissions = [
-      WebformSubmission::load($this->postSubmission($webform)),
-      WebformSubmission::load($this->postSubmission($webform)),
-      WebformSubmission::load($this->postSubmission($webform)),
-    ];
-
-    // Create 3 submissions for user2.
-    $user2 = $this->drupalCreateUser();
-    $this->drupalLogin($user2);
-    $user2_submissions = [
-      WebformSubmission::load($this->postSubmission($webform)),
-      WebformSubmission::load($this->postSubmission($webform)),
-      WebformSubmission::load($this->postSubmission($webform)),
-    ];
-
-    // Create admin user who can see all submissions.
-    $admin_user = $this->drupalCreateUser(['administer webform']);
-
-    // Check total.
-    $this->assertEqual($storage->getTotal($webform), 6);
-    $this->assertEqual($storage->getTotal($webform, NULL, $user1), 3);
-    $this->assertEqual($storage->getTotal($webform, NULL, $user2), 3);
-
-    // Check next submission.
-    $this->drupalLogin($user1);
-    $this->assertEqual($storage->getNextSubmission($user1_submissions[0], NULL, $user1)->id(), $user1_submissions[1]->id(), "User 1 can navigate forward to user 1's next submission");
-    $this->assertNull($storage->getNextSubmission($user1_submissions[2], NULL, $user1), "User 1 can't navigate forward to user 2's next submission");
-    $this->drupalLogin($user2);
-    $this->assertNull($storage->getNextSubmission($user2_submissions[0], NULL, $user2), "User 2 can't navigate forward to user 2's next submission because of missing 'view own webform submission' permission");
-    $this->drupalLogin($admin_user);
-    $this->assertEqual($storage->getNextSubmission($user1_submissions[2], NULL)->id(), $user2_submissions[0]->id(), "Admin user can navigate between user submissions");
-    $this->drupalLogout();
-
-    // Check previous submission.
-    $this->drupalLogin($user1);
-    $this->assertEqual($storage->getPreviousSubmission($user1_submissions[1], NULL, $user1)->id(), $user1_submissions[0]->id(), "User 1 can navigate backward to user 1's previous submission");
-    $this->drupalLogin($user2);
-    $this->assertNull($storage->getPreviousSubmission($user2_submissions[0], NULL, $user2), "User 2 can't navigate backward to user 1's previous submission");
-    $this->drupalLogin($admin_user);
-    $this->assertEqual($storage->getPreviousSubmission($user2_submissions[0], NULL)->id(), $user1_submissions[2]->id(), "Admin user can navigate between user submissions");
-    $this->drupalLogout();
-
-    // Enable the saving of drafts.
-    $webform->setSetting('draft', WebformInterface::DRAFT_AUTHENTICATED)->save();
-
-    // Create drafts for user1 and user2.
-    $this->drupalLogin($user1);
-    $this->postSubmission($webform, [], t('Save Draft'));
-    $this->drupalLogin($user2);
-    $this->postSubmission($webform, [], t('Save Draft'));
-
-    // Check totals remains the same with drafts.
-    $this->assertEqual($storage->getTotal($webform), 6);
-    $this->assertEqual($storage->getTotal($webform, NULL, $user1), 3);
-    $this->assertEqual($storage->getTotal($webform, NULL, $user2), 3);
-
-    // Save current drafts for user1 and user2.
-    $this->drupalLogin($user1);
-    $this->postSubmission($webform);
-    $this->drupalLogin($user2);
-    $this->postSubmission($webform);
-
-    // Check totals have been updated.
-    $this->assertEqual($storage->getTotal($webform), 8);
-    $this->assertEqual($storage->getTotal($webform, NULL, $user1), 4);
-    $this->assertEqual($storage->getTotal($webform, NULL, $user2), 4);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionTest.php
deleted file mode 100644
index 192fa445..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionTest.php
+++ /dev/null
@@ -1,130 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform submission entity.
- *
- * @group Webform
- */
-class WebformSubmissionTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['node', 'webform', 'webform_test_submissions'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submissions'];
-
-  /**
-   * Tests webform submission entity.
-   */
-  public function testWebformSubmission() {
-    $normal_user = $this->drupalCreateUser();
-
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = Webform::load('test_submissions');
-
-    /** @var \Drupal\webform\WebformSubmissionInterface[] $submissions */
-    $submissions = array_values(\Drupal::entityTypeManager()->getStorage('webform_submission')->loadByProperties(['webform_id' => 'test_submissions']));
-
-    /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
-    $webform_submission = reset($submissions);
-
-    /**************************************************************************/
-
-    // Check create submission.
-    $this->assert($webform_submission instanceof WebformSubmission, '$webform_submission instanceof WebformSubmission');
-
-    // Check get webform.
-    $this->assertEqual($webform_submission->getWebform()->id(), $webform->id());
-
-    // Check that source entity is NULL.
-    $this->assertNull($webform_submission->getSourceEntity());
-
-    // Check getting source URL without uri, which will still return
-    // the webform.
-    $webform_submission
-      ->set('uri', NULL)
-      ->save();
-    $this->assertEqual($webform_submission->getSourceUrl()->toString(), $webform->toUrl('canonical', ['absolute' => TRUE])->toString());
-
-    // Check get source URL set to user 1.
-    $webform_submission
-      ->set('entity_type', 'user')
-      ->set('entity_id', $normal_user->id())
-      ->save();
-    $this->assertEqual($webform_submission->getSourceUrl()->toString(), $normal_user->toUrl('canonical', ['absolute' => TRUE])->toString());
-
-    // Check missing webform_id exception.
-    try {
-      WebformSubmission::create();
-      $this->fail('Webform id (webform_id) is required to create a webform submission.');
-    }
-    catch (\Exception $exception) {
-      $this->pass('Webform id (webform_id) is required to create a webform submission.');
-    }
-
-    // Check creating a submission with default data.
-    $webform_submission = WebformSubmission::create(['webform_id' => $webform->id(), 'data' => ['custom' => 'value']]);
-    $this->assertEqual($webform_submission->getData(), ['custom' => 'value']);
-
-    // Check submission label.
-    $webform_submission->save();
-    $this->assertEqual($webform_submission->label(), $webform->label() . ': Submission #' . $webform_submission->serial());
-
-    // Check test submission URI.
-    // @see \Drupal\webform\WebformSubmissionForm::save
-    $this->drupalLogin($this->rootUser);
-    $sid = $this->postSubmissionTest($webform);
-    $webform_submission = WebformSubmission::load($sid);
-    $this->assertEqual($webform_submission->getSourceUrl()->toString(), $webform->toUrl('canonical', ['absolute' => TRUE])->toString());
-    $this->drupalLogout();
-  }
-
-  /**
-   * Tests duplicating webform submission.
-   */
-  public function testDuplicate() {
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /**************************************************************************/
-
-    $this->drupalLogin($admin_submission_user);
-
-    $webform = Webform::load('contact');
-    $sid = $this->postSubmission($webform, [
-      'subject' => '{Original Subject}',
-      'message' => '{Original Message}',
-    ]);
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check duplicate form title.
-    $this->drupalGet("admin/structure/webform/manage/contact/submission/$sid/duplicate");
-    $this->assertRaw('Duplicate Contact: Submission #' . $webform_submission->serial());
-
-    // Duplicate submission.
-    $this->drupalPostForm("admin/structure/webform/manage/contact/submission/$sid/duplicate", ['subject' => '{Duplicate Subject}'], t('Send message'));
-    $duplicate_sid = $this->getLastSubmissionId($webform);
-    /** @var \Drupal\webform\WebformSubmissionInterface $duplicate_submission */
-    $duplicate_submission = WebformSubmission::load($duplicate_sid);
-
-    // Check duplicate submission.
-    $this->assertNotEqual($sid, $duplicate_sid);
-    $this->assertEqual($duplicate_submission->getElementData('subject'), '{Duplicate Subject}');
-    $this->assertEqual($duplicate_submission->getElementData('message'), '{Original Message}');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionTokenUpdateTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionTokenUpdateTest.php
deleted file mode 100644
index 6f904bac..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionTokenUpdateTest.php
+++ /dev/null
@@ -1,71 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for updating webform submission using tokenized URL.
- *
- * @group Webform
- */
-class WebformSubmissionTokenUpdateTest extends WebformTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_token_update'];
-
-  /**
-   * Test updating webform submission using tokenized URL.
-   */
-  public function testTokenUpdateTest() {
-    $normal_user = $this->drupalCreateUser();
-
-    $webform = Webform::load('test_token_update');
-
-    /**************************************************************************/
-
-    // Post test submission.
-    $this->drupalLogin($this->rootUser);
-    $sid = $this->postSubmissionTest($webform);
-    $webform_submission = WebformSubmission::load($sid);
-
-    // Check token update access allowed.
-    $this->drupalLogin($normal_user);
-    $this->drupalGet($webform_submission->getTokenUrl());
-    $this->assertResponse(200);
-    $this->assertRaw('Submission information');
-    $this->assertFieldByName('textfield', $webform_submission->getElementData('textfield'));
-
-    // Check token update access denied.
-    $webform->setSetting('token_update', FALSE)->save();
-    $this->drupalLogin($normal_user);
-    $this->drupalGet($webform_submission->getTokenUrl());
-    $this->assertResponse(200);
-    $this->assertNoRaw('Submission information');
-    $this->assertNoFieldByName('textfield', $webform_submission->getElementData('textfield'));
-
-    // Logout and switch to anonymous user.
-    $this->drupalLogout();
-
-    // Set access to authenticated only and reenabled tokenized URL.
-    $access = $webform->getAccessRules();
-    $access['create']['roles'] = ['authenticated'];
-    $webform->setAccessRules($access);
-    $webform->setSetting('token_update', TRUE)->save();
-    $webform->save();
-
-    // Check that access is denied for anonymous user.
-    $this->drupalGet('/webform/test_token_update');
-    $this->assertResponse(403);
-
-    // Check token update access allowed for anonymous user.
-    $this->drupalGet($webform_submission->getTokenUrl());
-    $this->assertResponse(200);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionViewTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionViewTest.php
deleted file mode 100644
index 0211b516..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionViewTest.php
+++ /dev/null
@@ -1,99 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\user\Entity\User;
-use Drupal\webform\Entity\Webform;
-use Drupal\webform\Entity\WebformSubmission;
-
-/**
- * Tests for webform submission view as HTML, YAML, and plain text.
- *
- * @group Webform
- */
-class WebformSubmissionViewTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['filter', 'node', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_element'];
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Create filters.
-    $this->createFilters();
-  }
-
-  /**
-   * Tests view submissions.
-   */
-  public function testView() {
-    $admin_submission_user = $this->drupalCreateUser([
-      'administer webform submission',
-    ]);
-
-    /**************************************************************************/
-
-    $account = User::load(1);
-
-    $webform_element = Webform::load('test_element');
-    $sid = $this->postSubmission($webform_element);
-    $submission = WebformSubmission::load($sid);
-
-    $this->drupalLogin($admin_submission_user);
-
-    $this->drupalGet('/admin/structure/webform/manage/test_element/submission/' . $submission->id());
-
-    // Check displayed values.
-    $elements = [
-      'hidden' => '{hidden}',
-      'value' => '{value}',
-      'textarea' => "{textarea line 1}<br />\n{textarea line 2}",
-      'empty' => '{Empty}',
-      'textfield' => '{textfield}',
-      'select' => 'one',
-      'select_multiple' => 'one, two',
-      'checkbox' => 'Yes',
-      'checkboxes' => 'one, two',
-      'radios' => 'Yes',
-      'email' => '<a href="mailto:example@example.com">example@example.com</a>',
-      'number' => '1',
-      'range' => '1',
-      'tel' => '<a href="tel:999-999-9999">999-999-9999</a>',
-      'url' => '<a href="http://example.com">http://example.com</a>',
-      'color' => '<font color="#ffffcc">█</font> #ffffcc',
-      'weight' => '0',
-      'date' => 'Tuesday, August 18, 2009',
-      'datetime' => 'Tuesday, August 18, 2009 - 4:00 PM',
-      'datelist' => 'Tuesday, August 18, 2009 - 4:00 PM',
-      'dollars' => '$100.00',
-      'text_format' => '<p>The quick brown fox jumped over the lazy dog.</p>',
-      'entity_autocomplete_user' => '<a href="' . $account->toUrl()->setAbsolute(TRUE)->toString() . '" hreflang="en">admin</a>',
-      'language_select' => 'English (en)',
-    ];
-    foreach ($elements as $label => $value) {
-      $this->assertRaw("<label>$label</label>" . PHP_EOL . "        $value", new FormattableMarkup('Found @label: @value', ['@label' => $label, '@value' => $value]));
-    }
-
-    // Check details element.
-    $this->assertRaw('<summary role="button" aria-controls="test_element--standard_elements" aria-expanded="true" aria-pressed="true">Standard Elements</summary>');
-
-    // Check empty details element removed.
-    $this->assertNoRaw('Markup Elements');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformSubmissionViewsTest.php b/modules/contrib/webform/src/Tests/WebformSubmissionViewsTest.php
deleted file mode 100644
index 1b5911e5..00000000
--- a/modules/contrib/webform/src/Tests/WebformSubmissionViewsTest.php
+++ /dev/null
@@ -1,182 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform submission views integration.
- *
- * @group Webform
- */
-class WebformSubmissionViewsTest extends WebformTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['views', 'webform'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_submission_views'];
-
-  /**
-   * Tests submissions views.
-   */
-  public function testSubmissionViewsAccess() {
-    // Check administer view.
-    $user = $this->drupalCreateUser(['administer webform submission']);
-    $this->drupalLogin($user);
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_administer');
-
-    // Check 200 response.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions/admin');
-    $this->assertResponse(200);
-
-    // Check manage view.
-    $user = $this->drupalCreateUser(['edit any webform submission', 'view any webform submission']);
-    $this->drupalLogin($user);
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_manage');
-
-    // Check 403 access denied response.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions/admin');
-    $this->assertResponse(403);
-
-    // Check 404 not found response.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions/not_found');
-    $this->assertResponse(404);
-
-    // Check review view.
-    $user = $this->drupalCreateUser(['view any webform submission']);
-    $this->drupalLogin($user);
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_review');
-  }
-
-  /**
-   * Tests submissions views.
-   */
-  public function testSubmissionViews() {
-    $uid = $this->rootUser->id();
-    $this->drupalLogin($this->rootUser);
-
-    /**************************************************************************/
-    // Global.
-    /**************************************************************************/
-
-    // Setup global submissions and user submissions views.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_submission_views', [
-        'global' => [
-          'view' => 'webform_submissions:embed_default',
-          'title' => 'Global submissions',
-          'global_routes' => ['entity.webform_submission.collection'],
-          'webform_routes' => [],
-          'node_routes' => [],
-        ],
-        'user' => [
-          'view' => 'webform_submissions:embed_default',
-          'title' => 'User submissions',
-          'global_routes' => ['entity.webform_submission.user'],
-          'webform_routes' => [],
-          'node_routes' => [],
-        ],
-      ])
-      ->save();
-
-    // Check global submissions entity list is replaced by the view.
-    $this->drupalGet('/admin/structure/webform/submissions/manage');
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Check user submissions entity list is replaced by the view.
-    $this->drupalGet("/user/$uid/submissions");
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Clear global submission views replace.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('settings.default_submission_views_replace.global_routes', [])
-      ->save();
-
-    // Check global submissions entity list is displayed.
-    $this->drupalGet('/admin/structure/webform/submissions/manage');
-    $this->assertRaw('webform-results-table');
-    $this->assertNoRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Check global submissions views is moved to dedicated path.
-    $this->clickLink('Global submissions');
-    $this->assertUrl('/admin/structure/webform/submissions/manage/global');
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Check user submissions entity list is displayed.
-    $this->drupalGet("/user/$uid/submissions");
-    $this->assertRaw('webform-results-table');
-    $this->assertNoRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Check user submissions entity list is moved to dedicated path.
-    $this->clickLink('User submissions');
-    $this->assertUrl("/user/$uid/submissions/user");
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    /**************************************************************************/
-    // Webform.
-    /**************************************************************************/
-
-    // Post a submission and save a draft.
-    $webform = Webform::load('test_submission_views');
-    $this->postSubmission($webform);
-    $this->postSubmission($webform);
-    $this->postSubmission($webform, [], t('Save Draft'));
-    $this->postSubmission($webform, [], t('Save Draft'));
-
-    // Check webform submissions views.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions');
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_administer');
-
-    // Check webform user views.
-    $this->drupalGet('/webform/test_submission_views/drafts');
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Clear global webform views replace.
-    \Drupal::configFactory()
-      ->getEditable('webform.settings')
-      ->set('settings.default_submission_views_replace.webform_routes', [])
-      ->save();
-
-    // Check webform submissions entity list is displayed.
-    $this->drupalGet('/admin/structure/webform/manage/test_submission_views/results/submissions');
-    $this->assertRaw('webform-results-table');
-    $this->assertNoRaw('view-id-webform_submissions view-display-id-embed_administer');
-
-    // Check webform submissions views is moved to dedicated path.
-    $this->clickLink('Administer submissions');
-    $this->assertUrl('/admin/structure/webform/manage/test_submission_views/results/submissions/admin');
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_administer');
-
-    // Check webform submissions entity list is displayed.
-    $this->drupalGet('/webform/test_submission_views/drafts');
-    $this->assertRaw('webform-results-table');
-    $this->assertNoRaw('view-id-webform_submissions view-display-id-embed_default');
-
-    // Check webform submissions entity list is moved to dedicated path.
-    $this->clickLink('User submissions');
-    $this->assertUrl('/webform/test_submission_views/drafts/user');
-    $this->assertNoRaw('webform-results-table');
-    $this->assertRaw('view-id-webform_submissions view-display-id-embed_default');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/WebformTestBase.php b/modules/contrib/webform/src/Tests/WebformTestBase.php
index 5dc15cd6..72d9df64 100644
--- a/modules/contrib/webform/src/Tests/WebformTestBase.php
+++ b/modules/contrib/webform/src/Tests/WebformTestBase.php
@@ -211,7 +211,7 @@ abstract class WebformTestBase extends WebTestBase {
    */
   protected function postSubmission(WebformInterface $webform, array $edit = [], $submit = NULL, array $options = []) {
     $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('webform/' . $webform->id(), $edit, $submit, $options);
+    $this->drupalPostForm('/webform/' . $webform->id(), $edit, $submit, $options);
     return $this->getLastSubmissionId($webform);
   }
 
@@ -232,7 +232,7 @@ abstract class WebformTestBase extends WebTestBase {
    */
   protected function postSubmissionTest(WebformInterface $webform, array $edit = [], $submit = NULL, array $options = []) {
     $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('webform/' . $webform->id() . '/test', $edit, $submit, $options);
+    $this->drupalPostForm('/webform/' . $webform->id() . '/test', $edit, $submit, $options);
     return $this->getLastSubmissionId($webform);
   }
 
diff --git a/modules/contrib/webform/src/Tests/WebformThirdPartySettingsTest.php b/modules/contrib/webform/src/Tests/WebformThirdPartySettingsTest.php
index 0c6d3a67..e3df6e75 100644
--- a/modules/contrib/webform/src/Tests/WebformThirdPartySettingsTest.php
+++ b/modules/contrib/webform/src/Tests/WebformThirdPartySettingsTest.php
@@ -45,7 +45,7 @@ class WebformThirdPartySettingsTest extends WebformTestBase {
     $edit = [
       'third_party_settings[webform_test_third_party_settings][message]' => 'Message for all webforms',
     ];
-    $this->drupalPostForm('admin/structure/webform/config', $edit, t('Save configuration'));
+    $this->drupalPostForm('/admin/structure/webform/config', $edit, t('Save configuration'));
     $this->drupalGet('/webform/contact');
     $this->assertRaw('Message for all webforms');
 
@@ -59,7 +59,7 @@ class WebformThirdPartySettingsTest extends WebformTestBase {
     $edit = [
       'third_party_settings[webform_test_third_party_settings][message]' => 'Message for only this webform',
     ];
-    $this->drupalPostForm('admin/structure/webform/manage/contact/settings', $edit, t('Save'));
+    $this->drupalPostForm('/admin/structure/webform/manage/contact/settings', $edit, t('Save'));
     $this->drupalGet('/webform/contact');
     $this->assertRaw('Message for only this webform');
 
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardAccessTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardAccessTest.php
deleted file mode 100644
index 82a371de..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardAccessTest.php
+++ /dev/null
@@ -1,84 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform wizard with access controls for pages.
- *
- * @group Webform
- */
-class WebformWizardAccessTest extends WebformWizardTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_access'];
-
-  /**
-   * Test webform custom wizard.
-   */
-  public function testConditionalWizard() {
-    $webform = Webform::load('test_form_wizard_access');
-
-    // Check anonymous user can access 'All' and 'Anonymous' form pages.
-    $this->drupalGet('/webform/test_form_wizard_access');
-    $this->assertRaw('<b>All</b>');
-    $this->assertRaw('<b>Anonymous</b>');
-    $this->assertNoRaw('<b>Authenticated</b>');
-    $this->assertNoRaw('<b>Private</b>');
-
-    // Generate an anonymous submission.
-    $this->drupalPostForm('webform/test_form_wizard_access', [], t('Next Page >'));
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $sid = $this->getLastSubmissionId($webform);
-
-    // Check anonymous user can only view 'All' and 'Anonymous' submission data.
-    $this->drupalGet("webform/test_form_wizard_access/submissions/$sid");
-    $this->assertRaw('test_form_wizard_access--page_all');
-    $this->assertRaw('test_form_wizard_access--page_anonymous');
-    $this->assertNoRaw('test_form_wizard_access--page_authenticated');
-    $this->assertNoRaw('test_form_wizard_access--page_private');
-
-    // Check anonymous user can only update 'All' and 'Anonymous' submission data.
-    $this->drupalGet("webform/test_form_wizard_access/submissions/$sid/edit");
-    $this->assertRaw('<b>All</b>');
-    $this->assertRaw('<b>Anonymous</b>');
-    $this->assertNoRaw('<b>Authenticated</b>');
-    $this->assertNoRaw('<b>Private</b>');
-
-    // Login authenticated user.
-    $this->drupalLogin($this->rootUser);
-
-    // Check authenticated user can access 'All', 'Authenticated', and 'Private' form pages.
-    $this->drupalGet('/webform/test_form_wizard_access');
-    $this->assertRaw('<b>All</b>');
-    $this->assertNoRaw('<b>Anonymous</b>');
-    $this->assertRaw('<b>Authenticated</b>');
-    $this->assertRaw('<b>Private</b>');
-
-    // Generate an authenticated submission.
-    $this->drupalPostForm('webform/test_form_wizard_access', [], t('Next Page >'));
-    $this->drupalPostForm(NULL, [], t('Next Page >'));
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $sid = $this->getLastSubmissionId($webform);
-
-    // Check authenticated user can view 'All', 'Authenticated', and 'Private' form pages.
-    $this->drupalGet("webform/test_form_wizard_access/submissions/$sid");
-    $this->assertRaw('test_form_wizard_access--page_all');
-    $this->assertNoRaw('test_form_wizard_access--page_anonymous');
-    $this->assertRaw('test_form_wizard_access--page_authenticated');
-    $this->assertRaw('test_form_wizard_access--page_private');
-
-    // Check anonymous user can only update 'All' and 'Anonymous' submission data.
-    $this->drupalGet("webform/test_form_wizard_access/submissions/$sid/edit");
-    $this->assertRaw('<b>All</b>');
-    $this->assertNoRaw('<b>Anonymous</b>');
-    $this->assertRaw('<b>Authenticated</b>');
-    $this->assertRaw('<b>Private</b>');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardAdvancedTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardAdvancedTest.php
deleted file mode 100644
index cf54fa86..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardAdvancedTest.php
+++ /dev/null
@@ -1,272 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-use Drupal\webform\Entity\Webform;
-use Drupal\Core\Serialization\Yaml;
-
-/**
- * Tests for webform advanced wizard.
- *
- * @group Webform
- */
-class WebformWizardAdvancedTest extends WebformWizardTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_advanced'];
-
-  /**
-   * Test webform advanced wizard.
-   */
-  public function testAdvancedWizard() {
-    $webform = Webform::load('test_form_wizard_advanced');
-
-    // Get initial wizard start page (Your Information).
-    $this->drupalGet('/webform/test_form_wizard_advanced');
-    // Check progress bar is set to 'Your Information'.
-    $this->assertPattern('#<li data-webform-page="information" class="webform-progress-bar__page webform-progress-bar__page--current">\s+<b>Your Information</b><span></span></li>#');
-    // Check progress pages.
-    $this->assertRaw('Page 1 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(0%)');
-    // Check draft button does not exist.
-    $this->assertNoFieldById('edit-draft', 'Save Draft');
-    // Check next button does exist.
-    $this->assertFieldById('edit-wizard-next', 'Next Page >');
-    // Check first name field does exist.
-    $this->assertFieldById('edit-first-name', 'John');
-
-    // Create a login user who can save drafts.
-    $account = $this->drupalCreateUser();
-    $this->drupalLogin($account);
-
-    // Move to next page (Contact Information).
-    $edit = [
-      'first_name' => 'Jane',
-    ];
-    $this->drupalPostForm('webform/test_form_wizard_advanced', $edit, t('Next Page >'));
-    // Check progress bar is set to 'Contact Information'.
-    $this->assertPattern('#<li data-webform-page="information" class="webform-progress-bar__page webform-progress-bar__page--done">\s+<b>Your Information</b><span></span></li>#');
-    $this->assertPattern('#<li data-webform-page="contact" class="webform-progress-bar__page webform-progress-bar__page--current">\s+<b>Contact Information</b></li>#');
-    // Check progress pages.
-    $this->assertRaw('Page 2 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(25%)');
-
-    // Check draft button does exist.
-    $this->assertFieldById('edit-draft', 'Save Draft');
-    // Check previous button does exist.
-    $this->assertFieldById('edit-wizard-prev', '< Previous Page');
-    // Check next button does exist.
-    $this->assertFieldById('edit-wizard-next', 'Next Page >');
-    // Check email field does exist.
-    $this->assertFieldById('edit-email', 'johnsmith@example.com');
-
-    // Move to previous page (Your Information) while posting data new data
-    // via autosave.
-    $edit = [
-      'email' => 'janesmith@example.com',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('< Previous Page'));
-    // Check progress bar is set to 'Your Information'.
-    $this->assertPattern('#<li data-webform-page="information" class="webform-progress-bar__page webform-progress-bar__page--current">\s+<b>Your Information</b><span></span></li>#');
-    // Check nosave class.
-    $this->assertRaw('js-webform-unsaved');
-    // Check no nosave attributes.
-    $this->assertNoRaw('data-webform-unsaved');
-    // Check progress pages.
-    $this->assertRaw('Page 1 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(0%)');
-
-    // Check first name set to Jane.
-    $this->assertFieldById('edit-first-name', 'Jane');
-    // Check gender is still set to Male.
-    $this->assertFieldChecked('edit-gender-male');
-
-    // Change gender from Male to Female.
-    $edit = [
-      'gender' => 'Female',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Save Draft'));
-    // Check first name set to Jane.
-    $this->assertFieldById('edit-first-name', 'Jane');
-    // Check gender is now set to Female.
-    $this->assertFieldChecked('edit-gender-female');
-
-    // Move to next page (Contact Information).
-    $this->drupalPostForm('webform/test_form_wizard_advanced', [], t('Next Page >'));
-    // Check nosave class.
-    $this->assertRaw('js-webform-unsaved');
-    // Check nosave attributes.
-    $this->assertRaw('data-webform-unsaved');
-    // Check progress bar is set to 'Contact Information'.
-    $this->assertCurrentPage('Contact Information', 'contact');
-    // Check progress pages.
-    $this->assertRaw('Page 2 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(25%)');
-
-    // Check email field is now janesmith@example.com.
-    $this->assertFieldById('edit-email', 'janesmith@example.com');
-
-    // Save draft which saves the 'current_page'.
-    $edit = [
-      'phone' => '111-111-1111',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Save Draft'));
-    // Complete reload the webform.
-    $this->drupalGet('/webform/test_form_wizard_advanced');
-    // Check progress bar is still set to 'Contact Information'.
-    $this->assertCurrentPage('Contact Information', 'contact');
-
-    // Move to last page (Your Feedback).
-    $this->drupalPostForm(NULL, [], t('Next Page >'));
-    // Check progress bar is set to 'Your Feedback'.
-    $this->assertCurrentPage('Your Feedback', 'feedback');
-    // Check previous button does exist.
-    $this->assertFieldById('edit-wizard-prev', '< Previous Page');
-    // Check next button is labeled 'Preview'.
-    $this->assertFieldById('edit-preview-next', 'Preview');
-    // Check submit button does exist.
-    $this->assertFieldById('edit-submit', 'Submit');
-
-    // Move to preview.
-    $edit = [
-      'comments' => 'This is working fine.',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Preview'));
-    // Check progress bar is set to 'Preview'.
-    $this->assertCurrentPage('Preview', 'webform_preview');
-    // Check progress pages.
-    $this->assertRaw('Page 4 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(75%)');
-
-    // Check preview values.
-    $this->assertRaw('<label>First Name</label>');
-    $this->assertRaw('Jane');
-    $this->assertRaw('<label>Last Name</label>');
-    $this->assertRaw('Smith');
-    $this->assertRaw('<label>Gender</label>');
-    $this->assertRaw('Female');
-    $this->assertRaw('<label>Email</label>');
-    $this->assertRaw('<a href="mailto:janesmith@example.com">janesmith@example.com</a>');
-    $this->assertRaw('<label>Phone</label>');
-    $this->assertRaw('<a href="tel:111-111-1111">111-111-1111</a>');
-    $this->assertRaw('<div class="webform-element webform-element-type-textarea js-form-item form-item js-form-type-item form-type-item js-form-item-comments form-item-comments form-no-label" id="test_form_wizard_advanced--comments">');
-    $this->assertRaw('This is working fine.');
-
-    // Submit the webform.
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    // Check progress bar is set to 'Complete'.
-    $this->assertCurrentPage('Complete', 'webform_confirmation');
-    // Check progress pages.
-    $this->assertRaw('Page 5 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(100%)');
-
-    /* Custom wizard settings (using advanced wizard) */
-
-    $this->drupalLogout();
-
-    // Check global next and previous button labels.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_wizard_next_button_label', '{global wizard next}')
-      ->set('settings.default_wizard_prev_button_label', '{global wizard previous}')
-      ->save();
-    $this->drupalPostForm('webform/test_form_wizard_advanced', [], t('{global wizard next}'));
-
-    // Check progress bar.
-    $this->assertRaw('class="webform-progress-bar"');
-    // Check previous button.
-    $this->assertFieldById('edit-wizard-prev', '{global wizard previous}');
-    // Check next button.
-    $this->assertFieldById('edit-wizard-next', '{global wizard next}');
-
-    // Add 'webform_actions' element.
-    $webform->setElementProperties('actions', [
-      '#type' => 'webform_actions',
-      '#wizard_next__label' => '{webform wizard next}',
-      '#wizard_prev__label' => '{webform wizard previous}',
-      '#preview_next__label' => '{webform preview next}',
-      '#preview_prev__label' => '{webform preview previous}',
-    ]);
-    $webform->save();
-
-    // Check webform next and previous button labels.
-    $this->drupalPostForm('webform/test_form_wizard_advanced', [], t('{webform wizard next}'));
-    // Check previous button.
-    $this->assertFieldById('edit-actions-wizard-prev', '{webform wizard previous}');
-    // Check next button.
-    $this->assertFieldById('edit-actions-wizard-next', '{webform wizard next}');
-
-    // Check custom next and previous button labels.
-    $elements = Yaml::decode($webform->get('elements'));
-    $elements['contact']['#next_button_label'] = '{elements wizard next}';
-    $elements['contact']['#prev_button_label'] = '{elements wizard previous}';
-    $webform->set('elements', Yaml::encode($elements));
-    $webform->save();
-    $this->drupalPostForm('webform/test_form_wizard_advanced', [], t('{webform wizard next}'));
-
-    // Check previous button.
-    $this->assertFieldById('edit-actions-wizard-prev', '{elements wizard previous}');
-    // Check next button.
-    $this->assertFieldById('edit-actions-wizard-next', '{elements wizard next}');
-
-    // Check webform next and previous button labels.
-    $webform->setSettings([
-      'wizard_progress_bar' => FALSE,
-      'wizard_progress_pages' => TRUE,
-      'wizard_progress_percentage' => TRUE,
-    ] + $webform->getSettings());
-    $webform->save();
-    $this->drupalGet('/webform/test_form_wizard_advanced');
-
-    // Check no progress bar.
-    $this->assertNoRaw('class="webform-progress-bar"');
-    // Check progress pages.
-    $this->assertRaw('Page 1 of 5');
-    // Check progress percentage.
-    $this->assertRaw('(0%)');
-
-    // Check global complete labels.
-    $webform->setSettings([
-      'wizard_progress_bar' => TRUE,
-    ] + $webform->getSettings());
-    $webform->save();
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('settings.default_wizard_confirmation_label', '{global complete}')
-      ->save();
-    $this->drupalGet('/webform/test_form_wizard_advanced');
-    $this->assertRaw('{global complete}');
-
-    // Check webform complete label.
-    $webform->setSettings([
-      'wizard_progress_bar' => TRUE,
-      'wizard_confirmation_label' => '{webform complete}',
-    ] + $webform->getSettings());
-    $webform->save();
-    $this->drupalGet('/webform/test_form_wizard_advanced');
-    $this->assertRaw('{webform complete}');
-
-    // Check webform exclude complete.
-    $webform->setSettings([
-      'wizard_confirmation' => FALSE,
-    ] + $webform->getSettings());
-    $webform->save();
-    $this->drupalGet('/webform/test_form_wizard_advanced');
-
-    // Check complete label.
-    $this->assertRaw('class="webform-progress-bar"');
-    // Check complete is missing from confirmation page.
-    $this->assertNoRaw('{webform complete}');
-    $this->drupalGet('/webform/test_form_wizard_advanced/confirmation');
-    $this->assertNoRaw('class="webform-progress-bar"');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardBasicTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardBasicTest.php
deleted file mode 100644
index 886e55a5..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardBasicTest.php
+++ /dev/null
@@ -1,96 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform basic wizard.
- *
- * @group Webform
- */
-class WebformWizardBasicTest extends WebformWizardTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_basic'];
-
-  /**
-   * Test webform basic wizard.
-   */
-  public function testBasicWizard() {
-    $this->drupalLogin($this->rootUser);
-
-    // Create a wizard submission.
-    $wizard_webform = Webform::load('test_form_wizard_basic');
-    $this->drupalPostForm('webform/test_form_wizard_basic', [], t('Next Page >'));
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $sid = $this->getLastSubmissionId($wizard_webform);
-
-    // Check access to 'Edit: All' tab for wizard.
-    $this->drupalGet("admin/structure/webform/manage/test_form_wizard_basic/submission/$sid/edit/all");
-    $this->assertResponse(200);
-
-    // Check that page 1 and 2 are displayed.
-    $this->assertRaw('<summary role="button" aria-controls="edit-page-1" aria-expanded="false" aria-pressed="false">Page 1</summary>');
-    $this->assertRaw('<summary role="button" aria-controls="edit-page-2" aria-expanded="false" aria-pressed="false">Page 2</summary>');
-
-    // Create a contact form submission.
-    $contact_webform = Webform::load('contact');
-    $sid = $this->postSubmissionTest($contact_webform);
-
-    // Check access denied to 'Edit: All' tab for simple form.
-    $this->drupalGet("admin/structure/webform/manage/contact/submission/$sid/edit/all");
-    $this->assertResponse(403);
-
-    // Enable tracking by name.
-    $wizard_webform
-      ->setSetting('wizard_track', 'name')
-      ->setSetting('confirmation_type', 'inline')
-      ->save();
-
-    // Check next page.
-    $this->drupalGet('/webform/test_form_wizard_basic');
-    $this->assertNoRaw('data-webform-wizard-current-page');
-    $this->assertRaw('data-webform-wizard-page="page_2" data-drupal-selector="edit-wizard-next"');
-
-    // Check next and previous page.
-    $this->drupalPostForm('webform/test_form_wizard_basic', [], t('Next Page >'));
-    $this->assertRaw('data-webform-wizard-current-page="page_2"');
-    $this->assertRaw('data-webform-wizard-page="page_1" data-drupal-selector="edit-wizard-prev"');
-    $this->assertRaw('data-webform-wizard-page="webform_preview" data-drupal-selector="edit-preview-next"');
-
-    $this->drupalPostForm(NULL, [], t('Preview'));
-    $this->assertRaw('data-webform-wizard-current-page="webform_preview"');
-    $this->assertRaw('data-webform-wizard-page="page_2" data-drupal-selector="edit-preview-prev"');
-    $this->assertRaw('data-webform-wizard-page="webform_confirmation" data-drupal-selector="edit-submit"');
-
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $this->assertRaw('data-webform-wizard-current-page="webform_confirmation"');
-
-    // Enable tracking by index.
-    $wizard_webform->setSetting('wizard_track', 'index')->save();
-
-    // Check next page.
-    $this->drupalGet('/webform/test_form_wizard_basic');
-    $this->assertRaw('data-webform-wizard-page="2" data-drupal-selector="edit-wizard-next"');
-
-    // Check next and previous page.
-    $this->drupalPostForm('webform/test_form_wizard_basic', [], t('Next Page >'));
-    $this->assertRaw('data-webform-wizard-current-page="2"');
-    $this->assertRaw('data-webform-wizard-page="1" data-drupal-selector="edit-wizard-prev"');
-    $this->assertRaw('data-webform-wizard-page="3" data-drupal-selector="edit-preview-next"');
-
-    $this->drupalPostForm(NULL, [], t('Preview'));
-    $this->assertRaw('data-webform-wizard-current-page="3"');
-    $this->assertRaw('data-webform-wizard-page="2" data-drupal-selector="edit-preview-prev"');
-    $this->assertRaw('data-webform-wizard-page="4" data-drupal-selector="edit-submit"');
-
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $this->assertRaw('data-webform-wizard-current-page="4"');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardConditionalTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardConditionalTest.php
deleted file mode 100644
index 15418b3f..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardConditionalTest.php
+++ /dev/null
@@ -1,64 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform conditional wizard.
- *
- * @group Webform
- */
-class WebformWizardConditionalTest extends WebformWizardTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_conditional'];
-
-  /**
-   * Test webform custom wizard.
-   */
-  public function testConditionalWizard() {
-    $webform = Webform::load('test_form_wizard_conditional');
-    $this->drupalGet('/webform/test_form_wizard_conditional');
-
-    // Check hiding page 1, 3, and 5.
-    $edit = [
-      'trigger_pages[page_1]' => FALSE,
-      'trigger_pages[page_3]' => FALSE,
-      'trigger_pages[page_5]' => FALSE,
-    ];
-    $this->drupalPostForm('webform/test_form_wizard_conditional', $edit, 'Next Page >');
-    $this->assertCurrentPage('Page 2', 'page_2');
-    $this->drupalPostForm(NULL, [], t('Next Page >'));
-    $this->assertCurrentPage('Page 4', 'page_4');
-    $this->drupalPostForm(NULL, [], t('Submit'));
-    $this->assertCurrentPage('Complete', 'webform_confirmation');
-    $sid = $this->getLastSubmissionId($webform);
-    $this->assert(!empty($sid));
-
-    // Check hiding all pages and skipping to complete.
-    $edit = [
-      'trigger_none' => TRUE,
-    ];
-    $this->drupalPostForm('webform/test_form_wizard_conditional', $edit, 'Next Page >');
-    $this->assertCurrentPage('Complete', 'webform_confirmation');
-    $sid = $this->getLastSubmissionId($webform);
-    $this->assert(!empty($sid));
-
-    // Enable preview.
-    $webform->setSetting('preview', 1);
-    $webform->save();
-
-    // Check hiding all pages and skipping to preview.
-    $edit = [
-      'trigger_none' => TRUE,
-    ];
-    $this->drupalPostForm('webform/test_form_wizard_conditional', $edit, 'Next Page >');
-    $this->assertCurrentPage('Preview', 'webform_preview');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardCustomTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardCustomTest.php
deleted file mode 100644
index 45000eea..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardCustomTest.php
+++ /dev/null
@@ -1,70 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-/**
- * Tests for webform custom wizard.
- *
- * @group Webform
- */
-class WebformWizardCustomTest extends WebformWizardTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_wizard_custom'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_custom'];
-
-  /**
-   * Test webform custom wizard.
-   */
-  public function testCustomWizard() {
-    // Check current page is #1.
-    $this->drupalGet('/webform/test_form_wizard_custom');
-    $this->assertCurrentPage('Wizard page #1', 'wizard_1');
-
-    // Check next page is #2.
-    $this->drupalPostForm('webform/test_form_wizard_custom', [], 'Next Page >');
-    $this->assertCurrentPage('Wizard page #2', 'wizard_2');
-
-    // Check previous page is #1.
-    $this->drupalPostForm(NULL, [], '< Previous Page');
-    $this->assertCurrentPage('Wizard page #1', 'wizard_1');
-
-    // Hide pages #3 and #4.
-    $edit = [
-      'pages[wizard_1]' => TRUE,
-      'pages[wizard_2]' => TRUE,
-      'pages[wizard_3]' => FALSE,
-      'pages[wizard_4]' => FALSE,
-      'pages[wizard_5]' => TRUE,
-      'pages[wizard_6]' => TRUE,
-      'pages[wizard_7]' => TRUE,
-    ];
-    $this->drupalPostForm(NULL, $edit, 'Next Page >');
-
-    // Check next page is #2.
-    $this->assertCurrentPage('Wizard page #2', 'wizard_2');
-
-    // Check next page is #5.
-    $this->drupalPostForm(NULL, [], 'Next Page >');
-    $this->assertCurrentPage('Wizard page #5', 'wizard_5');
-
-    // Check previous page is #2.
-    $this->drupalPostForm(NULL, [], '< Previous Page');
-    $this->assertCurrentPage('Wizard page #2', 'wizard_2');
-
-    // Check previous page is #1.
-    $this->drupalPostForm(NULL, [], '< Previous Page');
-    $this->assertCurrentPage('Wizard page #1', 'wizard_1');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardLinksTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardLinksTest.php
deleted file mode 100644
index 642d900b..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardLinksTest.php
+++ /dev/null
@@ -1,85 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-use Drupal\webform\Entity\Webform;
-
-/**
- * Tests for webform wizard progress and preview links.
- *
- * @group Webform
- */
-class WebformWizardLinksTest extends WebformWizardTestBase {
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_links'];
-
-  /**
-   * Test webform wizard progress and preview links.
-   */
-  public function testWizardLinks() {
-    $this->drupalLogin($this->rootUser);
-
-    $wizard_webform = Webform::load('test_form_wizard_links');
-
-    // Check that first page has no links.
-    $this->drupalGet('/webform/test_form_wizard_links');
-    $this->assertCssSelect('.webform-wizard-pages-links');
-    $this->assertNoFieldByName('webform_wizard_page-page_1', t('Edit'));
-    $this->assertNoFieldByName('webform_wizard_page-page_2', t('Edit'));
-
-    // Check that second page links to first page.
-    $this->drupalPostForm('webform/test_form_wizard_links', [], t('Next Page >'));
-    $this->assertCssSelect('.webform-wizard-pages-links');
-    $this->assertFieldByName('webform_wizard_page-page_1', t('Edit'));
-    $this->assertNoFieldByName('webform_wizard_page-page_2', t('Edit'));
-
-    // Check that preview links to first and second page.
-    $this->drupalPostForm('webform/test_form_wizard_links', [], t('Preview'));
-    $this->assertCssSelect('.webform-wizard-pages-links');
-    $this->assertFieldByName('webform_wizard_page-page_1', t('Edit'));
-    $this->assertFieldByName('webform_wizard_page-page_2', t('Edit'));
-
-    // Check that preview links are not wrapper in .form-actions.
-    $this->assertNoCssSelect('.webform-wizard-pages-links.form-actions');
-
-    // Check 'wizard_progress_link' setting.
-    $this->assertCssSelect('.webform-wizard-pages-links[data-wizard-progress-link="true"]');
-
-    // Check 'wizard_preview_link' setting.
-    $this->assertCssSelect('.webform-wizard-pages-links[data-wizard-preview-link="true"]');
-
-    // Set preview links to FALSE.
-    $wizard_webform->setSetting('wizard_preview_link', FALSE)->save();
-
-    // Check preview page is not linked.
-    $this->drupalGet('/webform/test_form_wizard_links');
-    $this->assertCssSelect('.webform-wizard-pages-links[data-wizard-progress-link="true"]');
-    $this->assertNoCssSelect('.webform-wizard-pages-links[data-wizard-preview-link="true"]');
-
-    // Set progress bar links to FALSE.
-    $wizard_webform
-      ->setSetting('wizard_progress_link', FALSE)
-      ->setSetting('wizard_preview_link', TRUE)
-      ->save();
-
-    // Check progress bar is not linked.
-    $this->drupalGet('/webform/test_form_wizard_links');
-    $this->assertNoCssSelect('.webform-wizard-pages-links[data-wizard-progress-link="true"]');
-    $this->assertCssSelect('.webform-wizard-pages-links[data-wizard-preview-link="true"]');
-
-    // Set progress bar links and preview page to FALSE.
-    $wizard_webform
-      ->setSetting('wizard_progress_link', FALSE)
-      ->setSetting('wizard_preview_link', FALSE)
-      ->save();
-
-    $this->drupalGet('/webform/test_form_wizard_links');
-    $this->assertNoCssSelect('.webform-wizard-pages-links');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardTestBase.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardTestBase.php
deleted file mode 100644
index b9aeda99..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardTestBase.php
+++ /dev/null
@@ -1,37 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-use Drupal\webform\Tests\WebformTestBase;
-
-/**
- * Defines an abstract test base for webform wizard tests.
- */
-abstract class WebformWizardTestBase extends WebformTestBase {
-
-  /**
-   * {@inheritdoc}
-   */
-  public function setUp() {
-    parent::setUp();
-
-    // Exclude Progress tracker so that the default progress bar is displayed.
-    // The default progress bar is most likely never going to change.
-    \Drupal::configFactory()->getEditable('webform.settings')
-      ->set('libraries.excluded_libraries', ['progress-tracker'])
-      ->save();
-  }
-
-  /**
-   * Assert the current page using the progress bar's markup.
-   *
-   * @param string $title
-   *   The title of the page.
-   * @param string $page
-   *   The name (key) of the current page.
-   */
-  protected function assertCurrentPage($title, $page) {
-    $this->assertPattern('|<li data-webform-page="' . $page . '" class="webform-progress-bar__page webform-progress-bar__page--current">\s+<b>' . $title . '</b>|');
-  }
-
-}
diff --git a/modules/contrib/webform/src/Tests/Wizard/WebformWizardValidateTest.php b/modules/contrib/webform/src/Tests/Wizard/WebformWizardValidateTest.php
deleted file mode 100644
index 53723b40..00000000
--- a/modules/contrib/webform/src/Tests/Wizard/WebformWizardValidateTest.php
+++ /dev/null
@@ -1,258 +0,0 @@
-<?php
-
-namespace Drupal\webform\Tests\Wizard;
-
-/**
- * Tests for webform wizard validation.
- *
- * @group Webform
- */
-class WebformWizardValidateTest extends WebformWizardTestBase {
-
-  /**
-   * Modules to enable.
-   *
-   * @var array
-   */
-  public static $modules = ['webform', 'webform_test_element'];
-
-  /**
-   * Webforms to load.
-   *
-   * @var array
-   */
-  protected static $testWebforms = ['test_form_wizard_validate', 'test_form_wizard_validate_comp'];
-
-  /**
-   * Test webform wizard validation.
-   */
-  public function testWizardValidate() {
-    $this->drupalGet('/webform/test_form_wizard_validate');
-
-    /**************************************************************************/
-    // Basic validation.
-    /**************************************************************************/
-
-    // Check validation errors.
-    $this->drupalPostForm('webform/test_form_wizard_validate', [], t('Next Page >'));
-    $this->assertRaw('wizard_1_textfield field is required.');
-    $this->assertRaw('wizard_1_select_other field is required.');
-    $this->assertRaw('wizard_1_datelist field is required.');
-
-    // Check submiting page #1.
-    $edit = [
-      'wizard_1_textfield' => '{wizard_1_textfield}',
-      'wizard_1_select_other[select]' => 'one',
-      'wizard_1_datelist[items][0][_item_][year]' => '2001',
-      'wizard_1_datelist[items][0][_item_][month]' => '1',
-      'wizard_1_datelist[items][0][_item_][day]' => '1',
-      'wizard_1_datelist[items][0][_item_][hour]' => '1',
-      'wizard_1_datelist[items][0][_item_][minute]' => '10',
-    ];
-    $this->drupalPostForm('webform/test_form_wizard_validate', $edit, t('Next Page >'));
-    $this->assertRaw("wizard_1_textfield: '{wizard_1_textfield}'
-wizard_1_select_other: one
-wizard_1_datelist:
-  - '2001-01-01T01:10:00+1100'
-wizard_2_textfield: ''
-wizard_2_select_other: null
-wizard_2_datelist: {  }");
-
-    // Check submiting page #2.
-    $edit = [
-      'wizard_2_textfield' => '{wizard_2_textfield}',
-      'wizard_2_select_other[select]' => 'two',
-      'wizard_2_datelist[items][0][_item_][year]' => '2002',
-      'wizard_2_datelist[items][0][_item_][month]' => '2',
-      'wizard_2_datelist[items][0][_item_][day]' => '2',
-      'wizard_2_datelist[items][0][_item_][hour]' => '2',
-      'wizard_2_datelist[items][0][_item_][minute]' => '20',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Next Page >'));
-    $this->assertRaw("wizard_1_textfield: '{wizard_1_textfield}'
-wizard_1_select_other: one
-wizard_1_datelist:
-  - '2001-01-01T01:10:00+1100'
-wizard_2_textfield: '{wizard_2_textfield}'
-wizard_2_select_other: two
-wizard_2_datelist:
-  - '2002-02-02T02:20:00+1100'");
-
-    /**************************************************************************/
-    // Composite validation.
-    /**************************************************************************/
-
-    // Check validation errors.
-    $this->drupalPostForm('webform/test_form_wizard_validate_comp', [], t('Next Page >'));
-    // $this->assertRaw('The <em class="placeholder">datelist</em> date is required.');
-    $this->assertRaw('textfield field is required.');
-
-    // Check submiting page #1.
-    $edit = [
-      'wizard_1_custom_composite[items][0][datelist][year]' => '2001',
-      'wizard_1_custom_composite[items][0][datelist][month]' => '1',
-      'wizard_1_custom_composite[items][0][datelist][day]' => '1',
-      'wizard_1_custom_composite[items][0][datelist][hour]' => '1',
-      'wizard_1_custom_composite[items][0][datelist][minute]' => '10',
-      'wizard_1_custom_composite[items][0][textfield]' => '{wizard_1_custom_composite_textfield}',
-      'wizard_1_test_composite[textfield]' => '{wizard_1_test_composite_textfield}',
-      'wizard_1_test_composite[datelist][year]' => '2001',
-      'wizard_1_test_composite[datelist][month]' => '1',
-      'wizard_1_test_composite[datelist][day]' => '1',
-      'wizard_1_test_composite[datelist][hour]' => '1',
-      'wizard_1_test_composite[datelist][minute]' => '10',
-      'wizard_1_test_composite_multiple[items][0][_item_][textfield]' => '{wizard_1_test_composite_multiple_textfield}',
-      'wizard_1_test_composite_multiple[items][0][_item_][datelist][year]' => '2001',
-      'wizard_1_test_composite_multiple[items][0][_item_][datelist][month]' => '1',
-      'wizard_1_test_composite_multiple[items][0][_item_][datelist][day]' => '1',
-      'wizard_1_test_composite_multiple[items][0][_item_][datelist][hour]' => '1',
-      'wizard_1_test_composite_multiple[items][0][_item_][datelist][minute]' => '10',
-    ];
-    $this->drupalPostForm('webform/test_form_wizard_validate_comp', $edit, t('Next Page >'));
-    $this->assertRaw("wizard_1_custom_composite:
-  - datelist: '2001-01-01T01:10:00+1100'
-    textfield: '{wizard_1_custom_composite_textfield}'
-wizard_1_test_composite:
-  textfield: '{wizard_1_test_composite_textfield}'
-  datelist: '2001-01-01T01:10:00+1100'
-  nested_tel: ''
-  nested_select: ''
-  email: ''
-  webform_email_confirm: ''
-  tel: ''
-  select: ''
-  radios: ''
-  date: ''
-  webform_entity_select: ''
-  webform_toggle: ''
-  entity_autocomplete: null
-  datetime: ''
-  nested_radios: ''
-wizard_1_test_composite_multiple:
-  - textfield: '{wizard_1_test_composite_multiple_textfield}'
-    datelist: '2001-01-01T01:10:00+1100'
-    nested_tel: ''
-    nested_select: ''
-    email: ''
-    webform_email_confirm: ''
-    tel: ''
-    select: ''
-    radios: ''
-    date: ''
-    webform_entity_select: ''
-    webform_toggle: ''
-    entity_autocomplete: null
-    datetime: ''
-    nested_radios: ''
-wizard_2_custom_composite: {  }
-wizard_2_test_composite: null
-wizard_2_test_composite_multiple: {  }");
-
-    // Check submiting page #2.
-    $edit = [
-      'wizard_2_custom_composite[items][0][datelist][year]' => '2002',
-      'wizard_2_custom_composite[items][0][datelist][month]' => '2',
-      'wizard_2_custom_composite[items][0][datelist][day]' => '2',
-      'wizard_2_custom_composite[items][0][datelist][hour]' => '2',
-      'wizard_2_custom_composite[items][0][datelist][minute]' => '20',
-      'wizard_2_custom_composite[items][0][textfield]' => '{wizard_2_custom_composite_textfield}',
-      'wizard_2_test_composite[textfield]' => '{wizard_2_test_composite_textfield}',
-      'wizard_2_test_composite[datelist][year]' => '2002',
-      'wizard_2_test_composite[datelist][month]' => '2',
-      'wizard_2_test_composite[datelist][day]' => '2',
-      'wizard_2_test_composite[datelist][hour]' => '2',
-      'wizard_2_test_composite[datelist][minute]' => '20',
-      'wizard_2_test_composite_multiple[items][0][_item_][textfield]' => '{wizard_2_test_composite_multiple_textfield}',
-      'wizard_2_test_composite_multiple[items][0][_item_][datelist][year]' => '2002',
-      'wizard_2_test_composite_multiple[items][0][_item_][datelist][month]' => '2',
-      'wizard_2_test_composite_multiple[items][0][_item_][datelist][day]' => '2',
-      'wizard_2_test_composite_multiple[items][0][_item_][datelist][hour]' => '2',
-      'wizard_2_test_composite_multiple[items][0][_item_][datelist][minute]' => '20',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Next Page >'));
-
-    $raw = "wizard_1_custom_composite:
-  - datelist: '2001-01-01T01:10:00+1100'
-    textfield: '{wizard_1_custom_composite_textfield}'
-wizard_1_test_composite:
-  textfield: '{wizard_1_test_composite_textfield}'
-  datelist: '2001-01-01T01:10:00+1100'
-  nested_tel: ''
-  nested_select: ''
-  email: ''
-  webform_email_confirm: ''
-  tel: ''
-  select: ''
-  radios: ''
-  date: ''
-  webform_entity_select: ''
-  webform_toggle: ''
-  entity_autocomplete: null
-  datetime: ''
-  nested_radios: ''
-wizard_1_test_composite_multiple:
-  - textfield: '{wizard_1_test_composite_multiple_textfield}'
-    datelist: '2001-01-01T01:10:00+1100'
-    nested_tel: ''
-    nested_select: ''
-    email: ''
-    webform_email_confirm: ''
-    tel: ''
-    select: ''
-    radios: ''
-    date: ''
-    webform_entity_select: ''
-    webform_toggle: ''
-    entity_autocomplete: null
-    datetime: ''
-    nested_radios: ''
-wizard_2_custom_composite:
-  - datelist: '2002-02-02T02:20:00+1100'
-    textfield: '{wizard_2_custom_composite_textfield}'
-wizard_2_test_composite:
-  textfield: '{wizard_2_test_composite_textfield}'
-  datelist: '2002-02-02T02:20:00+1100'
-  nested_tel: ''
-  nested_select: ''
-  email: ''
-  webform_email_confirm: ''
-  tel: ''
-  select: ''
-  radios: ''
-  date: ''
-  webform_entity_select: ''
-  webform_toggle: ''
-  entity_autocomplete: null
-  datetime: ''
-  nested_radios: ''
-wizard_2_test_composite_multiple:
-  - textfield: '{wizard_2_test_composite_multiple_textfield}'
-    datelist: '2002-02-02T02:20:00+1100'
-    nested_tel: ''
-    nested_select: ''
-    email: ''
-    webform_email_confirm: ''
-    tel: ''
-    select: ''
-    radios: ''
-    date: ''
-    webform_entity_select: ''
-    webform_toggle: ''
-    entity_autocomplete: null
-    datetime: ''
-    nested_radios: ''";
-    $this->assertRaw($raw);
-
-    // Make sure navigating back and next through the
-    // previous pages does not lose any data.
-    $this->drupalPostForm(NULL, [], t('< Previous Page'));
-    $this->assertRaw($raw);
-    $this->drupalPostForm(NULL, [], t('< Previous Page'));
-    $this->assertRaw($raw);
-    $this->drupalPostForm(NULL, [], t('Next Page >'));
-    $this->assertRaw($raw);
-    $this->drupalPostForm(NULL, [], t('Next Page >'));
-    $this->assertRaw($raw);
-  }
-
-}
diff --git a/modules/contrib/webform/src/Twig/WebformTwigExtension.php b/modules/contrib/webform/src/Twig/WebformTwigExtension.php
index 3f6fbc4b..c9a0032c 100644
--- a/modules/contrib/webform/src/Twig/WebformTwigExtension.php
+++ b/modules/contrib/webform/src/Twig/WebformTwigExtension.php
@@ -4,8 +4,10 @@ namespace Drupal\webform\Twig;
 
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\webform\Element\WebformMessage;
+use Drupal\webform\Utility\WebformElementHelper;
 use Drupal\webform\Utility\WebformHtmlHelper;
 use Drupal\webform\Utility\WebformLogicHelper;
+use Drupal\webform\Utility\WebformYaml;
 use Drupal\webform\WebformSubmissionInterface;
 
 /**
@@ -23,6 +25,7 @@ class WebformTwigExtension extends \Twig_Extension {
    */
   public function getFunctions() {
     return [
+      new \Twig_SimpleFunction('webform_debug', [$this, 'webformDebug']),
       new \Twig_SimpleFunction('webform_token', [$this, 'webformToken']),
     ];
   }
@@ -34,6 +37,30 @@ class WebformTwigExtension extends \Twig_Extension {
     return 'webform';
   }
 
+  /**
+   * Debug data by outputting YAML.
+   *
+   * @param mixed $data
+   *   Data to be outputted.
+   *
+   * @return string
+   *   Data serialized to YAML.
+   */
+  public function webformDebug($data) {
+    try {
+      if (is_array($data)) {
+        WebformElementHelper::convertRenderMarkupToStrings($data);
+        return WebformYaml::encode($data);
+      }
+      else {
+        return $data;
+      }
+    }
+    catch (\Exception $exception) {
+      return $exception->getMessage();
+    }
+  }
+
   /**
    * Replace tokens in text.
    *
@@ -153,6 +180,12 @@ class WebformTwigExtension extends \Twig_Extension {
     $output[] = [
       '#markup' => "<pre>{{ webform_token('[webform_submission:values:element_value]', webform_submission, [], options) }}</pre>",
     ];
+    $output[] = [
+      '#markup' => '<p>' . t("You can debug data using the <code>webform_debug()</code> function.") . '</p>',
+    ];
+    $output[] = [
+      '#markup' => "<pre>{{ webform_debug(data) }}</pre>",
+    ];
     if (\Drupal::currentUser()->hasPermission('administer modules') && !\Drupal::moduleHandler()->moduleExists('twig_tweak')) {
       $t_args = [
         ':module_href' => 'https://www.drupal.org/project/twig_tweak',
diff --git a/modules/contrib/webform/src/Utility/WebformElementHelper.php b/modules/contrib/webform/src/Utility/WebformElementHelper.php
index e465ed4e..aa981c3a 100644
--- a/modules/contrib/webform/src/Utility/WebformElementHelper.php
+++ b/modules/contrib/webform/src/Utility/WebformElementHelper.php
@@ -169,7 +169,7 @@ class WebformElementHelper {
    *
    * @param array $element
    *   An element.
-   * @param array $property
+   * @param array $properties
    *   Element properties.
    *
    * @return bool
@@ -194,8 +194,8 @@ class WebformElementHelper {
   /**
    * Determine if element or sub-element has property and value.
    *
-   * @param array $element
-   *   An element.
+   * @param array $elements
+   *   An array of elements.
    * @param string $property
    *   An element property.
    * @param mixed|null $value
diff --git a/modules/contrib/webform/src/Utility/WebformOptionsHelper.php b/modules/contrib/webform/src/Utility/WebformOptionsHelper.php
index 06e16055..89c63b7b 100644
--- a/modules/contrib/webform/src/Utility/WebformOptionsHelper.php
+++ b/modules/contrib/webform/src/Utility/WebformOptionsHelper.php
@@ -38,7 +38,7 @@ class WebformOptionsHelper {
   }
 
   /**
-   * Determine if the options has a specified value..
+   * Determine if the options has a specified value.
    *
    * @param string $value
    *   An value to look for in the options.
@@ -96,8 +96,8 @@ class WebformOptionsHelper {
   public static function getOptionText($value, array $options, $options_description = FALSE) {
     foreach ($options as $option_value => $option_text) {
       if (is_array($option_text)) {
-        if ($text = self::getOptionText($value, $option_text, $options_description)) {
-          return $text;
+        if ($option_text = self::getOptionText($value, $option_text, $options_description)) {
+          return $option_text;
         }
       }
       elseif ($value !== NULL && (string) $value === (string) $option_value) {
@@ -113,6 +113,39 @@ class WebformOptionsHelper {
     return $value;
   }
 
+  /**
+   * Get the description string for an option value.
+   *
+   * @param string $value
+   *   The option value.
+   * @param array $options
+   *   An associative array of options.
+   * @param bool $options_description
+   *   Remove description which is delimited using ' -- '.
+   *
+   * @return string
+   *   The option description if found or an empty string.
+   */
+  public static function getOptionDescription($value, array $options, $options_description = FALSE) {
+    foreach ($options as $option_value => $option_text) {
+      if (is_array($option_text)) {
+        if ($option_description = self::getOptionDescription($value, $option_text, $options_description)) {
+          return $option_description;
+        }
+      }
+      elseif ($value !== NULL && (string) $value === (string) $option_value) {
+        if ($options_description && strpos($option_text, static::DESCRIPTION_DELIMITER) !== FALSE) {
+          list($option_text, $option_description) = explode(static::DESCRIPTION_DELIMITER, $option_text);
+          return $option_description;
+        }
+        else {
+          return '';
+        }
+      }
+    }
+    return '';
+  }
+
   /**
    * Convert options with TranslatableMarkup into strings.
    *
diff --git a/modules/contrib/webform/src/WebformAddonsManager.php b/modules/contrib/webform/src/WebformAddonsManager.php
index 14c00312..7812b9a3 100644
--- a/modules/contrib/webform/src/WebformAddonsManager.php
+++ b/modules/contrib/webform/src/WebformAddonsManager.php
@@ -79,9 +79,6 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     $categories['multilingual'] = [
       'title' => $this->t('Multilingual'),
     ];
-    $categories['rest'] = [
-      'title' => $this->t('REST'),
-    ];
     $categories['spam'] = [
       'title' => $this->t('SPAM Protection'),
     ];
@@ -94,6 +91,9 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     $categories['utility'] = [
       'title' => $this->t('Utility'),
     ];
+    $categories['web_services'] = [
+      'title' => $this->t('Web services'),
+    ];
     $categories['workflow'] = [
       'title' => $this->t('Workflow'),
     ];
@@ -198,6 +198,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'element',
     ];
 
+    // Element: Webform Hierarchy.
+    $projects['webform_hierarchy'] = [
+      'title' => $this->t('Webform Hierarchy'),
+      'description' => $this->t('Provides hierarchical widget for webforms.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_hierarchy'),
+      'category' => 'element',
+    ];
+
     // Element: Webform IBAN field .
     $projects['webform_iban_field'] = [
       'title' => $this->t('Webform IBAN field '),
@@ -306,11 +314,11 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'enhancement',
     ];
 
-    // Enhancement: Webform Embed.
-    $projects['webform_embed'] = [
-      'title' => $this->t('Webform Embed'),
-      'description' => $this->t('Allows you to embed webforms within an iframe on another site.'),
-      'url' => Url::fromUri('https://www.drupal.org/project/webform_embed'),
+    // Enhancement: Webform Email Reply.
+    $projects['webform_email_reply_d8'] = [
+      'title' => $this->t('Webform Email Reply'),
+      'description' => $this->t('Allows users to send an email reply to submissions.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_email_reply'),
       'category' => 'enhancement',
     ];
 
@@ -323,17 +331,17 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     ];
 
     // Enhancement: Webform Extra Field Validation.
-    $projects['webform extra field validation'] = [
+    $projects['webform_extra_field_validation'] = [
       'title' => $this->t('Webform Extra Field Validation'),
-      'description' => $this->t('Provides an extra field for placing a webform in any entity display mode.'),
-      'url' => Url::fromUri('https://www.drupal.org/project/webform extra field validation'),
+      'description' => $this->t('Provides extra validation to webform, allowing you to specify validation rules for your Webform components.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_extra_field_validation'),
       'category' => 'enhancement',
     ];
 
     // Enhancement: Webform Feedback.
     $projects['webform_feedback'] = [
       'title' => $this->t('Webform Feedback'),
-      'description' => $this->t('Provides extra validation to webform, allowing you to specify validation rules for your Webform components.'),
+      'description' => $this->t('Adds a lightbox like pop-up for a contact/feedback form based on webform.'),
       'url' => Url::fromUri('https://www.drupal.org/project/webform_feedback'),
       'category' => 'enhancement',
     ];
@@ -418,14 +426,6 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'integration',
     ];
 
-//    // Integrations: Donorbox.
-//    $projects['donorbox'] = [
-//      'title' => $this->t('Donorbox'),
-//      'description' => $this->t('Provides integration with Donorbox'),
-//      'url' => Url::fromUri('https://www.drupal.org/project/donorbox'),
-//      'category' => 'integration',
-//    ];
-
     // Integrations: Druminate Webforms.
     $projects['druminate'] = [
       'title' => $this->t('Druminate Webforms'),
@@ -450,6 +450,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'integration',
     ];
 
+    // Integrations: Group Webform.
+    $projects['group_webform'] = [
+      'title' => $this->t('Group Webform'),
+      'description' => $this->t('Designed to associate group specific webforms with a group when using the Group module.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/group_webform'),
+      'category' => 'integration',
+    ];
+
     // Integrations: GraphQL Webform.
     $projects['graphql_webform'] = [
       'title' => $this->t('GraphQL Webform'),
@@ -509,11 +517,28 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     // Integrations: Webform AddressFinder.
     $projects['webform_location_addressfinder'] = [
       'title' => $this->t('Webform AddressFinder'),
-      'description' => $this->t(' Implements integration between Webform and the AddressFinder service (https://addressfinder.com.au/), providing autocompletion and validation for addresses in Australia and New Zealand.'),
+      'description' => $this->t('Implements integration between Webform and the AddressFinder service (https://addressfinder.com.au/), providing autocompletion and validation for addresses in Australia and New Zealand.'),
       'url' => Url::fromUri('https://www.drupal.org/project/webform_location_addressfinder'),
       'category' => 'integration',
     ];
 
+    // Integrations: Webform Copper CRM.
+    $projects['webform_copper'] = [
+      'title' => $this->t('Webform Copper'),
+      'description' => $this->t('Provides a Webform handler that integrates with Copper CRM.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_copper'),
+      'category' => 'integration',
+    ];
+
+    // Integrations: Webform Emfluence.
+    $projects['emfluence_webform'] = [
+      'title' => $this->t('Webform Emfluence'),
+      'description' => $this->t('Integrates Emfluence Marketing Platform\'s contacts/save endpoint and Webform 8.x.'),
+      'url' => Url::fromUri('https://www.drupal.org/sandbox/huskyninja/3074135'),
+      'experimental' => TRUE,
+      'category' => 'integration',
+    ];
+
     // Integrations: Webform E-petition.
     $projects['webform_epetition'] = [
       'title' => $this->t('Webform E-petition'),
@@ -527,6 +552,7 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'title' => $this->t('Webform iContact'),
       'description' => $this->t('Send Webform submissions to iContact list.'),
       'url' => Url::fromUri('https://www.drupal.org/sandbox/ibakayoko/2853326'),
+      'experimental' => TRUE,
       'category' => 'integration',
     ];
 
@@ -586,6 +612,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'integration',
     ];
 
+    // Integrations: Webform Mattermost.
+    $projects['webform_mattermost'] = [
+      'title' => $this->t('Webform Mattermost'),
+      'description' => $this->t('Adds a handler for sending webform submissions to Mattermost'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_mattermost'),
+      'category' => 'integration',
+    ];
+
     // Integrations: Webform Mautic.
     $projects['webform_mautic'] = [
       'title' => $this->t('Webform Mautic'),
@@ -597,15 +631,31 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     // Integrations: Webform MyEmma.
     $projects['webform_myemma'] = [
       'title' => $this->t('Webform MyEmma'),
-      'description' => $this->t('Provides MyEmma subscription field to webforms'),
+      'description' => $this->t('Provides MyEmma subscription field to webforms.'),
       'url' => Url::fromUri('https://www.drupal.org/project/webform_myemma'),
       'category' => 'integration',
     ];
 
+    // Integrations: Webform Newsletter2Go.
+    $projects['webform_newsletter2go'] = [
+      'title' => $this->t('Webform Newsletter2Go'),
+      'description' => $this->t('Provides Newsletter2Go Webform Integration.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_newsletter2go'),
+      'category' => 'integration',
+    ];
+
+    // Integrations: Webform Pardot.
+    $projects['webform_pardot'] = [
+      'title' => $this->t('Webform Pardot'),
+      'description' => $this->t('Links commerce products to webform elements.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_pardot'),
+      'category' => 'integration',
+    ];
+
     // Integrations: Webform Product.
     $projects['webform_product'] = [
       'title' => $this->t('Webform Product'),
-      'description' => $this->t('Links commerce products to webform elements.'),
+      'description' => $this->t('Provides a webform handler for posting submissions to Pardot.'),
       'url' => Url::fromUri('https://github.com/chx/webform_product'),
       'category' => 'integration',
     ];
@@ -623,6 +673,7 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'title' => $this->t('Webform Slack'),
       'description' => $this->t('Provides a Webform handler for posting a message to a slack channel when a submission is saved.'),
       'url' => Url::fromUri('https://www.drupal.org/sandbox/smaz/2833275'),
+      'experimental' => TRUE,
       'category' => 'integration',
     ];
 
@@ -642,6 +693,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'integration',
     ];
 
+    // Integrations: Webform to Paypal.
+    $projects['webform_to_paypal'] = [
+      'title' => $this->t('Webform to Paypal'),
+      'description' => $this->t('Adds extra fields and settings to webforms to integrate with Paypal.'),
+      'url' => Url::fromUri('https://github.com/IE-Digital/webform_to_paypal'),
+      'category' => 'integration',
+    ];
+
     // Integrations: Webform User Registration.
     $projects['webform_user_registration'] = [
       'title' => $this->t('Webform User Registration'),
@@ -720,6 +779,22 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'mail',
     ];
 
+    // Mail: Webform Email Reply.
+    $projects['webform_email_reply'] = [
+      'title' => $this->t('Webform Email Reply'),
+      'description' => $this->t('A webform helper module that allows users to send an email reply to submissions.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_email_reply'),
+      'category' => 'mail',
+    ];
+
+    // Mail: Webform Embed.
+    $projects['webform_embed'] = [
+      'title' => $this->t('Webform Embed'),
+      'description' => $this->t('Allows you to embed webforms within an iframe on another site.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_embed'),
+      'category' => 'mail',
+    ];
+
     // Mail: Webform Mass Email.
     $projects['webform_mass_email'] = [
       'title' => $this->t('Webform Mass Email'),
@@ -820,6 +895,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'spam',
     ];
 
+    // Spam: Protected Submissions.
+    $projects['protected_submissions'] = [
+      'title' => $this->t('Protected Submissions'),
+      'description' => $this->t('A light-weight, non-intrusive spam protection module that enables rejection of webform submissions which contain preset patterns.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/protected_submissions'),
+      'category' => 'spam',
+    ];
+
     /**************************************************************************/
     // Submissions.
     /**************************************************************************/
@@ -920,14 +1003,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     // Submissions: Webform Submissions Delete.
     $projects['webform_submissions_delete'] = [
       'title' => $this->t('Webform Submissions Delete'),
-      'description' => $this->t(' Used to delete webform submissions using start date, end date all at once.'),
+      'description' => $this->t('Used to delete webform submissions using start date, end date all at once.'),
       'url' => Url::fromUri('https://www.drupal.org/project/webform_submissions_delete'),
       'category' => 'submission',
     ];
 
     // Submissions: Webform Submissions Notification.
     $projects['webform_digests'] = [
-      'title' => $this->t(' Webform Submissions Notification'),
+      'title' => $this->t('Webform Submissions Notification'),
       'description' => $this->t('Adds a daily digest email for webform submissions.'),
       'url' => Url::fromUri('https://www.drupal.org/project/webform_digests'),
       'category' => 'submission',
@@ -935,30 +1018,18 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
 
     // Submissions: Webform Submission Files Download.
     $projects['webform_submission_files_download'] = [
-      'title' => $this->t(' Webform Submission Files Download'),
+      'title' => $this->t('Webform Submission Files Download'),
       'description' => $this->t('Allows you to download files attached to a single submission'),
       'url' => Url::fromUri('https://www.drupal.org/project/webform_submission_files_download'),
       'category' => 'submission',
     ];
 
-    /**************************************************************************/
-    // REST.
-    /**************************************************************************/
-
-    // REST: Webform REST.
-    $projects['webform_rest'] = [
-      'title' => $this->t('Webform REST'),
-      'description' => $this->t('Retrieve and submit webforms via REST.'),
-      'url' => Url::fromUri('https://www.drupal.org/project/webform_rest'),
-      'category' => 'rest',
-    ];
-
-    // REST: Webform JSON Schema.
-    $projects['webform_jsonschema'] = [
-      'title' => $this->t('Webform JSON Schema'),
-      'description' => $this->t('Expose webforms as JSON Schema, UI Schema, and Form Data. Make webforms work with react-jsonschema-form.'),
-      'url' => Url::fromUri('https://www.drupal.org/project/webform_jsonschema'),
-      'category' => 'rest',
+    // Submissions: Webform XLSX Export.
+    $projects['webform_xlsx_export'] = [
+      'title' => $this->t('Webform XLSX Export'),
+      'description' => $this->t('Exports Webform submissions in the Office Open XML format.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_xlsx_export'),
+      'category' => 'submission',
     ];
 
     /**************************************************************************/
@@ -995,6 +1066,14 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'utility',
     ];
 
+    // Utility: General Data Protection Regulation Compliance.
+    $projects['gdpr_compliance'] = [
+      'title' => $this->t('General Data Protection Regulation Compliance'),
+      'description' => $this->t('Provides Basic GDPR Compliance use cases via form checkboxes, pop-up alert, and a policy page.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/gdpr_compliance'),
+      'category' => 'utility',
+    ];
+
     // Utility: EU Cookie Compliance.
     $projects['eu_cookie_compliance'] = [
       'title' => $this->t('EU Cookie Compliance'),
@@ -1003,11 +1082,11 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'utility',
     ];
 
-    // Utility: General Data Protection Regulation Compliance.
-    $projects['gdpr_compliance'] = [
-      'title' => $this->t('General Data Protection Regulation Compliance'),
-      'description' => $this->t('Provides Basic GDPR Compliance use cases via form checkboxes, pop-up alert, and a policy page.'),
-      'url' => Url::fromUri('https://www.drupal.org/project/gdpr_compliance'),
+    // Utility: Formdazzle!
+    $projects['formdazzle'] = [
+      'title' => $this->t('Formdazzle!'),
+      'description' => $this->t('Provides a set of utilities that make form theming easier.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/formdazzle'),
       'category' => 'utility',
     ];
 
@@ -1032,6 +1111,7 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'title' => $this->t('Webform Config Key Value'),
       'description' => $this->t('Use the KeyValueStorage to save webform config instead of yaml config storage, allowing webforms to be treated more like content than configuration and are excluded from the configuration imports/exports.'),
       'url' => Url::fromUri('https://www.drupal.org/sandbox/thtas/2994250'),
+      'experimental' => TRUE,
       'category' => 'utility',
     ];
 
@@ -1064,6 +1144,42 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
       'category' => 'validation',
     ];
 
+    // Webform Handler: Compare Fields.
+    $projects['webform_handler_compare_fields'] = [
+      'title' => $this->t('Webform Handler: Compare Fields'),
+      'description' => $this->t('Validation handler to compare two fields on a webform.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_handler_compare_fields'),
+      'category' => 'validation',
+    ];
+
+    /**************************************************************************/
+    // Web services.
+    /**************************************************************************/
+
+    // Web services: Gatsby Drupal Webform.
+    $projects['gatsby_drupal_webform'] = [
+      'title' => $this->t('Gatsby Drupal Webform'),
+      'description' => $this->t('React component and graphql fragments for webforms. Goal of this project is to have a react component that generates bootstrap like HTML from webform YAML configuration.'),
+      'url' => Url::fromUri('https://github.com/oikeuttaelaimille/gatsby-drupal-webform'),
+      'category' => 'web_services',
+    ];
+
+    // Web services: Webform REST.
+    $projects['webform_rest'] = [
+      'title' => $this->t('Webform REST'),
+      'description' => $this->t('Retrieve and submit webforms via REST.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_rest'),
+      'category' => 'web_services',
+    ];
+
+    // Web services: Webform JSON Schema.
+    $projects['webform_jsonschema'] = [
+      'title' => $this->t('Webform JSON Schema'),
+      'description' => $this->t('Expose webforms as JSON Schema, UI Schema, and Form Data. Make webforms work with react-jsonschema-form.'),
+      'url' => Url::fromUri('https://www.drupal.org/project/webform_jsonschema'),
+      'category' => 'web_services',
+    ];
+
     /**************************************************************************/
     // Workflow.
     /**************************************************************************/
@@ -1100,7 +1216,7 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
     ];
 
     // Add logos.
-    global $base_url, $base_path;
+    global $base_url;
     $addon_paths = drupal_get_path('module', 'webform') . '/images/addons';
     $addon_extensions = ['png', 'svg'];
     foreach ($projects as $project_name => $project) {
@@ -1108,7 +1224,6 @@ class WebformAddonsManager implements WebformAddonsManagerInterface {
         if (file_exists("$addon_paths/$project_name.$addon_extension")) {
           $projects[$project_name]['logo'] = Url::fromUri("$base_url/$addon_paths/$project_name.$addon_extension");
         }
-
       }
     }
 
diff --git a/modules/contrib/webform/src/WebformEntityAddForm.php b/modules/contrib/webform/src/WebformEntityAddForm.php
index f7f1209f..71f90fa0 100644
--- a/modules/contrib/webform/src/WebformEntityAddForm.php
+++ b/modules/contrib/webform/src/WebformEntityAddForm.php
@@ -5,7 +5,6 @@ namespace Drupal\webform;
 use Drupal\Core\Entity\BundleEntityFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
-use Drupal\webform\Entity\Webform;
 use Drupal\webform\Form\WebformDialogFormTrait;
 
 /**
@@ -57,6 +56,7 @@ class WebformEntityAddForm extends BundleEntityFormBase {
         'exists' => '\Drupal\webform\Entity\Webform::load',
         'source' => ['title'],
         'label' => '<br/>' . $this->t('Machine name'),
+
       ],
       '#maxlength' => 32,
       '#field_suffix' => ' (' . $this->t('Maximum @max characters', ['@max' => 32]) . ')',
@@ -119,7 +119,7 @@ class WebformEntityAddForm extends BundleEntityFormBase {
       // duplicates any translated webform config stored in the database.
       $result = \Drupal::database()->select('config', 'c')
         ->fields('c', ['collection', 'name', 'data'])
-        ->condition('c.name', 'webform.webform.' . $original_id )
+        ->condition('c.name', 'webform.webform.' . $original_id)
         ->condition('c.collection', 'language.%', 'LIKE')
         ->execute();
       while ($record = $result->fetchAssoc()) {
diff --git a/modules/contrib/webform/src/WebformEntityElementsForm.php b/modules/contrib/webform/src/WebformEntityElementsForm.php
index 1fde5942..6b6e3270 100644
--- a/modules/contrib/webform/src/WebformEntityElementsForm.php
+++ b/modules/contrib/webform/src/WebformEntityElementsForm.php
@@ -108,6 +108,7 @@ class WebformEntityElementsForm extends BundleEntityFormBase {
       '#default_value' => $this->getElementsWithoutWebformTypePrefix($webform->get('elements')),
       '#required' => TRUE,
       '#element_validate' => ['::validateElementsYaml'],
+      '#attributes' => ['style' => 'min-height: 300px'],
     ];
 
     $form['token_tree_link'] = $this->tokenManager->buildTreeElement();
diff --git a/modules/contrib/webform/src/WebformEntityListBuilder.php b/modules/contrib/webform/src/WebformEntityListBuilder.php
index 9ee1b53d..90426b3b 100644
--- a/modules/contrib/webform/src/WebformEntityListBuilder.php
+++ b/modules/contrib/webform/src/WebformEntityListBuilder.php
@@ -146,6 +146,8 @@ class WebformEntityListBuilder extends ConfigEntityListBuilder {
     // Must preload libraries required by (modal) dialogs.
     WebformDialogHelper::attachLibraries($build);
 
+    $build['#attached']['library'][] = 'webform/webform.admin';
+
     return $build;
   }
 
diff --git a/modules/contrib/webform/src/WebformHelpManager.php b/modules/contrib/webform/src/WebformHelpManager.php
index 9d08c9dc..9fbc65dd 100644
--- a/modules/contrib/webform/src/WebformHelpManager.php
+++ b/modules/contrib/webform/src/WebformHelpManager.php
@@ -5,6 +5,7 @@ namespace Drupal\webform;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Render\Markup;
 use Drupal\Core\Serialization\Yaml;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\State\StateInterface;
@@ -493,8 +494,8 @@ class WebformHelpManager implements WebformHelpManagerInterface {
     switch ($video_display) {
       case 'dialog':
         $route_name = 'webform.help.video';
-        $route_parameters  = ['id' => str_replace('_', '-', $video_info['id'])];
-        $route_options  = ($options['more']) ? ['query' => ['more' => 1]] : [];
+        $route_parameters = ['id' => str_replace('_', '-', $video_info['id'])];
+        $route_options = ($options['more']) ? ['query' => ['more' => 1]] : [];
         return [
           '#url' => Url::fromRoute($route_name, $route_parameters, $route_options),
           '#attributes' => WebformDialogHelper::getModalDialogAttributes(WebformDialogHelper::DIALOG_WIDE, $options['class']),
@@ -553,7 +554,8 @@ class WebformHelpManager implements WebformHelpManagerInterface {
         $build['content'][$category_name]['projects'][$project_name] = [
           'title' => [
             '#type' => 'link',
-            '#title' => $project['title'],
+            '#title' => Markup::create($project['title']
+              . (!empty($project['experimental']) ? ' [' . $this->t('EXPERIMENTAL') . ']' : '')),
             '#url' => $project['url'],
             '#prefix' => '<dt>',
             '#suffix' => ((isset($project['recommended'])) ? ' ★' : '') . '</dt>',
@@ -1179,6 +1181,30 @@ class WebformHelpManager implements WebformHelpManagerInterface {
           ],
         ],
       ],
+      'limits' => [
+        'title' => $this->t('Submission limits and options limits'),
+        'content' => $this->t("This screencast shows how to set submission limits and options limits."),
+        'youtube_id' => 'fdkv10v3AX4',
+        'presentation_id' => '1owgZ4ueFagynwnzvBsH6krpvLqMXunMJXD32BqMCC-E',
+        'links' => [
+          [
+            'title' => $this->t('Webform now supports option limits as well as submission limits'),
+            'url' => 'https://www.drupal.org/node/3080869',
+          ],
+        ],
+      ],
+      'custom_options' => [
+        'title' => $this->t('Webform custom options elements'),
+        'content' => $this->t("The screencast walks through creating custom webform options elements."),
+        'youtube_id' => '08Ze1eACM48',
+        'presentation_id' => '1MZQ0we3qG9G3eFLtnHXiQ5c_uDfn1jjiBHciAeW311g',
+        'links' => [
+          [
+            'title' => $this->t('Webform module supports creating custom elements using HTML and SVG markup'),
+            'url' => 'https://www.drupal.org/node/3089024',
+          ],
+        ],
+      ],
       'print' => [
         'title' => $this->t('Printing webform submissions as PDF documents'),
         'content' => $this->t("This screencast shows how to download, export, and email PDF copies of webform submissions."),
diff --git a/modules/contrib/webform/src/WebformInterface.php b/modules/contrib/webform/src/WebformInterface.php
index 771fba2b..f8ddf71a 100644
--- a/modules/contrib/webform/src/WebformInterface.php
+++ b/modules/contrib/webform/src/WebformInterface.php
@@ -761,6 +761,14 @@ interface WebformInterface extends ConfigEntityInterface, EntityWithPluginCollec
    */
   public function getElementsPrepopulate();
 
+  /**
+   * Get webform elements default data.
+   *
+   * @return array
+   *   Webform elements default data.
+   */
+  public function getElementsDefaultData();
+
   /**
    * Sets elements (YAML) value.
    *
@@ -801,13 +809,17 @@ interface WebformInterface extends ConfigEntityInterface, EntityWithPluginCollec
    * @param string $operation
    *   The webform submission operation.
    *   Usually 'default', 'add', 'edit', 'edit_all', 'api', or 'test'.
+   * @param \Drupal\webform\WebformSubmissionInterface|null $webform_submission
+   *   (Optional) A webform submission. If a webform submission is defined and
+   *   the 'wizard_progress_states' is TRUE, wizard page conditional logic
+   *   will be evaluated.
    *
    * @return array
    *   An associative array of webform wizard pages.
    *
    * @see \Drupal\webform\Entity\WebformSubmission
    */
-  public function getPages($operation = '');
+  public function getPages($operation = '', WebformSubmissionInterface $webform_submission = NULL);
 
   /**
    * Get webform wizard page.
@@ -840,6 +852,16 @@ interface WebformInterface extends ConfigEntityInterface, EntityWithPluginCollec
    */
   public function hasMessageHandler();
 
+  /**
+   * Determine if a webform handler requires anonymous submission tracking.
+   *
+   * @return bool
+   *   TRUE if a webform handler requires anonymous submission tracking.
+   *
+   * @see \Drupal\webform_options_limit\Plugin\WebformHandler\OptionsLimitWebformHandler
+   */
+  public function hasAnonymousSubmissionTrackingHandler();
+
   /**
    * Returns a specific webform handler.
    *
@@ -914,8 +936,13 @@ interface WebformInterface extends ConfigEntityInterface, EntityWithPluginCollec
    *   (optional) An additional variable that is passed by reference.
    * @param mixed $context2
    *   (optional) An additional variable that is passed by reference.
+   * @param mixed $context3
+   *   (optional) An additional variable that is passed by reference.
+   *
+   * @return \Drupal\Core\Access\AccessResult|null
+   *   If 'access' method is invoked an AccessResult is returned.
    */
-  public function invokeHandlers($method, &$data, &$context1 = NULL, &$context2 = NULL);
+  public function invokeHandlers($method, &$data, &$context1 = NULL, &$context2 = NULL, &$context3 = NULL);
 
   /**
    * Invoke elements method.
diff --git a/modules/contrib/webform/src/WebformLibrariesManager.php b/modules/contrib/webform/src/WebformLibrariesManager.php
index 53ee6a1f..d1187133 100644
--- a/modules/contrib/webform/src/WebformLibrariesManager.php
+++ b/modules/contrib/webform/src/WebformLibrariesManager.php
@@ -342,8 +342,8 @@ class WebformLibrariesManager implements WebformLibrariesManagerInterface {
       // NOTE: Using NPM/JsDelivr because it contains the '/dist/cdn/' directory.
       // @see https://asset-packagist.org/package/detail?fullname=npm-asset/places.js
       // @see https://www.jsdelivr.com/package/npm/places.js
-      'download_url' => Url::fromUri('https://registry.npmjs.org/places.js/-/places.js-1.16.4.tgz'),
-      'version' => '1.16.4',
+      'download_url' => Url::fromUri('https://registry.npmjs.org/places.js/-/places.js-1.17.0.tgz'),
+      'version' => '1.17.0',
       'elements' => ['webform_location_places'],
     ];
     $libraries['jquery.geocomplete'] = [
@@ -370,16 +370,16 @@ class WebformLibrariesManager implements WebformLibrariesManagerInterface {
       'description' => $this->t('Input masks ensures a predefined format is entered. This can be useful for dates, numerics, phone numbers, etc…'),
       'notes' => $this->t('Input masks are used to ensure predefined and custom formats for text fields.'),
       'homepage_url' => Url::fromUri('https://robinherbots.github.io/Inputmask/'),
-      'download_url' => Url::fromUri('https://github.com/RobinHerbots/jquery.inputmask/archive/4.0.8.zip'),
-      'version' => '4.0.8',
+      'download_url' => Url::fromUri('https://github.com/RobinHerbots/jquery.inputmask/archive/4.0.9.zip'),
+      'version' => '4.0.9',
     ];
     $libraries['jquery.intl-tel-input'] = [
       'title' => $this->t('jQuery: International Telephone Input'),
       'description' => $this->t("A jQuery plugin for entering and validating international telephone numbers. It adds a flag dropdown to any input, detects the user's country, displays a relevant placeholder and provides formatting/validation methods."),
       'notes' => $this->t('International Telephone Input is used by the Telephone element.'),
       'homepage_url' => Url::fromUri('https://github.com/jackocnr/intl-tel-input'),
-      'download_url' => Url::fromUri('https://github.com/jackocnr/intl-tel-input/archive/v15.1.0.zip'),
-      'version' => '15.1.0',
+      'download_url' => Url::fromUri('https://github.com/jackocnr/intl-tel-input/archive/v16.0.0.zip'),
+      'version' => '16.0.0',
     ];
     $libraries['jquery.rateit'] = [
       'title' => $this->t('jQuery: RateIt'),
@@ -438,8 +438,8 @@ class WebformLibrariesManager implements WebformLibrariesManagerInterface {
       'description' => $this->t('Select2 gives you a customizable select box with support for searching and tagging.'),
       'notes' => $this->t('Select2 is used to improve the user experience for select menus. Select2 is the recommended select menu enhancement library.'),
       'homepage_url' => Url::fromUri('https://select2.github.io/'),
-      'download_url' => Url::fromUri('https://github.com/select2/select2/archive/4.0.8.zip'),
-      'version' => '4.0.8',
+      'download_url' => Url::fromUri('https://github.com/select2/select2/archive/4.0.12.zip'),
+      'version' => '4.0.12',
       'module' => $this->moduleHandler->moduleExists('select2') ? 'select2' : '',
     ];
     $libraries['choices'] = [
@@ -447,8 +447,8 @@ class WebformLibrariesManager implements WebformLibrariesManagerInterface {
       'description' => $this->t('Choices.js is a lightweight, configurable select box/text input plugin. Similar to Select2 and Selectize but without the jQuery dependency.'),
       'notes' => $this->t('Choices.js is used to improve the user experience for select menus. Choices.js is an alternative to Select2.'),
       'homepage_url' => Url::fromUri('https://joshuajohnson.co.uk/Choices/'),
-      'download_url' => Url::fromUri('https://github.com/jshjohnson/Choices/archive/v7.0.0.zip'),
-      'version' => '7.0.0',
+      'download_url' => Url::fromUri('https://github.com/jshjohnson/Choices/archive/v9.0.1.zip'),
+      'version' => '9.0.1',
     ];
     $libraries['jquery.chosen'] = [
       'title' => $this->t('jQuery: Chosen'),
diff --git a/modules/contrib/webform/src/WebformOptionsForm.php b/modules/contrib/webform/src/WebformOptionsForm.php
index b97af3d3..ca56675d 100644
--- a/modules/contrib/webform/src/WebformOptionsForm.php
+++ b/modules/contrib/webform/src/WebformOptionsForm.php
@@ -189,6 +189,7 @@ class WebformOptionsForm extends EntityForm {
       '#title' => $this->t('Options (YAML)'),
       '#description' => $this->t('Key-value pairs MUST be specified as "safe_key: \'Some readable option\'". Use of only alphanumeric characters and underscores is recommended in keys. One option per line. Option groups can be created by using just the group name followed by indented group options.') . ' ' .
         $this->t("Descriptions, which are only applicable to radios and checkboxes, can be delimited using ' -- '."),
+      '#attributes' => ['style' => 'min-height: 200px'],
       '#default_value' => Yaml::encode($this->getOptions()),
     ];
     return $form;
diff --git a/modules/contrib/webform/src/WebformOptionsListBuilder.php b/modules/contrib/webform/src/WebformOptionsListBuilder.php
index 6f32a5cb..22a39ec2 100644
--- a/modules/contrib/webform/src/WebformOptionsListBuilder.php
+++ b/modules/contrib/webform/src/WebformOptionsListBuilder.php
@@ -237,9 +237,9 @@ class WebformOptionsListBuilder extends ConfigEntityListBuilder {
    */
   public function buildOperations(EntityInterface $entity) {
     return parent::buildOperations($entity) + [
-        '#prefix' => '<div class="webform-dropbutton">',
-        '#suffix' => '</div>',
-      ];
+      '#prefix' => '<div class="webform-dropbutton">',
+      '#suffix' => '</div>',
+    ];
   }
 
   /**
diff --git a/modules/contrib/webform/src/WebformOptionsStorageInterface.php b/modules/contrib/webform/src/WebformOptionsStorageInterface.php
index 2080b76c..fb116aa4 100644
--- a/modules/contrib/webform/src/WebformOptionsStorageInterface.php
+++ b/modules/contrib/webform/src/WebformOptionsStorageInterface.php
@@ -27,7 +27,7 @@ interface WebformOptionsStorageInterface extends ConfigEntityStorageInterface, I
   public function getOptions();
 
   /**
-   * Get all likert options with 'Likert:' prefix removed..
+   * Get all likert options with 'Likert:' prefix removed.
    *
    * @return string[]
    *   An array of likert options.
diff --git a/modules/contrib/webform/src/WebformSubmissionAccessControlHandler.php b/modules/contrib/webform/src/WebformSubmissionAccessControlHandler.php
index defea601..68c84281 100644
--- a/modules/contrib/webform/src/WebformSubmissionAccessControlHandler.php
+++ b/modules/contrib/webform/src/WebformSubmissionAccessControlHandler.php
@@ -9,6 +9,7 @@ use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\Access\WebformAccessResult;
 use Symfony\Component\DependencyInjection\ContainerInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
 
 /**
  * Defines the access control handler for the webform submission entity type.
@@ -24,6 +25,13 @@ class WebformSubmissionAccessControlHandler extends EntityAccessControlHandler i
    */
   protected $accessRulesManager;
 
+  /**
+   * The current request.
+   *
+   * @var \Symfony\Component\HttpFoundation\Request
+   */
+  protected $request;
+
   /**
    * WebformSubmissionAccessControlHandler constructor.
    *
@@ -31,11 +39,14 @@ class WebformSubmissionAccessControlHandler extends EntityAccessControlHandler i
    *   The entity type definition.
    * @param \Drupal\webform\WebformAccessRulesManagerInterface $access_rules_manager
    *   Webform access rules manager service.
+   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   *   The request stack.
    */
-  public function __construct(EntityTypeInterface $entity_type, WebformAccessRulesManagerInterface $access_rules_manager) {
+  public function __construct(EntityTypeInterface $entity_type, WebformAccessRulesManagerInterface $access_rules_manager, RequestStack $request_stack) {
     parent::__construct($entity_type);
 
     $this->accessRulesManager = $access_rules_manager;
+    $this->request = $request_stack->getCurrentRequest();
   }
 
   /**
@@ -44,7 +55,8 @@ class WebformSubmissionAccessControlHandler extends EntityAccessControlHandler i
   public static function createInstance(ContainerInterface $container, EntityTypeInterface $entity_type) {
     return new static(
       $entity_type,
-      $container->get('webform.access_rules_manager')
+      $container->get('webform.access_rules_manager'),
+      $container->get('request_stack')
     );
   }
 
@@ -69,6 +81,17 @@ class WebformSubmissionAccessControlHandler extends EntityAccessControlHandler i
       return WebformAccessResult::allowed($entity, TRUE);
     }
 
+    // Check view operation token access.
+    if ($operation === 'view'
+      && $entity->getWebform()->getSetting('token_view')) {
+      $token = $this->request->query->get('token');
+      if ($token === $entity->getToken()) {
+        return WebformAccessResult::allowed($entity)
+          ->addCacheContexts(['url.query_args:token']);
+      }
+
+    }
+
     // Check 'any' or 'own' webform submission permissions.
     $operations = [
       'view' => 'view',
@@ -87,6 +110,17 @@ class WebformSubmissionAccessControlHandler extends EntityAccessControlHandler i
       }
     }
 
+    // Check other operations.
+    switch ($operation) {
+      case 'duplicate':
+        // Check for 'create' or 'update' access.
+        return WebformAccessResult::allowedIf($entity->access('create', $account) || $entity->access('update', $account));
+
+      case 'resend':
+        // Check for 'update any submission' access.
+        return WebformAccessResult::allowedIf($entity->getWebform()->access('submission_update_any', $account));
+    }
+
     // Check webform access rules.
     $webform_access = $this->accessRulesManager->checkWebformSubmissionAccess($operation, $account, $entity);
     if ($webform_access->isAllowed()) {
diff --git a/modules/contrib/webform/src/WebformSubmissionConditionsValidator.php b/modules/contrib/webform/src/WebformSubmissionConditionsValidator.php
index 1e4b2e47..70f1c389 100644
--- a/modules/contrib/webform/src/WebformSubmissionConditionsValidator.php
+++ b/modules/contrib/webform/src/WebformSubmissionConditionsValidator.php
@@ -60,6 +60,32 @@ class WebformSubmissionConditionsValidator implements WebformSubmissionCondition
     $this->elementManager = $element_manager;
   }
 
+  /****************************************************************************/
+  // Build pages methods.
+  /****************************************************************************/
+
+  /**
+   * {@inheritdoc}
+   */
+  public function buildPages(array $pages, WebformSubmissionInterface $webform_submission) {
+    foreach ($pages as $page_key => $page) {
+      // Check #access which can be set via form alter.
+      if ($page['#access'] === FALSE) {
+        unset($pages[$page_key]);
+      }
+      // Check #states (visible/hidden).
+      if (!empty($page['#states'])) {
+        $state = key($page['#states']);
+        $conditions = $page['#states'][$state];
+        $result = $this->validateState($state, $conditions, $webform_submission);
+        if ($result !== NULL && !$result) {
+          unset($pages[$page_key]);
+        }
+      }
+    }
+    return $pages;
+  }
+
   /****************************************************************************/
   // Build form methods.
   /****************************************************************************/
@@ -320,6 +346,9 @@ class WebformSubmissionConditionsValidator implements WebformSubmissionCondition
       // Determine if the element is required.
       $is_required = $this->validateConditions($conditions, $webform_submission);
       $is_required = ($state == 'optional') ? !$is_required : $is_required;
+      if (!$is_required) {
+        continue;
+      }
 
       // Determine if the element is empty (but not zero).
       if (isset($element['#webform_key'])) {
@@ -329,12 +358,19 @@ class WebformSubmissionConditionsValidator implements WebformSubmissionCondition
         $value = $element['#value'];
       }
 
-      $is_empty = (empty($value) && $value !== '0');
-      $is_default_input_mask = (TextBase::isDefaultInputMask($element, $value));
+      // Perform required validation. Use element's method if available.
+      $element_definition = $element_plugin->getFormElementClassDefinition();
+      if (method_exists($element_definition, 'setRequiredError')) {
+        $element_definition::setRequiredError($element, $form_state);
+      }
+      else {
+        $is_empty = (empty($value) && $value !== '0');
+        $is_default_input_mask = (TextBase::isDefaultInputMask($element, $value));
 
-      // If required and empty then set required error.
-      if ($is_required && ($is_empty || $is_default_input_mask)) {
-        WebformElementHelper::setRequiredError($element, $form_state);
+        // If required and empty then set required error.
+        if ($is_empty || $is_default_input_mask) {
+          WebformElementHelper::setRequiredError($element, $form_state);
+        }
       }
     }
   }
diff --git a/modules/contrib/webform/src/WebformSubmissionConditionsValidatorInterface.php b/modules/contrib/webform/src/WebformSubmissionConditionsValidatorInterface.php
index e70e42e8..17647162 100644
--- a/modules/contrib/webform/src/WebformSubmissionConditionsValidatorInterface.php
+++ b/modules/contrib/webform/src/WebformSubmissionConditionsValidatorInterface.php
@@ -9,6 +9,19 @@ use Drupal\Core\Form\FormStateInterface;
  */
 interface WebformSubmissionConditionsValidatorInterface {
 
+  /**
+   * Apply states (aka conditional logic) to wizard pages.
+   *
+   * @param array $pages
+   *   An associative array of webform wizard pages.
+   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   *   A webform submission.
+   *
+   * @return array
+   *   An associative array of webform wizard pages with hidden pages removed.
+   */
+  public function buildPages(array $pages, WebformSubmissionInterface $webform_submission);
+
   /**
    * Apply form #states to visible elements.
    *
diff --git a/modules/contrib/webform/src/WebformSubmissionForm.php b/modules/contrib/webform/src/WebformSubmissionForm.php
index 36e8849d..de920a0d 100644
--- a/modules/contrib/webform/src/WebformSubmissionForm.php
+++ b/modules/contrib/webform/src/WebformSubmissionForm.php
@@ -154,6 +154,15 @@ class WebformSubmissionForm extends ContentEntityForm {
    */
   protected $killSwitch;
 
+  /**
+   * Stores the original submission data passed via the EntityFormBuilder.
+   *
+   * @var array
+   *
+   * @see \Drupal\webform\WebformSubmissionForm::setEntity
+   */
+  protected $originalData;
+
   /**
    * Constructs a WebformSubmissionForm object.
    *
@@ -278,6 +287,21 @@ class WebformSubmissionForm extends ContentEntityForm {
     /** @var \Drupal\webform\WebformSubmissionInterface $entity */
     $webform = $entity->getWebform();
 
+    // Initialize the webform submission entity by getting it default data
+    // and storing its original data.
+    if (!isset($this->originalData)) {
+      // Store the original data passed via the EntityFormBuilder.
+      // This allows us to reset the submission to it's original state
+      // via ::reset.
+      // @see \Drupal\Core\Entity\EntityFormBuilder::getForm
+      // @see \Drupal\webform\Entity\Webform::getSubmissionForm
+      // @see \Drupal\webform\WebformSubmissionForm::reset
+      $this->originalData = $entity->getRawData();
+    }
+
+    // Get the submission data and only call WebformSubmission::setData once.
+    $data = $entity->getRawData();
+
     // If ?_webform_test is defined for the current webform, override
     // the 'add' operation with 'test' operation and generate test data.
     if ($this->operation === 'add' &&
@@ -285,7 +309,7 @@ class WebformSubmissionForm extends ContentEntityForm {
       $webform->access('test')
     ) {
       $this->operation = 'test';
-      $entity->setData($this->generate->getData($webform));
+      $data = $this->generate->getData($webform);
     }
 
     // Get the source entity and allow webform submission to be used as a source
@@ -296,13 +320,8 @@ class WebformSubmissionForm extends ContentEntityForm {
     }
     // Handle paragraph sourc entity.
     if ($source_entity && $source_entity->getEntityTypeId() === 'paragraph') {
-      // Default data supports paragraph source entity tokens.
-      // @see \Drupal\webform\Plugin\Field\FieldFormatter\WebformEntityReferenceEntityFormatter::viewElements
-      $data = $entity->getData();
       // Disable :clear suffix to prevent webform tokens from being removed.
       $data = $this->tokenManager->replace($data, $source_entity, [], ['suffixes' => ['clear' => FALSE]]);
-      $entity->setData($data);
-
       $source_entity = WebformSourceEntityManager::getMainSourceEntity($source_entity);
     }
     // Set source entity.
@@ -318,6 +337,7 @@ class WebformSubmissionForm extends ContentEntityForm {
       $webform_submission_token = $this->getStorage()->loadFromToken($token, $webform, $source_entity);
       if ($webform_submission_token) {
         $entity = $webform_submission_token;
+        $data = $entity->getRawData();
       }
       elseif ($webform->getSetting('draft') != WebformInterface::DRAFT_NONE) {
         if ($webform->getSetting('draft_multiple')) {
@@ -327,11 +347,13 @@ class WebformSubmissionForm extends ContentEntityForm {
           $webform_submission_token = $this->getStorage()->loadFromToken($token, $webform, $source_entity, $account);
           if ($webform_submission_token && $webform_submission_token->isDraft()) {
             $entity = $webform_submission_token;
+            $data = $entity->getRawData();
           }
         }
         elseif ($webform_submission_draft = $this->getStorage()->loadDraft($webform, $source_entity, $account)) {
           // Else load the most recent draft.
           $entity = $webform_submission_draft;
+          $data = $entity->getRawData();
         }
       }
     }
@@ -340,40 +362,59 @@ class WebformSubmissionForm extends ContentEntityForm {
     $this->entity = $entity;
 
     if ($entity->isNew()) {
+      $last_submission = NULL;
       if ($webform->getSetting('limit_total_unique')) {
+        // Require user to have update any submission access.
+        if (!$webform->access('submission_view_any')
+          && !$webform->access('submission_update_any')) {
+          throw new AccessDeniedHttpException();
+        }
         // Get last webform/source entity submission.
         $last_submission = $this->getStorage()->getLastSubmission($webform, $source_entity, NULL, ['in_draft' => FALSE]);
-        if ($last_submission) {
-          $entity = $last_submission;
-          $this->operation = 'edit';
-        }
       }
       elseif ($webform->getSetting('limit_user_unique')) {
         // Require user to be authenticated to access a unique submission.
         if (!$account->isAuthenticated()) {
           throw new AccessDeniedHttpException();
         }
-
+        // Require user to have update own submission access.
+        if (!$webform->access('submission_view_own')
+          && !$webform->access('submission_update_own')) {
+          throw new AccessDeniedHttpException();
+        }
         // Get last user submission.
         $last_submission = $this->getStorage()->getLastSubmission($webform, $source_entity, $account, ['in_draft' => FALSE]);
-        if ($last_submission) {
-          $entity = $last_submission;
-          $this->operation = 'edit';
-        }
+      }
+
+      // Set last submission and switch to the edit operation.
+      if ($last_submission) {
+        $entity = $last_submission;
+        $data = $entity->getRawData();
+        $this->operation = 'edit';
       }
     }
 
-    if ($this->operation === 'add' && $entity->isNew()) {
-      if ($webform->getSetting('autofill')) {
-        // Autofill with previous submission.
-        if ($last_submission = $this->getLastSubmission()) {
-          $excluded_elements = $webform->getSetting('autofill_excluded_elements') ?: [];
-          $last_submission_data = array_diff_key($last_submission->getData(), $excluded_elements);
-          $entity->setData($last_submission_data + $entity->getData());
-        }
+    // Autofill with previous submission.
+    if ($this->operation === 'add'
+      && $entity->isNew()
+      && $webform->getSetting('autofill')) {
+      if ($last_submission = $this->getLastSubmission()) {
+        $excluded_elements = $webform->getSetting('autofill_excluded_elements') ?: [];
+        $last_submission_data = array_diff_key($last_submission->getRawData(), $excluded_elements);
+        $data = $last_submission_data + $data;
       }
     }
 
+    // Get default data and append it to the submission's data.
+    // This allows computed elements to be executed and tokens
+    // to be replaced using the webform's default data.
+    $default_data = $webform->getElementsDefaultData();
+    $default_data = $this->tokenManager->replace($default_data, $entity);
+    $data += $default_data;
+
+    // Set data and calculate computed values.
+    $entity->setData($data);
+
     // Override settings.
     $this->overrideSettings($entity);
 
@@ -516,7 +557,7 @@ class WebformSubmissionForm extends ContentEntityForm {
 
     // Server side #states API validation.
     $this->conditionsValidator->buildForm($form, $form_state);
-    
+
     return $form;
   }
 
@@ -639,7 +680,10 @@ class WebformSubmissionForm extends ContentEntityForm {
 
     // Get and prepopulate (via query string) submission data.
     $data = $webform_submission->getData();
-    $this->prepopulateData($data);
+    // Only prepopulate data when a webform is initially loaded.
+    if (!$form_state->isRebuilding()) {
+      $this->prepopulateData($data);
+    }
 
     /* Elements */
 
@@ -666,6 +710,7 @@ class WebformSubmissionForm extends ContentEntityForm {
         $form['progress'] = [
           '#theme' => 'webform_progress',
           '#webform' => $this->getWebform(),
+          '#webform_submission' => $webform_submission,
           '#current_page' => $current_page,
           '#operation' => $this->operation,
           '#weight' => -20,
@@ -751,6 +796,13 @@ class WebformSubmissionForm extends ContentEntityForm {
       $form['#disable_inline_form_errors'] = TRUE;
     }
 
+    // Details save: Attach details element save open/close library.
+    // This ensures that the library will be loaded even if the webform is
+    // used as a block or a node.
+    if ($this->config('webform.settings')->get('ui.details_save')) {
+      $form['#attached']['library'][] = 'webform/webform.element.details.save';
+    }
+
     // Details toggle: Display collapse/expand all details link.
     if ($this->getWebformSetting('form_details_toggle')) {
       $form['#attributes']['class'][] = 'js-webform-details-toggle';
@@ -763,13 +815,6 @@ class WebformSubmissionForm extends ContentEntityForm {
       $form['#attributes']['class'][] = 'js-webform-autofocus';
     }
 
-    // Details save: Attach details element save open/close library.
-    // This ensures that the library will be loaded even if the webform is
-    // used as a block or a node.
-    if ($this->config('webform.settings')->get('ui.details_save')) {
-      $form['#attached']['library'][] = 'webform/webform.element.details.save';
-    }
-
     // Pages: Disable webform auto submit on enter for wizard webform pages only.
     if ($this->hasPages()) {
       $form['#attributes']['class'][] = 'js-webform-disable-autosubmit';
@@ -1375,6 +1420,13 @@ class WebformSubmissionForm extends ContentEntityForm {
     $current_page = $this->getCurrentPage($form, $form_state);
     $next_page = $this->getNextPage($pages, $current_page);
 
+    // If there is no next page jump to the confirmation page which will also
+    // submit this form.
+    // @see \Drupal\webform\WebformSubmissionForm::wizardSubmit
+    if (empty($next_page)) {
+      $next_page = 'webform_confirmation';
+    }
+
     // Set next page.
     $form_state->set('current_page', $next_page);
 
@@ -1437,19 +1489,22 @@ class WebformSubmissionForm extends ContentEntityForm {
     // @see template_preprocess_webform_progress()
     if ($this->isAjax()) {
       $pages = $this->getPages($form, $form_state);
-
-      $page_keys = array_keys($pages);
-      $page_indexes = array_flip($page_keys);
-      $current_index = $page_indexes[$current_page];
-      $total_pages = count($page_keys);
-
-      $t_args = [
-        '@title' => $this->getWebform()->label(),
-        '@page' => $pages[$current_page]['#title'],
-        '@start' => ($current_index + 1),
-        '@end' => $total_pages,
-      ];
-      $this->announce($this->t('"@title: @page" loaded. (Page @start of @end)', $t_args));
+      // Make sure the current page exists because the confirmation page
+      // may not be included in the wizard's pages.
+      if (isset($pages[$current_page])) {
+        $page_keys = array_keys($pages);
+        $page_indexes = array_flip($page_keys);
+        $total_pages = count($page_keys);
+        $current_index = $page_indexes[$current_page];
+
+        $t_args = [
+          '@title' => $this->getWebform()->label(),
+          '@page' => $pages[$current_page]['#title'],
+          '@start' => ($current_index + 1),
+          '@end' => $total_pages,
+        ];
+        $this->announce($this->t('"@title: @page" loaded. (Page @start of @end)', $t_args));
+      }
     }
   }
 
@@ -1724,6 +1779,8 @@ class WebformSubmissionForm extends ContentEntityForm {
       || $this->getWebformSetting('user_limit_total')
       || $this->getWebformSetting('entity_limit_total')
       || $this->getWebformSetting('entity_limit_user')
+      || $this->getWebformSetting('limit_total_unique')
+      || $this->getWebformSetting('limit_user_unique')
     ) {
       Cache::invalidateTags(['webform:' . $this->getWebform()->id()]);
     }
@@ -1753,7 +1810,7 @@ class WebformSubmissionForm extends ContentEntityForm {
     // Create new webform submission.
     /** @var \Drupal\webform\Entity\WebformSubmission $webform_submission */
     $webform_submission = $this->getEntity()->createDuplicate();
-    $webform_submission->setData([]);
+    $webform_submission->setData($this->originalData);
     $this->setEntity($webform_submission);
 
     // Reset user input but preserve form tokens.
@@ -1790,6 +1847,7 @@ class WebformSubmissionForm extends ContentEntityForm {
   protected function setFormPropertiesFromElements(array &$form, array &$elements) {
     foreach ($elements as $key => $value) {
       if (is_string($key) && $key[0] == '#') {
+        $value = $this->tokenManager->replace($value, $this->getEntity());
         if (isset($form[$key]) && is_array($form[$key]) && is_array($value)) {
           $form[$key] = NestedArray::mergeDeep($form[$key], $value);
         }
@@ -1841,24 +1899,10 @@ class WebformSubmissionForm extends ContentEntityForm {
 
     // Get pages from form state.
     $pages = $form_state->get('pages');
-    foreach ($pages as $page_key => &$page) {
-      // Check #access which can set via form alter.
-      if ($page['#access'] === FALSE) {
-        unset($pages[$page_key]);
-      }
-      // Check #states (visible/hidden).
-      elseif (!empty($page['#states'])) {
-        $state = key($page['#states']);
-        $conditions = $page['#states'][$state];
-
-        $result = $this->conditionsValidator->validateState($state, $conditions, $this->getEntity());
-        if ($result !== NULL && !$result) {
-          unset($pages[$page_key]);
-        }
-      }
-    }
 
-    return $pages;
+    /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
+    $webform_submission = $this->getEntity();
+    return $this->conditionsValidator->buildPages($pages, $webform_submission);
   }
 
   /**
@@ -2080,7 +2124,14 @@ class WebformSubmissionForm extends ContentEntityForm {
         $confirmation_url = preg_replace('/^' . preg_quote(base_path(), '/') . '/', '/', $confirmation_url);
         // Get system path.
         $confirmation_url = $this->aliasManager->getPathByAlias($confirmation_url);
-        if ($redirect_url = $this->pathValidator->getUrlIfValid($confirmation_url)) {
+        // Get redirect URL if internal or valid.
+        if (strpos($confirmation_url, 'internal:') === 0) {
+          $redirect_url = Url::fromUri($confirmation_url);
+        }
+        else {
+          $redirect_url = $this->pathValidator->getUrlIfValid($confirmation_url);
+        }
+        if ($redirect_url) {
           if ($confirmation_type == WebformInterface::CONFIRMATION_URL_MESSAGE) {
             $this->getMessageManager()->display(WebformMessageManagerInterface::SUBMISSION_CONFIRMATION_MESSAGE);
           }
diff --git a/modules/contrib/webform/src/WebformSubmissionInterface.php b/modules/contrib/webform/src/WebformSubmissionInterface.php
index 4a8c7d6e..1e2ba8c7 100644
--- a/modules/contrib/webform/src/WebformSubmissionInterface.php
+++ b/modules/contrib/webform/src/WebformSubmissionInterface.php
@@ -303,10 +303,18 @@ interface WebformSubmissionInterface extends ContentEntityInterface, EntityOwner
   public function setElementData($key, $value);
 
   /**
-   * Gets the webform submission's data.
+   * Gets the webform submission's raw data.
    *
    * @return array
-   *   The webform submission data.
+   *   The webform submission raw data.
+   */
+  public function getRawData();
+
+  /**
+   * Gets the webform submission's data with computed valued.
+   *
+   * @return array
+   *   The webform submission data with computed valued.
    */
   public function getData();
 
@@ -338,6 +346,17 @@ interface WebformSubmissionInterface extends ContentEntityInterface, EntityOwner
    */
   public function setOriginalData(array $data);
 
+  /**
+   * Get a webform submission element's original data.
+   *
+   * @param string $key
+   *   An webform submission element's key.
+   *
+   * @return mixed
+   *   An webform submission element's original data/value.
+   */
+  public function getElementOriginalData($key);
+
   /**
    * Gets the webform submission's token.
    *
@@ -376,16 +395,22 @@ interface WebformSubmissionInterface extends ContentEntityInterface, EntityOwner
   /**
    * Gets the webform submission's secure tokenized URL.
    *
+   * @param string $operation
+   *   Token URL's operation. Defaults to update.
+   *
    * @return \Drupal\Core\Url
    *   The webform submission's secure tokenized URL.
    */
-  public function getTokenUrl();
+  public function getTokenUrl($operation = 'update');
 
   /**
    * Invoke all webform handlers method.
    *
    * @param string $method
    *   The webform handler method to be invoked.
+   *
+   * @return \Drupal\Core\Access\AccessResult|null
+   *   If 'access' method is invoked an AccessResult is returned.
    */
   public function invokeWebformHandlers($method);
 
@@ -415,9 +440,10 @@ interface WebformSubmissionInterface extends ContentEntityInterface, EntityOwner
    *
    * @param bool $custom
    *   If TRUE, return customized array that contains simplified properties
-   *   and webform submission data.
+   *   and webform submission (element) data.
    * @param bool $check_access
-   *   If TRUE, view access is checked for element data.
+   *   If $custom and $check_access is TRUE, view access is checked
+   *   for webform submission (element) data.
    *
    * @return mixed[]
    *   An array of property values, keyed by property name.
diff --git a/modules/contrib/webform/src/WebformSubmissionListBuilder.php b/modules/contrib/webform/src/WebformSubmissionListBuilder.php
index 243895c9..3b8200f5 100644
--- a/modules/contrib/webform/src/WebformSubmissionListBuilder.php
+++ b/modules/contrib/webform/src/WebformSubmissionListBuilder.php
@@ -1027,7 +1027,7 @@ class WebformSubmissionListBuilder extends EntityListBuilder {
         ];
       }
 
-      if ($entity->access('create') && $webform->getSetting('submission_user_duplicate')) {
+      if ($entity->access('duplicate') && $webform->getSetting('submission_user_duplicate')) {
         $operations['duplicate'] = [
           'title' => $this->t('Duplicate'),
           'weight' => 23,
@@ -1069,14 +1069,14 @@ class WebformSubmissionListBuilder extends EntityListBuilder {
         ];
       }
 
-      if ($webform->access('submission_update_any') && $webform->hasMessageHandler()) {
+      if ($entity->access('resend') && $webform->hasMessageHandler()) {
         $operations['resend'] = [
           'title' => $this->t('Resend'),
           'weight' => 22,
           'url' => $this->requestHandler->getUrl($entity, $this->sourceEntity, 'webform_submission.resend_form'),
         ];
       }
-      if ($webform->access('submission_update_any')) {
+      if ($entity->access('duplicate')) {
         $operations['duplicate'] = [
           'title' => $this->t('Duplicate'),
           'weight' => 23,
@@ -1294,8 +1294,7 @@ class WebformSubmissionListBuilder extends EntityListBuilder {
       return $result;
     }
     else {
-      $order = $this->request->query->get('order', $order);
-      if ($order) {
+      if ($order && $order['sql']) {
         $query->tableSort($header);
       }
       else {
diff --git a/modules/contrib/webform/src/WebformSubmissionStorage.php b/modules/contrib/webform/src/WebformSubmissionStorage.php
index 5e91acf9..088c52c7 100644
--- a/modules/contrib/webform/src/WebformSubmissionStorage.php
+++ b/modules/contrib/webform/src/WebformSubmissionStorage.php
@@ -353,7 +353,9 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
         $option_text = $entity->label();
         $options[$optgroup][$option_value] = $option_text;
       }
-      asort($options[$optgroup]);
+      if (isset($options[$optgroup])) {
+        asort($options[$optgroup]);
+      }
     }
     return (count($options) === 1) ? reset($options) : $options;
   }
@@ -366,7 +368,7 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
    * {@inheritdoc}
    */
   public function addQueryConditions(AlterableInterface $query, WebformInterface $webform = NULL, EntityInterface $source_entity = NULL, AccountInterface $account = NULL, array $options = []) {
-    $this->_addQueryConditions($query,$webform, $source_entity, $account, $options);
+    $this->_addQueryConditions($query, $webform, $source_entity, $account, $options);
   }
 
   /**
@@ -396,6 +398,7 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
       'check_source_entity' => FALSE,
       'in_draft' => NULL,
       'interval' => NULL,
+      'access_check' => TRUE,
     ];
 
     if ($webform) {
@@ -434,6 +437,9 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
     if ($options['interval']) {
       $query->condition('completed', \Drupal::time()->getRequestTime() - $options['interval'], '>');
     }
+    if ($options['access_check'] === FALSE) {
+      $query->accessCheck(FALSE);
+    }
   }
 
   /****************************************************************************/
@@ -906,7 +912,7 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
       $this->invokeWebformElements('postLoad', $entity);
       $this->invokeWebformHandlers('postLoad', $entity);
 
-      // If this is an anonymous draft..
+      // If this is an anonymous draft.
       // We must add $SESSION to the submission's cache context.
       // @see \Drupal\webform\WebformSubmissionStorage::loadDraft
       // @todo Add support for 'view own submission' permission.
@@ -1146,7 +1152,7 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
    */
   public function invokeWebformHandlers($method, WebformSubmissionInterface $webform_submission, &$context1 = NULL, &$context2 = NULL) {
     $webform = $webform_submission->getWebform();
-    $webform->invokeHandlers($method, $webform_submission, $context1, $context2);
+    return $webform->invokeHandlers($method, $webform_submission, $context1, $context2);
   }
 
   /**
@@ -1521,21 +1527,21 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
     }
 
     // Check if anonymous users are allowed to save submission using $_SESSION.
-    if ($this->checkAnonymousSubmissionAccess($webform_submission)) {
+    if ($this->hasAnonymousSubmissionTracking($webform_submission)) {
       $_SESSION['webform_submissions'][$webform_submission->id()] = $webform_submission->id();
     }
   }
 
   /**
-   * Check if anonymous users are allowed to save submission using $_SESSION.
+   * Check if anonymous users submission are tracked using $_SESSION.
    *
    * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
    *   A webform submission.
    *
    * @return bool
-   *   TRUE if anonymous users are allowed to save submission using $_SESSION.
+   *   TRUE if anonymous users submission are tracked using $_SESSION.
    */
-  protected function checkAnonymousSubmissionAccess(WebformSubmissionInterface $webform_submission) {
+  protected function hasAnonymousSubmissionTracking(WebformSubmissionInterface $webform_submission) {
     $webform = $webform_submission->getWebform();
     if ($this->currentUser->hasPermission('view own webform submission')) {
       return TRUE;
@@ -1543,15 +1549,18 @@ class WebformSubmissionStorage extends SqlContentEntityStorage implements Webfor
     elseif ($this->accessRulesManager->checkWebformSubmissionAccess('view_own', $this->currentUser, $webform_submission)->isAllowed()) {
       return TRUE;
     }
-    elseif ($webform->getSetting('form_convert_anonymous')) {
+    elseif ($webform->getSetting('limit_user') || ($webform->getSetting('entity_limit_user') && $webform_submission->getSourceEntity())) {
       return TRUE;
     }
-    elseif ($webform->getSetting('limit_user') || ($webform->getSetting('entity_limit_user') && $webform_submission->getSourceEntity())) {
+    elseif ($webform->getSetting('form_convert_anonymous')) {
       return TRUE;
     }
     elseif ($webform->getSetting('draft') === WebformInterface::DRAFT_ALL) {
       return TRUE;
     }
+    elseif ($webform->hasAnonymousSubmissionTrackingHandler()) {
+      return TRUE;
+    }
     else {
       return FALSE;
     }
diff --git a/modules/contrib/webform/src/WebformSubmissionStorageInterface.php b/modules/contrib/webform/src/WebformSubmissionStorageInterface.php
index c82c2ef3..82c1f176 100644
--- a/modules/contrib/webform/src/WebformSubmissionStorageInterface.php
+++ b/modules/contrib/webform/src/WebformSubmissionStorageInterface.php
@@ -499,6 +499,9 @@ interface WebformSubmissionStorageInterface extends ContentEntityStorageInterfac
    *   (optional) An additional variable that is passed by reference.
    * @param mixed $context2
    *   (optional) An additional variable that is passed by reference.
+   *
+   * @return \Drupal\Core\Access\AccessResult|null
+   *   If 'access' method is invoked an AccessResult is returned.
    */
   public function invokeWebformHandlers($method, WebformSubmissionInterface $webform_submission, &$context1 = NULL, &$context2 = NULL);
 
diff --git a/modules/contrib/webform/src/WebformSubmissionViewBuilder.php b/modules/contrib/webform/src/WebformSubmissionViewBuilder.php
index b084f6b6..9affd99a 100644
--- a/modules/contrib/webform/src/WebformSubmissionViewBuilder.php
+++ b/modules/contrib/webform/src/WebformSubmissionViewBuilder.php
@@ -168,6 +168,9 @@ class WebformSubmissionViewBuilder extends EntityViewBuilder implements WebformS
           // Note that the YAML view ignores all access controls and excluded
           // settings.
           $data = $webform_submission->toArray(TRUE, TRUE);
+          // Covert computed element value markup to strings to
+          // 'Object support when dumping a YAML file has been disabled' errors.
+          WebformElementHelper::convertRenderMarkupToStrings($data);
           $build[$id]['data'] = [
             '#theme' => 'webform_codemirror',
             '#code' => WebformYaml::encode($data),
@@ -311,7 +314,7 @@ class WebformSubmissionViewBuilder extends EntityViewBuilder implements WebformS
 
     // Finally, check the element's 'view' access.
     /** @var \Drupal\webform\Plugin\WebformElementInterface $webform_element */
-    $webform_element = $this->elementManager->getElementInstance($element);
+    $webform_element = $this->elementManager->getElementInstance($element, $webform_submission);
     return $webform_element->checkAccessRules('view', $element) ? TRUE : FALSE;
   }
 
diff --git a/modules/contrib/webform/src/WebformThemeManager.php b/modules/contrib/webform/src/WebformThemeManager.php
index 7890391e..117c3c0a 100644
--- a/modules/contrib/webform/src/WebformThemeManager.php
+++ b/modules/contrib/webform/src/WebformThemeManager.php
@@ -5,6 +5,7 @@ namespace Drupal\webform;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
+use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Theme\ThemeManagerInterface;
 use Drupal\Core\Theme\ThemeInitializationInterface;
@@ -51,6 +52,13 @@ class WebformThemeManager implements WebformThemeManagerInterface {
    */
   protected $renderer;
 
+  /**
+   * The current route match.
+   *
+   * @var \Drupal\Core\Routing\RouteMatchInterface
+   */
+  protected $routeMatch;
+
   /**
    * Contains the current active theme.
    *
@@ -71,13 +79,18 @@ class WebformThemeManager implements WebformThemeManagerInterface {
    *   The theme handler.
    * @param \Drupal\Core\Theme\ThemeInitializationInterface $theme_initialization
    *   The theme initialization.
+   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   *   The current route match.
+   *
+   * @todo Webform 8.x-6.x: Move $route_match first.
    */
-  public function __construct(ConfigFactoryInterface $config_factory, RendererInterface $renderer, ThemeManagerInterface $theme_manager, ThemeHandlerInterface $theme_handler, ThemeInitializationInterface $theme_initialization) {
+  public function __construct(ConfigFactoryInterface $config_factory, RendererInterface $renderer, ThemeManagerInterface $theme_manager, ThemeHandlerInterface $theme_handler, ThemeInitializationInterface $theme_initialization, RouteMatchInterface $route_match = NULL) {
     $this->configFactory = $config_factory;
     $this->renderer = $renderer;
     $this->themeManager = $theme_manager;
     $this->themeHandler = $theme_handler;
     $this->themeInitialization = $theme_initialization;
+    $this->routeMatch = $route_match ?: \Drupal::routeMatch();
   }
 
   /**
@@ -115,6 +128,18 @@ class WebformThemeManager implements WebformThemeManagerInterface {
     return array_reverse(array_merge([$active_theme->getName()], array_keys($active_theme->getBaseThemes())));
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function hasActiveTheme() {
+    // If there is no route match, then there is no active theme.
+    // If there is no route match the admin theme can't be initialized.
+    // @see \Drupal\Core\Theme\ThemeManager::initTheme
+    // @see \Drupal\Core\Theme\ThemeNegotiator::determineActiveTheme
+    // @see \Drupal\user\Theme\AdminNegotiator::applies
+    return (\Drupal::routeMatch()->getRouteName()) ? TRUE : FALSE;
+  }
+
   /**
    * {@inheritdoc}
    */
diff --git a/modules/contrib/webform/src/WebformThemeManagerInterface.php b/modules/contrib/webform/src/WebformThemeManagerInterface.php
index 179f9138..d923b3a6 100644
--- a/modules/contrib/webform/src/WebformThemeManagerInterface.php
+++ b/modules/contrib/webform/src/WebformThemeManagerInterface.php
@@ -31,6 +31,14 @@ interface WebformThemeManagerInterface {
    */
   public function getActiveThemeNames();
 
+  /**
+   * Determine if the current request has an active theme.
+   *
+   * @return bool
+   *   TRUE if the current request has an active theme.
+   */
+  public function hasActiveTheme();
+
   /**
    * Determine if a theme name is being used the active or base theme.
    *
diff --git a/modules/contrib/webform/templates/webform-handler-action-summary.html.twig b/modules/contrib/webform/templates/webform-handler-action-summary.html.twig
index 0ba546bb..a8386818 100644
--- a/modules/contrib/webform/templates/webform-handler-action-summary.html.twig
+++ b/modules/contrib/webform/templates/webform-handler-action-summary.html.twig
@@ -12,8 +12,8 @@
 #}
 
 {% if settings.debug %}<b class="color-error">{{ 'Debugging is enabled'|t }}</b><br />{% endif %}
-{% if settings.lock is not null %}<b>{{ 'Lock:'|t }}</b> {{ settings.lock ? 'Locked'|t : 'Unlocked'|t }}<br />{% endif %}
 {% if settings.sticky is not null %}<b>{{ 'Status:'|t }}</b> {{ settings.sticky ? 'Flag/Star'|t : 'Unflag/Unstar'|t }}<br />{% endif %}
+{% if settings.locked is not null %}<b>{{ 'Lock:'|t }}</b> {{ settings.locked ? 'Locked'|t : 'Unlocked'|t }}<br />{% endif %}
 {% if settings.notes %}<b>{{ 'Notes:'|t }}</b> {{ settings.notes }}<br />{% endif %}
 {% if settings.message %}<b>{{ 'Message:'|t }}</b> {{ settings.message }} ({{ settings.message_type }})<br />{% endif %}
 {% if settings.data %}<b>{{ 'Data (keys):'|t }}</b> {{ settings.data|join('; ') }}<br />{% endif %}
diff --git a/modules/contrib/webform/templates/webform-section.html.twig b/modules/contrib/webform/templates/webform-section.html.twig
index 17096390..5a1aed5e 100644
--- a/modules/contrib/webform/templates/webform-section.html.twig
+++ b/modules/contrib/webform/templates/webform-section.html.twig
@@ -41,7 +41,9 @@
       required ? 'form-required',
     ]
   %}
-  <{{ title_tag }}{{ title_attributes.addClass(title_classes) }}>{{ title }}</{{ title_tag }}>
+  {% if title %}
+    <{{ title_tag }}{{ title_attributes.addClass(title_classes) }}>{{ title }}</{{ title_tag }}>
+  {% endif %}
   <div class="webform-section-wrapper">
     {% if errors %}
       <div>
diff --git a/modules/contrib/webform/templates/webform-submission-information.html.twig b/modules/contrib/webform/templates/webform-submission-information.html.twig
index a85e5bf8..3560617c 100644
--- a/modules/contrib/webform/templates/webform-submission-information.html.twig
+++ b/modules/contrib/webform/templates/webform-submission-information.html.twig
@@ -37,6 +37,9 @@
   {% if uri %}
     <div><b>{{ 'Submission URI'|t }}:</b> {{ uri }}</div>
   {% endif %}
+  {% if token_view %}
+    <div><b>{{ 'Submission View'|t }}:</b> {{ token_view }}</div>
+  {% endif %}
   {% if token_update %}
     <div><b>{{ 'Submission Update'|t }}:</b> {{ token_update }}</div>
   {% endif %}
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax.yml
index f9235a13..94adcab0 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_inline.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_inline.yml
index aa5aeceb..1565116c 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_inline.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_inline.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_message.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_message.yml
index 69d740e3..2b38380a 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_message.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_message.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_modal.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_modal.yml
index 6719ea18..88ea11db 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_modal.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_modal.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_page.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_page.yml
index 0a7c08bb..b0f4954e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_page.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_page.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url.yml
index cdb2149c..436eea45 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url_msg.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url_msg.yml
index a147cf4a..ecdcae2d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url_msg.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_ajax_confirmation_url_msg.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite.yml
index 4d905bb2..58f8f1ea 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite.yml
@@ -169,6 +169,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -216,6 +217,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom.yml
index 10f5f14a..a3b79623 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom.yml
@@ -131,6 +131,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -178,6 +179,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom_file.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom_file.yml
index 21108a68..1b4b3d16 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom_file.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_custom_file.yml
@@ -102,6 +102,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -149,6 +150,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format.yml
index 2cc14032..6cafb49e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format.yml
@@ -556,6 +556,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -603,6 +604,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -681,6 +683,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -715,6 +718,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format_multiple.yml
index 2ff5f699..92eea208 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_composite_format_multiple.yml
@@ -828,6 +828,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -875,6 +876,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -953,6 +955,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -987,6 +990,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_inline.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_inline.yml
index a5b95bec..d9cd456e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_inline.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_inline.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_message.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_message.yml
index b4e0e023..810e7212 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_message.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_message.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_modal.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_modal.yml
index 218ee2bd..63824dad 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_modal.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_modal.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_none.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_none.yml
index c9ceda58..dc5e9cd1 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_none.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_none.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page.yml
index a0bf7a8d..60b0e613 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page_custom.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page_custom.yml
index fa843b64..79c65736 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page_custom.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_page_custom.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -136,6 +137,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url.yml
index 67dde1b2..74476b14 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url_message.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url_message.yml
index 2ffc2382..4f46df43 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url_message.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_confirmation_url_message.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element.yml
index 770c9165..fd2b2fe3 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element.yml
@@ -303,6 +303,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -350,6 +351,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_access.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_access.yml
index 814b04e3..2a08c37f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_access.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_access.yml
@@ -171,6 +171,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -218,6 +219,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: true
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions.yml
index e805fd03..535ec03f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions.yml
@@ -198,6 +198,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -245,6 +246,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions_buttons.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions_buttons.yml
index 8bac3d69..c902ba19 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions_buttons.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_actions_buttons.yml
@@ -120,6 +120,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -167,6 +168,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_address.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_address.yml
index 1dec8d8d..8760c9c7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_address.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_address.yml
@@ -136,6 +136,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -183,6 +184,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_allowed_tags.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_allowed_tags.yml
index ed8040d0..21eeef61 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_allowed_tags.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_allowed_tags.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_attributes.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_attributes.yml
index 4253750a..30f54ce2 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_attributes.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_attributes.yml
@@ -99,6 +99,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -146,6 +147,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_autocomplete.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_autocomplete.yml
index 8efe5176..63718abe 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_autocomplete.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_autocomplete.yml
@@ -103,6 +103,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -150,6 +151,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_buttons.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_buttons.yml
index d846b3eb..3fbeecb8 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_buttons.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_buttons.yml
@@ -97,6 +97,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -144,6 +145,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_captcha.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_captcha.yml
index fde766d6..46615745 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_captcha.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_captcha.yml
@@ -106,6 +106,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -153,6 +154,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkbox_value.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkbox_value.yml
index 988f11d7..02144b63 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkbox_value.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkbox_value.yml
@@ -100,6 +100,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -147,6 +148,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkboxes.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkboxes.yml
index cb6ce350..868eea01 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkboxes.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_checkboxes.yml
@@ -131,6 +131,69 @@ elements: |
         five: Five
         six: 'Six Six Six Six Six Six'
       '#options_display': buttons
+  checkboxes_options_properties_example:
+    '#type': details
+    '#title': 'checkboxes custom options properties'
+    '#open': true
+    checkboxes_options_properties:
+      '#type': checkboxes
+      '#title': checkboxes_options_properties
+      '#options_description_display': description
+      '#options':
+        one: 'One -- This is a description'
+        two: 'Two -- This is a description'
+        three: 'Three -- This is a description'
+      '#options__properties':
+        two:
+          '#wrapper_attributes':
+            'data-custom': 'custom wrapper data'
+            style: 'border: red 1px solid'
+            class:
+              - one-custom-wrapper-class
+          '#label_attributes':
+            'data-custom': 'custom label data'
+            style: 'border: blue 1px solid'
+            class:
+              - one-custom-label-class
+          '#attributes':
+            'data-custom': 'custom input data'
+            style: 'border: yellow 1px solid'
+            class:
+              - one-custom-class
+        three:
+          '#disabled': true
+    checkboxes_buttons_options_properties:
+      '#type': checkboxes
+      '#title': checkboxes_buttons_options_properties
+      '#options_display': buttons
+      '#options_description_display': description
+      '#options':
+        one: 'One -- This is a description'
+        two: 'Two -- This is a description'
+        three: 'Three -- This is a description'
+      '#options__properties':
+        one:
+          '#label_attributes':
+            style: 'background-color: #ffcccb; color: darkred'
+        two:
+          '#label_attributes':
+            style: 'background-color: lightblue; color: darkblue'
+        three:
+          '#disabled': true
+    checkboxes_other_options_properties:
+      '#type': webform_checkboxes_other
+      '#title':   checkboxes_other_options_properties
+      '#options':
+        one: 'One'
+        two: 'Two'
+        three: 'Three'
+      '#options__properties':
+        one:
+          '#disabled': true
+        two:
+          '#disabled': true
+        three:
+          '#disabled': true
   
 css: ''
 javascript: ''
@@ -197,6 +260,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -244,6 +308,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_codemirror.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_codemirror.yml
index f2baf3f3..679425a6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_codemirror.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_codemirror.yml
@@ -26,6 +26,19 @@ elements: |
     '#title': text_basic_no_wrap
     '#wrap': false
     '#default_value': 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus,'
+  text_basic_min_max_height:
+    '#type': webform_codemirror
+    '#title': text_basic_min_max_height
+    '#wrap': false
+    '#default_value': |
+        Pellentesque habitant morbi tristique senectus
+        et netus et malesuada fames ac turpis egestas.
+        Vestibulum tortor quam, feugiat vitae, ultricies
+        eget, tempor sit amet, ante.
+        Donec eu libero sit amet quam egestas semper. Aenean
+        ultricies mi vitae est. Mauris placerat eleifend leo.
+    '#attributes':
+      style: 'min-height:100px; max-height:200px'
   yaml_basic:
     '#type': webform_codemirror
     '#mode': yaml
@@ -72,13 +85,13 @@ elements: |
           </script>
         </body>
       </html>
-      
+  
   twig_basic:
     '#type': webform_codemirror
     '#mode': twig
     '#title': twig_basic
     '#default_value': |
-      
+  
       {% set value = "Hello" %}
       {{ value }}
   
@@ -147,6 +160,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -194,6 +208,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite.yml
index b224eef3..90ad3a66 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite.yml
@@ -123,6 +123,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -170,6 +171,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite_wrapper.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite_wrapper.yml
index beae3342..9a8f9eed 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite_wrapper.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_composite_wrapper.yml
@@ -199,6 +199,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -246,6 +247,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_ajax.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_ajax.yml
index f6c4484e..765e80e8 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_ajax.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_ajax.yml
@@ -156,6 +156,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -203,6 +204,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_token.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_token.yml
index f21ace63..ee952163 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_token.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_token.yml
@@ -29,7 +29,7 @@ elements: |
     '#default_value': |
       <p>This is a <strong>text format</strong> string.</p>
       <p>It contains &quot;double&quot; and 'single' quotes with special characters like &lt;, &gt;, &lt;&gt;, and &gt;&lt;.</p>
-      
+  
   xss:
     '#type': textfield
     '#title': xss
@@ -37,35 +37,32 @@ elements: |
   webform_computed_token_auto:
     '#type': webform_computed_token
     '#title': webform_computed_token_auto
-    '#display_on': view
     '#template': |
       <b class="webform_computed_token_auto">simple string:</b> [webform_submission:values:simple_string]<br />
       <b class="webform_computed_token_auto">complex string :</b> [webform_submission:values:complex_string]<br />
       <b class="webform_computed_token_auto">text_format:</b> [webform_submission:values:text_format]<br />
       <b class="webform_computed_token_auto">xss:</b> [webform_submission:values:xss]<br />
-      
+  
   webform_computed_token_html:
     '#type': webform_computed_token
     '#title': webform_computed_token_html
     '#mode': html
-    '#display_on': view
     '#template': |
       <b class="webform_computed_token_html">simple string:</b> [webform_submission:values:simple_string]<br />
       <b class="webform_computed_token_html">complex string :</b> [webform_submission:values:complex_string]<br />
       <b class="webform_computed_token_html">text_format:</b> [webform_submission:values:text_format]<br />
       <b class="webform_computed_token_html">xss:</b> [webform_submission:values:xss]<br />
-      
+  
   webform_computed_token_text:
     '#type': webform_computed_token
     '#title': webform_computed_token_text
     '#mode': text
-    '#display_on': view
     '#template': |
       simple string: [webform_submission:values:simple_string]
       complex string : [webform_submission:values:complex_string]
       text_format: [webform_submission:values:text_format]
       xss: [webform_submission:values:xss]
-      
+  
   webform_computed_token_store:
     '#type': webform_computed_token
     '#title': webform_computed_token_store
@@ -139,6 +136,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -186,6 +184,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_twig.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_twig.yml
index 9690dcab..18d6aaa7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_twig.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_computed_twig.yml
@@ -33,7 +33,7 @@ elements: |
     '#default_value': |
       <p>This is a <strong>text format</strong> string.</p>
       <p>It contains &quot;double&quot; and 'single' quotes with special characters like &lt;, &gt;, &lt;&gt;, and &gt;&lt;.</p>
-      
+  
   xss:
     '#type': textfield
     '#title': xss
@@ -41,49 +41,45 @@ elements: |
   webform_computed_twig_auto:
     '#type': webform_computed_twig
     '#title': webform_computed_twig_auto
-    '#display_on': view
     '#template': |
       <b class="webform_computed_twig_auto">number:</b> {{ (webform_token('[webform_submission:values:number:clear]', webform_submission) ?: 0) }} * 2 = {{ (webform_token('[webform_submission:values:number:clear]', webform_submission) ?: 0) * 2 }}<br />
       <b class="webform_computed_twig_auto">simple string:</b> {{ webform_token('[webform_submission:values:simple_string]', webform_submission) }}<br />
       <b class="webform_computed_twig_auto">complex string:</b> {{ webform_token('[webform_submission:values:complex_string]', webform_submission) }}<br />
       <b class="webform_computed_twig_auto">text_format:</b> {{ webform_token('[webform_submission:values:text_format]', webform_submission) }}<br />
       <b class="webform_computed_twig_auto">xss:</b> {{ webform_token('[webform_submission:values:xss]', webform_submission) }}<br />
-      
+  
   webform_computed_twig_html:
     '#type': webform_computed_twig
     '#title': webform_computed_twig_html
     '#mode': html
-    '#display_on': view
     '#template': |
       <b class="webform_computed_twig_html">number:</b> {{ (webform_token('[webform_submission:values:number:clear]', webform_submission) ?: 0) }} * 2 = {{ (webform_token('[webform_submission:values:number:clear]', webform_submission) ?: 0) * 2 }}<br />
       <b class="webform_computed_twig_html">simple string:</b> {{ webform_token('[webform_submission:values:simple_string]', webform_submission) }}<br />
       <b class="webform_computed_twig_html">complex string:</b> {{ webform_token('[webform_submission:values:complex_string]', webform_submission) }}<br />
       <b class="webform_computed_twig_html">text_format:</b> {{ webform_token('[webform_submission:values:text_format]', webform_submission) }}<br />
       <b class="webform_computed_twig_html">xss:</b> {{ webform_token('[webform_submission:values:xss]', webform_submission) }}<br />
-      
+  
   webform_computed_twig_text:
     '#type': webform_computed_twig
     '#title': webform_computed_twig_text
     '#mode': text
-    '#display_on': view
     '#template': |
       number: {{ (webform_token('[webform_submission:values:number:clear]', webform_submission) ?: 0) }} * 2 = {{ (webform_token('[webform_submission:values:number:clear]', webform_submission) ?: 0) * 2 }}
       simple string: {{ webform_token('[webform_submission:values:simple_string]', webform_submission) }}
       complex string: {{ webform_token('[webform_submission:values:complex_string]', webform_submission) }}
       text_format: {{ webform_token('[webform_submission:values:text_format]', webform_submission) }}
       xss: {{ webform_token('[webform_submission:values:xss]', webform_submission) }}
-      
+  
   webform_computed_twig_data:
     '#type': webform_computed_twig
     '#title': webform_computed_twig_data
-    '#display_on': view
     '#template': |
       <b class="webform_computed_twig_data">number:</b> {{ data.number }} * 2 = {{ data.number * 2 }}<br />
       <b class="webform_computed_twig_data">simple string:</b> {{ data.simple_string }}<br />
       <b class="webform_computed_twig_data">complex string:</b> {{ data.complex_string }}<br />
       <b class="webform_computed_twig_data">text_format:</b> {{ data.text_format.value }}<br />
       <b class="webform_computed_twig_data">xss:</b> {{ data.xss }}<br />
-      
+  
   webform_computed_twig_store:
     '#type': webform_computed_twig
     '#title': webform_computed_twig_store
@@ -167,6 +163,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -214,6 +211,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_container.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_container.yml
index c789dc3b..493c8201 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_container.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_container.yml
@@ -140,6 +140,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -187,6 +188,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_counter.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_counter.yml
index 877a6c25..358d91af 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_counter.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_counter.yml
@@ -145,6 +145,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -192,6 +193,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_date.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_date.yml
index 080098be..28c41ff9 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_date.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_date.yml
@@ -143,6 +143,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -190,6 +191,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datelist.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datelist.yml
index 2013f4dd..881f12b3 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datelist.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datelist.yml
@@ -161,6 +161,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -208,6 +209,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datetime.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datetime.yml
index a8e87427..2969134f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datetime.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_datetime.yml
@@ -212,6 +212,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -259,6 +260,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_description_tooltip.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_description_tooltip.yml
index 15249069..fdf55bd4 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_description_tooltip.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_description_tooltip.yml
@@ -554,6 +554,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -601,6 +602,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_details.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_details.yml
index 44ddf26a..7579fc77 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_details.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_details.yml
@@ -112,6 +112,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -159,6 +160,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_disabled.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_disabled.yml
index 58a2ba63..c3a27b75 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_disabled.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_disabled.yml
@@ -448,6 +448,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -495,6 +496,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_confirm.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_confirm.yml
index 7bddb750..1caf90aa 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_confirm.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_confirm.yml
@@ -38,6 +38,11 @@ elements: |
     '#required': true
     '#required_error': 'Email address is required'
     '#default_value': 'example@example.com'
+  email_confirm_flexbox:
+    '#type': webform_email_confirm
+    '#title': email_confirm_flexbox
+    '#flexbox': 1
+  
 css: ''
 javascript: ''
 settings:
@@ -103,6 +108,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -150,6 +156,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_multiple.yml
index 072facfe..bc1dfa39 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_email_multiple.yml
@@ -27,6 +27,7 @@ elements: |
     '#type': webform_email_multiple
     '#title': email_multiple_three
     '#cardinality': 3
+  
 css: ''
 javascript: ''
 settings:
@@ -92,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -139,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_entity_reference.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_entity_reference.yml
index df34eadb..f3a70e5b 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_entity_reference.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_entity_reference.yml
@@ -15,60 +15,6 @@ title: 'Test: Element: Entity reference'
 description: 'Test entity reference elements.'
 category: 'Test: Element'
 elements: |
-  entity_autocomplete:
-    '#type': details
-    '#title': 'Entity autocomplete'
-    '#open': true
-    entity_autocomplete_user_default:
-      '#type': entity_autocomplete
-      '#title': 'entity_autocomplete (user)'
-      '#default_value': '1'
-      '#target_type': user
-      '#selection_handler': 'default:user'
-      '#selection_settings':
-        include_anonymous: true
-    entity_autocomplete_user_tags:
-      '#type': entity_autocomplete
-      '#title': 'entity_autocomplete (user tags)'
-      '#tags': true
-      '#target_type': user
-      '#selection_handler': 'default:user'
-      '#selection_settings':
-        include_anonymous: true
-      '#default_value':
-        - 1
-    entity_autocomplete_user_multiple:
-      '#type': entity_autocomplete
-      '#title': 'entity_autocomplete (user multiple)'
-      '#multiple': true
-      '#target_type': user
-      '#selection_handler': 'default:user'
-      '#selection_settings':
-        include_anonymous: true
-      '#default_value':
-        - 1
-    entity_autocomplete_node_default:
-      '#type': entity_autocomplete
-      '#title': 'Entity autocomplete (node)'
-      '#target_type': node
-      '#selection_handler': 'default:node'
-      '#selection_settings':
-        target_bundles:
-          page: page
-        sort:
-          field: title
-          direction: ASC
-    entity_autocomplete_node_view:
-      '#type': entity_autocomplete
-      '#title': 'entity_autocomplete (node view)'
-      '#target_type': node
-      '#selection_handler': views
-      '#selection_settings':
-        view:
-          view_name: webform_test_entity_reference
-          display_name: entity_reference
-          arguments: ''
-      '#default_value': 1
   webform_entity_select:
     '#type': details
     '#title': 'Entity select'
@@ -182,6 +128,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -229,6 +176,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_fieldset.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_fieldset.yml
index bdeafe7a..ce46b6cd 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_fieldset.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_fieldset.yml
@@ -31,6 +31,11 @@ elements: |
     '#title': fieldset_title_invisible
     '#description': 'This is a description.'
     '#title_display': invisible
+  fieldset_title_none:
+    '#type': fieldset
+    '#title': fieldset_title_none
+    '#description': 'This is a description.'
+    '#title_display': none
   fieldset_description_before:
     '#type': fieldset
     '#title': fieldset_description_before
@@ -121,6 +126,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -168,6 +174,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox.yml
index b4d665ee..c93bf76f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox.yml
@@ -1040,6 +1040,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -1087,6 +1088,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox_flex.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox_flex.yml
index e9f79eac..0d380b89 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox_flex.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_flexbox_flex.yml
@@ -871,6 +871,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -918,6 +919,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format.yml
index 3534779a..b83a65b7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format.yml
@@ -32,6 +32,18 @@ elements: |
         '#title': 'Checkbox (Raw value)'
         '#default_value': true
         '#format': raw
+    radios:
+      '#type': details
+      '#title': Radios
+      radios_description:
+        '#type': radios
+        '#title': 'Radios (Description)'
+        '#default_value': one
+        '#format': description
+        '#options':
+          one: 'One -- This is the <strong>first</strong> description'
+          two: 'Two -- This is the <strong>second</strong> description'
+          three: 'Three -- This is <strong>third</strong> description'
     password:
       '#type': details
       '#title': Password
@@ -1258,6 +1270,11 @@ elements: |
         '#title': 'File (File name)'
         '#file_extensions': txt
         '#format': name
+      managed_file_basename:
+        '#type': managed_file
+        '#title': 'File (File base name (no extension))'
+        '#file_extensions': txt
+        '#format': basename
       managed_file_id:
         '#type': managed_file
         '#title': 'File (File ID)'
@@ -1300,7 +1317,7 @@ elements: |
         '#title': 'Machine name (Raw value)'
         '#default_value': loremipsum
         '#format': raw
-
+  
 css: ''
 javascript: ''
 settings:
@@ -1366,6 +1383,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -1413,6 +1431,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -1491,6 +1510,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -1525,6 +1545,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_custom.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_custom.yml
index bc33ef55..af68e366 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_custom.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_custom.yml
@@ -279,6 +279,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -326,6 +327,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_multiple.yml
index 7c779e15..d690509e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_multiple.yml
@@ -1688,6 +1688,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -1735,6 +1736,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -1813,6 +1815,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -1847,6 +1850,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_token.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_token.yml
index 20cb4cc2..680e8b7d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_token.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_format_token.yml
@@ -92,6 +92,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -139,6 +140,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -225,6 +227,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -280,6 +283,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help.yml
index cbd11263..b934abef 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help.yml
@@ -132,7 +132,7 @@ elements: |
     '#help_display': element_after
     'help_after_details':
       '#markup': '{This is markup}'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -198,6 +198,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -245,6 +246,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help_display.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help_display.yml
index 1421ef64..1b177caf 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help_display.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_help_display.yml
@@ -1,12 +1,9 @@
-uuid: 28d4e7be-efdb-4a88-bc0d-16ed5e8a1767
 langcode: en
 status: open
 dependencies:
   enforced:
     module:
       - webform_test
-_core:
-  default_config_hash: n-o0dubYyFAYHV9OGOrntyVrFt0L6owQM3jhd_cjuIc
 open: null
 close: null
 weight: 0
@@ -1954,7 +1951,7 @@ elements: |
       '#help_display': element_after
     machine_name_hr:
       '#type': webform_horizontal_rule
-
+  
 css: ''
 javascript: ''
 settings:
@@ -2020,6 +2017,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -2067,6 +2065,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -2116,3 +2115,6 @@ access:
     users: {  }
     permissions: {  }
 handlers: {  }
+uuid: 28d4e7be-efdb-4a88-bc0d-16ed5e8a1767
+_core:
+  default_config_hash: n-o0dubYyFAYHV9OGOrntyVrFt0L6owQM3jhd_cjuIc
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_horizontal_rule.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_horizontal_rule.yml
index a0b5dd52..2f2b7186 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_horizontal_rule.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_horizontal_rule.yml
@@ -167,6 +167,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -214,6 +215,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_editor.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_editor.yml
index c7107c31..b254dfee 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_editor.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_editor.yml
@@ -107,6 +107,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -154,6 +155,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_escape.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_escape.yml
index 3bbf9ca2..3f14d340 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_escape.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_escape.yml
@@ -600,6 +600,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -647,6 +648,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_markup.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_markup.yml
index b4d4a0e8..bdceab48 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_markup.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_html_markup.yml
@@ -600,6 +600,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -647,6 +648,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck.yml
index ea2e150a..8fe1fc8f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck.yml
@@ -163,6 +163,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -210,6 +211,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck_styles.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck_styles.yml
index a255915d..2943c3f6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck_styles.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_icheck_styles.yml
@@ -831,7 +831,7 @@ elements: |
         three: Three
       '#default_value': one
       '#icheck': square-aero
-
+  
 css: ''
 javascript: ''
 settings:
@@ -897,6 +897,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -944,6 +945,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_ignored_properties.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_ignored_properties.yml
index 4ad29191..bc98f9e3 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_ignored_properties.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_ignored_properties.yml
@@ -95,6 +95,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -142,6 +143,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_file.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_file.yml
index d1b73451..664504a4 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_file.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_file.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_resolution.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_resolution.yml
index e498e415..351182f6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_resolution.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_image_resolution.yml
@@ -91,6 +91,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -138,6 +139,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_input_mask.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_input_mask.yml
index 59472780..4ae28159 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_input_mask.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_input_mask.yml
@@ -77,7 +77,10 @@ elements: |
     '#type': textfield
     '#title': custom
     '#input_mask': '''alias'': ''numeric'', ''groupSeparator'': '','', ''autoGroup'': true, ''digits'': 2, ''digitsOptional'': false, ''prefix'': ''$ '', ''placeholder'': ''0'''
-
+  module:
+    '#type': textfield
+    '#title': module
+    '#input_mask': '999'
 css: ''
 javascript: ''
 settings:
@@ -143,6 +146,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -190,6 +194,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_invalid.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_invalid.yml
index c3df12dd..89bf0199 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_invalid.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_invalid.yml
@@ -80,6 +80,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -127,6 +128,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_likert.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_likert.yml
index b3966c2d..55750a3c 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_likert.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_likert.yml
@@ -144,6 +144,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -191,6 +192,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_geocomplete.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_geocomplete.yml
index bb018802..f114b8c1 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_geocomplete.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_geocomplete.yml
@@ -160,6 +160,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -207,6 +208,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_places.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_places.yml
index 3c5e77a2..b33cacee 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_places.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_loc_places.yml
@@ -69,6 +69,7 @@ elements: |
     '#geolocation': true
     '#hidden': true
     '#geocomplete': true
+  
 css: ''
 javascript: ''
 settings:
@@ -134,6 +135,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -181,6 +183,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file.yml
index 15bdd217..9157cddf 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file.yml
@@ -64,7 +64,7 @@ elements: |
     '#file_extensions': txt
     '#file_placeholder': 'This is the multiple file upload placeholder'
     '#multiple': true
-
+  
 css: ''
 javascript: ''
 settings:
@@ -130,6 +130,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -177,6 +178,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_dis.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_dis.yml
index e07d4816..4815bb3a 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_dis.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_dis.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_help.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_help.yml
index f884d5a6..b8c1faa1 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_help.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_help.yml
@@ -130,6 +130,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -177,6 +178,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_limit.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_limit.yml
index c20fd0c2..b6ca2e84 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_limit.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_limit.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_name.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_name.yml
index 7efa35f5..784d5173 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_name.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_name.yml
@@ -27,6 +27,10 @@ elements: |
     '#title': 'File multiple'
     '#multiple': true
     '#file_name': 'file_multiple_[webform_submission:values:source_for_filename]'
+  file_truncate:
+    '#type': managed_file
+    '#title': 'File truncate (255)'
+    '#file_name': 'file_truncate_123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'
   
 css: ''
 javascript: ''
@@ -93,6 +97,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +145,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_prev.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_prev.yml
index e34aad37..faeeaf28 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_prev.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_managed_file_prev.yml
@@ -125,6 +125,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -172,6 +173,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_mapping.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_mapping.yml
index 893bc25b..a99382c6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_mapping.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_mapping.yml
@@ -130,6 +130,7 @@ elements: |
         two: Two
         three: Three
       '#destination__type': webform_email_multiple
+  
 css: ''
 javascript: ''
 settings:
@@ -195,6 +196,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -242,6 +244,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_markup.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_markup.yml
index 9a1f1a50..ddd36a1e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_markup.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_markup.yml
@@ -99,6 +99,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -146,6 +147,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_media_file.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_media_file.yml
index 441db5ac..6703192e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_media_file.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_media_file.yml
@@ -137,6 +137,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -184,6 +185,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_message.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_message.yml
index 807353c8..1f16d848 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_message.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_message.yml
@@ -157,6 +157,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -204,6 +205,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_more.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_more.yml
index d2741058..1042e2e9 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_more.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_more.yml
@@ -64,7 +64,7 @@ elements: |
     '#more': '{This is an example of more}'
     '#description': '{This is a description}'
     '#description_display': tooltip
-
+  
 css: ''
 javascript: ''
 settings:
@@ -130,6 +130,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -177,6 +178,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple.yml
index 635edd61..bf1a3ca6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple.yml
@@ -46,6 +46,14 @@ elements: |
       - One
       - Two
       - Three
+  webform_multiple_no_add_more_input:
+    '#type': webform_multiple
+    '#title': webform_multiple_no_add_more_input
+    '#add_more_input': false
+    '#default_value':
+      - One
+      - Two
+      - Three
   webform_multiple_custom_label:
     '#type': webform_multiple
     '#title': webform_multiple_custom_label
@@ -247,6 +255,15 @@ elements: |
   webform_multiple_custom_attributes:
     '#type': webform_multiple
     '#title': webform_multiple_custom_attributes
+    '#ajax_attributes':
+      class:
+        - custom-ajax
+    '#table_wrapper_attributes':
+      class:
+        - custom-table-wrapper
+    '#table_attributes':
+      class:
+        - custom-table
     '#header': true
     '#element':
       textfield:
@@ -261,6 +278,7 @@ elements: |
         '#attributes':
           class:
             - custom-element
+  
 css: ''
 javascript: ''
 settings:
@@ -326,6 +344,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -373,6 +392,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_date.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_date.yml
index 86c6ee06..6f7b5509 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_date.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_date.yml
@@ -105,6 +105,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -152,6 +153,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_property.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_property.yml
index d240d821..fb424efd 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_property.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_property.yml
@@ -101,6 +101,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -148,6 +149,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_text.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_text.yml
index 4fc69235..a937f1b2 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_text.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_multiple_text.yml
@@ -148,6 +148,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -195,6 +196,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_options.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_options.yml
index 4389aec1..87588370 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_options.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_options.yml
@@ -75,6 +75,7 @@ elements: |
       '#title': webform_element_options_custom_type_multiple
       '#custom__type': webform_multiple
       '#default_value': { }
+  
 css: ''
 javascript: ''
 settings:
@@ -140,6 +141,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -187,6 +189,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_other.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_other.yml
index 7e4049a3..e0301c76 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_other.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_other.yml
@@ -237,6 +237,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -284,6 +285,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_pattern.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_pattern.yml
index a346e62b..58cfdc14 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_pattern.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_pattern.yml
@@ -97,6 +97,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -144,6 +145,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_prepopulate.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_prepopulate.yml
index 179840dd..96188f26 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_prepopulate.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_prepopulate.yml
@@ -94,6 +94,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -141,6 +142,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_private.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_private.yml
index 5fe98f52..24b345dc 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_private.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_private.yml
@@ -95,6 +95,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -142,6 +143,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: true
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_radios.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_radios.yml
index 059b33c6..64bcbdef 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_radios.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_radios.yml
@@ -146,6 +146,69 @@ elements: |
         five: Five
         six: 'Six Six Six Six Six Six'
       '#options_display': buttons
+  radios_options_properties_example:
+    '#type': details
+    '#title': 'radios custom options properties'
+    '#open': true
+    radios_options_properties:
+      '#type': radios
+      '#title': radios_options_properties
+      '#options_description_display': description
+      '#options':
+        one: 'One -- This is a description'
+        two: 'Two -- This is a description'
+        three: 'Three -- This is a description'
+      '#options__properties':
+        two:
+          '#wrapper_attributes':
+            'data-custom': 'custom wrapper data'
+            style: 'border: red 1px solid'
+            class:
+              - one-custom-wrapper-class
+          '#label_attributes':
+            'data-custom': 'custom label data'
+            style: 'border: blue 1px solid'
+            class:
+              - one-custom-label-class
+          '#attributes':
+            'data-custom': 'custom input data'
+            style: 'border: yellow 1px solid'
+            class:
+              - one-custom-class
+        three:
+          '#disabled': true
+    radios_buttons_options_properties:
+      '#type': radios
+      '#title': radios_buttons_options_properties
+      '#options_display': buttons
+      '#options_description_display': description
+      '#options':
+        one: 'One -- This is a description'
+        two: 'Two -- This is a description'
+        three: 'Three -- This is a description'
+      '#options__properties':
+        one:
+          '#label_attributes':
+            style: 'background-color: #ffcccb; color: darkred'
+        two:
+          '#label_attributes':
+            style: 'background-color: lightblue; color: darkblue'
+        three:
+          '#disabled': true
+    radios_other_options_properties:
+      '#type': webform_radios_other
+      '#title':   radios_other_options_properties
+      '#options':
+        one: 'One'
+        two: 'Two'
+        three: 'Three'
+      '#options__properties':
+        one:
+          '#disabled': true
+        two:
+          '#disabled': true
+        three:
+          '#disabled': true
   
 css: ''
 javascript: ''
@@ -212,6 +275,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -259,6 +323,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_range.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_range.yml
index 4b14f9c3..f750fbdc 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_range.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_range.yml
@@ -136,6 +136,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -183,6 +184,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_rating.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_rating.yml
index 63e90214..00f287e2 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_rating.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_rating.yml
@@ -99,6 +99,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -146,6 +147,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_readonly.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_readonly.yml
index 8ac44424..21536e51 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_readonly.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_readonly.yml
@@ -89,6 +89,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -136,6 +137,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_same.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_same.yml
index ee1b2711..e8bb4a4d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_same.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_same.yml
@@ -88,6 +88,7 @@ elements: |
       '#title': textfield_multiple_destination
       '#multiple': true
       '#required': true
+  
 css: ''
 javascript: ''
 settings:
@@ -153,6 +154,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -200,6 +202,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_section.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_section.yml
index 2c6f70bc..8808a73a 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_section.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_section.yml
@@ -100,6 +100,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -147,6 +148,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_select.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_select.yml
index 21793aaa..7040ee3d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_select.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_select.yml
@@ -57,6 +57,19 @@ elements: |
         three: Three
         four: Four
         five: Five
+    select_disabled:
+      '#type': select
+      '#title': select_disabled
+      '#multiple': true
+      '#options':
+        one: One
+        two: Two
+        three: Three
+        four: Four
+        five: Five
+      '#attributes':
+        'data-webform-select-options-disabled': 'one,two,four,five'
+  
   select_select2_examples:
     '#type': details
     '#title': 'Select select2'
@@ -425,6 +438,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -472,6 +486,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_signature.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_signature.yml
index 116839eb..347fd34c 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_signature.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_signature.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_states.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_states.yml
index 742f5602..6c6a18cb 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_states.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_states.yml
@@ -189,6 +189,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -236,6 +237,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views.yml
index a36640e4..0d1aa556 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views.yml
@@ -112,6 +112,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -159,6 +160,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views_r.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views_r.yml
index 31d6697d..ccf7fd69 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views_r.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submission_views_r.yml
@@ -106,6 +106,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -153,6 +154,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submitted_value.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submitted_value.yml
index 924e2ab2..5e0986c6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submitted_value.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_submitted_value.yml
@@ -120,6 +120,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -167,6 +168,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_table.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_table.yml
index 9c82689d..85c2e4ea 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_table.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_table.yml
@@ -249,6 +249,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -296,6 +297,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_telephone.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_telephone.yml
index 50ac5842..31b13dd3 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_telephone.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_telephone.yml
@@ -32,6 +32,18 @@ elements: |
     '#description': 'United States - +1'
     '#telephone_validation_format': '2'
     '#telephone_validation_country': US
+  tel_initial_country:
+    '#type': tel
+    '#title': tel_initial_country
+    '#international': true
+    '#international_initial_country': ZM
+    '#international_preferred_countries': {  }
+  tel_preferred_country:
+    '#type': tel
+    '#title': tel_preferred_country
+    '#international': true
+    '#international_preferred_countries':
+      - ZW
   
 css: ''
 javascript: ''
@@ -98,6 +110,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -145,6 +158,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_term_reference.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_term_reference.yml
index b047eeb8..47174d38 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_term_reference.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_term_reference.yml
@@ -162,6 +162,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -209,6 +210,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_terms_of_service.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_terms_of_service.yml
index a6b980d9..7635a593 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_terms_of_service.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_terms_of_service.yml
@@ -99,6 +99,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -146,6 +147,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_text_format.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_text_format.yml
index 6584a4d0..76634660 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_text_format.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_text_format.yml
@@ -30,6 +30,7 @@ elements: |
     '#title': text_format_description_more
     '#description': 'This is a description'
     '#more': 'This is more'
+  
 css: ''
 javascript: ''
 settings:
@@ -95,6 +96,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -142,6 +144,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_time.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_time.yml
index 429caed8..ec0b8e2c 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_time.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_time.yml
@@ -128,6 +128,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -175,6 +176,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_title_display.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_title_display.yml
index 66ebfcaa..bc1a193d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_title_display.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_title_display.yml
@@ -35,10 +35,10 @@ elements: |
       '#type': checkbox
       '#title': 'Checkbox (inline)'
       '#title_display': inline
-    checkbox_invisible:
+    checkbox_none:
       '#type': checkbox
-      '#title': 'Checkbox (invisible)'
-      '#title_display': invisible
+      '#title': 'Checkbox (none)'
+      '#title_display': none
     checkbox_hr:
       '#type': webform_horizontal_rule
     password_title:
@@ -57,10 +57,10 @@ elements: |
       '#type': password
       '#title': 'Password (inline)'
       '#title_display': inline
-    password_invisible:
+    password_none:
       '#type': password
-      '#title': 'Password (invisible)'
-      '#title_display': invisible
+      '#title': 'Password (none)'
+      '#title_display': none
     password_hr:
       '#type': webform_horizontal_rule
     textarea_title:
@@ -82,11 +82,11 @@ elements: |
       '#title': 'Textarea (inline)'
       '#rows': 2
       '#title_display': inline
-    textarea_invisible:
+    textarea_none:
       '#type': textarea
-      '#title': 'Textarea (invisible)'
+      '#title': 'Textarea (none)'
       '#rows': 2
-      '#title_display': invisible
+      '#title_display': none
     textarea_hr:
       '#type': webform_horizontal_rule
     textfield_title:
@@ -105,10 +105,10 @@ elements: |
       '#type': textfield
       '#title': 'Text field (inline)'
       '#title_display': inline
-    textfield_invisible:
+    textfield_none:
       '#type': textfield
-      '#title': 'Text field (invisible)'
-      '#title_display': invisible
+      '#title': 'Text field (none)'
+      '#title_display': none
     textfield_hr:
       '#type': webform_horizontal_rule
   advanced_elements:
@@ -131,10 +131,10 @@ elements: |
       '#type': webform_autocomplete
       '#title': 'Autocomplete (inline)'
       '#title_display': inline
-    webform_autocomplete_invisible:
+    webform_autocomplete_none:
       '#type': webform_autocomplete
-      '#title': 'Autocomplete (invisible)'
-      '#title_display': invisible
+      '#title': 'Autocomplete (none)'
+      '#title_display': none
     webform_autocomplete_hr:
       '#type': webform_horizontal_rule
     webform_codemirror_title:
@@ -151,16 +151,11 @@ elements: |
       '#title': 'CodeMirror (after)'
       '#mode': yaml
       '#title_display': after
-    webform_codemirror_inline:
+    webform_codemirror_none:
       '#type': webform_codemirror
-      '#title': 'CodeMirror (inline)'
+      '#title': 'CodeMirror (none)'
       '#mode': yaml
-      '#title_display': inline
-    webform_codemirror_invisible:
-      '#type': webform_codemirror
-      '#title': 'CodeMirror (invisible)'
-      '#mode': yaml
-      '#title_display': invisible
+      '#title_display': none
     webform_codemirror_hr:
       '#type': webform_horizontal_rule
     color_title:
@@ -179,10 +174,10 @@ elements: |
       '#type': color
       '#title': 'Color (inline)'
       '#title_display': inline
-    color_invisible:
+    color_none:
       '#type': color
-      '#title': 'Color (invisible)'
-      '#title_display': invisible
+      '#title': 'Color (none)'
+      '#title_display': none
     color_hr:
       '#type': webform_horizontal_rule
     email_title:
@@ -201,10 +196,10 @@ elements: |
       '#type': email
       '#title': 'Email (inline)'
       '#title_display': inline
-    email_invisible:
+    email_none:
       '#type': email
-      '#title': 'Email (invisible)'
-      '#title_display': invisible
+      '#title': 'Email (none)'
+      '#title_display': none
     email_hr:
       '#type': webform_horizontal_rule
     webform_email_confirm_title:
@@ -219,14 +214,10 @@ elements: |
       '#type': webform_email_confirm
       '#title': 'Email confirm (after)'
       '#title_display': after
-    webform_email_confirm_inline:
-      '#type': webform_email_confirm
-      '#title': 'Email confirm (inline)'
-      '#title_display': inline
-    webform_email_confirm_invisible:
+    webform_email_confirm_none:
       '#type': webform_email_confirm
-      '#title': 'Email confirm (invisible)'
-      '#title_display': invisible
+      '#title': 'Email confirm (none)'
+      '#title_display': none
     webform_email_confirm_hr:
       '#type': webform_horizontal_rule
     webform_email_multiple_title:
@@ -245,10 +236,10 @@ elements: |
       '#type': webform_email_multiple
       '#title': 'Email multiple (inline)'
       '#title_display': inline
-    webform_email_multiple_invisible:
+    webform_email_multiple_none:
       '#type': webform_email_multiple
-      '#title': 'Email multiple (invisible)'
-      '#title_display': invisible
+      '#title': 'Email multiple (none)'
+      '#title_display': none
     webform_email_multiple_hr:
       '#type': webform_horizontal_rule
     webform_mapping_title:
@@ -279,9 +270,9 @@ elements: |
         five: Five
         six: Six
       '#title_display': after
-    webform_mapping_inline:
+    webform_mapping_none:
       '#type': webform_mapping
-      '#title': 'Mapping (inline)'
+      '#title': 'Mapping (none)'
       '#source':
         one: One
         two: Two
@@ -290,19 +281,7 @@ elements: |
         four: Four
         five: Five
         six: Six
-      '#title_display': inline
-    webform_mapping_invisible:
-      '#type': webform_mapping
-      '#title': 'Mapping (invisible)'
-      '#source':
-        one: One
-        two: Two
-        three: Three
-      '#destination':
-        four: Four
-        five: Five
-        six: Six
-      '#title_display': invisible
+      '#title_display': none
     webform_mapping_hr:
       '#type': webform_horizontal_rule
     number_title:
@@ -330,13 +309,13 @@ elements: |
       '#max': 10
       '#step': 1
       '#title_display': inline
-    number_invisible:
+    number_none:
       '#type': number
-      '#title': 'Number (invisible)'
+      '#title': 'Number (none)'
       '#min': 0
       '#max': 10
       '#step': 1
-      '#title_display': invisible
+      '#title_display': none
     number_hr:
       '#type': webform_horizontal_rule
     password_confirm_title:
@@ -358,11 +337,11 @@ elements: |
       '#title': 'Password confirm (inline)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/1427838">Issue #1427838: password and password_confirm children do not pick up #states or #attributes</a>'
       '#title_display': inline
-    password_confirm_invisible:
+    password_confirm_none:
       '#type': password_confirm
-      '#title': 'Password confirm (invisible)'
+      '#title': 'Password confirm (none)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/1427838">Issue #1427838: password and password_confirm children do not pick up #states or #attributes</a>'
-      '#title_display': invisible
+      '#title_display': none
     password_confirm_hr:
       '#type': webform_horizontal_rule
     range_title:
@@ -399,16 +378,16 @@ elements: |
       '#output__field_prefix': $
       '#output__field_suffix': '.00'
       '#title_display': inline
-    range_invisible:
+    range_none:
       '#type': range
-      '#title': 'Range (invisible)'
+      '#title': 'Range (none)'
       '#min': 0
       '#max': 100
       '#step': 1
       '#output': below
       '#output__field_prefix': $
       '#output__field_suffix': '.00'
-      '#title_display': invisible
+      '#title_display': none
     range_hr:
       '#type': webform_horizontal_rule
     webform_rating_title:
@@ -427,12 +406,34 @@ elements: |
       '#type': webform_rating
       '#title': 'Rating (inline)'
       '#title_display': inline
-    webform_rating_invisible:
+    webform_rating_none:
       '#type': webform_rating
-      '#title': 'Rating (invisible)'
-      '#title_display': invisible
+      '#title': 'Rating (none)'
+      '#title_display': none
     webform_rating_hr:
       '#type': webform_horizontal_rule
+    webform_same_title:
+      '#markup': 'Billing address is the same as the shipping address (webform_same)'
+      '#prefix': '<h3>'
+      '#suffix': '</h3>'
+    webform_same_before:
+      '#type': webform_same
+      '#title': 'Billing address is the same as the shipping address (before)'
+      '#title_display': before
+    webform_same_after:
+      '#type': webform_same
+      '#title': 'Billing address is the same as the shipping address (after)'
+      '#title_display': after
+    webform_same_inline:
+      '#type': webform_same
+      '#title': 'Billing address is the same as the shipping address (inline)'
+      '#title_display': inline
+    webform_same_none:
+      '#type': webform_same
+      '#title': 'Billing address is the same as the shipping address (none)'
+      '#title_display': none
+    webform_same_hr:
+      '#type': webform_horizontal_rule
     search_title:
       '#markup': 'Search (search)'
       '#prefix': '<h3>'
@@ -449,10 +450,10 @@ elements: |
       '#type': search
       '#title': 'Search (inline)'
       '#title_display': inline
-    search_invisible:
+    search_none:
       '#type': search
-      '#title': 'Search (invisible)'
-      '#title_display': invisible
+      '#title': 'Search (none)'
+      '#title_display': none
     search_hr:
       '#type': webform_horizontal_rule
     webform_signature_title:
@@ -467,14 +468,10 @@ elements: |
       '#type': webform_signature
       '#title': 'Signature (after)'
       '#title_display': after
-    webform_signature_inline:
+    webform_signature_none:
       '#type': webform_signature
-      '#title': 'Signature (inline)'
-      '#title_display': inline
-    webform_signature_invisible:
-      '#type': webform_signature
-      '#title': 'Signature (invisible)'
-      '#title_display': invisible
+      '#title': 'Signature (none)'
+      '#title_display': none
     webform_signature_hr:
       '#type': webform_horizontal_rule
     tel_title:
@@ -496,11 +493,11 @@ elements: |
       '#title': 'Telephone (inline)'
       '#international': true
       '#title_display': inline
-    tel_invisible:
+    tel_none:
       '#type': tel
-      '#title': 'Telephone (invisible)'
+      '#title': 'Telephone (none)'
       '#international': true
-      '#title_display': invisible
+      '#title_display': none
     tel_hr:
       '#type': webform_horizontal_rule
     webform_toggle_title:
@@ -519,10 +516,10 @@ elements: |
       '#type': webform_toggle
       '#title': 'Toggle (inline)'
       '#title_display': inline
-    webform_toggle_invisible:
+    webform_toggle_none:
       '#type': webform_toggle
-      '#title': 'Toggle (invisible)'
-      '#title_display': invisible
+      '#title': 'Toggle (none)'
+      '#title_display': none
     webform_toggle_hr:
       '#type': webform_horizontal_rule
     url_title:
@@ -541,10 +538,10 @@ elements: |
       '#type': url
       '#title': 'URL (inline)'
       '#title_display': inline
-    url_invisible:
+    url_none:
       '#type': url
-      '#title': 'URL (invisible)'
-      '#title_display': invisible
+      '#title': 'URL (none)'
+      '#title_display': none
     url_hr:
       '#type': webform_horizontal_rule
   file_upload_elements:
@@ -563,14 +560,10 @@ elements: |
       '#type': webform_audio_file
       '#title': 'Audio file (after)'
       '#title_display': after
-    webform_audio_file_inline:
-      '#type': webform_audio_file
-      '#title': 'Audio file (inline)'
-      '#title_display': inline
-    webform_audio_file_invisible:
+    webform_audio_file_none:
       '#type': webform_audio_file
-      '#title': 'Audio file (invisible)'
-      '#title_display': invisible
+      '#title': 'Audio file (none)'
+      '#title_display': none
     webform_audio_file_hr:
       '#type': webform_horizontal_rule
     webform_document_file_title:
@@ -585,14 +578,10 @@ elements: |
       '#type': webform_document_file
       '#title': 'Document file (after)'
       '#title_display': after
-    webform_document_file_inline:
+    webform_document_file_none:
       '#type': webform_document_file
-      '#title': 'Document file (inline)'
-      '#title_display': inline
-    webform_document_file_invisible:
-      '#type': webform_document_file
-      '#title': 'Document file (invisible)'
-      '#title_display': invisible
+      '#title': 'Document file (none)'
+      '#title_display': none
     webform_document_file_hr:
       '#type': webform_horizontal_rule
     managed_file_title:
@@ -609,16 +598,11 @@ elements: |
       '#title': 'File (after)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2705471">Issue #2705471: Webform states managed file fields</a><br /><a href="https://www.drupal.org/node/2113931">Issue #2113931: File Field design update</a><br /><a href="https://www.drupal.org/node/2346893">Issue #2346893: Duplicate Ajax wrapper around a file field</a><br /><a href="https://www.drupal.org/node/2482783">Issue #2482783: File upload errors not set or shown correctly</a>'
       '#title_display': after
-    managed_file_inline:
-      '#type': managed_file
-      '#title': 'File (inline)'
-      '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2705471">Issue #2705471: Webform states managed file fields</a><br /><a href="https://www.drupal.org/node/2113931">Issue #2113931: File Field design update</a><br /><a href="https://www.drupal.org/node/2346893">Issue #2346893: Duplicate Ajax wrapper around a file field</a><br /><a href="https://www.drupal.org/node/2482783">Issue #2482783: File upload errors not set or shown correctly</a>'
-      '#title_display': inline
-    managed_file_invisible:
+    managed_file_none:
       '#type': managed_file
-      '#title': 'File (invisible)'
+      '#title': 'File (none)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2705471">Issue #2705471: Webform states managed file fields</a><br /><a href="https://www.drupal.org/node/2113931">Issue #2113931: File Field design update</a><br /><a href="https://www.drupal.org/node/2346893">Issue #2346893: Duplicate Ajax wrapper around a file field</a><br /><a href="https://www.drupal.org/node/2482783">Issue #2482783: File upload errors not set or shown correctly</a>'
-      '#title_display': invisible
+      '#title_display': none
     managed_file_hr:
       '#type': webform_horizontal_rule
     webform_image_file_title:
@@ -633,14 +617,10 @@ elements: |
       '#type': webform_image_file
       '#title': 'Image file (after)'
       '#title_display': after
-    webform_image_file_inline:
+    webform_image_file_none:
       '#type': webform_image_file
-      '#title': 'Image file (inline)'
-      '#title_display': inline
-    webform_image_file_invisible:
-      '#type': webform_image_file
-      '#title': 'Image file (invisible)'
-      '#title_display': invisible
+      '#title': 'Image file (none)'
+      '#title_display': none
     webform_image_file_hr:
       '#type': webform_horizontal_rule
     webform_video_file_title:
@@ -655,14 +635,10 @@ elements: |
       '#type': webform_video_file
       '#title': 'Video file (after)'
       '#title_display': after
-    webform_video_file_inline:
-      '#type': webform_video_file
-      '#title': 'Video file (inline)'
-      '#title_display': inline
-    webform_video_file_invisible:
+    webform_video_file_none:
       '#type': webform_video_file
-      '#title': 'Video file (invisible)'
-      '#title_display': invisible
+      '#title': 'Video file (none)'
+      '#title_display': none
     webform_video_file_hr:
       '#type': webform_horizontal_rule
   options_elements:
@@ -697,14 +673,14 @@ elements: |
         two: Two
         three: Three
       '#title_display': inline
-    webform_buttons_invisible:
+    webform_buttons_none:
       '#type': webform_buttons
-      '#title': 'Buttons (invisible)'
+      '#title': 'Buttons (none)'
       '#options':
         one: One
         two: Two
         three: Three
-      '#title_display': invisible
+      '#title_display': none
     webform_buttons_hr:
       '#type': webform_horizontal_rule
     webform_buttons_other_title:
@@ -735,14 +711,14 @@ elements: |
         two: Two
         three: Three
       '#title_display': inline
-    webform_buttons_other_invisible:
+    webform_buttons_other_none:
       '#type': webform_buttons_other
-      '#title': 'Buttons other (invisible)'
+      '#title': 'Buttons other (none)'
       '#options':
         one: One
         two: Two
         three: Three
-      '#title_display': invisible
+      '#title_display': none
     webform_buttons_other_hr:
       '#type': webform_horizontal_rule
     checkboxes_title:
@@ -779,16 +755,16 @@ elements: |
       '#options_display': side_by_side
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/994360">Issue #994360: #states cannot disable/enable radios and checkboxes</a><br /><a href="https://www.drupal.org/node/2836364">Issue #2836364: Wrapper attributes are not supported by composite elements, this includes radios, checkboxes, and buttons.</a>'
       '#title_display': inline
-    checkboxes_invisible:
+    checkboxes_none:
       '#type': checkboxes
-      '#title': 'Checkboxes (invisible)'
+      '#title': 'Checkboxes (none)'
       '#options':
         one: One
         two: Two
         three: Three
       '#options_display': side_by_side
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/994360">Issue #994360: #states cannot disable/enable radios and checkboxes</a><br /><a href="https://www.drupal.org/node/2836364">Issue #2836364: Wrapper attributes are not supported by composite elements, this includes radios, checkboxes, and buttons.</a>'
-      '#title_display': invisible
+      '#title_display': none
     checkboxes_hr:
       '#type': webform_horizontal_rule
     webform_checkboxes_other_title:
@@ -822,15 +798,15 @@ elements: |
         three: Three
       '#options_display': side_by_side
       '#title_display': inline
-    webform_checkboxes_other_invisible:
+    webform_checkboxes_other_none:
       '#type': webform_checkboxes_other
-      '#title': 'Checkboxes other (invisible)'
+      '#title': 'Checkboxes other (none)'
       '#options':
         one: One
         two: Two
         three: Three
       '#options_display': side_by_side
-      '#title_display': invisible
+      '#title_display': none
     webform_checkboxes_other_hr:
       '#type': webform_horizontal_rule
     webform_image_select_title:
@@ -867,9 +843,9 @@ elements: |
           text: 'Bear 3'
           src: 'https://www.placebear.com/120/100'
       '#title_display': after
-    webform_image_select_inline:
+    webform_image_select_none:
       '#type': webform_image_select
-      '#title': 'Image select (inline)'
+      '#title': 'Image select (none)'
       '#show_label': true
       '#images':
         bear_1:
@@ -881,22 +857,7 @@ elements: |
         bear_3:
           text: 'Bear 3'
           src: 'https://www.placebear.com/120/100'
-      '#title_display': inline
-    webform_image_select_invisible:
-      '#type': webform_image_select
-      '#title': 'Image select (invisible)'
-      '#show_label': true
-      '#images':
-        bear_1:
-          text: 'Bear 1'
-          src: 'https://www.placebear.com/80/100'
-        bear_2:
-          text: 'Bear 2'
-          src: 'https://www.placebear.com/100/100'
-        bear_3:
-          text: 'Bear 3'
-          src: 'https://www.placebear.com/120/100'
-      '#title_display': invisible
+      '#title_display': none
     webform_image_select_hr:
       '#type': webform_horizontal_rule
     webform_likert_title:
@@ -927,21 +888,9 @@ elements: |
         2: '2'
         3: '3'
       '#title_display': after
-    webform_likert_inline:
-      '#type': webform_likert
-      '#title': 'Likert (inline)'
-      '#questions':
-        q1: 'Please answer question 1?'
-        q2: 'How about now answering question 2?'
-        q3: 'Finally, here is question 3?'
-      '#answers':
-        1: '1'
-        2: '2'
-        3: '3'
-      '#title_display': inline
-    webform_likert_invisible:
+    webform_likert_none:
       '#type': webform_likert
-      '#title': 'Likert (invisible)'
+      '#title': 'Likert (none)'
       '#questions':
         q1: 'Please answer question 1?'
         q2: 'How about now answering question 2?'
@@ -950,7 +899,7 @@ elements: |
         1: '1'
         2: '2'
         3: '3'
-      '#title_display': invisible
+      '#title_display': none
     webform_likert_hr:
       '#type': webform_horizontal_rule
     radios_title:
@@ -987,16 +936,16 @@ elements: |
       '#options_display': side_by_side
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2731991">Issue #2731991: Setting required on radios marks all options required</a><br /><a href="https://www.drupal.org/node/994360">Issue #994360: #states cannot disable/enable radios and checkboxes</a><br /><a href="https://www.drupal.org/node/2836364">Issue #2836364: Wrapper attributes are not supported by composite elements, this includes radios, checkboxes, and buttons.</a>'
       '#title_display': inline
-    radios_invisible:
+    radios_none:
       '#type': radios
-      '#title': 'Radios (invisible)'
+      '#title': 'Radios (none)'
       '#options':
         one: One
         two: Two
         three: Three
       '#options_display': side_by_side
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2731991">Issue #2731991: Setting required on radios marks all options required</a><br /><a href="https://www.drupal.org/node/994360">Issue #994360: #states cannot disable/enable radios and checkboxes</a><br /><a href="https://www.drupal.org/node/2836364">Issue #2836364: Wrapper attributes are not supported by composite elements, this includes radios, checkboxes, and buttons.</a>'
-      '#title_display': invisible
+      '#title_display': none
     radios_hr:
       '#type': webform_horizontal_rule
     webform_radios_other_title:
@@ -1030,15 +979,15 @@ elements: |
         three: Three
       '#options_display': side_by_side
       '#title_display': inline
-    webform_radios_other_invisible:
+    webform_radios_other_none:
       '#type': webform_radios_other
-      '#title': 'Radios other (invisible)'
+      '#title': 'Radios other (none)'
       '#options':
         one: One
         two: Two
         three: Three
       '#options_display': side_by_side
-      '#title_display': invisible
+      '#title_display': none
     webform_radios_other_hr:
       '#type': webform_horizontal_rule
     select_title:
@@ -1072,15 +1021,15 @@ elements: |
         three: Three
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/1426646">Issue #1426646: "-Select-" option is lost when webform elements uses ''#states''</a><br /><a href="https://www.drupal.org/node/1149078">Issue #1149078: States API doesn''t work with multiple select fields</a><br /><a href="https://www.drupal.org/node/2791741">Issue #2791741: FAPI states: fields aren''t hidden initially when depending on multi-value selection</a>'
       '#title_display': inline
-    select_invisible:
+    select_none:
       '#type': select
-      '#title': 'Select (invisible)'
+      '#title': 'Select (none)'
       '#options':
         one: One
         two: Two
         three: Three
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/1426646">Issue #1426646: "-Select-" option is lost when webform elements uses ''#states''</a><br /><a href="https://www.drupal.org/node/1149078">Issue #1149078: States API doesn''t work with multiple select fields</a><br /><a href="https://www.drupal.org/node/2791741">Issue #2791741: FAPI states: fields aren''t hidden initially when depending on multi-value selection</a>'
-      '#title_display': invisible
+      '#title_display': none
     select_hr:
       '#type': webform_horizontal_rule
     webform_select_other_title:
@@ -1111,14 +1060,14 @@ elements: |
         two: Two
         three: Three
       '#title_display': inline
-    webform_select_other_invisible:
+    webform_select_other_none:
       '#type': webform_select_other
-      '#title': 'Select other (invisible)'
+      '#title': 'Select other (none)'
       '#options':
         one: One
         two: Two
         three: Three
-      '#title_display': invisible
+      '#title_display': none
     webform_select_other_hr:
       '#type': webform_horizontal_rule
     webform_toggles_title:
@@ -1149,14 +1098,14 @@ elements: |
         two: Two
         three: Three
       '#title_display': inline
-    webform_toggles_invisible:
+    webform_toggles_none:
       '#type': webform_toggles
-      '#title': 'Toggles (invisible)'
+      '#title': 'Toggles (none)'
       '#options':
         one: One
         two: Two
         three: Three
-      '#title_display': invisible
+      '#title_display': none
     webform_toggles_hr:
       '#type': webform_horizontal_rule
   computed_elements:
@@ -1182,11 +1131,11 @@ elements: |
       '#title': 'Computed token (inline)'
       '#template': 'This is a Computed token value.'
       '#title_display': inline
-    webform_computed_token_invisible:
+    webform_computed_token_none:
       '#type': webform_computed_token
-      '#title': 'Computed token (invisible)'
+      '#title': 'Computed token (none)'
       '#template': 'This is a Computed token value.'
-      '#title_display': invisible
+      '#title_display': none
     webform_computed_token_hr:
       '#type': webform_horizontal_rule
     webform_computed_twig_title:
@@ -1208,11 +1157,11 @@ elements: |
       '#title': 'Computed Twig (inline)'
       '#template': 'This is a Computed Twig value.'
       '#title_display': inline
-    webform_computed_twig_invisible:
+    webform_computed_twig_none:
       '#type': webform_computed_twig
-      '#title': 'Computed Twig (invisible)'
+      '#title': 'Computed Twig (none)'
       '#template': 'This is a Computed Twig value.'
-      '#title_display': invisible
+      '#title_display': none
     webform_computed_twig_hr:
       '#type': webform_horizontal_rule
   date_time_elements:
@@ -1235,10 +1184,10 @@ elements: |
       '#type': date
       '#title': 'Date (inline)'
       '#title_display': inline
-    date_invisible:
+    date_none:
       '#type': date
-      '#title': 'Date (invisible)'
-      '#title_display': invisible
+      '#title': 'Date (none)'
+      '#title_display': none
     date_hr:
       '#type': webform_horizontal_rule
     datetime_title:
@@ -1260,11 +1209,11 @@ elements: |
       '#title': 'Date/time (inline)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2419131">Issue #2419131: #states attribute does not work on #type datetime</a>'
       '#title_display': inline
-    datetime_invisible:
+    datetime_none:
       '#type': datetime
-      '#title': 'Date/time (invisible)'
+      '#title': 'Date/time (none)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2419131">Issue #2419131: #states attribute does not work on #type datetime</a>'
-      '#title_display': invisible
+      '#title_display': none
     datetime_hr:
       '#type': webform_horizontal_rule
     datelist_title:
@@ -1283,10 +1232,10 @@ elements: |
       '#type': datelist
       '#title': 'Date list (inline)'
       '#title_display': inline
-    datelist_invisible:
+    datelist_none:
       '#type': datelist
-      '#title': 'Date list (invisible)'
-      '#title_display': invisible
+      '#title': 'Date list (none)'
+      '#title_display': none
     datelist_hr:
       '#type': webform_horizontal_rule
     webform_time_title:
@@ -1308,11 +1257,11 @@ elements: |
       '#title': 'Time (inline)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/1838234">Issue #1838234: Add jQuery Timepicker for the Time element of the datetime field</a>'
       '#title_display': inline
-    webform_time_invisible:
+    webform_time_none:
       '#type': webform_time
-      '#title': 'Time (invisible)'
+      '#title': 'Time (none)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/1838234">Issue #1838234: Add jQuery Timepicker for the Time element of the datetime field</a>'
-      '#title_display': invisible
+      '#title_display': none
     webform_time_hr:
       '#type': webform_horizontal_rule
   containers:
@@ -1333,16 +1282,11 @@ elements: |
       '#title': 'Details (after)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2348851">Issue #2348851: Regression: Allow HTML tags inside detail summary</a>'
       '#title_display': after
-    details_inline:
-      '#type': details
-      '#title': 'Details (inline)'
-      '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2348851">Issue #2348851: Regression: Allow HTML tags inside detail summary</a>'
-      '#title_display': inline
-    details_invisible:
+    details_none:
       '#type': details
-      '#title': 'Details (invisible)'
+      '#title': 'Details (none)'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2348851">Issue #2348851: Regression: Allow HTML tags inside detail summary</a>'
-      '#title_display': invisible
+      '#title_display': none
     details_hr:
       '#type': webform_horizontal_rule
     fieldset_title:
@@ -1357,14 +1301,10 @@ elements: |
       '#type': fieldset
       '#title': 'Fieldset (after)'
       '#title_display': after
-    fieldset_inline:
+    fieldset_none:
       '#type': fieldset
-      '#title': 'Fieldset (inline)'
-      '#title_display': inline
-    fieldset_invisible:
-      '#type': fieldset
-      '#title': 'Fieldset (invisible)'
-      '#title_display': invisible
+      '#title': 'Fieldset (none)'
+      '#title_display': none
     fieldset_hr:
       '#type': webform_horizontal_rule
     item_title:
@@ -1395,38 +1335,16 @@ elements: |
       '#field_suffix': '{field_suffix}'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/783438">Issue #783438: #states doesn''t work for #type item</a>'
       '#title_display': inline
-    item_invisible:
+    item_none:
       '#type': item
-      '#title': 'Item (invisible)'
+      '#title': 'Item (none)'
       '#markup': '{markup}'
       '#field_prefix': '{field_prefix}'
       '#field_suffix': '{field_suffix}'
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/783438">Issue #783438: #states doesn''t work for #type item</a>'
-      '#title_display': invisible
+      '#title_display': none
     item_hr:
       '#type': webform_horizontal_rule
-    webform_section_title:
-      '#markup': 'Section (webform_section)'
-      '#prefix': '<h3>'
-      '#suffix': '</h3>'
-    webform_section_before:
-      '#type': webform_section
-      '#title': 'Section (before)'
-      '#title_display': before
-    webform_section_after:
-      '#type': webform_section
-      '#title': 'Section (after)'
-      '#title_display': after
-    webform_section_inline:
-      '#type': webform_section
-      '#title': 'Section (inline)'
-      '#title_display': inline
-    webform_section_invisible:
-      '#type': webform_section
-      '#title': 'Section (invisible)'
-      '#title_display': invisible
-    webform_section_hr:
-      '#type': webform_horizontal_rule
   entity_reference_elements:
     '#type': details
     '#title': 'Entity reference elements'
@@ -1462,15 +1380,15 @@ elements: |
         include_anonymous: true
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2826451">Issue #2826451: TermSelection returning HTML characters in select list</a>'
       '#title_display': inline
-    entity_autocomplete_invisible:
+    entity_autocomplete_none:
       '#type': entity_autocomplete
-      '#title': 'Entity autocomplete (invisible)'
+      '#title': 'Entity autocomplete (none)'
       '#target_type': user
       '#selection_handler': 'default:user'
       '#selection_settings':
         include_anonymous: true
       '#description': '<b>Known Issues:</b><br /><a href="https://www.drupal.org/node/2826451">Issue #2826451: TermSelection returning HTML characters in select list</a>'
-      '#title_display': invisible
+      '#title_display': none
     entity_autocomplete_hr:
       '#type': webform_horizontal_rule
     webform_entity_checkboxes_title:
@@ -1513,9 +1431,9 @@ elements: |
         1: Administrator
         0: Anonymous
       '#title_display': inline
-    webform_entity_checkboxes_invisible:
+    webform_entity_checkboxes_none:
       '#type': webform_entity_checkboxes
-      '#title': 'Entity checkboxes (invisible)'
+      '#title': 'Entity checkboxes (none)'
       '#options_display': side_by_side
       '#target_type': user
       '#selection_handler': 'default:user'
@@ -1524,7 +1442,7 @@ elements: |
       '#options':
         1: Administrator
         0: Anonymous
-      '#title_display': invisible
+      '#title_display': none
     webform_entity_checkboxes_hr:
       '#type': webform_horizontal_rule
     webform_entity_radios_title:
@@ -1567,9 +1485,9 @@ elements: |
         1: Administrator
         0: Anonymous
       '#title_display': inline
-    webform_entity_radios_invisible:
+    webform_entity_radios_none:
       '#type': webform_entity_radios
-      '#title': 'Entity radios (invisible)'
+      '#title': 'Entity radios (none)'
       '#options_display': side_by_side
       '#target_type': user
       '#selection_handler': 'default:user'
@@ -1578,7 +1496,7 @@ elements: |
       '#options':
         1: Administrator
         0: Anonymous
-      '#title_display': invisible
+      '#title_display': none
     webform_entity_radios_hr:
       '#type': webform_horizontal_rule
     webform_entity_select_title:
@@ -1618,9 +1536,9 @@ elements: |
         1: Administrator
         0: Anonymous
       '#title_display': inline
-    webform_entity_select_invisible:
+    webform_entity_select_none:
       '#type': webform_entity_select
-      '#title': 'Entity select (invisible)'
+      '#title': 'Entity select (none)'
       '#target_type': user
       '#selection_handler': 'default:user'
       '#selection_settings':
@@ -1628,7 +1546,7 @@ elements: |
       '#options':
         1: Administrator
         0: Anonymous
-      '#title_display': invisible
+      '#title_display': none
     webform_entity_select_hr:
       '#type': webform_horizontal_rule
     webform_term_checkboxes_title:
@@ -1650,11 +1568,11 @@ elements: |
       '#title': 'Term checkboxes (inline)'
       '#vocabulary': tags
       '#title_display': inline
-    webform_term_checkboxes_invisible:
+    webform_term_checkboxes_none:
       '#type': webform_term_checkboxes
-      '#title': 'Term checkboxes (invisible)'
+      '#title': 'Term checkboxes (none)'
       '#vocabulary': tags
-      '#title_display': invisible
+      '#title_display': none
     webform_term_checkboxes_hr:
       '#type': webform_horizontal_rule
     webform_term_select_title:
@@ -1676,11 +1594,11 @@ elements: |
       '#title': 'Term select (inline)'
       '#vocabulary': tags
       '#title_display': inline
-    webform_term_select_invisible:
+    webform_term_select_none:
       '#type': webform_term_select
-      '#title': 'Term select (invisible)'
+      '#title': 'Term select (none)'
       '#vocabulary': tags
-      '#title_display': invisible
+      '#title_display': none
     webform_term_select_hr:
       '#type': webform_horizontal_rule
   other_elements:
@@ -1703,10 +1621,10 @@ elements: |
       '#type': machine_name
       '#title': 'Machine name (inline)'
       '#title_display': inline
-    machine_name_invisible:
+    machine_name_none:
       '#type': machine_name
-      '#title': 'Machine name (invisible)'
-      '#title_display': invisible
+      '#title': 'Machine name (none)'
+      '#title_display': none
     machine_name_hr:
       '#type': webform_horizontal_rule
   
@@ -1775,6 +1693,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -1822,6 +1741,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_toggle.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_toggle.yml
index aa37c1dd..16fbd5ae 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_toggle.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_toggle.yml
@@ -115,6 +115,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -162,6 +163,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_users_roles.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_users_roles.yml
index 6c3918f0..9c6430fd 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_users_roles.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_users_roles.yml
@@ -98,6 +98,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -145,6 +146,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_minlength.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_minlength.yml
index e80ab9fc..202cd81d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_minlength.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_minlength.yml
@@ -92,6 +92,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -139,6 +140,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_multiple.yml
index 834e477f..9ba5a32b 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_multiple.yml
@@ -144,6 +144,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -191,6 +192,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_required.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_required.yml
index 2ee0cb5b..75ad98d5 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_required.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_required.yml
@@ -95,6 +95,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -142,6 +143,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_unique.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_unique.yml
index c5f75bf3..10788e63 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_unique.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_element_validate_unique.yml
@@ -116,6 +116,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -163,6 +164,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements.yml
index 1778cc51..925bffcb 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements.yml
@@ -600,6 +600,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -647,6 +648,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements_composite.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements_composite.yml
index 7319b4a7..0ff3e10e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements_composite.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_example_elements_composite.yml
@@ -253,6 +253,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -300,6 +301,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_entity_reference.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_entity_reference.yml
index ac2efa71..a7b0bdb4 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_entity_reference.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_entity_reference.yml
@@ -99,6 +99,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -146,6 +147,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_options.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_options.yml
index f3a2e023..7d405122 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_options.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_exporter_options.yml
@@ -109,6 +109,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -156,6 +157,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_access_denied.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_access_denied.yml
index db4945ec..1b24ddda 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_access_denied.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_access_denied.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_api.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_api.yml
index 3681ef9b..5cc778af 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_api.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_api.yml
@@ -184,6 +184,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -231,6 +232,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_archived.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_archived.yml
index 898133f9..7a8c9be8 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_archived.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_archived.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_assets.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_assets.yml
index fb9fadd3..500cd50f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_assets.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_assets.yml
@@ -96,6 +96,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -143,6 +144,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofill.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofill.yml
index 2a6de3d7..b452239c 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofill.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofill.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofocus.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofocus.yml
index 5d5f0166..61c5c2f7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofocus.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_autofocus.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_closed.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_closed.yml
index aac7c885..be051a5b 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_closed.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_closed.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_confidential.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_confidential.yml
index 3d72dcf8..b6efb38c 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_confidential.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_confidential.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_details_toggle.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_details_toggle.yml
index c92be6e7..c6bcfdf5 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_details_toggle.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_details_toggle.yml
@@ -91,6 +91,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -138,6 +139,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_autocomplete.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_autocomplete.yml
index df68d8b9..6f140e3b 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_autocomplete.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_autocomplete.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -133,6 +134,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_back.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_back.yml
index 3e658520..bba30707 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_back.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_back.yml
@@ -411,6 +411,7 @@ settings:
   wizard_progress_pages: true
   wizard_progress_percentage: true
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -458,6 +459,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_inline_errors.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_inline_errors.yml
index 2e6fbded..c569052f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_inline_errors.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_disable_inline_errors.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_anonymous.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_anonymous.yml
index b664fd68..2d9fc598 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_anonymous.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_anonymous.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_authenticated.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_authenticated.yml
index 3df0f18d..329a021f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_authenticated.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_authenticated.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_multiple.yml
index bc51401c..ec1bb0ce 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_draft_multiple.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_inline_errors.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_inline_errors.yml
index 2d742caf..52f91336 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_inline_errors.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_inline_errors.yml
@@ -192,6 +192,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -239,6 +240,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit.yml
index 9ba5862a..13a061d6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit.yml
@@ -104,6 +104,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -151,6 +152,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_total_unique.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_total_unique.yml
index 6c0496f9..a47316fc 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_total_unique.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_total_unique.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_user_unique.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_user_unique.yml
index 399cc99a..7ae959eb 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_user_unique.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_user_unique.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_wait.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_wait.yml
index fdab0ded..65768548 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_wait.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_limit_wait.yml
@@ -86,6 +86,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_100.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_100.yml
index 22b5d5ab..3cb4e262 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_100.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_100.yml
@@ -381,6 +381,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -428,6 +429,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_200.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_200.yml
index 0bf51665..c58183fa 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_200.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_200.yml
@@ -681,6 +681,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -728,6 +729,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_300.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_300.yml
index ae7a6546..3221f0cf 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_300.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_long_300.yml
@@ -981,6 +981,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -1028,6 +1029,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_novalidate.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_novalidate.yml
index e1cae76e..6e1c3c18 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_novalidate.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_novalidate.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_opening.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_opening.yml
index ef3ef1ba..14b2df45 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_opening.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_opening.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_prepopulate.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_prepopulate.yml
index 3a41eb7e..ea265aa6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_prepopulate.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_prepopulate.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_preview.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_preview.yml
index 3f29c3d2..59e75a79 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_preview.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_preview.yml
@@ -122,6 +122,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -169,6 +170,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_properties.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_properties.yml
index 95331080..b7f5ae45 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_properties.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_properties.yml
@@ -96,6 +96,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -143,6 +144,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_remote_addr.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_remote_addr.yml
index c523f97b..edd6b393 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_remote_addr.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_remote_addr.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_required.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_required.yml
index 10888ebd..1b74436f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_required.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_required.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_reset.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_reset.yml
index 2d8a9005..1c22597f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_reset.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_reset.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_results_disabled.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_results_disabled.yml
index f50e7a71..96da4c36 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_results_disabled.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_results_disabled.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_back.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_back.yml
index e3afde71..d5588d25 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_back.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_back.yml
@@ -95,6 +95,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -142,6 +143,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_once.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_once.yml
index 2166ffb2..441b1ac6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_once.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_once.yml
@@ -92,6 +92,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -139,6 +140,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_text.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_text.yml
index aefd04a4..f4fd31c7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_text.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_submit_text.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_template.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_template.yml
index 37a71104..1dd4b955 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_template.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_template.yml
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved.yml
index da1e8246..3c3c4bf4 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved.yml
@@ -89,6 +89,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -136,6 +137,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved_wizard.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved_wizard.yml
index b5ef3f85..3bb13b98 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved_wizard.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_unsaved_wizard.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_validate.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_validate.yml
index 5bedc7b5..02d6d77a 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_validate.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_validate.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_access.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_access.yml
index 617298b2..fc3bc288 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_access.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_access.yml
@@ -122,6 +122,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -169,6 +170,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_advanced.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_advanced.yml
index c08f7ca7..fa126f05 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_advanced.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_advanced.yml
@@ -126,6 +126,7 @@ settings:
   wizard_progress_pages: true
   wizard_progress_percentage: true
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -173,6 +174,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_basic.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_basic.yml
index c53136d7..8e7a1793 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_basic.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_basic.yml
@@ -95,6 +95,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -142,6 +143,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_conditional.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_conditional.yml
index 5979bb95..f446e98d 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_conditional.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_conditional.yml
@@ -164,6 +164,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -211,6 +212,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_custom.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_custom.yml
index 328b950b..5d286f87 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_custom.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_custom.yml
@@ -127,6 +127,7 @@ settings:
   wizard_progress_pages: true
   wizard_progress_percentage: true
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -174,6 +175,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_links.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_links.yml
index 48fe310f..aaf0f0a6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_links.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_links.yml
@@ -95,6 +95,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: true
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: true
   wizard_confirmation: true
@@ -142,6 +143,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_100.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_100.yml
index 116f17b0..3e2e6ce3 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_100.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_100.yml
@@ -411,6 +411,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -458,6 +459,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_200.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_200.yml
index 68b0e5f8..6a8a7788 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_200.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_200.yml
@@ -741,6 +741,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -788,6 +789,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_300.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_300.yml
index 10f47693..adca8522 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_300.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_long_300.yml
@@ -1071,6 +1071,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -1118,6 +1119,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate.yml
index 9a739f07..63c704b8 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate.yml
@@ -124,6 +124,7 @@ settings:
   wizard_progress_pages: true
   wizard_progress_percentage: true
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -171,6 +172,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate_comp.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate_comp.yml
index 36b40386..11ed4e82 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate_comp.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_form_wizard_validate_comp.yml
@@ -172,6 +172,7 @@ settings:
   wizard_progress_pages: true
   wizard_progress_percentage: true
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -219,6 +220,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_action.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_action.yml
index 228bef26..64ccfada 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_action.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_action.yml
@@ -47,7 +47,7 @@ elements: |
       '#attributes':
         readonly: readonly
         style: 'background-color: #eee'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -113,6 +113,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -160,6 +161,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -231,7 +233,7 @@ handlers:
       data: |
         notes_add: ''
         notes_last: '[webform_submission:values:notes_add]'
-
+        
       message: 'Submission notes have been updated.'
       message_type: status
       debug: true
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email.yml
index 6edeec7a..3576e50f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email.yml
@@ -106,6 +106,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -153,6 +154,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -231,6 +233,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_advanced.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_advanced.yml
index 3335ff74..06e020b7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_advanced.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_advanced.yml
@@ -121,6 +121,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -168,6 +169,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -253,6 +255,8 @@ handlers:
       attachments: true
       twig: false
       theme_name: ''
+      parameters:
+        custom_parameter: test
       debug: true
       reply_to: reply_to@example.com
       return_path: return_path@example.com
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_mapping.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_mapping.yml
index 826d26ed..54ea9a61 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_mapping.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_mapping.yml
@@ -96,6 +96,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -143,6 +144,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -223,6 +225,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -259,6 +262,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -295,6 +299,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -333,6 +338,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -369,6 +375,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_roles.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_roles.yml
index 9db4c581..d2bf54f7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_roles.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_roles.yml
@@ -88,6 +88,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -135,6 +136,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -219,6 +221,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_states.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_states.yml
index 8a448643..4a756d9f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_states.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_states.yml
@@ -17,7 +17,7 @@ category: 'Test: Handler'
 elements: |
   message:
     '#markup': 'Click ''Save Draft'' and ''Submit'' to send emails triggered by submissions  state.'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -83,6 +83,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -130,6 +131,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -209,6 +211,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -243,6 +246,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -277,6 +281,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -311,6 +316,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -345,6 +351,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -379,6 +386,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -412,6 +420,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_twig.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_twig.yml
index 00f417d0..c9fe98b3 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_twig.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_email_twig.yml
@@ -106,6 +106,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -153,6 +154,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -234,6 +236,7 @@ handlers:
       attachments: false
       twig: true
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_settings.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_settings.yml
index 2b39386b..bef4fd66 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_settings.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_handler_settings.yml
@@ -126,6 +126,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -173,6 +174,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_libraries_optional.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_libraries_optional.yml
index 0c6e4248..99210099 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_libraries_optional.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_libraries_optional.yml
@@ -164,6 +164,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -211,6 +212,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_rendering.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_rendering.yml
index 536d6a29..7cf829cc 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_rendering.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_rendering.yml
@@ -115,6 +115,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -162,6 +163,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: true
 access:
   create:
@@ -240,6 +242,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
@@ -274,6 +277,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: true
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states.yml
index fedfdf7a..301ecda6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states.yml
@@ -2724,6 +2724,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -2771,6 +2772,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_autocomplete.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_autocomplete.yml
index a7795365..ac40b8f9 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_autocomplete.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_autocomplete.yml
@@ -225,6 +225,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -272,6 +273,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_crosspage.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_crosspage.yml
index 2e0edc4c..161e02c0 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_crosspage.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_crosspage.yml
@@ -111,6 +111,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -158,6 +159,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_clear.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_clear.yml
index 97643e9d..12a8cad4 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_clear.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_clear.yml
@@ -168,6 +168,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -215,6 +216,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_comp.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_comp.yml
index 8f9b893e..8b7ad42e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_comp.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_comp.yml
@@ -142,6 +142,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -189,6 +190,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_containers.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_containers.yml
index 53295388..7188b4cd 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_containers.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_containers.yml
@@ -139,6 +139,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -186,6 +187,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_custom.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_custom.yml
index 3e066cda..7831648b 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_custom.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_custom.yml
@@ -155,6 +155,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -202,6 +203,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_hidden.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_hidden.yml
index 85825c20..5c0a669f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_hidden.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_hidden.yml
@@ -204,6 +204,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -251,6 +252,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_multiple.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_multiple.yml
index 6a83c1db..9a289e80 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_multiple.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_multiple.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_nested.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_nested.yml
index 8a28d18a..c43984fd 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_nested.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_nested.yml
@@ -124,6 +124,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -171,6 +172,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_preview.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_preview.yml
index 82381353..ddb64e0f 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_preview.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_preview.yml
@@ -118,6 +118,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -165,6 +166,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_required.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_required.yml
index 34f3fedb..c1a6890b 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_required.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_required.yml
@@ -333,7 +333,7 @@ elements: |
         visible:
           ':input[name="currency_trigger"]':
             checked: true
-
+  
   address_trigger_details:
     '#type': details
     '#title': address_trigger
@@ -447,7 +447,7 @@ elements: |
         required:
           ':input[name="composite_sub_elements_required_trigger"]':
             value: b
-
+  
 css: ''
 javascript: ''
 settings:
@@ -513,6 +513,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -560,6 +561,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_save.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_save.yml
index a301c379..4314a4b4 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_save.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_save.yml
@@ -136,6 +136,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -183,6 +184,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_wizard.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_wizard.yml
index 3e4c2b80..ee675520 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_wizard.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_server_wizard.yml
@@ -286,6 +286,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -333,6 +334,7 @@ settings:
   purge_days: null
   results_disabled: true
   results_disabled_ignore: true
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_triggers.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_triggers.yml
index 7b592352..7d57047e 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_triggers.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_states_triggers.yml
@@ -196,6 +196,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -243,6 +244,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_label.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_label.yml
index 5637bd16..1db188db 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_label.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_label.yml
@@ -85,6 +85,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -132,6 +133,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_log.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_log.yml
index e5a1b1e1..77b24e14 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_log.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_log.yml
@@ -84,6 +84,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -131,6 +132,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_views.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_views.yml
index bf6a2a9a..292589d9 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_views.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_submission_views.yml
@@ -114,6 +114,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -161,6 +162,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token.yml
index 86f9c208..b436dfe8 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token.yml
@@ -191,6 +191,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -238,6 +239,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: true
 access:
   create:
@@ -316,6 +318,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_submission_value.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_submission_value.yml
index 86625c46..c76c1397 100644
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_submission_value.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_submission_value.yml
@@ -15,6 +15,16 @@ title: 'Test: Token submission value'
 description: 'Test Webform submission values tokens'
 category: 'Test: Token'
 elements: |
+  checkboxes:
+    '#type': checkboxes
+    '#title': checkboxes
+    '#options':
+      one: One
+      two: Two
+      three: Three
+    '#default_value':
+      - one
+      - three
   email:
     '#type': email
     '#title': email
@@ -194,6 +204,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -226,6 +237,14 @@ settings:
     <tr><th width="50%">webform:element:email:not_property</th><td width="50%">[webform:element:email:not_property]</td></tr>
     </table>
     
+    <h3>checkboxes</h3>
+    <table class="table">
+    <tr><th width="50%">webform:element:checkboxes</th><td width="50%">[webform_submission:values:checkboxes]</td></tr>
+    <tr><th width="50%">webform:element:checkboxes:checked:one</th><td width="50%">[webform_submission:values:checkboxes:checked:one]</td></tr>
+    <tr><th width="50%">webform:element:checkboxes:selected:two</th><td width="50%">[webform_submission:values:checkboxes:selected:two]</td></tr>
+    <tr><th width="50%">webform:element:checkboxes:selected:three</th><td width="50%">[webform_submission:values:checkboxes:selected:three]</td></tr>
+    </table>
+    
     <h3>emails</h3>
     <table class="table">
     <tr><th width="50%">webform_submission:values:email</th><td width="50%">[webform_submission:values:email]</td></tr>
@@ -354,6 +373,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: true
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_update.yml b/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_update.yml
deleted file mode 100644
index ccf26d05..00000000
--- a/modules/contrib/webform/tests/modules/webform_test/config/install/webform.webform.test_token_update.yml
+++ /dev/null
@@ -1,216 +0,0 @@
-langcode: en
-status: open
-dependencies:
-  enforced:
-    module:
-      - webform_test
-open: null
-close: null
-weight: 0
-uid: null
-template: false
-archive: false
-id: test_token_update
-title: 'Test: Token: Update'
-description: 'Test updating submission using secure token.'
-category: 'Test: Token'
-elements: |
-  textfield:
-    '#type': textfield
-    '#title': textfield
-  
-css: ''
-javascript: ''
-settings:
-  ajax: false
-  ajax_scroll_top: form
-  ajax_progress_type: ''
-  ajax_effect: ''
-  ajax_speed: null
-  page: true
-  page_submit_path: ''
-  page_confirm_path: ''
-  page_admin_theme: false
-  form_title: source_entity_webform
-  form_submit_once: false
-  form_exception_message: ''
-  form_open_message: ''
-  form_close_message: ''
-  form_previous_submissions: true
-  form_confidential: false
-  form_confidential_message: ''
-  form_remote_addr: true
-  form_convert_anonymous: false
-  form_prepopulate: false
-  form_prepopulate_source_entity: false
-  form_prepopulate_source_entity_required: false
-  form_prepopulate_source_entity_type: ''
-  form_reset: false
-  form_disable_autocomplete: false
-  form_novalidate: false
-  form_disable_inline_errors: false
-  form_required: false
-  form_unsaved: false
-  form_disable_back: false
-  form_submit_back: false
-  form_autofocus: false
-  form_details_toggle: false
-  form_access_denied: default
-  form_access_denied_title: ''
-  form_access_denied_message: ''
-  form_access_denied_attributes: {  }
-  form_file_limit: ''
-  submission_label: ''
-  submission_log: false
-  submission_views: {  }
-  submission_views_replace: {  }
-  submission_user_columns: {  }
-  submission_user_duplicate: false
-  submission_access_denied: default
-  submission_access_denied_title: ''
-  submission_access_denied_message: ''
-  submission_access_denied_attributes: {  }
-  submission_exception_message: ''
-  submission_locked_message: ''
-  submission_excluded_elements: {  }
-  submission_exclude_empty: false
-  submission_exclude_empty_checkbox: false
-  previous_submission_message: ''
-  previous_submissions_message: ''
-  autofill: false
-  autofill_message: ''
-  autofill_excluded_elements: {  }
-  wizard_progress_bar: true
-  wizard_progress_pages: false
-  wizard_progress_percentage: false
-  wizard_progress_link: false
-  wizard_start_label: ''
-  wizard_preview_link: false
-  wizard_confirmation: true
-  wizard_confirmation_label: ''
-  wizard_track: ''
-  preview: 0
-  preview_label: ''
-  preview_title: ''
-  preview_message: ''
-  preview_attributes: {  }
-  preview_excluded_elements: {  }
-  preview_exclude_empty: true
-  preview_exclude_empty_checkbox: false
-  draft: none
-  draft_multiple: false
-  draft_auto_save: false
-  draft_saved_message: ''
-  draft_loaded_message: ''
-  draft_pending_single_message: ''
-  draft_pending_multiple_message: ''
-  confirmation_type: page
-  confirmation_title: ''
-  confirmation_message: '<p>You can update your submission via <a href="[webform_submission:update-url]">[webform_submission:update-url]</a></p>'
-  confirmation_url: ''
-  confirmation_attributes: {  }
-  confirmation_back: true
-  confirmation_back_label: ''
-  confirmation_back_attributes: {  }
-  confirmation_exclude_query: false
-  confirmation_exclude_token: false
-  confirmation_update: false
-  limit_total: null
-  limit_total_interval: null
-  limit_total_message: ''
-  limit_total_unique: false
-  limit_user: null
-  limit_user_interval: null
-  limit_user_message: ''
-  limit_user_unique: false
-  entity_limit_total: null
-  entity_limit_total_interval: null
-  entity_limit_user: null
-  entity_limit_user_interval: null
-  purge: none
-  purge_days: null
-  results_disabled: false
-  results_disabled_ignore: false
-  token_update: true
-access:
-  create:
-    roles:
-      - anonymous
-      - authenticated
-    users: {  }
-    permissions: {  }
-  view_any:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  update_any:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  delete_any:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  purge_any:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  view_own:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  update_own:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  delete_own:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  administer:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  test:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-  configuration:
-    roles: {  }
-    users: {  }
-    permissions: {  }
-handlers:
-  email:
-    id: email
-    label: Email
-    handler_id: email
-    status: true
-    conditions: {  }
-    weight: 0
-    settings:
-      states:
-        - completed
-      to_mail: _default
-      to_options: {  }
-      cc_mail: ''
-      cc_options: {  }
-      bcc_mail: ''
-      bcc_options: {  }
-      from_mail: _default
-      from_options: {  }
-      from_name: _default
-      subject: _default
-      body: '<a href="[webform_submission:update-url]">[webform_submission:update-url]</a>'
-      excluded_elements: {  }
-      ignore_access: false
-      exclude_empty: true
-      exclude_empty_checkbox: false
-      html: true
-      attachments: false
-      twig: false
-      theme_name: ''
-      debug: false
-      reply_to: ''
-      return_path: ''
-      sender_mail: ''
-      sender_name: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_element_title_display.inc b/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_element_title_display.inc
index e00498ee..af703781 100644
--- a/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_element_title_display.inc
+++ b/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_element_title_display.inc
@@ -80,6 +80,7 @@ function webform_test_test_element_title_display() {
       'before' => 'before',
       'after' => 'after',
       'inline' => 'inline',
+      'none' => 'none',
     ];
     if ($webform_element->isComposite() || $webform_element instanceof WebformManagedFileBase) {
       unset($title_displays['inline']);
diff --git a/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_form_long.inc b/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_form_long.inc
index 1d2612d1..46fbdff7 100644
--- a/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_form_long.inc
+++ b/modules/contrib/webform/tests/modules/webform_test/includes/webform_test.test_form_long.inc
@@ -14,7 +14,7 @@ use Drupal\webform\WebformInterface;
  *   A webform object.
  *
  * @return array
- *   An array containing long webform elements..
+ *   An array containing long webform elements.
  */
 function webform_test_test_form_long(WebformInterface $webform) {
   $length = (int) str_replace('test_form_long_', '', $webform->id());
diff --git a/modules/contrib/webform/tests/modules/webform_test/webform_test.info.yml b/modules/contrib/webform/tests/modules/webform_test/webform_test.info.yml
index 596bb724..e2d277a6 100644
--- a/modules/contrib/webform/tests/modules/webform_test/webform_test.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test/webform_test.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module tests'
 type: module
 description: 'Support module for webform that provides working examples for all supported features.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_ajax/webform_test_ajax.info.yml b/modules/contrib/webform/tests/modules/webform_test_ajax/webform_test_ajax.info.yml
index e1591ecf..7a61e2b4 100644
--- a/modules/contrib/webform/tests/modules/webform_test_ajax/webform_test_ajax.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_ajax/webform_test_ajax.info.yml
@@ -2,13 +2,12 @@ name: 'Webform module Ajax tests'
 type: module
 description: 'Support module for Webform module Ajax testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:block'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_alter_hooks/webform_test_alter_hooks.info.yml b/modules/contrib/webform/tests/modules/webform_test_alter_hooks/webform_test_alter_hooks.info.yml
index f620eba5..4ef106d1 100644
--- a/modules/contrib/webform/tests/modules/webform_test_alter_hooks/webform_test_alter_hooks.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_alter_hooks/webform_test_alter_hooks.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module alter hooks tests'
 type: module
 description: 'Support module for webform that tests form and element alter hooks.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_block_context/webform_test_block_context.info.yml b/modules/contrib/webform/tests/modules/webform_test_block_context/webform_test_block_context.info.yml
index f2306873..73bb2173 100644
--- a/modules/contrib/webform/tests/modules/webform_test_block_context/webform_test_block_context.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_block_context/webform_test_block_context.info.yml
@@ -2,13 +2,12 @@ name: 'Webform module block context tests'
 type: module
 description: 'Support module for Webform module block context testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:block'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_block_custom/webform_test_block_custom.info.yml b/modules/contrib/webform/tests/modules/webform_test_block_custom/webform_test_block_custom.info.yml
index 0926d38c..221a7f8c 100644
--- a/modules/contrib/webform/tests/modules/webform_test_block_custom/webform_test_block_custom.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_block_custom/webform_test_block_custom.info.yml
@@ -2,14 +2,13 @@ name: 'Webform module block custom tests'
 type: module
 description: 'Support module for Webform module block custom testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:block'
   - 'drupal:block_content'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_block_submission_limit/webform_test_block_submission_limit.info.yml b/modules/contrib/webform/tests/modules/webform_test_block_submission_limit/webform_test_block_submission_limit.info.yml
index 4b1ebebe..4a26860f 100644
--- a/modules/contrib/webform/tests/modules/webform_test_block_submission_limit/webform_test_block_submission_limit.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_block_submission_limit/webform_test_block_submission_limit.info.yml
@@ -2,13 +2,12 @@ name: 'Webform module block submission limit tests'
 type: module
 description: 'Support module for Webform module block submission limit testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:block'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_config_performance/webform_test_config_performance.info.yml b/modules/contrib/webform/tests/modules/webform_test_config_performance/webform_test_config_performance.info.yml
index d5e1d4eb..af5d73ea 100644
--- a/modules/contrib/webform/tests/modules/webform_test_config_performance/webform_test_config_performance.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_config_performance/webform_test_config_performance.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module config performance tests'
 type: module
 description: 'Test webform config performance by generating a 1000 webforms containing 100 elements.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_custom_properties/webform_test_custom_properties.info.yml b/modules/contrib/webform/tests/modules/webform_test_custom_properties/webform_test_custom_properties.info.yml
index 57894c8f..6ebe5276 100644
--- a/modules/contrib/webform/tests/modules/webform_test_custom_properties/webform_test_custom_properties.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_custom_properties/webform_test_custom_properties.info.yml
@@ -2,13 +2,12 @@ name: 'Webform module custom properties tests'
 type: module
 description: 'Support module for Webform module custom properties testing, that provides a working example of adding custom properties to elements.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
   - 'webform:webform_ui'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_comp_file_plugin.yml b/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_comp_file_plugin.yml
index 1720ca1e..6b01bdf5 100644
--- a/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_comp_file_plugin.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_comp_file_plugin.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_composite_plugin.yml b/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_composite_plugin.yml
index 9a0e2012..96fb4ac3 100644
--- a/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_composite_plugin.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_composite_plugin.yml
@@ -93,6 +93,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -140,6 +141,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_plugin.yml b/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_plugin.yml
index 46c54ae8..a80e0bb4 100644
--- a/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_plugin.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_element/config/install/webform.webform.test_element_plugin.yml
@@ -89,6 +89,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -136,6 +137,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_element/webform_test_element.info.yml b/modules/contrib/webform/tests/modules/webform_test_element/webform_test_element.info.yml
index c4cdfb62..1c05e949 100644
--- a/modules/contrib/webform/tests/modules/webform_test_element/webform_test_element.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_element/webform_test_element.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module element tests'
 type: module
 description: 'Support module for webform that provides element plugin tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_entity_reference/config/install/webform.webform.test_element_entity_reference_vs.yml b/modules/contrib/webform/tests/modules/webform_test_entity_reference/config/install/webform.webform.test_element_entity_reference_vs.yml
index 25aaf006..fe396ab8 100644
--- a/modules/contrib/webform/tests/modules/webform_test_entity_reference/config/install/webform.webform.test_element_entity_reference_vs.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_entity_reference/config/install/webform.webform.test_element_entity_reference_vs.yml
@@ -199,6 +199,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -246,6 +247,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_entity_reference/webform_test_entity_reference_views.info.yml b/modules/contrib/webform/tests/modules/webform_test_entity_reference/webform_test_entity_reference_views.info.yml
index 0f73180f..12244cd8 100644
--- a/modules/contrib/webform/tests/modules/webform_test_entity_reference/webform_test_entity_reference_views.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_entity_reference/webform_test_entity_reference_views.info.yml
@@ -2,15 +2,14 @@ name: 'Webform module entity reference tests'
 type: module
 description: 'Support module for Webform module entity reference testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:node'
   - 'drupal:user'
   - 'drupal:views'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_exporter/webform_test_exporter.info.yml b/modules/contrib/webform/tests/modules/webform_test_exporter/webform_test_exporter.info.yml
index d89a0347..fb21f514 100644
--- a/modules/contrib/webform/tests/modules/webform_test_exporter/webform_test_exporter.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_exporter/webform_test_exporter.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module exporter tests'
 type: module
 description: 'Support module for webform that provides exporter plugin tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_conditions.yml b/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_conditions.yml
index 7c04e2e4..c7107f8d 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_conditions.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_conditions.yml
@@ -89,6 +89,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -136,6 +137,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_test.yml b/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_test.yml
index 505e546e..7fda6e2e 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_test.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler/config/install/webform.webform.test_handler_test.yml
@@ -21,7 +21,7 @@ elements: |
     '#type': textfield
     '#title': 'Empty element'
     '#description': 'Entering any value will throw an error'
-  
+
 css: ''
 javascript: ''
 settings:
@@ -87,6 +87,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -134,6 +135,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler/src/Plugin/WebformHandler/TestWebformHandler.php b/modules/contrib/webform/tests/modules/webform_test_handler/src/Plugin/WebformHandler/TestWebformHandler.php
index ca543821..1d1eaa7c 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler/src/Plugin/WebformHandler/TestWebformHandler.php
+++ b/modules/contrib/webform/tests/modules/webform_test_handler/src/Plugin/WebformHandler/TestWebformHandler.php
@@ -2,7 +2,9 @@
 
 namespace Drupal\webform_test_handler\Plugin\WebformHandler;
 
+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\Plugin\WebformHandlerBase;
 use Drupal\webform\WebformInterface;
 use Drupal\webform\WebformSubmissionInterface;
@@ -59,6 +61,13 @@ class TestWebformHandler extends WebformHandlerBase {
     $this->displayMessage(__FUNCTION__);
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function alterElement(array &$element, FormStateInterface $form_state, array $context) {
+    $this->displayMessage(__FUNCTION__);
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -78,7 +87,8 @@ class TestWebformHandler extends WebformHandlerBase {
    */
   public function validateForm(array &$form, FormStateInterface $form_state, WebformSubmissionInterface $webform_submission) {
     $this->displayMessage(__FUNCTION__);
-    if ($value = $form_state->getValue('element')) {
+    $value = $form_state->getValue('element');
+    if ($value && !in_array($value, ['access_allowed', 'submission_access_denied', 'element_access_denied'])) {
       $form_state->setErrorByName('element', $this->t('The element must be empty. You entered %value.', ['%value' => $value]));
     }
   }
@@ -148,6 +158,21 @@ class TestWebformHandler extends WebformHandlerBase {
     $this->displayMessage(__FUNCTION__, $update ? 'update' : 'insert');
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function access(WebformSubmissionInterface $webform_submission, $operation, AccountInterface $account = NULL) {
+    $this->displayMessage(__FUNCTION__ . 'Submission');
+    $value = $webform_submission->getElementData('element');
+    if ($value === 'submission_access_denied') {
+      $access_result = AccessResult::forbidden();
+    }
+    else {
+      $access_result = parent::access($webform_submission, $operation, $account);
+    }
+    return $access_result->setCacheMaxAge(0);
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -177,6 +202,24 @@ class TestWebformHandler extends WebformHandlerBase {
     $this->displayMessage(__FUNCTION__);
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function accessElement(array &$element, $operation, AccountInterface $account = NULL) {
+    $this->displayMessage(__FUNCTION__);
+
+    $webform_submission = $this->getWebformSubmission();
+    if ($webform_submission
+      && $webform_submission->getElementData('element') === 'element_access_denied') {
+      $access_result = AccessResult::forbidden();
+    }
+    else {
+      $access_result = parent::accessElement($element, $operation, $account);
+    }
+
+    return $access_result->setCacheMaxAge(0);
+  }
+
   /**
    * {@inheritdoc}
    */
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler/webform_test_handler.info.yml b/modules/contrib/webform/tests/modules/webform_test_handler/webform_test_handler.info.yml
index f807e89d..ba927220 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler/webform_test_handler.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler/webform_test_handler.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module handler tests'
 type: module
 description: 'Support module for webform that provides handler plugin tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler_invoke_alter/webform_test_handler_invoke_alter.info.yml b/modules/contrib/webform/tests/modules/webform_test_handler_invoke_alter/webform_test_handler_invoke_alter.info.yml
index 40484d61..ba088453 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler_invoke_alter/webform_test_handler_invoke_alter.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler_invoke_alter/webform_test_handler_invoke_alter.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module handler invoke alter tests'
 type: module
 description: 'Support module for webform that provides handler invoke alter tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_get.yml b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_get.yml
index 8d8e2fab..c11e2b12 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_get.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_get.yml
@@ -37,7 +37,7 @@ elements: |
     '#title': 'Confirmation number'
     '#type': value
     '#value': '[webform:handler:remote_post:completed:confirmation_number]'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -103,6 +103,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -127,7 +128,7 @@ settings:
   confirmation_title: ''
   confirmation_message: |
     <p>Your confirmation number is [webform_submission:values:confirmation_number].</p>
-
+    
   confirmation_url: ''
   confirmation_attributes: {  }
   confirmation_back: true
@@ -152,6 +153,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -234,36 +236,36 @@ handlers:
         confirmation_number: confirmation_number
       custom_data: |
         custom_data: true
-
+        
       custom_options: |
         headers:
           custom_header: 'true'
-
+        
       debug: true
       completed_url: 'http://webform-test-handler-remote-post/completed'
       completed_custom_data: |
         custom_completed: true
-
+        
       updated_url: 'http://webform-test-handler-remote-post/updated'
       updated_custom_data: |
         custom_updated: true
-
+        
       deleted_url: 'http://webform-test-handler-remote-post/deleted'
       deleted_custom_data: |
         custom_deleted: true
-
+        
       draft_created_url: 'http://webform-test-handler-remote-post/draft_created'
       draft_created_custom_data: |
         custom_draft_created: true
-
+        
       draft_updated_url: 'http://webform-test-handler-remote-post/draft_updated'
       draft_updated_custom_data: |
         custom_draft_updated: true
-
+        
       converted_url: 'http://webform-test-handler-remote-post/converted'
       converted_custom_data: |
         custom_converted: true
-
+        
       message: ''
       messages: {  }
       error_url: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post.yml b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post.yml
index 556368e1..fcf9eddb 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post.yml
@@ -38,7 +38,7 @@ elements: |
     '#title': 'Confirmation number'
     '#type': value
     '#value': '[webform:handler:remote_post:completed:confirmation_number]'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -104,6 +104,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -128,7 +129,7 @@ settings:
   confirmation_title: ''
   confirmation_message: |
     <p>Your confirmation number is [webform_submission:values:confirmation_number].</p>
-
+    
   confirmation_url: ''
   confirmation_attributes: {  }
   confirmation_back: true
@@ -153,6 +154,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -235,37 +237,37 @@ handlers:
         confirmation_number: confirmation_number
       custom_data: |
         custom_data: true
-
+        
       custom_options: |
         headers:
           'Accept-Language': '[webform_submission:langcode]'
           custom_header: 'true'
-
+        
       debug: true
       completed_url: 'http://webform-test-handler-remote-post/completed'
       completed_custom_data: |
         custom_completed: true
-
+        
       updated_url: 'http://webform-test-handler-remote-post/updated'
       updated_custom_data: |
         custom_updated: true
-
+        
       deleted_url: 'http://webform-test-handler-remote-post/deleted'
       deleted_custom_data: |
         custom_deleted: true
-
+        
       draft_created_url: 'http://webform-test-handler-remote-post/draft_created'
       draft_created_custom_data: |
         custom_draft_created: true
-
+        
       draft_updated_url: 'http://webform-test-handler-remote-post/draft_updated'
       draft_updated_custom_data: |
         custom_draft_updated: true
-
+        
       converted_url: 'http://webform-test-handler-remote-post/converted'
       converted_custom_data: |
         custom_converted: true
-
+        
       message: ''
       messages:
         - code: 401
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post_file.yml b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post_file.yml
index bcd03cff..17d32751 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post_file.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_post_file.yml
@@ -26,7 +26,7 @@ elements: |
     '#required': true
     '#multiple': true
     '#file_extensions': txt
-
+  
 css: ''
 javascript: ''
 settings:
@@ -92,6 +92,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -116,7 +117,7 @@ settings:
   confirmation_title: ''
   confirmation_message: |
     <p>Your confirmation number is [webform_submission:values:confirmation_number].</p>
-
+    
   confirmation_url: ''
   confirmation_attributes: {  }
   confirmation_back: true
@@ -141,6 +142,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_put.yml b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_put.yml
index 32b7aad1..a94369b4 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_put.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/config/install/webform.webform.test_handler_remote_put.yml
@@ -37,7 +37,7 @@ elements: |
     '#title': 'Confirmation number'
     '#type': value
     '#value': '[webform:handler:remote_post:completed:confirmation_number]'
-
+  
 css: ''
 javascript: ''
 settings:
@@ -103,6 +103,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -127,7 +128,7 @@ settings:
   confirmation_title: ''
   confirmation_message: |
     <p>Your confirmation number is [webform_submission:values:confirmation_number].</p>
-
+    
   confirmation_url: ''
   confirmation_attributes: {  }
   confirmation_back: true
@@ -152,6 +153,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -234,36 +236,36 @@ handlers:
         confirmation_number: confirmation_number
       custom_data: |
         custom_data: true
-
+        
       custom_options: |
         headers:
           custom_header: 'true'
-
+        
       debug: true
       completed_url: 'http://webform-test-handler-remote-post/completed'
       completed_custom_data: |
         custom_completed: true
-
+        
       updated_url: 'http://webform-test-handler-remote-post/updated'
       updated_custom_data: |
         custom_updated: true
-
+        
       deleted_url: 'http://webform-test-handler-remote-post/deleted'
       deleted_custom_data: |
         custom_deleted: true
-
+        
       draft_created_url: 'http://webform-test-handler-remote-post/draft_created'
       draft_created_custom_data: |
         custom_draft_created: true
-
+        
       draft_updated_url: 'http://webform-test-handler-remote-post/draft_updated'
       draft_updated_custom_data: |
         custom_draft_updated: true
-
+        
       converted_url: 'http://webform-test-handler-remote-post/converted'
       converted_custom_data: |
         custom_converted: true
-
+        
       message: ''
       messages: {  }
       error_url: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/webform_test_handler_remote_post.info.yml b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/webform_test_handler_remote_post.info.yml
index 745e98cf..0910e1d5 100644
--- a/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/webform_test_handler_remote_post.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_handler_remote_post/webform_test_handler_remote_post.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module remote post tests'
 type: module
 description: 'Support module for Webform module remote post testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_markup/webform_test_markup.info.yml b/modules/contrib/webform/tests/modules/webform_test_markup/webform_test_markup.info.yml
index 3353325b..3c4aa277 100644
--- a/modules/contrib/webform/tests/modules/webform_test_markup/webform_test_markup.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_markup/webform_test_markup.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module markup tests'
 type: module
 description: 'Support module for markup tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_message_custom/webform_test_message_custom.info.yml b/modules/contrib/webform/tests/modules/webform_test_message_custom/webform_test_message_custom.info.yml
index 900405e1..fddf4338 100644
--- a/modules/contrib/webform/tests/modules/webform_test_message_custom/webform_test_message_custom.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_message_custom/webform_test_message_custom.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module custom message tests'
 type: module
 description: 'Support module for Webform module custom message testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_options/config/install/webform.webform.test_options.yml b/modules/contrib/webform/tests/modules/webform_test_options/config/install/webform.webform.test_options.yml
index 5893c726..64c0d814 100644
--- a/modules/contrib/webform/tests/modules/webform_test_options/config/install/webform.webform.test_options.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_options/config/install/webform.webform.test_options.yml
@@ -285,6 +285,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -332,6 +333,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_options/webform_test_options.info.yml b/modules/contrib/webform/tests/modules/webform_test_options/webform_test_options.info.yml
index 54f9ec78..27882319 100644
--- a/modules/contrib/webform/tests/modules/webform_test_options/webform_test_options.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_options/webform_test_options.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module options tests'
 type: module
 description: 'Support module for webform that provides options tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_paragraphs/webform_test_paragraphs.info.yml b/modules/contrib/webform/tests/modules/webform_test_paragraphs/webform_test_paragraphs.info.yml
index fcf35dc8..7c8f4965 100644
--- a/modules/contrib/webform/tests/modules/webform_test_paragraphs/webform_test_paragraphs.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_paragraphs/webform_test_paragraphs.info.yml
@@ -2,13 +2,12 @@ name: 'Webform module Paragraphs module tests'
 type: module
 description: 'Support module for Webform module Paragraphs module testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'paragraphs:paragraphs'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_rest/webform_test_rest.info.yml b/modules/contrib/webform/tests/modules/webform_test_rest/webform_test_rest.info.yml
index 0e8dec2f..40bd252b 100644
--- a/modules/contrib/webform/tests/modules/webform_test_rest/webform_test_rest.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_rest/webform_test_rest.info.yml
@@ -2,15 +2,14 @@ name: 'Webform module REST API tests'
 type: module
 description: 'Support module for Webform module REST API testing.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:hal'
   - 'drupal:rest'
   - 'drupal:serialization'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_submissions/config/install/webform.webform.test_submissions.yml b/modules/contrib/webform/tests/modules/webform_test_submissions/config/install/webform.webform.test_submissions.yml
index 82722fa0..46114431 100644
--- a/modules/contrib/webform/tests/modules/webform_test_submissions/config/install/webform.webform.test_submissions.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_submissions/config/install/webform.webform.test_submissions.yml
@@ -124,6 +124,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -171,6 +172,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
diff --git a/modules/contrib/webform/tests/modules/webform_test_submissions/webform_test_submissions.info.yml b/modules/contrib/webform/tests/modules/webform_test_submissions/webform_test_submissions.info.yml
index cd709383..2e596d2f 100644
--- a/modules/contrib/webform/tests/modules/webform_test_submissions/webform_test_submissions.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_submissions/webform_test_submissions.info.yml
@@ -2,13 +2,12 @@ name: 'Webform module submissions tests'
 type: module
 description: 'Support module for webform that provides a webform with submission tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:node'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_third_party_settings/webform_test_third_party_settings.info.yml b/modules/contrib/webform/tests/modules/webform_test_third_party_settings/webform_test_third_party_settings.info.yml
index 93756987..1bcac25d 100644
--- a/modules/contrib/webform/tests/modules/webform_test_third_party_settings/webform_test_third_party_settings.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_third_party_settings/webform_test_third_party_settings.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module third party settings tests'
 type: module
 description: 'Support module for Webform module that provides example of third party settings.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_translation/config/install/webform.webform.test_translation.yml b/modules/contrib/webform/tests/modules/webform_test_translation/config/install/webform.webform.test_translation.yml
index 304dd172..c6054d16 100644
--- a/modules/contrib/webform/tests/modules/webform_test_translation/config/install/webform.webform.test_translation.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_translation/config/install/webform.webform.test_translation.yml
@@ -128,6 +128,7 @@ settings:
   wizard_progress_pages: false
   wizard_progress_percentage: false
   wizard_progress_link: false
+  wizard_progress_states: false
   wizard_start_label: ''
   wizard_preview_link: false
   wizard_confirmation: true
@@ -175,6 +176,7 @@ settings:
   purge_days: null
   results_disabled: false
   results_disabled_ignore: false
+  token_view: false
   token_update: false
 access:
   create:
@@ -253,6 +255,7 @@ handlers:
       attachments: false
       twig: false
       theme_name: ''
+      parameters: {  }
       debug: false
       reply_to: ''
       return_path: ''
diff --git a/modules/contrib/webform/tests/modules/webform_test_translation/webform_test_translation.info.yml b/modules/contrib/webform/tests/modules/webform_test_translation/webform_test_translation.info.yml
index 98c49c69..d0f3de38 100644
--- a/modules/contrib/webform/tests/modules/webform_test_translation/webform_test_translation.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_translation/webform_test_translation.info.yml
@@ -2,15 +2,14 @@ name: 'Webform module translation tests'
 type: module
 description: 'Support module for Webform module translation testing that provides working examples for translating webforms.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:config_translation'
   - 'drupal:language'
   - 'drupal:locale'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_translation_lingotek/webform_test_translation_lingotek.info.yml b/modules/contrib/webform/tests/modules/webform_test_translation_lingotek/webform_test_translation_lingotek.info.yml
index ac0e4716..c42bda91 100644
--- a/modules/contrib/webform/tests/modules/webform_test_translation_lingotek/webform_test_translation_lingotek.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_translation_lingotek/webform_test_translation_lingotek.info.yml
@@ -2,7 +2,7 @@ name: 'Webform module translation lingotek tests'
 type: module
 description: 'Support module for Webform module translatation using Lingotek.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:config_translation'
   - 'drupal:language'
@@ -10,8 +10,7 @@ dependencies:
   - 'lingotek:lingotek'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_validate/webform_test_validate.info.yml b/modules/contrib/webform/tests/modules/webform_test_validate/webform_test_validate.info.yml
index a4792b9e..5205953a 100644
--- a/modules/contrib/webform/tests/modules/webform_test_validate/webform_test_validate.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_validate/webform_test_validate.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module validate tests'
 type: module
 description: 'Support module for webform that provides form validate hooks for form validate tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_views/webform_test_views.info.yml b/modules/contrib/webform/tests/modules/webform_test_views/webform_test_views.info.yml
index 4e28ca16..f52ec3d5 100644
--- a/modules/contrib/webform/tests/modules/webform_test_views/webform_test_views.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_views/webform_test_views.info.yml
@@ -2,15 +2,14 @@ name: 'Webform module Views tests'
 type: module
 description: 'Support module for Webform that provides working examples for Views integration.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'drupal:node'
   - 'drupal:user'
   - 'drupal:views'
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/modules/webform_test_wizard_custom/webform_test_wizard_custom.info.yml b/modules/contrib/webform/tests/modules/webform_test_wizard_custom/webform_test_wizard_custom.info.yml
index 1bf16a1b..b06b3ffe 100644
--- a/modules/contrib/webform/tests/modules/webform_test_wizard_custom/webform_test_wizard_custom.info.yml
+++ b/modules/contrib/webform/tests/modules/webform_test_wizard_custom/webform_test_wizard_custom.info.yml
@@ -2,12 +2,11 @@ name: 'Webform module wizard custom tests'
 type: module
 description: 'Support module for webform that provides form alter hook for wizard custom tests.'
 package: Testing
-# core: 8.x
+core: 8.x
 dependencies:
   - 'webform:webform'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/tests/src/Functional/WebformAssertLegacyTrait.php b/modules/contrib/webform/tests/src/Functional/WebformAssertLegacyTrait.php
deleted file mode 100644
index 05a6e00f..00000000
--- a/modules/contrib/webform/tests/src/Functional/WebformAssertLegacyTrait.php
+++ /dev/null
@@ -1,768 +0,0 @@
-<?php
-
-namespace Drupal\Tests\webform\Functional;
-
-use Behat\Mink\Element\NodeElement;
-use Behat\Mink\Exception\ExpectationException;
-use Behat\Mink\Selector\Xpath\Escaper;
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\Component\Utility\Xss;
-
-/**
- * Provides convenience methods for assertions in browser tests.
- *
- * Copies of legacy traits without deprecated warnings.
- *
- * @see \Drupal\KernelTests\AssertLegacyTrait
- * @see \Drupal\FunctionalTests\AssertLegacyTrait
- * @see http://blog.fclement.info/convert-simpletest-to-phpunit
- * @see https://www.drupal.org/node/2735005
- */
-trait WebformAssertLegacyTrait {
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assert()
-   */
-  protected function assert($actual, $message = '') {
-    parent::assertTrue((bool) $actual, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertTrue()
-   */
-  public static function assertTrue($actual, $message = '') {
-    if (is_bool($actual)) {
-      parent::assertTrue($actual, $message);
-    }
-    else {
-      parent::assertNotEmpty($actual, $message);
-    }
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertFalse()
-   */
-  public static function assertFalse($actual, $message = '') {
-    if (is_bool($actual)) {
-      parent::assertFalse($actual, $message);
-    }
-    else {
-      parent::assertEmpty($actual, $message);
-    }
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertEqual()
-   */
-  protected function assertEqual($expected, $actual, $message = '') {
-    $this->assertEquals($expected, $actual, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertNotEqual()
-   */
-  protected function assertNotEqual($expected, $actual, $message = '') {
-    $this->assertNotEquals($expected, $actual, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertIdentical()
-   */
-  protected function assertIdentical($expected, $actual, $message = '') {
-    $this->assertSame($expected, $actual, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertNotIdentical()
-   */
-  protected function assertNotIdentical($expected, $actual, $message = '') {
-    $this->assertNotSame($expected, $actual, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::assertIdenticalObject()
-   */
-  protected function assertIdenticalObject($expected, $actual, $message = '') {
-    // Note: ::assertSame checks whether its the same object. ::assertEquals
-    // though compares
-    $this->assertEquals($expected, $actual, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::pass()
-   */
-  protected function pass($message) {
-    $this->assertTrue(TRUE, $message);
-  }
-
-  /**
-   * @see \Drupal\simpletest\TestBase::verbose()
-   */
-  protected function verbose($message) {
-    if (in_array('--debug', $_SERVER['argv'], TRUE)) {
-      // Write directly to STDOUT to not produce unexpected test output.
-      // The STDOUT stream does not obey output buffering.
-      fwrite(STDOUT, $message . "\n");
-    }
-  }
-
-  /**
-   * Asserts that the element with the given CSS selector is present.
-   *
-   * @param string $css_selector
-   *   The CSS selector identifying the element to check.
-   */
-  protected function assertElementPresent($css_selector) {
-    $this->assertSession()->elementExists('css', $css_selector);
-  }
-
-  /**
-   * Asserts that the element with the given CSS selector is not present.
-   *
-   * @param string $css_selector
-   *   The CSS selector identifying the element to check.
-   */
-  protected function assertElementNotPresent($css_selector) {
-    $this->assertSession()->elementNotExists('css', $css_selector);
-  }
-
-  /**
-   * Passes if the page (with HTML stripped) contains the text.
-   *
-   * Note that stripping HTML tags also removes their attributes, such as
-   * the values of text fields.
-   *
-   * @param string $text
-   *   Plain text to look for.
-   */
-  protected function assertText($text) {
-    // Cast MarkupInterface to string.
-    $text = (string) $text;
-
-    $content_type = $this->getSession()->getResponseHeader('Content-type');
-    // In case of a Non-HTML response (example: XML) check the original
-    // response.
-    if (strpos($content_type, 'html') === FALSE) {
-      $this->assertSession()->responseContains($text);
-    }
-    else {
-      $this->assertTextHelper($text, FALSE);
-    }
-  }
-
-  /**
-   * Passes if the page (with HTML stripped) does not contains the text.
-   *
-   * Note that stripping HTML tags also removes their attributes, such as
-   * the values of text fields.
-   *
-   * @param string $text
-   *   Plain text to look for.
-   */
-  protected function assertNoText($text) {
-    // Cast MarkupInterface to string.
-    $text = (string) $text;
-
-    $content_type = $this->getSession()->getResponseHeader('Content-type');
-    // In case of a Non-HTML response (example: XML) check the original
-    // response.
-    if (strpos($content_type, 'html') === FALSE) {
-      $this->assertSession()->responseNotContains($text);
-    }
-    else {
-      $this->assertTextHelper($text);
-    }
-  }
-
-  /**
-   * Helper for assertText and assertNoText.
-   *
-   * @param string $text
-   *   Plain text to look for.
-   * @param bool $not_exists
-   *   (optional) TRUE if this text should not exist, FALSE if it should.
-   *   Defaults to TRUE.
-   *
-   * @return bool
-   *   TRUE on pass, FALSE on fail.
-   */
-  protected function assertTextHelper($text, $not_exists = TRUE) {
-    $args = ['@text' => $text];
-    $message = $not_exists ? new FormattableMarkup('"@text" not found', $args) : new FormattableMarkup('"@text" found', $args);
-
-    $raw_content = $this->getSession()->getPage()->getContent();
-    // Trying to simulate what the user sees, given that it removes all text
-    // inside the head tags, removes inline Javascript, fix all HTML entities,
-    // removes dangerous protocols and filtering out all HTML tags, as they are
-    // not visible in a normal browser.
-    $raw_content = preg_replace('@<head>(.+?)</head>@si', '', $raw_content);
-    $page_text = Xss::filter($raw_content, []);
-
-    $actual = $not_exists == (strpos($page_text, (string) $text) === FALSE);
-    $this->assertTrue($actual, $message);
-
-    return $actual;
-  }
-
-  /**
-   * Passes if the text is found ONLY ONCE on the text version of the page.
-   *
-   * The text version is the equivalent of what a user would see when viewing
-   * through a web browser. In other words the HTML has been filtered out of
-   * the contents.
-   *
-   * @param string|\Drupal\Component\Render\MarkupInterface $text
-   *   Plain text to look for.
-   * @param string $message
-   *   (optional) A message to display with the assertion. Do not translate
-   *   messages with t(). If left blank, a default message will be displayed.
-   */
-  protected function assertUniqueText($text, $message = NULL) {
-    // Cast MarkupInterface objects to string.
-    $text = (string) $text;
-
-    $message = $message ?: "'$text' found only once on the page";
-    $page_text = $this->getSession()->getPage()->getText();
-    $nr_found = substr_count($page_text, $text);
-    $this->assertSame(1, $nr_found, $message);
-  }
-
-  /**
-   * Passes if the text is found MORE THAN ONCE on the text version of the page.
-   *
-   * The text version is the equivalent of what a user would see when viewing
-   * through a web browser. In other words the HTML has been filtered out of
-   * the contents.
-   *
-   * @param string|\Drupal\Component\Render\MarkupInterface $text
-   *   Plain text to look for.
-   * @param string $message
-   *   (optional) A message to display with the assertion. Do not translate
-   *   messages with t(). If left blank, a default message will be displayed.
-   */
-  protected function assertNoUniqueText($text, $message = '') {
-    // Cast MarkupInterface objects to string.
-    $text = (string) $text;
-
-    $message = $message ?: "'$text' found more than once on the page";
-    $page_text = $this->getSession()->getPage()->getText();
-    $nr_found = substr_count($page_text, $text);
-    $this->assertGreaterThan(1, $nr_found, $message);
-  }
-
-  /**
-   * Asserts the page responds with the specified response code.
-   *
-   * @param int $code
-   *   Response code. For example 200 is a successful page request. For a list
-   *   of all codes see http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html.
-   */
-  protected function assertResponse($code) {
-    $this->assertSession()->statusCodeEquals($code);
-  }
-
-  /**
-   * Asserts that a field exists with the given name and value.
-   *
-   * @param string $name
-   *   Name of field to assert.
-   * @param string $value
-   *   (optional) Value of the field to assert. You may pass in NULL (default)
-   *   to skip checking the actual value, while still checking that the field
-   *   exists.
-   */
-  protected function assertFieldByName($name, $value = NULL) {
-    $this->assertFieldByXPath($this->constructFieldXpath('name', $name), $value);
-  }
-
-  /**
-   * Asserts that a field does not exist with the given name and value.
-   *
-   * @param string $name
-   *   Name of field to assert.
-   * @param string $value
-   *   (optional) Value for the field, to assert that the field's value on the
-   *   page does not match it. You may pass in NULL to skip checking the
-   *   value, while still checking that the field does not exist. However, the
-   *   default value ('') asserts that the field value is not an empty string.
-   */
-  protected function assertNoFieldByName($name, $value = '') {
-    $this->assertNoFieldByXPath($this->constructFieldXpath('name', $name), $value);
-  }
-
-  /**
-   * Asserts that a field exists with the given ID and value.
-   *
-   * @param string $id
-   *   ID of field to assert.
-   * @param string|\Drupal\Component\Render\MarkupInterface $value
-   *   (optional) Value for the field to assert. You may pass in NULL to skip
-   *   checking the value, while still checking that the field exists.
-   *   However, the default value ('') asserts that the field value is an empty
-   *   string.
-   *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
-   */
-  protected function assertFieldById($id, $value = '') {
-    $this->assertFieldByXPath($this->constructFieldXpath('id', $id), $value);
-  }
-
-  /**
-   * Asserts that a field exists with the given name or ID.
-   *
-   * @param string $field
-   *   Name or ID of field to assert.
-   */
-  protected function assertField($field) {
-    $this->assertFieldByXPath($this->constructFieldXpath('name', $field) . '|' . $this->constructFieldXpath('id', $field));
-  }
-
-  /**
-   * Asserts that a field does NOT exist with the given name or ID.
-   *
-   * @param string $field
-   *   Name or ID of field to assert.
-   */
-  protected function assertNoField($field) {
-    $this->assertNoFieldByXPath($this->constructFieldXpath('name', $field) . '|' . $this->constructFieldXpath('id', $field));
-  }
-
-  /**
-   * Passes if the raw text IS found on the loaded page, fail otherwise.
-   *
-   * Raw text refers to the raw HTML that the page generated.
-   *
-   * @param string $raw
-   *   Raw (HTML) string to look for.
-   */
-  protected function assertRaw($raw) {
-    $this->assertSession()->responseContains($raw);
-  }
-
-  /**
-   * Passes if the raw text IS not found on the loaded page, fail otherwise.
-   *
-   * Raw text refers to the raw HTML that the page generated.
-   *
-   * @param string $raw
-   *   Raw (HTML) string to look for.
-   */
-  protected function assertNoRaw($raw) {
-    $this->assertSession()->responseNotContains($raw);
-  }
-
-  /**
-   * Pass if the page title is the given string.
-   *
-   * @param string $expected_title
-   *   The string the page title should be.
-   */
-  protected function assertTitle($expected_title) {
-    // Cast MarkupInterface to string.
-    $expected_title = (string) $expected_title;
-    return $this->assertSession()->titleEquals($expected_title);
-  }
-
-  /**
-   * Passes if a link with the specified label is found.
-   *
-   * An optional link index may be passed.
-   *
-   * @param string|\Drupal\Component\Render\MarkupInterface $label
-   *   Text between the anchor tags.
-   * @param int $index
-   *   Link position counting from zero.
-   */
-  protected function assertLink($label, $index = 0) {
-    return $this->assertSession()->linkExists($label, $index);
-  }
-
-  /**
-   * Passes if a link with the specified label is not found.
-   *
-   * @param string|\Drupal\Component\Render\MarkupInterface $label
-   *   Text between the anchor tags.
-   */
-  protected function assertNoLink($label) {
-    return $this->assertSession()->linkNotExists($label);
-  }
-
-  /**
-   * Passes if a link containing a given href (part) is found.
-   *
-   * @param string $href
-   *   The full or partial value of the 'href' attribute of the anchor tag.
-   * @param int $index
-   *   Link position counting from zero.
-   */
-  protected function assertLinkByHref($href, $index = 0) {
-    $this->assertSession()->linkByHrefExists($href, $index);
-  }
-
-  /**
-   * Passes if a link containing a given href (part) is not found.
-   *
-   * @param string $href
-   *   The full or partial value of the 'href' attribute of the anchor tag.
-   */
-  protected function assertNoLinkByHref($href) {
-    $this->assertSession()->linkByHrefNotExists($href);
-  }
-
-  /**
-   * Asserts that a field does not exist with the given ID and value.
-   *
-   * @param string $id
-   *   ID of field to assert.
-   * @param string $value
-   *   (optional) Value for the field, to assert that the field's value on the
-   *   page doesn't match it. You may pass in NULL to skip checking the value,
-   *   while still checking that the field doesn't exist. However, the default
-   *   value ('') asserts that the field value is not an empty string.
-   *
-   * @throws \Behat\Mink\Exception\ExpectationException
-   */
-  protected function assertNoFieldById($id, $value = '') {
-    $this->assertNoFieldByXPath($this->constructFieldXpath('id', $id), $value);
-  }
-
-  /**
-   * Passes if the internal browser's URL matches the given path.
-   *
-   * @param \Drupal\Core\Url|string $path
-   *   The expected system path or URL.
-   */
-  protected function assertUrl($path) {
-    $this->assertSession()->addressEquals($path);
-  }
-
-  /**
-   * Asserts that a select option in the current page exists.
-   *
-   * @param string $id
-   *   ID of select field to assert.
-   * @param string $option
-   *   Option to assert.
-   */
-  protected function assertOption($id, $option) {
-    return $this->assertSession()->optionExists($id, $option);
-  }
-
-  /**
-   * Asserts that a select option with the visible text exists.
-   *
-   * @param string $id
-   *   The ID of the select field to assert.
-   * @param string $text
-   *   The text for the option tag to assert.
-   */
-  protected function assertOptionByText($id, $text) {
-    return $this->assertSession()->optionExists($id, $text);
-  }
-
-  /**
-   * Asserts that a select option does NOT exist in the current page.
-   *
-   * @param string $id
-   *   ID of select field to assert.
-   * @param string $option
-   *   Option to assert.
-   */
-  protected function assertNoOption($id, $option) {
-    return $this->assertSession()->optionNotExists($id, $option);
-  }
-
-  /**
-   * Asserts that a select option in the current page is checked.
-   *
-   * @param string $id
-   *   ID of select field to assert.
-   * @param string $option
-   *   Option to assert.
-   * @param string $message
-   *   (optional) A message to display with the assertion. Do not translate
-   *   messages with t(). If left blank, a default message will be displayed.
-   */
-  protected function assertOptionSelected($id, $option, $message = NULL) {
-    $option_field = $this->assertSession()->optionExists($id, $option);
-    $message = $message ?: "Option $option for field $id is selected.";
-    $this->assertTrue($option_field->hasAttribute('selected'), $message);
-  }
-
-  /**
-   * Asserts that a checkbox field in the current page is checked.
-   *
-   * @param string $id
-   *   ID of field to assert.
-   */
-  protected function assertFieldChecked($id) {
-    $this->assertSession()->checkboxChecked($id);
-  }
-
-  /**
-   * Asserts that a checkbox field in the current page is not checked.
-   *
-   * @param string $id
-   *   ID of field to assert.
-   */
-  protected function assertNoFieldChecked($id) {
-    $this->assertSession()->checkboxNotChecked($id);
-  }
-
-  /**
-   * Asserts that a field exists in the current page by the given XPath.
-   *
-   * @param string $xpath
-   *   XPath used to find the field.
-   * @param string $value
-   *   (optional) Value of the field to assert. You may pass in NULL (default)
-   *   to skip checking the actual value, while still checking that the field
-   *   exists.
-   * @param string $message
-   *   (optional) A message to display with the assertion. Do not translate
-   *   messages with t().
-   */
-  protected function assertFieldByXPath($xpath, $value = NULL, $message = '') {
-    $fields = $this->xpath($xpath);
-
-    $this->assertFieldsByValue($fields, $value, $message);
-  }
-
-  /**
-   * Asserts that a field does not exist or its value does not match, by XPath.
-   *
-   * @param string $xpath
-   *   XPath used to find the field.
-   * @param string $value
-   *   (optional) Value of the field, to assert that the field's value on the
-   *   page does not match it.
-   * @param string $message
-   *   (optional) A message to display with the assertion. Do not translate
-   *   messages with t().
-   *
-   * @throws \Behat\Mink\Exception\ExpectationException
-   */
-  protected function assertNoFieldByXPath($xpath, $value = NULL, $message = '') {
-    $fields = $this->xpath($xpath);
-
-    if (!empty($fields)) {
-      if (isset($value)) {
-        $found = FALSE;
-        try {
-          $this->assertFieldsByValue($fields, $value);
-          $found = TRUE;
-        }
-        catch (\Exception $e) {
-        }
-
-        if ($found) {
-          throw new ExpectationException(sprintf('The field resulting from %s was found with the provided value %s.', $xpath, $value), $this->getSession()->getDriver());
-        }
-      }
-      else {
-        throw new ExpectationException(sprintf('The field resulting from %s was found.', $xpath), $this->getSession()->getDriver());
-      }
-    }
-  }
-
-  /**
-   * Asserts that a field exists in the current page with a given Xpath result.
-   *
-   * @param \Behat\Mink\Element\NodeElement[] $fields
-   *   Xml elements.
-   * @param string $value
-   *   (optional) Value of the field to assert. You may pass in NULL (default) to skip
-   *   checking the actual value, while still checking that the field exists.
-   * @param string $message
-   *   (optional) A message to display with the assertion. Do not translate
-   *   messages with t().
-   */
-  protected function assertFieldsByValue($fields, $value = NULL, $message = '') {
-    // If value specified then check array for match.
-    $found = TRUE;
-    if (isset($value)) {
-      $found = FALSE;
-      if ($fields) {
-        foreach ($fields as $field) {
-          if ($field->getAttribute('type') == 'checkbox') {
-            if (is_bool($value)) {
-              $found = $field->isChecked() == $value;
-            }
-            else {
-              $found = TRUE;
-            }
-          }
-          elseif ($field->getAttribute('value') == $value) {
-            // Input element with correct value.
-            $found = TRUE;
-          }
-          elseif ($field->find('xpath', '//option[@value = ' . (new Escaper())->escapeLiteral($value) . ' and @selected = "selected"]')) {
-            // Select element with an option.
-            $found = TRUE;
-          }
-          elseif ($field->getTagName() === 'textarea' && $field->getValue() == $value) {
-            // Text area with correct text. Use getValue() here because
-            // getText() would remove any newlines in the value.
-            $found = TRUE;
-          }
-          elseif ($field->getTagName() !== 'input' && $field->getText() == $value) {
-            $found = TRUE;
-          }
-        }
-      }
-    }
-    $this->assertTrue($fields && $found, $message);
-  }
-
-  /**
-   * Passes if the raw text IS found escaped on the loaded page, fail otherwise.
-   *
-   * Raw text refers to the raw HTML that the page generated.
-   *
-   * @param string $raw
-   *   Raw (HTML) string to look for.
-   */
-  protected function assertEscaped($raw) {
-    $this->assertSession()->assertEscaped($raw);
-  }
-
-  /**
-   * Passes if the raw text is not found escaped on the loaded page.
-   *
-   * Raw text refers to the raw HTML that the page generated.
-   *
-   * @param string $raw
-   *   Raw (HTML) string to look for.
-   */
-  protected function assertNoEscaped($raw) {
-    $this->assertSession()->assertNoEscaped($raw);
-  }
-
-  /**
-   * Triggers a pass if the Perl regex pattern is found in the raw content.
-   *
-   * @param string $pattern
-   *   Perl regex to look for including the regex delimiters.
-   */
-  protected function assertPattern($pattern) {
-    $this->assertSession()->responseMatches($pattern);
-  }
-
-  /**
-   * Triggers a pass if the Perl regex pattern is not found in the raw content.
-   *
-   * @param string $pattern
-   *   Perl regex to look for including the regex delimiters.
-   *
-   * @see https://www.drupal.org/node/2864262
-   */
-  protected function assertNoPattern($pattern) {
-    $this->assertSession()->responseNotMatches($pattern);
-  }
-
-  /**
-   * Asserts whether an expected cache tag was present in the last response.
-   *
-   * @param string $expected_cache_tag
-   *   The expected cache tag.
-   */
-  protected function assertCacheTag($expected_cache_tag) {
-    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', $expected_cache_tag);
-  }
-
-  /**
-   * Asserts whether an expected cache tag was absent in the last response.
-   *
-   * @param string $cache_tag
-   *   The cache tag to check.
-   *
-   * @see https://www.drupal.org/node/2864029
-   */
-  protected function assertNoCacheTag($cache_tag) {
-    $this->assertSession()->responseHeaderNotContains('X-Drupal-Cache-Tags', $cache_tag);
-  }
-
-  /**
-   * Checks that current response header equals value.
-   *
-   * @param string $name
-   *   Name of header to assert.
-   * @param string $value
-   *   Value of the header to assert.
-   */
-  protected function assertHeader($name, $value) {
-    $this->assertSession()->responseHeaderEquals($name, $value);
-  }
-
-  /**
-   * Returns WebAssert object.
-   *
-   * @param string $name
-   *   (optional) Name of the session. Defaults to the active session.
-   *
-   * @return \Drupal\Tests\WebAssert
-   *   A new web-assert option for asserting the presence of elements with.
-   */
-  abstract public function assertSession($name = NULL);
-
-  /**
-   * Builds an XPath query.
-   *
-   * Builds an XPath query by replacing placeholders in the query by the value
-   * of the arguments.
-   *
-   * XPath 1.0 (the version supported by libxml2, the underlying XML library
-   * used by PHP) doesn't support any form of quotation. This function
-   * simplifies the building of XPath expression.
-   *
-   * @param string $xpath
-   *   An XPath query, possibly with placeholders in the form ':name'.
-   * @param array $args
-   *   An array of arguments with keys in the form ':name' matching the
-   *   placeholders in the query. The values may be either strings or numeric
-   *   values.
-   *
-   * @return string
-   *   An XPath query with arguments replaced.
-   */
-  protected function buildXPathQuery($xpath, array $args = []) {
-    return $this->assertSession()->buildXPathQuery($xpath, $args);
-  }
-
-  /**
-   * Helper: Constructs an XPath for the given set of attributes and value.
-   *
-   * @param string $attribute
-   *   Field attributes.
-   * @param string $value
-   *   Value of field.
-   *
-   * @return string
-   *   XPath for specified values.
-   */
-  protected function constructFieldXpath($attribute, $value) {
-    $xpath = '//textarea[@' . $attribute . '=:value]|//input[@' . $attribute . '=:value]|//select[@' . $attribute . '=:value]';
-    return $this->buildXPathQuery($xpath, [':value' => $value]);
-  }
-
-  /**
-   * Gets the current raw content.
-   */
-  protected function getRawContent() {
-    return $this->getSession()->getPage()->getContent();
-  }
-
-  /**
-   * Get all option elements, including nested options, in a select.
-   *
-   * @param \Behat\Mink\Element\NodeElement $element
-   *   The element for which to get the options.
-   *
-   * @return \Behat\Mink\Element\NodeElement[]
-   *   Option elements in select.
-   */
-  protected function getAllOptions(NodeElement $element) {
-    return $element->findAll('xpath', '//option');
-  }
-
-}
diff --git a/modules/contrib/webform/tests/src/Functional/WebformBrowserTestBase.php b/modules/contrib/webform/tests/src/Functional/WebformBrowserTestBase.php
index 9651fbdd..05a61acb 100644
--- a/modules/contrib/webform/tests/src/Functional/WebformBrowserTestBase.php
+++ b/modules/contrib/webform/tests/src/Functional/WebformBrowserTestBase.php
@@ -2,18 +2,10 @@
 
 namespace Drupal\Tests\webform\Functional;
 
-use Drupal\Component\Render\FormattableMarkup;
-use Drupal\Component\Utility\UrlHelper;
-use Drupal\Core\Config\FileStorage;
-use Drupal\Core\Language\LanguageInterface;
-use Drupal\Core\Serialization\Yaml;
 use Drupal\Core\Test\AssertMailTrait;
-use Drupal\filter\Entity\FilterFormat;
 use Drupal\Tests\BrowserTestBase;
-use Drupal\taxonomy\Entity\Term;
-use Drupal\taxonomy\Entity\Vocabulary;
-use Drupal\webform\WebformInterface;
-use Drupal\webform\Entity\Webform;
+use Drupal\Tests\webform\Traits\WebformBrowserTestTrait;
+use Drupal\Tests\webform\Traits\WebformAssertLegacyTrait;
 
 /**
  * Defines an abstract test base for webform tests.
@@ -21,6 +13,7 @@ use Drupal\webform\Entity\Webform;
 abstract class WebformBrowserTestBase extends BrowserTestBase {
 
   use AssertMailTrait;
+  use WebformBrowserTestTrait;
   use WebformAssertLegacyTrait;
 
   /**
@@ -53,423 +46,4 @@ abstract class WebformBrowserTestBase extends BrowserTestBase {
     parent::tearDown();
   }
 
-  /****************************************************************************/
-  // Block.
-  /****************************************************************************/
-
-  /**
-   * Place breadcrumb page, tasks, and actions.
-   */
-  protected function placeBlocks() {
-    $this->drupalPlaceBlock('system_breadcrumb_block');
-    $this->drupalPlaceBlock('page_title_block');
-    $this->drupalPlaceBlock('local_tasks_block');
-    $this->drupalPlaceBlock('local_actions_block');
-  }
-
-  /**
-   * Place webform test module blocks.
-   *
-   * @param string $module_name
-   *   Test module name.
-   */
-  protected function placeWebformBlocks($module_name) {
-    $config_directory = drupal_get_path('module', 'webform') . '/tests/modules/' . $module_name . '/config';
-    $config_files = file_scan_directory($config_directory, '/block\..*/');
-    foreach ($config_files as $config_file) {
-      $data = Yaml::decode(file_get_contents($config_file->uri));
-      $plugin_id = $data['plugin'];
-      $settings = $data['settings'];
-      unset($settings['id']);
-      $this->drupalPlaceBlock($plugin_id, $settings);
-    }
-  }
-
-  /****************************************************************************/
-  // Filter.
-  /****************************************************************************/
-
-  /**
-   * Basic HTML filter format.
-   *
-   * @var \Drupal\filter\FilterFormatInterface
-   */
-  protected $basicHtmlFilter;
-
-  /**
-   * Full HTML filter format.
-   *
-   * @var \Drupal\filter\FilterFormatInterface
-   */
-  protected $fullHtmlFilter;
-
-  /**
-   * Create basic HTML filter format.
-   */
-  protected function createFilters() {
-    $this->basicHtmlFilter = FilterFormat::create([
-      'format' => 'basic_html',
-      'name' => 'Basic HTML',
-      'filters' => [
-        'filter_html' => [
-          'status' => 1,
-          'settings' => [
-            'allowed_html' => '<p> <br> <strong> <a> <em>',
-          ],
-        ],
-      ],
-    ]);
-    $this->basicHtmlFilter->save();
-
-    $this->fullHtmlFilter = FilterFormat::create([
-      'format' => 'full_html',
-      'name' => 'Full HTML',
-    ]);
-    $this->fullHtmlFilter->save();
-  }
-
-  /****************************************************************************/
-  // Taxonomy.
-  /****************************************************************************/
-
-  /**
-   * Create the 'tags' taxonomy vocabulary.
-   */
-  protected function createTags() {
-    $vocabulary = Vocabulary::create([
-      'name' => 'Tags',
-      'vid' => 'tags',
-      'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-    ]);
-    $vocabulary->save();
-    for ($i = 1; $i <= 3; $i++) {
-      $parent_term = Term::create([
-        'name' => "Parent $i",
-        'vid' => 'tags',
-        'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-      ]);
-      $parent_term->save();
-      for ($x = 1; $x <= 3; $x++) {
-        $child_term = Term::create([
-          'name' => "Parent $i: Child $x",
-          'parent' => $parent_term->id(),
-          'vid' => 'tags',
-          'langcode' => LanguageInterface::LANGCODE_NOT_SPECIFIED,
-        ]);
-        $child_term->save();
-      }
-    }
-  }
-
-  /****************************************************************************/
-  // Webform.
-  /****************************************************************************/
-
-  /**
-   * Lazy load a test webforms.
-   *
-   * @param array $ids
-   *   Webform ids.
-   */
-  protected function loadWebforms(array $ids) {
-    foreach ($ids as $id) {
-      $this->loadWebform($id);
-    }
-    $this->pass(new FormattableMarkup('Loaded webforms: %webforms.', [
-      '%webforms' => implode(', ', $ids),
-    ]));
-  }
-
-  /**
-   * Lazy load a test webform.
-   *
-   * @param string $id
-   *   Webform id.
-   *
-   * @return \Drupal\webform\WebformInterface|null
-   *   A webform.
-   *
-   * @see \Drupal\views\Tests\ViewTestData::createTestViews
-   */
-  protected function loadWebform($id) {
-    $storage = \Drupal::entityTypeManager()->getStorage('webform');
-    if ($webform = $storage->load($id)) {
-      return $webform;
-    }
-    else {
-      $config_name = 'webform.webform.' . $id;
-      if (strpos($id, 'test_') === 0) {
-        $config_directory = drupal_get_path('module', 'webform') . '/tests/modules/webform_test/config/install';
-      }
-      elseif (strpos($id, 'example_') === 0) {
-        $config_directory = drupal_get_path('module', 'webform') . '/modules/webform_examples/config/install';
-      }
-      elseif (strpos($id, 'template_') === 0) {
-        $config_directory = drupal_get_path('module', 'webform') . '/modules/webform_templates/config/install';
-      }
-      else {
-        throw new \Exception("Webform $id not valid");
-      }
-
-      if (!file_exists("$config_directory/$config_name.yml")) {
-        throw new \Exception("Webform $id does not exist in $config_directory");
-      }
-
-      $file_storage = new FileStorage($config_directory);
-      $values = $file_storage->read($config_name);
-      $webform = $storage->create($values);
-      $webform->save();
-      return $webform;
-    }
-  }
-
-  /**
-   * Create a webform.
-   *
-   * @param array|null $values
-   *   (optional) Array of values.
-   * @param array|null $elements
-   *   (optional) Array of elements.
-   * @param array $settings
-   *   (optional) Webform settings.
-   *
-   * @return \Drupal\webform\WebformInterface
-   *   A webform.
-   */
-  protected function createWebform($values = [], array $elements = [], array $settings = []) {
-    // Create new webform.
-    $id = $this->randomMachineName(8);
-    $webform = Webform::create($values + [
-      'langcode' => 'en',
-      'status' => WebformInterface::STATUS_OPEN,
-      'id' => $id,
-      'title' => $id,
-      'elements' => Yaml::encode($elements),
-      'settings' => $settings + Webform::getDefaultSettings(),
-    ]);
-    $webform->save();
-    return $webform;
-  }
-
-  /****************************************************************************/
-  // Submission.
-  /****************************************************************************/
-
-  /**
-   * Post a new submission to a webform.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   A webform.
-   * @param array $edit
-   *   Submission values.
-   * @param string $submit
-   *   Value of the submit button whose click is to be emulated.
-   * @param array $options
-   *   Options to be forwarded to the url generator.
-   *
-   * @return int
-   *   The created submission's sid.
-   */
-  protected function postSubmission(WebformInterface $webform, array $edit = [], $submit = NULL, array $options = []) {
-    $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('webform/' . $webform->id(), $edit, $submit, $options);
-    return $this->getLastSubmissionId($webform);
-  }
-
-  /**
-   * Post a new test submission to a webform.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   A webform.
-   * @param array $edit
-   *   Submission values.
-   * @param string $submit
-   *   Value of the submit button whose click is to be emulated.
-   * @param array $options
-   *   Options to be forwarded to the url generator.
-   *
-   * @return int
-   *   The created test submission's sid.
-   */
-  protected function postSubmissionTest(WebformInterface $webform, array $edit = [], $submit = NULL, array $options = []) {
-    $submit = $this->getWebformSubmitButtonLabel($webform, $submit);
-    $this->drupalPostForm('webform/' . $webform->id() . '/test', $edit, $submit, $options);
-    return $this->getLastSubmissionId($webform);
-  }
-
-  /****************************************************************************/
-  // Submission.
-  /****************************************************************************/
-
-  /**
-   * Load the specified webform submission from the storage.
-   *
-   * @param int $sid
-   *   The submission identifier.
-   *
-   * @return \Drupal\webform\WebformSubmissionInterface
-   *   The loaded webform submission.
-   */
-  protected function loadSubmission($sid) {
-    /** @var \Drupal\webform\WebformSubmissionStorage $storage */
-    $storage = $this->container->get('entity_type.manager')->getStorage('webform_submission');
-    $storage->resetCache([$sid]);
-    return $storage->load($sid);
-  }
-
-  /**
-   * Purge all submission before the webform.module is uninstalled.
-   */
-  protected function purgeSubmissions() {
-    \Drupal::database()->query('DELETE FROM {webform_submission}');
-  }
-
-  /**
-   * Get a webform's submit button label.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   A webform.
-   * @param string $submit
-   *   Value of the submit button whose click is to be emulated.
-   *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup|string
-   *   The webform's submit button label.
-   */
-  protected function getWebformSubmitButtonLabel(WebformInterface $webform, $submit = NULL) {
-    if ($submit) {
-      return $submit;
-    }
-
-    $actions_element = $webform->getElement('actions');
-    if ($actions_element && isset($actions_element['#submit__label'])) {
-      return $actions_element['#submit__label'];
-    }
-
-    return t('Submit');
-  }
-
-  /**
-   * Get the last submission id.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   A webform.
-   *
-   * @return int|null
-   *   The last submission id. NULL if saving of results is disabled.
-   */
-  protected function getLastSubmissionId(WebformInterface $webform) {
-    if ($webform->getSetting('results_disabled')) {
-      return NULL;
-    }
-
-    // Get submission sid.
-    $url = UrlHelper::parse($this->getUrl());
-    if (isset($url['query']['sid'])) {
-      return $url['query']['sid'];
-    }
-    else {
-      $entity_ids = $this->container->get('entity_type.manager')->getStorage('webform_submission')->getQuery()
-        ->sort('sid', 'DESC')
-        ->condition('webform_id', $webform->id())
-        ->accessCheck(FALSE)
-        ->execute();
-      return reset($entity_ids);
-    }
-  }
-
-  /****************************************************************************/
-  // Export.
-  /****************************************************************************/
-
-  /**
-   * Request a webform results export CSV.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   A webform.
-   * @param array $options
-   *   An associative array of export options.
-   */
-  protected function getExport(WebformInterface $webform, array $options = []) {
-    /** @var \Drupal\webform\WebformSubmissionExporterInterface $exporter */
-    $exporter = \Drupal::service('webform_submission.exporter');
-    $options += $exporter->getDefaultExportOptions();
-    $this->drupalGet('/admin/structure/webform/manage/' . $webform->id() . '/results/download', ['query' => $options]);
-  }
-
-  /**
-   * Get webform export columns.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   A webform.
-   *
-   * @return array
-   *   An array of exportable columns.
-   */
-  protected function getExportColumns(WebformInterface $webform) {
-    /** @var \Drupal\webform\WebformSubmissionStorageInterface $submission_storage */
-    $submission_storage = \Drupal::entityTypeManager()->getStorage('webform_submission');
-    $field_definitions = $submission_storage->getFieldDefinitions();
-    $field_definitions = $submission_storage->checkFieldDefinitionAccess($webform, $field_definitions);
-    $elements = $webform->getElementsInitializedAndFlattened();
-    $columns = array_merge(array_keys($field_definitions), array_keys($elements));
-    return array_combine($columns, $columns);
-  }
-
-  /****************************************************************************/
-  // Email.
-  /****************************************************************************/
-
-  /**
-   * Gets that last email sent during the currently running test case.
-   *
-   * @return array
-   *   An array containing the last email message captured during the
-   *   current test.
-   */
-  protected function getLastEmail() {
-    $sent_emails = $this->getMails();
-    $sent_email = end($sent_emails);
-    $this->debug($sent_email);
-    return $sent_email;
-  }
-
-  /****************************************************************************/
-  // Assert.
-  /****************************************************************************/
-
-  /**
-   * Passes if the CSS selector IS found on the loaded page, fail otherwise.
-   */
-  protected function assertCssSelect($selector, $message = '') {
-    $element = $this->cssSelect($selector);
-    if (!$message) {
-      $message = new FormattableMarkup('Found @selector', ['@selector' => $selector]);
-    }
-    $this->assertTrue(!empty($element), $message);
-  }
-
-  /**
-   * Passes if the CSS selector IS NOT found on the loaded page, fail otherwise.
-   */
-  protected function assertNoCssSelect($selector, $message = '') {
-    $element = $this->cssSelect($selector);
-    $this->assertTrue(empty($element), $message);
-  }
-
-  /****************************************************************************/
-  // Debug.
-  /****************************************************************************/
-
-  /**
-   * Logs verbose (debug) message in a text file.
-   *
-   * @param mixed $data
-   *   Data to be output.
-   */
-  protected function debug($data) {
-    $string = var_export($data, TRUE);
-    $string = preg_replace('/=>\s*array\s*\(/', '=> array(', $string);
-    $this->htmlOutput('<pre>' . htmlentities($string) . '</pre>');
-  }
-
 }
diff --git a/modules/contrib/webform/tests/src/Functional/WebformSubmissionViewsAccessTest.php b/modules/contrib/webform/tests/src/Functional/WebformSubmissionViewsAccessTest.php
index 3a80936b..93cb61c7 100644
--- a/modules/contrib/webform/tests/src/Functional/WebformSubmissionViewsAccessTest.php
+++ b/modules/contrib/webform/tests/src/Functional/WebformSubmissionViewsAccessTest.php
@@ -3,6 +3,7 @@
 namespace Drupal\Tests\webform\Functional;
 
 use Drupal\Tests\BrowserTestBase;
+use Drupal\Tests\webform\Traits\WebformSubmissionViewAccessTrait;
 use Drupal\user\Entity\User;
 use Drupal\webform\Entity\Webform;
 use Drupal\webform\Entity\WebformSubmission;
@@ -15,6 +16,8 @@ use Drupal\webform\WebformInterface;
  */
 class WebformSubmissionViewsAccessTest extends BrowserTestBase {
 
+  use WebformSubmissionViewAccessTrait;
+
   /**
    * Modules to enable.
    *
@@ -154,64 +157,4 @@ class WebformSubmissionViewsAccessTest extends BrowserTestBase {
     }
   }
 
-  /**
-   * Check user submission access.
-   *
-   * @param \Drupal\webform\WebformInterface $webform
-   *   The webform.
-   * @param array $accounts
-   *   An associative array of test users.
-   *
-   * @see \Drupal\webform_access\Tests\WebformAccessSubmissionViewsTest::checkUserSubmissionAccess
-   */
-  protected function checkUserSubmissionAccess(WebformInterface $webform, array $accounts) {
-    /** @var \Drupal\webform\WebformSubmissionStorageInterface $webform_submission_storage */
-    $webform_submission_storage = \Drupal::entityTypeManager()
-      ->getStorage('webform_submission');
-
-    // Reset the static cache to make sure we are hitting actual fresh access
-    // results.
-    \Drupal::entityTypeManager()->getStorage('webform_submission')->resetCache();
-    \Drupal::entityTypeManager()->getAccessControlHandler('webform_submission')->resetCache();
-
-    foreach ($accounts as $account_type => $account) {
-      // Login the current user.
-      if ($account_type !== 'anonymous_user') {
-        $this->drupalLogin($account);
-      }
-
-      // Get the webform_test_views_access view and the sid for each
-      // displayed record.  Submission access is controlled via the query.
-      // @see webform_query_webform_submission_access_alter()
-      $this->drupalGet('/admin/structure/webform/test/views_access');
-
-      $views_sids = [];
-      foreach ($this->getSession()->getPage()->findAll('css', '.view .view-content tbody .views-field-sid') as $node) {
-        $views_sids[] = $node->getText();
-      }
-      sort($views_sids);
-
-      $expected_sids = [];
-
-      // Load all webform submissions and check access using the access method.
-      // @see \Drupal\webform\WebformSubmissionAccessControlHandler::checkAccess
-      $webform_submissions = $webform_submission_storage->loadByEntities($webform);
-
-      foreach ($webform_submissions as $webform_submission) {
-        if ($webform_submission->access('view', $account)) {
-          $expected_sids[] = $webform_submission->id();
-        }
-      }
-
-      sort($expected_sids);
-
-      // Check that the views sids is equal to the expected sids.
-      $this->assertSame($expected_sids, $views_sids, "User '" . $account_type . "' access has correct access through view on webform submission entity type.");
-
-      if ($account_type !== 'anonymous_user') {
-        $this->drupalLogout();
-      }
-    }
-  }
-
 }
diff --git a/modules/contrib/webform/tests/src/FunctionalJavascript/WebformSubmissionToggleFlagsTest.php b/modules/contrib/webform/tests/src/FunctionalJavascript/WebformSubmissionToggleFlagsTest.php
index 3fa1338b..e0513bac 100644
--- a/modules/contrib/webform/tests/src/FunctionalJavascript/WebformSubmissionToggleFlagsTest.php
+++ b/modules/contrib/webform/tests/src/FunctionalJavascript/WebformSubmissionToggleFlagsTest.php
@@ -46,7 +46,7 @@ class WebformSubmissionToggleFlagsTest extends JavascriptTestBase {
 
     $assert = $this->assertSession();
     $submit = $this->getWebformSubmitButtonLabel($webform);
-    $this->drupalPostForm('webform/' . $webform->id(), [], $submit);
+    $this->drupalPostForm('/webform/' . $webform->id(), [], $submit);
     $sid = $this->getLastSubmissionId($webform);
     $this->drupalLogin($this->createUser([
       'view any webform submission',
diff --git a/modules/contrib/webform/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php b/modules/contrib/webform/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php
index ab485a88..c7706164 100644
--- a/modules/contrib/webform/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php
+++ b/modules/contrib/webform/tests/src/Kernel/Breadcrumb/WebformBreadcrumbBuilderTest.php
@@ -426,14 +426,25 @@ class WebformBreadcrumbBuilderTest extends UnitTestCase {
    * Test build user submissions breadcrumbs.
    */
   public function testBuildUserSubmissions() {
+    // Check without view own access.
     $route_match = $this->getMockRouteMatch('entity.webform.user.submission', [
       ['webform_submission', $this->webformSubmission],
     ]);
+    $links = [
+      Link::createFromRoute($this->webform->label(), 'entity.webform.canonical', ['webform' => $this->webform->id()]),
+    ];
+    $this->assertLinks($route_match, $links);
+
+    // Check with view own access.
+    $route_match = $this->getMockRouteMatch('entity.webform.user.submission', [
+      ['webform_submission', $this->webformSubmissionAccess],
+    ]);
     $links = [
       Link::createFromRoute($this->webform->label(), 'entity.webform.canonical', ['webform' => $this->webform->id()]),
       Link::createFromRoute('Submissions', 'entity.webform.user.submissions', ['webform' => $this->webform->id()]),
     ];
     $this->assertLinks($route_match, $links);
+
   }
 
   /**
diff --git a/modules/contrib/webform/tests/src/Kernel/Entity/WebformEntityTest.php b/modules/contrib/webform/tests/src/Kernel/Entity/WebformEntityTest.php
index ab4ad7d4..da285770 100644
--- a/modules/contrib/webform/tests/src/Kernel/Entity/WebformEntityTest.php
+++ b/modules/contrib/webform/tests/src/Kernel/Entity/WebformEntityTest.php
@@ -27,6 +27,10 @@ class WebformEntityTest extends KernelTestBase {
    * Tests some of the methods.
    */
   public function testWebformMethods() {
+    // @todo Remove once Drupal 8.8.x is only supported.
+    if (floatval(\Drupal::VERSION) >= 8.8) {
+      $this->installEntitySchema('path_alias');
+    }
     $this->installSchema('webform', ['webform']);
     $this->installConfig('webform');
 
@@ -187,6 +191,7 @@ class WebformEntityTest extends KernelTestBase {
         'child' => [
           '#type' => 'textfield',
           '#title' => 'child',
+          '#default_value' => '{default value}',
         ],
       ],
     ];
@@ -208,6 +213,7 @@ class WebformEntityTest extends KernelTestBase {
       'child' => [
         '#type' => 'textfield',
         '#title' => 'child',
+        '#default_value' => '{default value}',
       ],
     ];
     $this->assertEquals($webform->getElementsDecodedAndFlattened(), $flattened_elements);
@@ -247,6 +253,7 @@ class WebformEntityTest extends KernelTestBase {
       'child' => [
         '#type' => 'textfield',
         '#title' => 'child',
+        '#default_value' => '{default value}',
         '#webform' => 'webform_test',
         '#webform_id' => 'webform_test--child',
         '#webform_key' => 'child',
@@ -267,6 +274,9 @@ class WebformEntityTest extends KernelTestBase {
     unset($elements_initialized_flattened_and_has_value['container']);
     $this->assertEquals($webform->getElementsInitializedFlattenedAndHasValue(), $elements_initialized_flattened_and_has_value);
 
+    // Check elements default data.
+    $this->assertEquals($webform->getElementsDefaultData(), ['child' => '{default value}']);
+
     // Check invalid elements.
     $webform->set('elements', 'invalid')->save();
     $this->assertFalse($webform->getElementsInitialized());
@@ -325,13 +335,23 @@ class WebformEntityTest extends KernelTestBase {
    * Test paths.
    */
   public function testPaths() {
+    // @todo Remove once Drupal 8.8.x is only supported.
+    if (floatval(\Drupal::VERSION) >= 8.8) {
+      $this->installEntitySchema('path_alias');
+    }
     $this->installSchema('webform', ['webform']);
     $this->installConfig('webform');
 
     /** @var \Drupal\webform\WebformInterface $webform */
     $webform = Webform::create(['id' => 'webform_test']);
     $webform->save();
-    $aliases = \Drupal::database()->query('SELECT source, alias FROM {url_alias}')->fetchAllKeyed();
+    // @todo Remove once Drupal 8.8.x is only supported.
+    if (floatval(\Drupal::VERSION) >= 8.8) {
+      $aliases = \Drupal::database()->query('SELECT path, alias FROM {path_alias}')->fetchAllKeyed();
+    }
+    else {
+      $aliases = \Drupal::database()->query('SELECT source, alias FROM {url_alias}')->fetchAllKeyed();
+    }
     $this->assertEquals($aliases['/webform/webform_test'], '/form/webform-test');
     $this->assertEquals($aliases['/webform/webform_test/confirmation'], '/form/webform-test/confirmation');
     $this->assertEquals($aliases['/webform/webform_test/submissions'], '/form/webform-test/submissions');
@@ -341,6 +361,10 @@ class WebformEntityTest extends KernelTestBase {
    * Test elements CRUD operations.
    */
   public function testElementsCrud() {
+    // @todo Remove once Drupal 8.8.x is only supported.
+    if (floatval(\Drupal::VERSION) >= 8.8) {
+      $this->installEntitySchema('path_alias');
+    }
     $this->installSchema('webform', ['webform']);
     $this->installEntitySchema('webform_submission');
 
diff --git a/modules/contrib/webform/tests/src/Kernel/WebformSubmissionStorageTest.php b/modules/contrib/webform/tests/src/Kernel/WebformSubmissionStorageTest.php
index d2823185..03b97e76 100644
--- a/modules/contrib/webform/tests/src/Kernel/WebformSubmissionStorageTest.php
+++ b/modules/contrib/webform/tests/src/Kernel/WebformSubmissionStorageTest.php
@@ -26,7 +26,10 @@ class WebformSubmissionStorageTest extends KernelTestBase {
    */
   public function setUp() {
     parent::setUp();
-
+    // @todo Remove once Drupal 8.8.x is only supported.
+    if (floatval(\Drupal::VERSION) >= 8.8) {
+      $this->installEntitySchema('path_alias');
+    }
     $this->installSchema('webform', ['webform']);
     $this->installConfig('webform');
     $this->installEntitySchema('webform_submission');
diff --git a/modules/contrib/webform/tests/themes/webform_test_bartik/webform_test_bartik.info.yml b/modules/contrib/webform/tests/themes/webform_test_bartik/webform_test_bartik.info.yml
index 8702b0a2..45b609d3 100644
--- a/modules/contrib/webform/tests/themes/webform_test_bartik/webform_test_bartik.info.yml
+++ b/modules/contrib/webform/tests/themes/webform_test_bartik/webform_test_bartik.info.yml
@@ -1,12 +1,11 @@
-# core: 8.x
+core: 8.x
 type: theme
 base theme: bartik
 name: 'Webform Test Bartik'
 description: 'Test Webform Bartik integration.'
 package: 'Webform Test'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/webform.api.php b/modules/contrib/webform/webform.api.php
index 303488a1..08e1d4b0 100644
--- a/modules/contrib/webform/webform.api.php
+++ b/modules/contrib/webform/webform.api.php
@@ -46,7 +46,30 @@ function hook_webform_source_entity_info_alter(array &$definitions) {
  * Alter webform elements.
  *
  * @param array $element
- *   The webform element.
+ *   Webform specific element properties include:
+ *   - #webform: The element's parent webform ID.
+ *   - #webform_submission: The element's related webform submission ID.
+ *   - #webform_id: The element's unique webform key.
+ *   - #webform_key: The element's webform key/name.
+ *   - #webform_parent_key: The element's parent key/name.
+ *   - #webform_parent_flexbox: TRUE if the element's parent is a
+ *     flexbox container.
+ *   - #webform_depth: The depth level of the element in the form's
+ *     tree hierarchy.
+ *   - #webform_children: An array of child element keys/names.
+ *   - #webform_multiple: TRUE if element stores multiple values.
+ *   - #webform_composite: TRUE if element stores composite values.
+ *   - #webform_parents: An array containing the element's parent keys/names.
+ *
+ *   Webform specific composite sub-element properties include:
+ *   - #webform_composite_id: The composite sub-element's ID.
+ *   - #webform_composite_key: The composite sub-element's parent key and
+ *     element key.
+ *   - #webform_composite_parent_key: The composite sub-element's parent key.
+ *
+ *   Sub-element's can have properties defined using #SUB_ELEMENT__PROPERTY.
+ *   For example, an other element's placeholder can be defined using
+ *   the #other__placeholder property.
  * @param \Drupal\Core\Form\FormStateInterface $form_state
  *   The current state of the form.
  * @param array $context
@@ -77,7 +100,30 @@ function hook_webform_element_alter(array &$element, \Drupal\Core\Form\FormState
  * hook_webform_element_alter() and checking the element type.
  *
  * @param array $element
- *   The webform element.
+ *   Webform specific element properties include:
+ *   - #webform: The element's parent webform ID.
+ *   - #webform_submission: The element's related webform submission ID.
+ *   - #webform_id: The element's unique webform key.
+ *   - #webform_key: The element's webform key/name.
+ *   - #webform_parent_key: The element's parent key/name.
+ *   - #webform_parent_flexbox: TRUE if the element's parent is a
+ *     flexbox container.
+ *   - #webform_depth: The depth level of the element in the form's
+ *     tree hierarchy.
+ *   - #webform_children: An array of child element keys/names.
+ *   - #webform_multiple: TRUE if element stores multiple values.
+ *   - #webform_composite: TRUE if element stores composite values.
+ *   - #webform_parents: An array containing the element's parent keys/names.
+ *
+ *   Webform specific composite sub-element properties include:
+ *   - #webform_composite_id: The composite sub-element's ID.
+ *   - #webform_composite_key: The composite sub-element's parent key and
+ *     element key.
+ *   - #webform_composite_parent_key: The composite sub-element's parent key.
+ *
+ *   Sub-element's can have properties defined using #SUB_ELEMENT__PROPERTY.
+ *   For example, an other element's placeholder can be defined using
+ *   the #other__placeholder property.
  * @param \Drupal\Core\Form\FormStateInterface $form_state
  *   The current state of the form.
  * @param array $context
@@ -95,6 +141,89 @@ function hook_webform_element_ELEMENT_TYPE_alter(array &$element, \Drupal\Core\F
   $element['#attached']['library'][] = 'MODULE/MODULE.element.ELEMENT_TYPE';
 }
 
+/**
+ * Check and set an element's #access property and/or return access.
+ *
+ * @param string $operation
+ *   An element create, view, or update operation.
+ * @param array $element
+ *   Webform specific element properties include:
+ *   - #webform: The element's parent webform ID.
+ *   - #webform_submission: The element's related webform submission ID.
+ *   - #webform_id: The element's unique webform key.
+ *   - #webform_key: The element's webform key/name.
+ *   - #webform_parent_key: The element's parent key/name.
+ *   - #webform_parent_flexbox: TRUE if the element's parent is a
+ *     flexbox container.
+ *   - #webform_depth: The depth level of the element in the form's
+ *     tree hierarchy.
+ *   - #webform_children: An array of child element keys/names.
+ *   - #webform_multiple: TRUE if element stores multiple values.
+ *   - #webform_composite: TRUE if element stores composite values.
+ *   - #webform_parents: An array containing the element's parent keys/names.
+ *
+ *   Webform specific composite sub-element properties include:
+ *   - #webform_composite_id: The composite sub-element's ID.
+ *   - #webform_composite_key: The composite sub-element's parent key and
+ *     element key.
+ *   - #webform_composite_parent_key: The composite sub-element's parent key.
+ *
+ *   Sub-element's can have properties defined using #SUB_ELEMENT__PROPERTY.
+ *   For example, an other element's placeholder can be defined using
+ *   the #other__placeholder property.
+ * @param \Drupal\Core\Session\AccountInterface|null $account
+ *   (optional) If provided, only those formats that are allowed for this user
+ *   account will be returned. All enabled formats will be returned otherwise.
+ *   Defaults to NULL.
+ * @param array $context
+ *   The element's current context which include the webform and
+ *   webform submission entity.
+ *
+ * @return \Drupal\Core\Access\AccessResult
+ *   The access provided. Return neutral if no change.
+ */
+function hook_webform_element_access($operation, array &$element, \Drupal\Core\Session\AccountInterface $account = NULL, array $context = []) {
+  // Load the current webform and submission for element's context.
+  $webform = $context['webform'];
+  $webform_submission = $context['webform_submission'];
+
+  return !empty($element['#confidential']) ? \Drupal\Core\Access\AccessResult::forbidden() : \Drupal\Core\Access\AccessResult::neutral();
+}
+
+/**
+ * Return information about input masks for text based webform elements.
+ *
+ * @return array
+ *   Return an array of input masks for text based webform elements.
+ *
+ * @see \Drupal\webform\Plugin\WebformElement\TextBase::getInputMasks
+ */
+function hook_webform_element_input_masks() {
+  $input_masks = [];
+  $input_masks["'alias': 'date'"] = [
+    'title' => t('Date'),
+    'example' => '01/01/2000',
+    'mask' => 'dd/mm/yyyy',
+  ];
+  return $input_masks;
+}
+
+/**
+ * Return information about input masks for text based webform elements.
+ *
+ * @param array $input_masks
+ *   An array of input masks for text based webform elements.
+ *
+ * @see \Drupal\webform\Plugin\WebformElement\TextBase::getInputMasks
+ */
+function hook_webform_element_input_masks_alter(array &$input_masks) {
+  $input_masks["'alias': 'date'"] = [
+    'title' => t('My Custom Date'),
+    'example' => '01/01/2000',
+    'mask' => 'dd/mm/yyyy',
+  ];
+}
+
 /**
  * Alter webform options.
  *
@@ -395,8 +524,8 @@ function hook_webform_access_rules() {
     // The below 2 operations can be queried together as following:
     //
     // \Drupal::entityTypeManager()
-    //   ->getAccessControlHandler('webform_submission')
-    //   ->access($webform_submission, 'some_operation', $account);
+    //  ->getAccessControlHandler('webform_submission')
+    //  ->access($webform_submission, 'some_operation', $account);
     //
     // This will return TRUE as long as the $account is has either
     // 'some_operation_any' or has 'some_operation_own' and is author of
@@ -490,6 +619,24 @@ function hook_webform_message_custom($operation, $id) {
   }
 }
 
+/**
+ * Alter webform submission query access.
+ *
+ * @param \Drupal\Core\Database\Query\AlterableInterface $query
+ *   An Query object describing the composite parts of a SQL query.
+ * @param array $webform_submission_tables
+ *   An array webform submission tables that contains the table's alias and
+ *   OR conditions which are used to build the alter query.
+ *
+ * @see webform_query_webform_submission_access_alter()
+ */
+function hook_webform_submission_query_access_alter(\Drupal\Core\Database\Query\AlterableInterface $query, array $webform_submission_tables) {
+  // Always allow the current user access to their submissions.
+  foreach ($webform_submission_tables as $table) {
+    $table['condition']->condition($table['alias'] . '.uid', \Drupal::currentUser()->id());
+  }
+}
+
 /**
  * @} End of "addtogroup hooks".
  */
diff --git a/modules/contrib/webform/webform.info.yml b/modules/contrib/webform/webform.info.yml
index 5cd5ab6a..1f6a3b9e 100644
--- a/modules/contrib/webform/webform.info.yml
+++ b/modules/contrib/webform/webform.info.yml
@@ -2,7 +2,7 @@ name: Webform
 type: module
 description: 'Enables the creation of webforms and questionnaires.'
 package: Webform
-# core: 8.x
+core: 8.x
 configure: entity.webform.collection
 dependencies:
   - 'drupal:field'
@@ -13,15 +13,15 @@ test_dependencies:
   - 'bootstrap:bootstrap'
   - 'captcha:captcha'
   - 'chosen:chosen'
+  - 'group:group'
   - 'jsonapi:jsonapi'
   - 'mailsystem:mailsystem'
   - 'select2:select2'
   - 'smtp:smtp'
-  - 'telephone_validation/telephone_validation'
+  - 'telephone_validation:telephone_validation'
   - 'token:token'
 
-# Information added by Drupal.org packaging script on 2019-08-19
-version: '8.x-5.4'
-core: '8.x'
+# Information added by Drupal.org packaging script on 2019-12-02
+version: '8.x-5.6'
 project: 'webform'
-datestamp: 1566209294
+datestamp: 1575331093
diff --git a/modules/contrib/webform/webform.libraries.yml b/modules/contrib/webform/webform.libraries.yml
index 2a1be0bf..a442c88c 100644
--- a/modules/contrib/webform/webform.libraries.yml
+++ b/modules/contrib/webform/webform.libraries.yml
@@ -293,6 +293,12 @@ webform.tooltip:
 
 # Theme
 
+webform.theme.claro:
+  version: VERSION
+  css:
+    theme:
+      css/webform.theme.claro.css: {}
+
 webform.theme.classy:
   version: VERSION
   css:
@@ -397,11 +403,6 @@ webform.element.buttons:
     /core/assets/vendor/jquery.ui/ui/escape-selector-min.js: { minified: true }
     /core/assets/vendor/jquery.ui/ui/widgets/checkboxradio-min.js: { minified: true }
     js/webform.element.buttons.js: {}
-  # Issue #2933980: JQuery UI CSS dependencies are not met in core.
-  # @see https://www.drupal.org/node/2933980
-  css:
-    component:
-      /core/assets/vendor/jquery.ui/themes/base/button.css: {}
   dependencies:
     - core/jquery.ui.checkboxradio
 
@@ -701,6 +702,8 @@ webform.element.inputhide:
 
 webform.element.likert:
   version: VERSION
+  js:
+    js/webform.element.likert.js: {}
   css:
     component:
       css/webform.element.likert.css: {}
@@ -832,6 +835,14 @@ webform.element.roles:
     - core/drupal
     - core/jquery.once
 
+webform.element.select:
+  version: VERSION
+  js:
+    js/webform.element.select.js: {}
+  dependencies:
+    - core/drupal
+    - core/jquery.once
+
 webform.element.select2:
   version: VERSION
   css:
@@ -982,13 +993,13 @@ imce.input:
 
 libraries.choices:
   remote: https://github.com/jshjohnson/Choices
-  version: '7.0.0'
+  version: '9.0.1'
   license:
     name: MIT
     url: https://github.com/jshjohnson/Choices/blob/master/LICENSE
     gpl-compatible: true
   cdn:
-    /libraries/choices/: https://cdn.jsdelivr.net/gh/jshjohnson/Choices@v7.0.0/
+    /libraries/choices/: https://cdn.jsdelivr.net/gh/jshjohnson/Choices@v9.0.1/
   css:
     component:
       css/webform.choices.base.css: {  }
@@ -1084,13 +1095,13 @@ libraries.codemirror.twig:
 
 libraries.algolia.places:
   remote: https://github.com/algolia/places
-  version: '1.16.4'
+  version: '1.17.0'
   license:
     name: MIT
     url: https://github.com/algolia/places/blob/master/LICENSE
     gpl-compatible: true
   cdn:
-    /libraries/algolia.places/dist/cdn/: https://cdn.jsdelivr.net/npm/places.js@1.16.4/dist/cdn/
+    /libraries/algolia.places/dist/cdn/: https://cdn.jsdelivr.net/npm/places.js@1.17.0/dist/cdn/
   js:
     /libraries/algolia.places/dist/cdn/places.js: {}
 
@@ -1165,13 +1176,13 @@ libraries.jquery.icheck.square:
 
 libraries.jquery.inputmask:
   remote: https://github.com/RobinHerbots/jquery.inputmask
-  version: '4.0.8'
+  version: '4.0.9'
   license:
     name: MIT
     url: http://opensource.org/licenses/mit-license.php
     gpl-compatible: true
   cdn:
-    /libraries/jquery.inputmask/: https://cdn.jsdelivr.net/gh/RobinHerbots/Inputmask@4.0.8/
+    /libraries/jquery.inputmask/: https://cdn.jsdelivr.net/gh/RobinHerbots/Inputmask@4.0.9/
   js:
     /libraries/jquery.inputmask/dist/min/jquery.inputmask.bundle.min.js: { minified: true }
   dependencies:
@@ -1179,13 +1190,13 @@ libraries.jquery.inputmask:
 
 libraries.jquery.intl-tel-input:
   remote: https://github.com/jackocnr/intl-tel-input
-  version: 'v15.1.0'
+  version: 'v16.0.0'
   license:
     name: MIT
     url: https://github.com/jackocnr/intl-tel-input/blob/master/LICENSE
     gpl-compatible: true
   cdn:
-    /libraries/jquery.intl-tel-input/: https://cdn.jsdelivr.net/gh/jackocnr/intl-tel-input@v15.1.0/
+    /libraries/jquery.intl-tel-input/: https://cdn.jsdelivr.net/gh/jackocnr/intl-tel-input@v16.0.0/
   css:
     component:
       /libraries/jquery.intl-tel-input/build/css/intlTelInput.min.css: { minified: true }
@@ -1215,13 +1226,13 @@ libraries.jquery.rateit:
 
 libraries.jquery.select2:
   remote: https://select2.github.io/
-  version: '4.0.8'
+  version: '4.0.12'
   license:
     name: MIT
     url: http://opensource.org/licenses/mit-license.php
     gpl-compatible: true
   cdn:
-    /libraries/jquery.select2/dist/: https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/
+    /libraries/jquery.select2/dist/: https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.12/
   css:
     component:
       /libraries/jquery.select2/dist/css/select2.min.css: { minified: true }
diff --git a/modules/contrib/webform/webform.links.task.yml b/modules/contrib/webform/webform.links.task.yml
index a3201800..eff063af 100644
--- a/modules/contrib/webform/webform.links.task.yml
+++ b/modules/contrib/webform/webform.links.task.yml
@@ -26,7 +26,21 @@ entity.webform_submission.collection_purge:
   parent_id: entity.webform_submission.collection
   weight: 10
 
-# Settings.
+# Options.
+
+webform.options:
+  title: 'Options'
+  route_name: entity.webform_options.collection
+  base_route: entity.webform.collection
+  weight: 25
+
+webform.config.options:
+  title: 'Options'
+  route_name: entity.webform_options.collection
+  parent_id: webform.options
+  weight: 0
+
+# Configuration.
 
 webform.config:
   title: 'Configuration'
@@ -46,11 +60,6 @@ webform.config.elements:
   parent_id: webform.config
   weight: 20
 
-webform.config.options:
-  title: 'Options'
-  route_name: entity.webform_options.collection
-  parent_id: webform.config
-  weight: 30
 
 webform.config.submissions:
   title: 'Submissions'
diff --git a/modules/contrib/webform/webform.module b/modules/contrib/webform/webform.module
index 1b897549..143b2b40 100644
--- a/modules/contrib/webform/webform.module
+++ b/modules/contrib/webform/webform.module
@@ -8,10 +8,8 @@
 use Drupal\Component\Utility\Unicode;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Access\AccessResult;
-use Drupal\Core\Asset\AttachedAssetsInterface;
 use Drupal\Core\Breadcrumb\Breadcrumb;
 use Drupal\Core\Cache\Cache;
-use Drupal\Core\Database\Query\AlterableInterface;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\Entity\EntityInterface;
@@ -22,22 +20,21 @@ use Drupal\Core\Url;
 use Drupal\file\FileInterface;
 use Drupal\webform\Entity\Webform;
 use Drupal\webform\Entity\WebformSubmission;
-use Drupal\webform\Element\WebformMessage;
 use Drupal\webform\Plugin\WebformElement\ManagedFile;
 use Drupal\webform\Utility\Mail;
 use Drupal\webform\Utility\WebformArrayHelper;
 use Drupal\webform\Utility\WebformElementHelper;
-use Drupal\webform\Utility\WebformDialogHelper;
 use Drupal\webform\Utility\WebformOptionsHelper;
 use Drupal\webform\WebformInterface;
-use Drupal\webform\WebformSubmissionForm;
 
 require_once __DIR__ . '/includes/webform.date.inc';
+require_once __DIR__ . '/includes/webform.editor.inc';
+require_once __DIR__ . '/includes/webform.form_alter.inc';
 require_once __DIR__ . '/includes/webform.libraries.inc';
 require_once __DIR__ . '/includes/webform.options.inc';
 require_once __DIR__ . '/includes/webform.theme.inc';
 require_once __DIR__ . '/includes/webform.translation.inc';
-require_once __DIR__ . '/includes/webform.editor.inc';
+require_once __DIR__ . '/includes/webform.query.inc';
 
 /**
  * Implements hook_help().
@@ -142,6 +139,15 @@ function webform_cron() {
   \Drupal::entityTypeManager()->getStorage('webform_submission')->purge($config->get('purge.cron_size'));
 }
 
+/**
+ * Implements hook_rebuild().
+ */
+function webform_rebuild() {
+  /** @var \Drupal\webform\WebformEmailProviderInterface $email_provider */
+  $email_provider = \Drupal::service('webform.email_provider');
+  $email_provider->check();
+}
+
 /**
  * Implements hook_local_tasks_alter().
  */
@@ -240,154 +246,6 @@ function webform_module_implements_alter(&$implementations, $hook) {
   }
 }
 
-/**
- * Implements hook_form_alter().
- */
-function webform_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  if (strpos($form_id, 'webform_') === FALSE || strpos($form_id, 'node_') === 0) {
-    return;
-  }
-
-  // Get form object.
-  $form_object = $form_state->getFormObject();
-
-  // Alter the webform submission form.
-  if (strpos($form_id, 'webform_submission') === 0
-    && $form_object instanceof WebformSubmissionForm) {
-    // Make sure webform libraries are always attached to submission form.
-    _webform_page_attachments($form);
-
-    // After build.
-    $form['#after_build'][] = '_webform_form_webform_submission_form_after_build';
-  }
-
-  // Display editing original language warning.
-  if (\Drupal::moduleHandler()->moduleExists('config_translation') && preg_match('/^entity.webform.(?:edit|settings|assets|access|handlers|third_party_settings)_form$/', \Drupal::routeMatch()->getRouteName())) {
-    /** @var \Drupal\webform\WebformInterface $webform */
-    $webform = \Drupal::routeMatch()->getParameter('webform');
-    /** @var \Drupal\Core\Language\LanguageManagerInterface $language_manager */
-    $language_manager = \Drupal::service('language_manager');
-
-    // If current webform is translated, load the base (default) webform and apply
-    // the translation to the elements.
-    if ($webform->getLangcode() != $language_manager->getCurrentLanguage()->getId()) {
-      $original_language = $language_manager->getLanguage($webform->getLangcode());
-      $form['langcode_message'] = [
-        '#type' => 'webform_message',
-        '#message_type' => 'warning',
-        '#message_message' => t('You are editing the original %language language for this webform.', ['%language' => $original_language->getName()]),
-        '#message_close' => TRUE,
-        '#message_storage' => WebformMessage::STORAGE_LOCAL,
-        '#message_id' => $webform->id() . '.original_language',
-        '#weight' => -100,
-      ];
-    }
-  }
-
-  // Add details 'toggle all' to all webforms (except submission forms).
-  if (!($form_object instanceof WebformSubmissionForm)) {
-    $form['#attributes']['class'][] = 'js-webform-details-toggle';
-    $form['#attributes']['class'][] = 'webform-details-toggle';
-    $form['#attached']['library'][] = 'webform/webform.element.details.toggle';
-    return;
-  }
-}
-
-/**
- * Alter webform after build.
- */
-function _webform_form_webform_submission_form_after_build($form, FormStateInterface $form_state) {
-  $form_object = $form_state->getFormObject();
-
-  /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
-  $webform_submission = $form_object->getEntity();
-  $webform = $webform_submission->getWebform();
-
-  // Add contextual links and change theme wrapper to webform.html.twig
-  // which includes 'title_prefix' and 'title_suffix' variables needed for
-  // contextual links to appear.
-  $form['#contextual_links']['webform'] = [
-    'route_parameters' => ['webform' => $webform->id()],
-  ];
-  $form['#theme_wrappers'] = ['webform'];
-  return $form;
-}
-
-/**
- * Implements hook_form_FORM_ID_alter().
- */
-function webform_form_smtp_admin_settings_alter(&$form, FormStateInterface $form_state) {
-  $form['#submit'][] = '_webform_form_smtp_admin_settings_submit';
-}
-
-/**
- * Submit callback for SMTP admin settings.
- */
-function _webform_form_smtp_admin_settings_submit(&$form, FormStateInterface $form_state) {
-  // Since the SMTP module can enabled or disabled, check HTML email provider.
-  /** @var \Drupal\webform\WebformEmailProviderInterface $email_provider */
-  $email_provider = \Drupal::service('webform.email_provider');
-  $email_provider->check();
-}
-
-/**
- * Implements hook_form_FORM_ID_alter().
- *
- * Add warnings when attempting to update the Webform module using
- * the 'Update manager'.
- *
- * @see https://www.drupal.org/project/webform/issues/2930116
- * @see https://www.drupal.org/project/webform/issues/2920095
- */
-function webform_form_update_manager_update_form_alter(&$form, FormStateInterface $form_state) {
-  if (!isset($form['projects']) || !isset($form['projects']['#options']['webform'])) {
-    return;
-  }
-
-  // Display dismissible warning at the top of the page.
-  $t_args = [
-    ':href_manual' => 'https://www.drupal.org/docs/user_guide/en/extend-manual-install.html',
-    ':href_drush' => 'https://www.drupal.org/docs/user_guide/en/security-update-module.html',
-  ];
-  $form['webform_update_manager_warning'] = [
-    '#type' => 'webform_message',
-    '#message_type' => 'warning',
-    '#message_message' => t('The Webform module may not update properly using this administrative interface. It is strongly recommended that you update the Webform module <a href=":href_manual">manually</a> or by using <a href=":href_drush">Drush</a>.', $t_args),
-    '#message_close' => TRUE,
-    '#message_storage' => WebformMessage::STORAGE_SESSION,
-    '#weight' => -10,
-  ];
-
-  // Display warning to backup site when webform is checked.
-  $form['projects']['#options']['webform']['title']['data'] = [
-    'title' => $form['projects']['#options']['webform']['title']['data'],
-    'container' => [
-      '#type' => 'container',
-      '#states' => ['visible' => [':input[name="projects[webform]"]' => ['checked' => TRUE]]],
-      '#attributes' => ['class' => ['js-form-wrapper'], 'style' => 'display:none'],
-      'message' => [
-        '#type' => 'webform_message',
-        '#message_type' => 'warning',
-        '#message_message' => t('Please make sure to backup your website before updating the Webform module.'),
-      ],
-    ],
-  ];
-}
-
-/**
- * Implements hook_form_FORM_ID_alter().
- */
-function webform_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\views\ViewExecutable $view */
-  $view = $form_state->get('view');
-
-  // Check if this a is webform submission view.
-  // @see \Drupal\webform\WebformSubmissionListBuilder::buildSubmissionViews
-  if (isset($view->webform_submission_view)) {
-    $form['#action'] = Url::fromRoute(\Drupal::routeMatch()->getRouteName(), \Drupal::routeMatch()->getRawParameters()->all())->toString();
-  }
-}
-
 /**
  * Implements hook_system_breadcrumb_alter().
  */
@@ -503,7 +361,6 @@ function _webform_clear_webform_submission_list_cache_tag(EntityInterface $entit
   elseif ($entity->getEntityTypeId() === 'user_role') {
     Cache::invalidateTags(['webform_submission_list']);
   }
-
 }
 
 /**
@@ -595,8 +452,9 @@ function webform_mail_alter(&$message) {
 function webform_page_attachments(array &$attachments) {
   $route_name = \Drupal::routeMatch()->getRouteName();
 
-  // Attach global libraries only to webform specific pages.
-  if (preg_match('/^(webform\.|^entity\.([^.]+\.)?webform)/', $route_name)) {
+  // Attach global libraries only to webform specific pages and module list.
+  if (preg_match('/^(webform\.|^entity\.([^.]+\.)?webform)/', $route_name)
+    || $route_name === 'system.modules_list') {
     _webform_page_attachments($attachments);
   }
 
@@ -671,106 +529,6 @@ function _webform_page_attachments(array &$attachments) {
   }
 }
 
-/**
- * Implements hook_library_info_build().
- */
-function webform_library_info_build() {
-  $base_path = base_path();
-  $default_query_string = \Drupal::state()->get('system.css_js_query_string') ?: '0';
-
-  /** @var \Drupal\webform\WebformInterface[] $webforms */
-  $webforms = Webform::loadMultiple();
-  $libraries = [];
-  foreach ($webforms as $webform_id => $webform) {
-    $assets = array_filter($webform->getAssets());
-    foreach ($assets as $type => $value) {
-      // Note:
-      // Set 'type' to 'external' and manually build the CSS/JS file path
-      // to prevent JS from being parsed by locale_js_alter()
-      // @see locale_js_alter()
-      // @see https://www.drupal.org/node/1803330
-      $settings = ['type' => 'external', 'preprocess' => FALSE, 'minified' => FALSE];
-      if ($type === 'css') {
-        $libraries["webform.css.$webform_id"] = [
-          'css' => ['theme' => ["{$base_path}webform/css/{$webform_id}?{$default_query_string}" => $settings]],
-        ];
-      }
-      else {
-        $libraries["webform.javascript.$webform_id"] = [
-          'js' => ["{$base_path}webform/javascript/{$webform_id}?{$default_query_string}" => $settings],
-        ];
-      }
-    }
-  }
-  return $libraries;
-}
-
-/**
- * Implements hook_css_alter().
- */
-function webform_css_alter(&$css, AttachedAssetsInterface $assets) {
-  // Remove the stable.theme's off-canvas CSS reset for webform admin routes.
-  // @see https://www.drupal.org/project/drupal/issues/2826722
-  //
-  // NOTE: Most admin themes correctly style jQuery UI dialogs because Drupal's
-  // admin UI, especially Views, relies on them.
-  $use_off_canvas = WebformDialogHelper::useOffCanvas();
-  $is_admin_route = \Drupal::service('router.admin_context')->isAdminRoute();
-  $is_webform_route = preg_match('/(^webform|^entity\.webform|^entity\.node\.webform)/', \Drupal::routeMatch()->getRouteName());
-  if ($use_off_canvas && $is_admin_route && $is_webform_route) {
-    foreach ($css as $key => $item) {
-      // @see 'core/misc/dialog/off-canvas
-      // @see core/themes/stable/css/core/dialog/off-canvas
-      if (strpos($key, '/off-canvas.') !== FALSE) {
-        unset($css[$key]);
-      }
-    }
-  }
-
-  _webform_asset_alter($css, 'css');
-}
-
-/**
- * Implements hook_js_alter().
- */
-function webform_js_alter(&$javascript, AttachedAssetsInterface $assets) {
-  // Add Google API key required by webform/libraries.jquery.geocomplete
-  // which is dependency for webform/webform.element.location.geocomplete.
-  //
-  // @see \Drupal\webform\Element\WebformLocationGeocomplete::processWebformComposite
-  // @see webform.libraries.yml
-  // @see webform/webform.element.location.geocomplete
-  // @see webform/libraries.jquery.geocomplete
-  $settings = $assets->getSettings();
-  if (!empty($settings['webform']['location']['geocomplete']['api_key']) && isset($javascript['https://maps.googleapis.com/maps/api/js?key=API_KEY&libraries=places'])) {
-    $api_key = $settings['webform']['location']['geocomplete']['api_key'];
-    $javascript['https://maps.googleapis.com/maps/api/js?key=API_KEY&libraries=places']['data'] = "https://maps.googleapis.com/maps/api/js?key=$api_key&libraries=places";
-    unset($settings['webform']['location']['geocomplete']['api_key']);
-    $assets->setSettings($settings);
-  }
-
-  _webform_asset_alter($javascript, 'javascript');
-}
-
-/**
- * Alter Webform CSS or JavaScript assets and make sure they appear last.
- *
- * @param array $items
- *   An array of all CSS or JavaScript being presented on the page.
- * @param string $type
- *   The type of asset being attached.
- *
- * @see hook_library_info_build()
- */
-function _webform_asset_alter(array &$items, $type) {
-  foreach ($items as $key => &$item) {
-    if (strpos($key, "webform/$type/") === 0) {
-      $item['weight'] = 1000;
-      $item['group'] = 1000;
-    }
-  }
-}
-
 /**
  * Implements hook_file_access().
  *
@@ -792,6 +550,31 @@ function webform_file_download($uri) {
   return ManagedFile::accessFileDownload($uri);
 }
 
+/**
+ * Checks for files with names longer than can be stored in the database.
+ *
+ * @param \Drupal\file\FileInterface $file
+ *   A file entity.
+ *
+ * @return array
+ *   An empty array if the file name length is smaller than the limit or an
+ *   array containing an error message if it's not or is empty.
+ *
+ * @see file_validate_name_length()
+ */
+function webform_file_validate_name_length(FileInterface $file) {
+  $errors = [];
+  // Don't display error is the file_validate_name_length() has already
+  // displayed a warning because the files length is over 240.
+  if (strlen($file->getFilename()) > 240) {
+    return $errors;
+  }
+  if (strlen($file->getFilename()) > 150) {
+    $errors[] = t("The file's name exceeds the Webform module's 150 characters limit. Please rename the file and try again.");
+  }
+  return $errors;
+}
+
 /**
  * Implements hook_contextual_links_view_alter().
  *
@@ -902,6 +685,8 @@ function webform_process_states(array &$elements, $key = '#attributes') {
 function webform_element_info_alter(array &$info) {
   $info['checkboxes']['#process'][] = 'webform_process_options';
   $info['radios']['#process'][] = 'webform_process_options';
+  $info['webform_entity_checkboxes']['#process'][] = 'webform_process_options';
+  $info['webform_entity_radios']['#process'][] = 'webform_process_options';
 }
 
 /**
@@ -1050,291 +835,3 @@ function _webform_entity_element_validate_rendering_error_handler($error_level,
 function _webform_entity_element_validate_rendering_exception_handler($exception) {
   throw $exception;
 }
-
-/******************************************************************************/
-// Query alter functions.
-/******************************************************************************/
-
-/**
- * Implements hook_query_TAG_alter().
- *
- * Append EAV sort to webform_submission entity query.
- *
- * @see http://stackoverflow.com/questions/12893314/sorting-eav-database
- * @see \Drupal\webform\WebformSubmissionListBuilder::getEntityIds
- */
-function webform_query_webform_submission_list_builder_alter(AlterableInterface $query) {
-  /** @var \Drupal\Core\Database\Query\SelectInterface $query */
-  $name = $query->getMetaData('webform_submission_element_name');
-  $direction = $query->getMetaData('webform_submission_element_direction');
-  $property_name = $query->getMetaData('webform_submission_element_property_name');
-
-  $query->distinct();
-  $query->addJoin('INNER', 'webform_submission_data', NULL, 'base_table.sid = webform_submission_data.sid');
-  $query->addField('webform_submission_data', 'value', 'value');
-  $query->condition('name', $name);
-  if ($property_name) {
-    $query->condition('property', $property_name);
-  }
-  $query->orderBy('value', $direction);
-}
-
-/**
- * Implements hook_query_TAG_alter().
- */
-function webform_query_entity_reference_alter(AlterableInterface $query) {
-  /** @var \Drupal\Core\Entity\Plugin\EntityReferenceSelection\DefaultSelection $handler */
-  $handler = $query->getMetaData('entity_reference_selection_handler');
-
-  // Get webform settings used to limit and randomize results.
-  // @see \Drupal\webform\Plugin\WebformElement\WebformEntityReferenceTrait::getTestValues
-  // @see \Drupal\webform\Plugin\WebformElement\WebformEntityReferenceTrait::setOptions
-  // @see \Drupal\webform\Element\WebformEntityTrait::setOptions
-  $configuration = $handler->getConfiguration() + ['_webform_settings' => []];
-  $settings = $configuration['_webform_settings'];
-  if (!empty($settings['random'])) {
-    $query->orderRandom();
-  }
-  if (!empty($settings['limit'])) {
-    $query->range(0, $settings['limit']);
-  }
-}
-
-/**
- * Implements hook_query_TAG_alter().
- *
- * This hook implementation adds webform submission access checks for the
- * account stored in the 'account' meta-data (or current user if not provided),
- * for an operation stored in the 'op' meta-data (or 'view' if not provided).
- */
-function webform_query_webform_submission_access_alter(AlterableInterface $query) {
-  /** @var \Drupal\Core\Database\Query\SelectInterface $query */
-  $op = $query->getMetaData('op') ?: 'view';
-  $account = $query->getMetaData('account') ?: \Drupal::currentUser();
-
-  $entity_type = \Drupal::entityTypeManager()->getDefinition('webform_submission');
-
-  // Get webform submission tables which are used to build the alter query.
-  $webform_submission_tables = [];
-  foreach ($query->getTables() as $table) {
-    if (is_string($table['table']) && $table['table'] === $entity_type->getBaseTable()) {
-      $webform_submission_tables[] = [
-        'alias' => $table['alias'],
-        'condition' => $query->orConditionGroup(),
-      ];
-    }
-  }
-
-  // If there are no webform submission tables then nothing needs to be altered.
-  if (empty($webform_submission_tables)) {
-    return;
-  }
-
-  // If the user has administer access then exit.
-  if ($account->hasPermission('administer webform submission')
-    || $account->hasPermission('administer webform')) {
-    return;
-  }
-
-  // Apply operation specific any and own permissions.
-  if (in_array($op, ['view', 'edit', 'delete'])) {
-    $permission_any = "$op any webform submission";
-    $permission_own = "$op own webform submission";
-
-    // If the user has any permission the query does not have to be altered.
-    if ($account->hasPermission($permission_any)) {
-      return;
-    }
-
-    // If the user has own permission, then add the account id to all
-    // webform submission tables conditions.
-    if ($account->hasPermission($permission_own)) {
-      foreach ($webform_submission_tables as $table) {
-        $table['condition']->condition($table['alias'] . '.uid', $account->id());
-      }
-    }
-  }
-
-  // Alter query based on update access to all webforms.
-  /** @var \Drupal\webform\WebformInterface[] $webforms */
-  if ($account->isAuthenticated()) {
-    // Get cached list of webforms that the user can update so that we don't
-    // have to continually load every webform.
-    $cached = \Drupal::cache()->get('webform_submission_access__account_update__' . $account->id());
-    if ($cached) {
-      $webform_account_access_update = $cached->data;
-    }
-    else {
-      $webform_account_access_update = [];
-      /** @var \Drupal\webform\WebformInterface[] $webforms */
-      $webforms = Webform::loadMultiple();
-      foreach ($webforms as $webform) {
-        if ($webform->access('update', $account)) {
-          $webform_account_access_update[] = $webform->id();
-        }
-      }
-      \Drupal::cache()->set(
-        'webform_submission_access__account_update__' . $account->id(),
-        $webform_account_access_update,
-        Cache::PERMANENT,
-        ['config:webform_list', 'user:' . $account->id()]
-      );
-    }
-    foreach ($webform_account_access_update as $webform_id) {
-      foreach ($webform_submission_tables as $table) {
-        $table['condition']->condition($table['alias'] . '.webform_id', $webform_id);
-      }
-    }
-  }
-  else {
-    /** @var \Drupal\webform\WebformSubmissionStorageInterface $submission_storage */
-    $submission_storage = \Drupal::entityTypeManager()->getStorage('webform_submission');
-    $sids = $submission_storage->getAnonymousSubmissionIds($account);
-    if ($sids) {
-      foreach ($webform_submission_tables as $table) {
-        $table['condition']->condition($table['alias'] . '.sid', $sids, 'IN');
-      }
-    }
-  }
-
-  // Alter query based on access rules.
-  /** @var \Drupal\webform\WebformAccessRulesManagerInterface $access_rules_manager */
-  $access_rules_manager = \Drupal::service('webform.access_rules_manager');
-
-  // Get cached webform access rules and cache tags so that we don't have
-  // to continually load every webform.
-  $cached = \Drupal::cache()->get('webform_submission_access__webform_access_rules');
-  if ($cached) {
-    $webform_access_rules = $cached->data;
-  }
-  else {
-    /** @var \Drupal\webform\WebformInterface[] $webforms */
-    $webforms = Webform::loadMultiple();
-    $webform_access_rules = [];
-    foreach ($webforms as $webform_id => $webform) {
-      $webform_access_rules[$webform_id] = $access_rules_manager->getAccessRules($webform) ?: [];
-    }
-    \Drupal::cache()->set(
-      'webform_submission_access__webform_access_rules',
-      $webform_access_rules,
-      Cache::PERMANENT,
-      ['config:webform_list']
-    );
-  }
-
-  foreach ($webform_access_rules as $webform_id => $access_rules) {
-    // Check basic and any access rules and add webform id to all
-    // webform submission tables conditions.
-    if ($access_rules_manager->checkAccessRules($op, $account, $access_rules)
-      || $access_rules_manager->checkAccessRules($op . '_any', $account, $access_rules)) {
-      foreach ($webform_submission_tables as $table) {
-        $table['condition']->condition($table['alias'] . '.webform_id', $webform_id);
-      }
-    }
-    // If the user has own access rules, then add the account id to all
-    // webform submission tables conditions.
-    elseif ($access_rules_manager->checkAccessRules($op . '_own', $account, $access_rules)) {
-      foreach ($webform_submission_tables as $table) {
-        /** @var \Drupal\Core\Database\Query\SelectInterface $query */
-        $condition = $query->andConditionGroup();
-        $condition->condition($table['alias'] . '.uid', $account->id());
-        $condition->condition($table['alias'] . '.webform_id', $webform_id);
-        $table['condition']->condition($condition);
-      }
-    }
-  }
-
-  // Alter query based on webform node access permissions.
-  // @see webform_node_node_access()
-  // @todo Figure out how to move the below code to the webform_node.module.
-  if (\Drupal::moduleHandler()->moduleExists('webform_node')) {
-    $route_name = \Drupal::routeMatch()->getRouteName();
-    if (preg_match('/entity\.([^.]+)\.webform\.results_submissions/', $route_name, $match)) {
-      $entity_type = $match[1];
-      if ($account->hasPermission('view webform submissions any node')) {
-        foreach ($webform_submission_tables as $table) {
-          $table['condition']->condition($table['alias'] . '.entity_type', $entity_type);
-        }
-      }
-      elseif ($account->hasPermission('view webform submissions own node')) {
-        $entity_id = \Drupal::routeMatch()->getRawParameter($entity_type);
-        foreach ($webform_submission_tables as $table) {
-          /** @var \Drupal\Core\Database\Query\SelectInterface $query */
-          $condition = $query->andConditionGroup();
-          $condition->condition($table['alias'] . '.entity_type', $entity_type);
-          $condition->condition($table['alias'] . '.entity_id', $entity_id);
-          $table['condition']->condition($condition);
-        }
-      }
-    }
-  }
-
-  // Alter query based on webform access group.
-  // @todo Figure out how to move the below code to the webform_access.module.
-  if (\Drupal::moduleHandler()->moduleExists('webform_access')) {
-    // Collect access group ids with 'view_any' or 'administer' permissions.
-    /** @var \Drupal\webform_access\WebformAccessGroupStorageInterface $access_group_storage */
-    $access_group_storage = \Drupal::entityTypeManager()->getStorage('webform_access_group');
-    /** @var \Drupal\webform_access\WebformAccessGroupInterface $access_group */
-    $access_groups = $access_group_storage->loadByEntities(NULL, NULL, $account);
-    $access_any_group_ids = [];
-    $access_own_group_ids = [];
-    foreach ($access_groups as $access_group) {
-      $access_group_permissions = $access_group->get('permissions');
-      $access_group_permissions = array_combine($access_group_permissions, $access_group_permissions);
-      if (isset($access_group_permissions['view_any']) || isset($access_group_permissions['administer'])) {
-        $access_any_group_ids[] = $access_group->id();
-      }
-      elseif (isset($access_group_permissions['view_own'])) {
-        $access_own_group_ids[] = $access_group->id();
-      }
-    }
-    if ($access_any_group_ids) {
-      // Add access group entity type, entity id, and webform id to the query.
-      $result = \Drupal::database()->select('webform_access_group_entity', 'ge')
-        ->fields('ge', ['entity_type', 'entity_id', 'webform_id'])
-        ->condition('group_id', $access_any_group_ids, 'IN')
-        ->execute();
-      while ($record = $result->fetchAssoc()) {
-        foreach ($webform_submission_tables as $table) {
-          /** @var \Drupal\Core\Database\Query\SelectInterface $query */
-          $condition = $query->andConditionGroup();
-          $condition->condition($table['alias'] . '.entity_type', $record['entity_type']);
-          $condition->condition($table['alias'] . '.entity_id', (string) $record['entity_id']);
-          $condition->condition($table['alias'] . '.webform_id', $record['webform_id']);
-          $table['condition']->condition($condition);
-        }
-      }
-    }
-    if ($access_own_group_ids) {
-      // Add access group entity type, entity id, and webform id to the query.
-      $result = \Drupal::database()->select('webform_access_group_entity', 'ge')
-        ->fields('ge', ['entity_type', 'entity_id', 'webform_id'])
-        ->condition('group_id', $access_own_group_ids, 'IN')
-        ->execute();
-      while ($record = $result->fetchAssoc()) {
-        foreach ($webform_submission_tables as $table) {
-          /** @var \Drupal\Core\Database\Query\SelectInterface $query */
-          $condition = $query->andConditionGroup();
-          $condition->condition($table['alias'] . '.uid', $account->id());
-          $condition->condition($table['alias'] . '.entity_type', $record['entity_type']);
-          $condition->condition($table['alias'] . '.entity_id', (string) $record['entity_id']);
-          $condition->condition($table['alias'] . '.webform_id', $record['webform_id']);
-          $table['condition']->condition($condition);
-        }
-      }
-    }
-
-  }
-
-  // Apply webform submission table conditions to query.
-  foreach ($webform_submission_tables as $table) {
-    // If a webform submission table does not have any conditions,
-    // we have to block access to the table.
-    if (count($table['condition']->conditions()) === 1) {
-      $table['condition']->where('1 = 0');
-    }
-
-    $query->condition($table['condition']);
-  }
-}
diff --git a/modules/contrib/webform/webform.routing.yml b/modules/contrib/webform/webform.routing.yml
index 4cf388ad..94f2ed4f 100644
--- a/modules/contrib/webform/webform.routing.yml
+++ b/modules/contrib/webform/webform.routing.yml
@@ -214,7 +214,7 @@ entity.webform.user.submission.duplicate:
       webform:
         type: 'entity:webform'
   requirements:
-    _entity_access: 'webform_submission.update'
+    _entity_access: 'webform_submission.duplicate'
     _custom_access: '\Drupal\webform\Access\WebformEntityAccess::checkWebformSettingValue'
 
 entity.webform.test_form:
@@ -562,7 +562,7 @@ entity.webform_submission.resend_form:
     _form: 'Drupal\webform\Form\WebformSubmissionResendForm'
     _title_callback: '\Drupal\webform\Controller\WebformSubmissionViewController::title'
   requirements:
-    _entity_access: 'webform_submission.update_any'
+    _entity_access: 'webform_submission.resend'
     _custom_access: '\Drupal\webform\Access\WebformSubmissionAccess::checkResendAccess'
 
 entity.webform_submission.duplicate_form:
diff --git a/modules/contrib/webform/webform.services.yml b/modules/contrib/webform/webform.services.yml
index ea6d0ca1..92a2a333 100644
--- a/modules/contrib/webform/webform.services.yml
+++ b/modules/contrib/webform/webform.services.yml
@@ -89,7 +89,7 @@ services:
 
   webform.theme_manager:
     class: Drupal\webform\WebformThemeManager
-    arguments: ['@config.factory', '@renderer', '@theme.manager', '@theme_handler', '@theme.initialization']
+    arguments: ['@config.factory', '@renderer', '@theme.manager', '@theme_handler', '@theme.initialization', '@current_route_match']
 
   webform.access_rules_manager:
     class: Drupal\webform\WebformAccessRulesManager
diff --git a/modules/contrib/webform/webform.tokens.inc b/modules/contrib/webform/webform.tokens.inc
index 87ea1e5a..b1a8bb6c 100644
--- a/modules/contrib/webform/webform.tokens.inc
+++ b/modules/contrib/webform/webform.tokens.inc
@@ -62,13 +62,24 @@ function webform_token_info() {
     'name' => t('IP address'),
     'description' => t('The IP address that was used when submitting the webform submission.'),
   ];
+  $webform_submission['source-title'] = [
+    'name' => t('Source URL'),
+    'description' => t('The Title of the source entity or webform.'),
+  ];
   $webform_submission['source-url'] = [
     'name' => t('Source URL'),
     'description' => t('The URL the user submitted the webform submission.'),
+    'type' => 'url',
+  ];
+  $webform_submission['view-url'] = [
+    'name' => t('View (token) URL'),
+    'description' => t('The URL that can used to view the webform submission. The webform must be configured to allow users to view a submission using a secure token.'),
+    'type' => 'url',
   ];
   $webform_submission['update-url'] = [
-    'name' => t('Update URL'),
+    'name' => t('Update (token) URL'),
     'description' => t('The URL that can used to update the webform submission. The webform must be configured to allow users to update a submission using a secure token.'),
+    'type' => 'url',
   ];
   $webform_submission['langcode'] = [
     'name' => t('Langcode'),
@@ -197,7 +208,7 @@ function webform_token_info() {
     'name' => t('Submission values'),
     'description' => Markup::create(t('Webform tokens from submitted data.') .
       _webform_token_render_more(t('Learn about submission value tokens'),
-        t("Omit the '?' to output all values. Output all values as HTML using [webform_submissions:values:html].") . '<br />' .
+        t("Omit the '?' to output all values. Output all values as HTML using [webform_submission:values:html].") . '<br />' .
         t("To output individual elements, replace the '?' with…") . '<br />' .
         '<ul>' .
         '<li>element_key</li>' .
@@ -217,10 +228,14 @@ function webform_token_info() {
         '<li>element_key:sub_element_key:entity:*</li>' .
         '<li>element_key:sub_element_key:entity:field_name:*</li>' .
         '<li>element_key:delta:sub_element_key:entity:*</li>' .
+        '<li>element_key:checked:option_value</li>' .
+        '<li>element_key:selected:option_value</li>' .
         '</ul>' .
         t("All items after the 'element_key' are optional.") . '<br />' .
         t("The 'delta' is the numeric index for specific value") . '<br />' .
         t("The 'sub_element_key' is a composite element's sub element key.") . '<br />' .
+        t("The 'checked'  or 'selected' looks to see if an 'option_value' is checked or selected for an options element (select, checkboxes, or radios)") . '<br />' .
+        t("The 'option_value' is options value for an options element (select, checkboxes, or radios).") . '<br />' .
         t("The 'format' can be 'value', 'raw', or custom format specifically associated with the element") . '<br />' .
         t("The 'items' can be 'comma', 'semicolon', 'and', 'ol', 'ul', or custom delimiter") . '<br />' .
         t("The 'entity:*' applies to the referenced entity") . '<br />' .
@@ -262,6 +277,12 @@ function webform_token_info() {
     'type' => 'entity',
     'dynamic' => TRUE,
   ];
+  $webform_submission['source-title'] = [
+    'name' => t('Source title'),
+    'description' => t('The source entity title that the webform submission was submitted from, defaults to the webform title when there is no source entity.'),
+    'type' => 'entity',
+    'dynamic' => TRUE,
+  ];
   $webform_submission['submitted-to'] = [
     'name' => t('Submitted to'),
     'description' => t('The source entity or webform that the webform submission was submitted from.'),
@@ -507,12 +528,20 @@ function webform_tokens($type, $tokens, array $data, array $options, BubbleableM
           $replacements[$original] = \Drupal::languageManager()->getLanguage($webform_submission->langcode->value)->getName();
           break;
 
+        case 'source-title':
+          $replacements[$original] = ($source_entity) ? $source_entity->label() : $webform->label();
+          break;
+
         case 'source-url':
           $replacements[$original] = $webform_submission->getSourceUrl()->toString();
           break;
 
+        case 'view-url':
+          $replacements[$original] = $webform_submission->getTokenUrl('view')->toString();
+          break;
+
         case 'update-url':
-          $replacements[$original] = $webform_submission->getTokenUrl()->toString();
+          $replacements[$original] = $webform_submission->getTokenUrl('update')->toString();
           break;
 
         case 'token':
@@ -684,7 +713,6 @@ function webform_tokens($type, $tokens, array $data, array $options, BubbleableM
     }
 
     /* Chained token relationships. */
-
     if (($user_tokens = $token_service->findWithPrefix($tokens, 'user')) && ($user = $webform_submission->getOwner())) {
       $replacements += $token_service->generate('user', $user_tokens, ['user' => $user], $options, $bubbleable_metadata);
     }
@@ -706,6 +734,27 @@ function webform_tokens($type, $tokens, array $data, array $options, BubbleableM
     if (($submitted_to_tokens = $token_service->findWithPrefix($tokens, 'submitted-to')) && ($submitted_to = $webform_submission->getSourceEntity(TRUE) ?: $webform_submission->getWebform())) {
       $replacements += $token_service->generate($submitted_to->getEntityTypeId(), $submitted_to_tokens, [$submitted_to->getEntityTypeId() => $submitted_to], $options, $bubbleable_metadata);
     }
+    foreach (['view-url', 'update-url', 'source-url'] as $token) {
+      if ($url_tokens = $token_service->findWithPrefix($tokens, $token)) {
+        $url = NULL;
+        switch ($token) {
+          case 'view-url':
+            $url = $webform_submission->getTokenUrl('view');
+            break;
+
+          case 'update-url':
+            $url = $webform_submission->getTokenUrl('update');
+            break;
+
+          case 'source-url':
+            $url = $webform_submission->getSourceUrl();
+            break;
+        }
+        if ($url) {
+          $replacements += $token_service->generate('url', $url_tokens, ['url' => $url], $options, $bubbleable_metadata);
+        }
+      }
+    }
 
   }
   elseif ($type == 'webform' && !empty($data['webform'])) {
@@ -937,6 +986,12 @@ function _webform_token_get_submission_value($value_token, array $options, Webfo
     }
   }
 
+  // Set checked/selected for an options elements.
+  if ($keys && in_array($keys[0], ['checked', 'selected']) && $element_plugin->hasProperty('options')) {
+    $token_values = (array) $element_plugin->getValue($element, $webform_submission);
+    return ($token_values && in_array($keys[1], $token_values)) ? '1' : '0';
+  }
+
   // Set format and items format.
   if ($keys) {
     if ($composite_key) {
diff --git a/vendor/drupal/coder b/vendor/drupal/coder
index 4337ddf5..c11c2957 160000
--- a/vendor/drupal/coder
+++ b/vendor/drupal/coder
@@ -1 +1 @@
-Subproject commit 4337ddf58d28dbdee4e1367bf71ee13393ab9820
+Subproject commit c11c2957653bdbfd68adc851692d094b43d39221-dirty
